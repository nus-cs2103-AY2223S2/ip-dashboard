[{"path":"Saved Progress/MY_GRAND_PLAN.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"true TODO  DRINK WATER ","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"true TODO WATCH NGN ","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"false DEADLINE NGN /BY 20-02-2023 2359","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"false TODO DRINK TEA ","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"lennoxtr":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"checkstyle {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lennoxtr":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"# **\\*\\*\\*LEVEL 10 CLEARANCE REQUIRED\\*\\*\\***","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"## UNAUTHORIZED PERSONNEL LEAVE IMMEDIATELY","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"Product is the first successful test of an experiment to incorporate the mind of the great Sith Lord Darth Vader into normal software. Hydra scientists have been able to infest a simple, text-based task logging application called Duke with the Dark Side Energy, thereby relieving personnel of remedial jobs like remembering tasks, allowing Hydra to focus on taking over the world. Product is offered with both CLI and GUI versions.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"Use with caution","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"## Setting up and Running Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"1. Install Java SDK 11","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"2. Download \u0027Duke.jar\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"3. Open terminal","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"4. Run the default command \u0027java -jar Duke.jar\u0027 to launch the application in CLI version","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"5. User will be asked whether he wants to run Duke. Answer with `YES` or `NO`","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"6. Upon exiting Duke, user will be asked whether he wants to save the current list of tasks. Answer with `YES` or `NO`","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"## Running different versions of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"1. To launch CLI (default) version:","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"java -jar Duke.jar","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"2. To launch GUI version:","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"java -jar Duke.jar GUI","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"### `TODO`: Add a To-Do task","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"Add a To-Do task to the list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"Format: `TODO {action}`","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"**`action`** cannot be empty","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"Example: `TODO DRINK WATER`","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"Add a To-Do task to the list of tasks with the action *DRINK WATER*","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"### `DEADLINE`: Add a Deadline task","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"Add a task with deadline to the list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"Format: `DEADLINE {action} /BY {deadline}`","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"**`action`** cannot be empty","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"**`deadline`** must be of format `dd-MM-yyyy HHmm`","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"Example: `DEADLINE SUBMIT HW /BY 20-02-2023 2359`","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"Add a Deadline task to the list of tasks with the action *SUBMIT HW* and deadline *20-02-2023 2359*","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"### `EVENT`: Add an Event task","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"Add an Event task to the list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"Format: `EVENT {action} /FROM {date_begin} /TO {date_end}`","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"**`action`** cannot be empty","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"**`date_begin`** and **`date_end`** must be of format `dd-MM-yyyy HHmm`","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"Example: `EVENT BINGE MOVIES /FROM 20-02-2023 2359 /TO 24-02-2023 2300`","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"Add an Event to the list of tasks with the action *BINGE MOVIES*, date_begin *20-02-2023 2359*, and date_end *24-02-2023 2300*","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"### `LIST`: List all tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"List all available tasks in the list of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"Format: `LIST`","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"### `MARK`/ `UNMARK`: Mark/ Unmark a task","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"Mark or unmark a task in the list of tasks with a specified index","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"Format: `MARK {index}` or `UNMARK {index}`","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"**`index`** cannot be lower than 0, or higher than the current number of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"Example: `MARK 4`/ `UNMARK 5`","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"### `DELETE`: Delete a task","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"Delete a task in the list of tasks with a specified index","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"Format: `DELETE {index}`","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"**`index`** cannot be lower than 0, or higher than the current number of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"Example: `DELETE 2`","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"### `BYE`: Exiting Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"Format: `BYE`","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"### `FIND`: Find a task using containning a specified keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"Find all tasks in the list of tasks with a specified keyword. User can also search for all To-Do, Deadline, and Event tasks by searching using `TODO`, `DEADLINE`, and `EVENT` as the keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"Format: `FIND {keyword}`","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"Example: `FIND WATCH`","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"### `SCHEDULE`: Find a schedule of all events on a specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"Find all tasks in the list of tasks that occurs on a specific date. These includes `DEADLINE`, and `EVENT`. `DEADLINE` tasks will be organized according to the time of the deadline, while `EVENT` tasks are considered all-day","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"Format: `SCHEDULE {date}`","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"**`date`** cannot be empty","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"**`date`** must be of format `dd-MM-yyyy`","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"Example: `SCHEDULE 20-02-2022`","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"lennoxtr":108,"-":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import duke.io.input.ui.ChatBot;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"public class Duke {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"     * Initialize Duke chatbot and begin chatting with user.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"     * @param args","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"        ChatBot chatBot \u003d new ChatBot();","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"        chatBot.greetUser();","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"        chatBot.beginChat();","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"        chatBot.endChat();","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lennoxtr":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"public class Launcher {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"     * Launch Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"     * @param args GUI if the user wants to run the GUI version of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"     *             Default (no args) is CLI version","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"        assert args !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"        if (args.length \u003e 0 \u0026\u0026 args[0].equals(\"GUI\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"            Duke.main(args);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"lennoxtr":25}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import duke.io.input.ui.MainWindow;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"        MainWindow mainWindow \u003d new MainWindow();","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"        stage.setScene(new Scene(mainWindow));","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"        stage.setTitle(\"DaBeztSithLord\");","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"        stage.setMinWidth(800);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"        stage.setMinHeight(800);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"        stage.setResizable(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"        stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"        mainWindow.greet();","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"lennoxtr":24}},{"path":"src/main/java/duke/io/input/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.io.input.exception;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":" * An implementation of the {@code Exception} class, and a template","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":" * for Duke to handle errors and exceptions","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"        super(cause);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":24}},{"path":"src/main/java/duke/io/input/exception/UserInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.io.input.exception;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" * An implementation of the {@code DukeException} template. It is used","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" * to detect errors within user\u0027s input, and throw the corresponding","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":" * error message","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"public class UserInputException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"     * Makes sense of the user\u0027s input. Detects incorrect inputs and","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"     * OutOfBound errors. Throw corresponding error message when such error","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"     * is detected","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"     * @param input the user\u0027s newest input","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"     * @param currentSize the currentSize of the list of tasks, which is also","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"     *                    the current number of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"     * @throws DukeException when input has incorrect format, and when index of list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"     *                       is OutOfBound","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"    public static void checkUserInput(String input, int currentSize) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"        String[] inputSplitArray \u003d input.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e inputSplitList \u003d Arrays.asList(inputSplitArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"        int lengthOfCommand \u003d inputSplitList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"        String command \u003d inputSplitList.get(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"        if (command.equals(\"TODO\") || command.equals(\"DEADLINE\") || command.equals(\"EVENT\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"            checkParsingTask(input, lengthOfCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"        } else if (command.equals(\"MARK\") || command.equals(\"UNMARK\") || command.equals(\"DELETE\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"            int requestedIndex \u003d Integer.valueOf(inputSplitList.get(1)) - 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"            checkMarkingAndDelete(requestedIndex, lengthOfCommand, currentSize);","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"        } else if (command.equals(\"LIST\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"            if (lengthOfCommand \u003e 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"                throw new DukeException(\"ARE YOU EXPECTING ME TO DO SOMETHING WITH THE EXTRA INFO?\");","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"        } else if (command.equals(\"FIND\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"            if (lengthOfCommand \u003e 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"                throw new DukeException(\"THIS PLACE... IT MADE ME WEAK! I CAN ONLY SEARCH 1 KEYWORD NOW\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"            } else if (lengthOfCommand \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"                throw new DukeException(\"WHAT EXACTLY DO YOU WANT TO FIND...\");","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"        } else if (command.equals(\"SCHEDULE\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"            checkSchedule(inputSplitList.get(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"COMMAND NOT FOUND... WHAT ARE YOU UP TO...\");","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"    private static void checkParsingTask(String input, int lengthOfCommand) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"        if (command.equals(\"TODO\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"            checkToDo(input, lengthOfCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"        } else if (command.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"            checkDeadline(input, lengthOfCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"            checkEvent(input, lengthOfCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"            Parser.parseTask(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"UH OH...\" + e.getMessage());","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"    private static void checkToDo(String input, int lengthOfCommand) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"        if (lengthOfCommand \u003c\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"EMPTY TO-DO COMMAND... DOING NOTHING MUCH?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"    private static void checkDeadline(String input, int lengthOfCommand) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"        if (input.contains(\" /BY \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"            if (lengthOfCommand \u003c\u003d 3) {","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"                throw new DukeException(\"MORE INFO NEEDED FOR DEADLINE\");","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"NO DEADLINE. FREE TIME ISN\u0027T SO EASY TO COME BY.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"    private static void checkEvent(String input, int lengthOfCommand) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"        if (input.contains(\" /FROM \") \u0026\u0026 input.contains(\" /TO \")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"            if (lengthOfCommand \u003c\u003d 5) {","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"                throw new DukeException(\"MORE INFO NEEDED FOR EVENT\");","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"MY CREATOR DIDN\u0027T MAKE ME SMART ENOUGH TO INFER INFO FROM THIS...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"    private static void checkMarkingAndDelete(int requestedIndex,","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"                                              int lengthOfCommand,","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"                                              int currentSize) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"        if (lengthOfCommand \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"MY CREATOR DIDN\u0027T MAKE ME SMART ENOUGH TO INFER INFO FROM THIS...\");","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"        } else if (lengthOfCommand \u003e 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"TOO MUCH INFO...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"            if (requestedIndex \u003e currentSize) {","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"                if (currentSize \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"                    throw new DukeException(\"YOU ONLY HAVE \" + currentSize + \" TASKS\");","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"                    throw new DukeException(\"YOU ONLY HAVE \" + currentSize + \" TASK\");","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"            } else if (requestedIndex \u003c 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"                throw new DukeException(\"BAD AT MATH? THAT INDEX DOESN\u0027T EXIST\");","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"    private static void checkSchedule(String dateAsString) throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"            LocalDate scheduleDate \u003d LocalDate.parse(dateAsString, dateFormat);","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"            throw new DukeException(\"WRONG DATE FORMAT... HOW FRUSTRATING\");","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lennoxtr":131}},{"path":"src/main/java/duke/io/input/ui/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.io.input.ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import duke.workflow.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"import duke.workflow.Greeting;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" * Initiates Duke\u0027s interaction workflow with use.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" * The flow starts with the {@code Greeting} event where Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":" * says hello to the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":" * \u003cp\u003e It then proceeds to the {@code DoTask} event","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":" * where Duke makes sense of the user input and determine the possible","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":" * actions. \u003c/p\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":" * \u003cp\u003e The workflow ends with the {@code Ending} event where Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":" * says goodbye to the user. \u003c/p\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"public class ChatBot {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    private boolean usedByUser;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    private Event lastEvent;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     * Constructor of the chatBot class","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"    public ChatBot () {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"        this.usedByUser \u003d false;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"        this.lastEvent \u003d new Greeting();","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"     * Greet the user when he opens Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"    public void greetUser() {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"        UserInterface.printLogo();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"     * Duke begins interacting with user.","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"     * Get user input to determine whether he wants to run Duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"     * Loop the part of code to get user input until a valid input is found.","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"     * Print warning when user input is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"    public void beginChat() {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"        Greeting greeting \u003d new Greeting();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(UserInterface.printWithBracket(greeting.toString()));","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"        String isUsingDuke \u003d sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"        while (!isUsingDuke.equals(\"YES\") \u0026\u0026 !isUsingDuke.equals(\"NO\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"            UserInterface.printInputWarning();","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"            isUsingDuke \u003d sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"        if (isUsingDuke.equals(\"NO\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"            Event currentEvent \u003d greeting.toNextEvent(\"NOT PLAYING\");","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"            System.out.println(UserInterface.printWithBracket(currentEvent.toString()));","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"            Event currentEvent \u003d greeting.toNextEvent(\"PLAYING\");","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"            System.out.println(UserInterface.printWithBracket(currentEvent.toString()));","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"            while (!currentEvent.isFinalEvent()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"                String nextTask \u003d sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"                currentEvent \u003d currentEvent.toNextEvent(nextTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"                System.out.println(UserInterface.printWithBracket(currentEvent.toString()));","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"            usedByUser \u003d true;","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"            lastEvent \u003d currentEvent;","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"     * Ending Duke\u0027s interaction with user.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"     * Asking whether he wants to save the current progress","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"    public void endChat() {","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"        if (usedByUser) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"            Storage.saveProgressQuery(lastEvent.getTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lennoxtr":94}},{"path":"src/main/java/duke/io/input/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.io.input.ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"    private void flip() {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"        this.dialog.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"        db.flip();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"        return db;","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"lennoxtr":63}},{"path":"src/main/java/duke/io/input/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.io.input.ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"import duke.workflow.Event;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"import duke.workflow.Greeting;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"    private ChatBot chatbot \u003d new ChatBot();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"    private int firstTimeRunningDukeFlag \u003d -1;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"    private Event currentEvent;","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Doraemon.jpg\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Vader.jpg\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"     * Construct a MainWindow class containingan AnchorPane, VBox, ScrollPane, TextField, and Button","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"    public MainWindow() {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"                    \"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"            exception.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"     * Run when the GUI version of Duke is initialized","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"     * Greet the user when he opens Duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"    public void greet() {","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"        Greeting greeting \u003d new Greeting();","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"        String response \u003d UserInterface.printGuiLogo();","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"        String toPrintOut \u003d greeting.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"I ran\");","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"                DialogBox.getDukeDialog(response, dukeImage),","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"                DialogBox.getDukeDialog(toPrintOut, dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"     * Create two dialogs boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"     * Output response based on whether the user wants to run Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"    private int runDuke() {","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"        String isPlaying \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"                DialogBox.getUserDialog(isPlaying, userImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"        if (isPlaying.equals(\"NO\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"            Greeting greeting \u003d new Greeting();","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"            Event nextEvent \u003d greeting.toNextEvent(\"NOT PLAYING\");","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"            this.currentEvent \u003d nextEvent;","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"                    DialogBox.getDukeDialog(nextEvent.toString(), dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"            return 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"        } else if (isPlaying.equals(\"YES\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"            Greeting greeting \u003d new Greeting();","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"            Event nextEvent \u003d greeting.toNextEvent(\"PLAYING\");","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"            this.currentEvent \u003d nextEvent;","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"                    DialogBox.getDukeDialog(nextEvent.toString(), dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"            return 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"            String warning \u003d \"FOCUS, HUMAN. \"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"                    + \"YOU ARE TO ENTER INPUT WITH FULL CAPS.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"                    DialogBox.getDukeDialog(warning, dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"            return -1;","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"        if (this.firstTimeRunningDukeFlag \u003c 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"            firstTimeRunningDukeFlag \u003d runDuke();","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"        } else if (firstTimeRunningDukeFlag \u003e 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"            if (!this.currentEvent.isFinalEvent()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"                String input \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"                userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"lennoxtr"},"content":"                TaskList currentTaskList \u003d this.currentEvent.getTaskList();","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"lennoxtr"},"content":"                boolean validInput \u003d Parser.checkInputValidity(input, currentTaskList.getSize());","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"lennoxtr"},"content":"                this.currentEvent \u003d this.currentEvent.toNextEvent(input);","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"lennoxtr"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"lennoxtr"},"content":"                        DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"lennoxtr"},"content":"                if (!validInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"lennoxtr"},"content":"                    String warning \u003d Parser.getWarningGui(input, currentTaskList.getSize());","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"lennoxtr"},"content":"                    dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"lennoxtr"},"content":"                            DialogBox.getDukeDialog(warning, dukeImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"lennoxtr"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"lennoxtr"},"content":"                        DialogBox.getDukeDialog(this.currentEvent.toString(), dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"lennoxtr"},"content":"                if (this.currentEvent.isFinalEvent()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"lennoxtr"},"content":"                    String saveProgressQuery \u003d \"SAVE YOUR GRAND PLAN FOR ANOTHER DAY? \";","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"lennoxtr"},"content":"                    dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"lennoxtr"},"content":"                            DialogBox.getDukeDialog(saveProgressQuery, dukeImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"lennoxtr"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"lennoxtr"},"content":"                String input \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"lennoxtr"},"content":"                userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"lennoxtr"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"lennoxtr"},"content":"                        DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"lennoxtr"},"content":"                Storage.saveProgressGui(input, this.currentEvent.getTaskList());","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"lennoxtr"},"content":"                if (input.equals(\"YES\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"lennoxtr"},"content":"                    dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"lennoxtr"},"content":"                            DialogBox.getDukeDialog(\"[X] FILE CREATED\", dukeImage),","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"lennoxtr"},"content":"                            DialogBox.getDukeDialog(\"[X] FILE SAVED\", dukeImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"lennoxtr"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"lennoxtr":171}},{"path":"src/main/java/duke/io/input/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.io.input.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" * A class used to print output to users","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" * Worked with both the CLI and GUI versions of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"public class UserInterface {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"     * Print Duke\u0027s logo for CLI version","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"    public static void printLogo() {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"_\".repeat(22));","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"_\".repeat(22));","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"     * Print Duke\u0027s logo for GUI version","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"    public static String printGuiLogo() {","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"        return printWithBracket(logo);","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"     * Print warning for incorrect input","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"     * when the user just opened Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"    public static void printInputWarning() {","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(UserInterface.printWithBracket(\"FOCUS, HUMAN. \"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"                + \"YOU ARE TO ENTER INPUT WITH FULL CAPS.\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"     * Print warning for incorrect input","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"     * when the user input is invalid and an exception is raised","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"    public static void printInputWarning(Exception exception) {","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(exception.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"     * Print specified warning for incorrect input","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"     * @param warning the warning to be printed","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"    public static void printInputWarning(String warning) {","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(warning);","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"     * Print a {@code String} that is framed in a stylized box.","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"     * The length of the box is based on the length of the input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"     * To be used with CLI version of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"     * @param input the {@code String} to be printed","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"     * @return a stylized version of the {@code String}, framed in a box","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"    public static String printWithBracket(String input) {","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"        String toPrintOut \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"        if (input.contains(\"\\n\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"            String[] inputSplitArray \u003d input.split(\"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"            List\u003cString\u003e inputSplitList \u003d Arrays.asList(inputSplitArray);","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"            int max \u003d 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"            for (int i \u003d 0; i \u003c inputSplitList.size(); i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"                if (inputSplitList.get(i).length() \u003e max) {","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"                    max \u003d inputSplitList.get(i).length();","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"_\".repeat(max) + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d input + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"_\".repeat(max);","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"            int size \u003d input.length();","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"_\".repeat(size) + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d input + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"_\".repeat(size);","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"        return toPrintOut;","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"     * Greet the user when he opens Duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"     * Works with both CLI and GUI versions of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"     * @param firsTimeUsingDuke whether the user used Duke for the first time.","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"     *                          Determined by the current number of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"     * @return Duke\u0027s greeting","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"    public static String welcomeUser(boolean firsTimeUsingDuke) {","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"        if (firsTimeUsingDuke) {","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"            return \"INTERESTING. VERY INTERESTING. WHAT\u0027S YOUR PLANS?\";","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"            return \"WELCOME BACK... WHAT\u0027S YOUR PLAN TODAY...\";","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"     * Output the notice to user when a {@code task} is marked/ unmarked","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"     * Works with both CLI and GUI versions of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"     * @param command the user\u0027s previous command, showing the task he wants to mark","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"     * @param markedTask the {@code Task} that is marked/ unmaked","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"lennoxtr"},"content":"    public static String printMarkedUnmarkedTask(String command, Task markedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"lennoxtr"},"content":"        String toPrintOut \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"lennoxtr"},"content":"        if (command.equals(\"MARK\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"MARKED. ONE STEP CLOSER...\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d markedTask.toString() + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"HAVING OTHER PLANS I SEE...\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"lennoxtr"},"content":"        return toPrintOut;","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"lennoxtr"},"content":"     * Output the notice to user when a {@code task} is deleted","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"lennoxtr"},"content":"     * Works with both CLI and GUI versions of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"lennoxtr"},"content":"     * @param numOfTasksRemaining the number of remaining tasks after deletion","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"lennoxtr"},"content":"     * @param deletedTask the {@code Task} that is deleted","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"lennoxtr"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"lennoxtr"},"content":"    public static String printDeletedTask(int numOfTasksRemaining, Task deletedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"lennoxtr"},"content":"        String toPrintOut \u003d \"KABOOM. GONE. REDUCED TO ATOMS. HOW EXCITING!\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"lennoxtr"},"content":"        toPrintOut +\u003d \u0027\\n\u0027 + \"TASK \" + deletedTask.toString() + \" NO LONGER EXISTED\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lennoxtr"},"content":"        if (numOfTasksRemaining \u003e 1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d numOfTasksRemaining + \" TASKS LEFT. BETTER HURRY.\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"ONLY \" + numOfTasksRemaining","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"lennoxtr"},"content":"                    + \" TASK LEFT. BORING DAYS AHEAD.\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"lennoxtr"},"content":"        return toPrintOut;","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"lennoxtr"},"content":"     * Output the list of tasks that contains a specified keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"lennoxtr"},"content":"     * @param foundListFromKeyword the list of tasks that contains a specified keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"lennoxtr"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"lennoxtr"},"content":"    public static String printSearchedTask(TaskList foundListFromKeyword) {","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"lennoxtr"},"content":"        String toPrintOut \u003d \"YOU\u0027RE STARTING TO FORGET...\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"lennoxtr"},"content":"        int numberOfTasksFound \u003d foundListFromKeyword.getSize();","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"lennoxtr"},"content":"        if (numberOfTasksFound \u003d\u003d 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"THIS WAS NEVER IN YOUR PLANS\";","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \u0027\\n\u0027 + \"LET ME REMIND YOU OF WHAT YOU STARTED\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"lennoxtr"},"content":"            for (int i \u003d 0; i \u003c numberOfTasksFound; i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"lennoxtr"},"content":"                toPrintOut +\u003d foundListFromKeyword.getTask(i).toString() + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"lennoxtr"},"content":"        return toPrintOut;","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":189,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"lennoxtr"},"content":"     * Output the notice to user when a {@code task} is added","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"lennoxtr"},"content":"     * Works with both CLI and GUI versions of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"lennoxtr"},"content":"     * @param userCommand the user\u0027s previous command, showing the task he wants to add","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"lennoxtr"},"content":"     * @param numberOfTasks the current number of tasks after addition","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"lennoxtr"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"lennoxtr"},"content":"    public static String printAddedTask(String userCommand, int numberOfTasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"lennoxtr"},"content":"        if (!userCommand.equals(\"\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"lennoxtr"},"content":"            String toPrintOut \u003d \"SO YOU WANT TO ADD \" + \u0027\"\u0027 + userCommand + \u0027\"\u0027 + \". VERY WELL...\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \u0027\\n\u0027 + \"ADDED: \" + userCommand + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"lennoxtr"},"content":"            if (numberOfTasks \u003e 1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"lennoxtr"},"content":"                toPrintOut +\u003d numberOfTasks + \" TASKS. BETTER HURRY.\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"lennoxtr"},"content":"            } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"lennoxtr"},"content":"                toPrintOut +\u003d \"ONLY \" + numberOfTasks + \" TASK. BORING DAYS AHEAD.\" + \u0027\\n\u0027;","lastModifiedDate":"2023-02-18"},{"lineNumber":207,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \u0027\\n\u0027 + \"WHAT ELSE?\";","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"lennoxtr"},"content":"            return toPrintOut;","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"lennoxtr"},"content":"            return \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":213,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":214,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lennoxtr":214}},{"path":"src/main/java/duke/io/output/MY_GRAND_PLAN.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"false TODO a ","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"lennoxtr":1}},{"path":"src/main/java/duke/util/DatetimeComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":" * A class used to compare dates to determine the order of dates in a PriorityQueue.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" * Tasks with a sooner date are placed first in the queue.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"public class DatetimeComparator implements Comparator\u003cPair\u003cLocalDateTime, Task\u003e\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"    public int compare(Pair\u003cLocalDateTime, Task\u003e a, Pair\u003cLocalDateTime, Task\u003e b) {","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"        return a.getKey().compareTo(b.getKey());","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lennoxtr":18}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"import duke.io.input.exception.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"import duke.io.input.exception.UserInputException;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"import duke.io.input.ui.UserInterface;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"import duke.util.service.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"import duke.util.service.ScheduledEvent;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"import duke.util.service.ToDo;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":" * A class used to parse the input of users","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":" * into specified events","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    private static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"     * Parse the input of users","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"     * into specified tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     * @param userInput the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"     * @return a parsed {@code Task} as specified by","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"     *          the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"    public static Task parseTask(String userInput) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"        String[] userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e userInputSplit \u003d Arrays.asList(userInputArray);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"        String mainCommand \u003d userInputSplit.get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"        if (mainCommand.equals(\"TODO\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"            return parseTodo(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"        } else if (mainCommand.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"            return parseDeadline(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"            return parseEvent(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"    private static Task parseTodo(String userInput) {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"        String[] toDoTask \u003d userInput.split(\"TODO \");","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e toDoAction \u003d Arrays.asList(toDoTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"        ToDo newTask \u003d new ToDo(toDoAction.get(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"        return newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"    private static Task parseDeadline(String userInput) {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"        String[] deadlineTask \u003d userInput.split(\" /BY \");","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e deadlineTaskAsList \u003d Arrays.asList(deadlineTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"        String commandAndAction \u003d deadlineTaskAsList.get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"        String[] commandAndActionSplit \u003d commandAndAction.split(\"DEADLINE \");","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e commandAndActionList \u003d Arrays.asList(commandAndActionSplit);","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"        Deadline newTask \u003d new Deadline(","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"                LocalDateTime.parse(deadlineTaskAsList.get(1), DATETIME_FORMAT),","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"                commandAndActionList.get(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"        return newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"    private static Task parseEvent(String userInput) {","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"        String[] splitCommandFrom \u003d userInput.split(\" /FROM \");","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e actionTimeRangeSplit \u003d Arrays.asList(splitCommandFrom);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"        String timeRangeString \u003d actionTimeRangeSplit.get(1);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"        String[] timeRangeAsArray \u003d timeRangeString.split(\" /TO \");","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e timeRangeAsList \u003d Arrays.asList(timeRangeAsArray);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"        String eventAction \u003d actionTimeRangeSplit.get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"        String[] eventPhraseArray \u003d eventAction.split(\"EVENT \");","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e eventPhraseList \u003d Arrays.asList(eventPhraseArray);","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"        String eventBegin \u003d timeRangeAsList.get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"        String eventEnd \u003d timeRangeAsList.get(1);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"        ScheduledEvent newTask \u003d new ScheduledEvent(","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"                LocalDateTime.parse(eventBegin, DATETIME_FORMAT),","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"                LocalDateTime.parse(eventEnd, DATETIME_FORMAT),","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"                eventPhraseList.get(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"        return newTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"     * Parse the input of users","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"     * into specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"     * @param userInput the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"     * @return a parsed {@code LocalDate} as specified by","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"     *          the user input in order to search for scheduled tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"     *          on a specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"    public static LocalDate parseDate(String userInput) {","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"        String[] searchDateArray \u003d userInput.split(\"SCHEDULE \");","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"        List\u003cString\u003e searchDateList \u003d Arrays.asList(searchDateArray);","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"        String searchDate \u003d searchDateList.get(1);","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"        LocalDate scheduleDate \u003d LocalDate.parse(searchDate, DATE_FORMAT);","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"        return scheduleDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"     * Check the validity of user input","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"     * @param userCommand the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"     * @param tasklistSize the current number of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"     * @return a boolean that is true when the user input is valid,","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"     *          and false when it isn\u0027t. Print a warning when the","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"     *          user input is invalid","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"    public static boolean checkInputValidity(String userCommand, int tasklistSize) {","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"            UserInputException.checkUserInput(userCommand, tasklistSize);","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"            UserInterface.printInputWarning(exception);","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"            return false;","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"            UserInterface.printInputWarning(\"ERRRR ERROR ERRR. SYSTEM FAILURE. UNKNOWN EXCEPTION. ERR ERR\");","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"            return false;","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"lennoxtr"},"content":"        return true;","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"lennoxtr"},"content":"     * Get the warning message for GUI version of Duke if user input is invalid","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"lennoxtr"},"content":"     * @param userCommand the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"lennoxtr"},"content":"     * @param tasklistSize the current number of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"lennoxtr"},"content":"     * @return a String that contains the exception","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"lennoxtr"},"content":"    public static String getWarningGui(String userCommand, int tasklistSize) {","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"lennoxtr"},"content":"            UserInputException.checkUserInput(userCommand, tasklistSize);","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"lennoxtr"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"lennoxtr"},"content":"            return exception.toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"lennoxtr"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"lennoxtr"},"content":"            return \"ERRRR ERROR ERRR. SYSTEM FAILURE. UNKNOWN EXCEPTION. ERR ERR\";","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"lennoxtr"},"content":"        return \"\";","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"lennoxtr":154}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":" * Load user\u0027s existing plan every duke\u0027s start up,","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":" * and save his/ her current progress after program is finished.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":" * \u003cp\u003e Keep a database by implementing {@code HashMap}","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":" * to find Tasks that contain a specified keyword. \u003c/p\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"    private static final String SAVED_FILE_PATH \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"            FileSystems.getDefault().getPath(\"\").toAbsolutePath()","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"            + Path.of(\"/Saved Progress/\").toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"    private static final String SAVE_FILE_NAME \u003d \"/MY_GRAND_PLAN.txt\";","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"    private HashMap\u003cString, TaskList\u003e keywordDatabase;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"    private HashMap\u003cString, PriorityQueue\u003cPair\u003cLocalDateTime, Task\u003e\u003e\u003e taskScheduleOnDates;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"     * Construct the {@code Storage} object with","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"     * empty database","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"    public Storage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"        this.keywordDatabase \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"        this.taskScheduleOnDates \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"     * Save the user\u0027s current progress to the","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"     * output directory.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"    private static void saveProgress(TaskList taskList) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"        File directory \u003d new File(SAVED_FILE_PATH.toString());","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"            directory.mkdir();","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"        File savedFile \u003d new File(SAVED_FILE_PATH + SAVE_FILE_NAME);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"[X] FILE CREATED\");","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"            FileWriter myWriter \u003d new FileWriter(savedFile, false);","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"                Task currenttask \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"                myWriter.write(currenttask.getStatus() + \" \" + currenttask.getNature() + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"                        + currenttask.getAction() + \" \" + currenttask.getTimeInfo() + \u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"            System.out.println(\"[X] FINISHED WRITING\");","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"            System.out.println(\"SOMETHING IS MESSING WITH THE SAVING FILE PROCESS\");","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"            System.out.println(\"CANNOT FIND DIRECTORY\");","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"            System.out.println(\"BEE BOO BOOP...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"     * Load the user\u0027s existing progress from the","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"     * output directory.","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"     * @return a {@code TaskList} with the user\u0027s","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"     *          existing Task","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"    public static TaskList loadProgress() {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"            File previousProgress \u003d new File(SAVED_FILE_PATH + SAVE_FILE_NAME);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"            Scanner progressScanner \u003d new Scanner(previousProgress);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"            TaskList returnTaskList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"            while (progressScanner.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"                String data \u003d progressScanner.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"                String[] availableTaskArray \u003d data.split(\" \");","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"                List\u003cString\u003e availableTaskAsList \u003d Arrays.asList(availableTaskArray);","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"                boolean isDone \u003d Boolean.parseBoolean(availableTaskArray[0]);","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"                String actionAndDate \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"                for (int i \u003d 1; i \u003c availableTaskAsList.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"                    actionAndDate +\u003d availableTaskAsList.get(i) + \" \";","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"                actionAndDate \u003d actionAndDate.stripTrailing();","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"                Task parsedTask \u003d Parser.parseTask(actionAndDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"                if (isDone) {","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"                    parsedTask \u003d parsedTask.markDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"                returnTaskList.addTask(parsedTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"            progressScanner.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"            return returnTaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"     * Retrieve the list of tasks that contains a specified keyword.","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"     * @param keyword the keyword to search the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"     * @return a {@code TaskList} where each task in the list contains","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"     *          the specified keyword","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"    public TaskList getTaskWithKeywords(String keyword) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"        if (this.keywordDatabase.containsKey(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"            return this.keywordDatabase.get(keyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"lennoxtr"},"content":"     * Add the newly parsed {@code Task} to the keyword and schedule database","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"lennoxtr"},"content":"     * to facilitate keyword searching and searching of scheduled events on a","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"lennoxtr"},"content":"     * specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"lennoxtr"},"content":"     * @param task the {@code Task} to be added to database","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"lennoxtr"},"content":"    public Storage addToDatabase(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"lennoxtr"},"content":"        addTaskToSchedule(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"lennoxtr"},"content":"        addToKeywordStorage(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"lennoxtr"},"content":"     * Add a task to the database and assign it to a key for easy retrieval.","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"lennoxtr"},"content":"     * @param task the keywords to assign the {@code Task}","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"lennoxtr"},"content":"     * @return a new {@code Storage} with the task added to the database","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"lennoxtr"},"content":"    private void addToKeywordStorage(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"lennoxtr"},"content":"        String toUpdateKeywordDatabase \u003d task.getNature()","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"lennoxtr"},"content":"               + \" \" + task.getAction() + \" \" + task.getTimeInfo();","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"lennoxtr"},"content":"        for (String keyword : toUpdateKeywordDatabase.split(\" \")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lennoxtr"},"content":"            if (this.keywordDatabase.containsKey(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"lennoxtr"},"content":"                TaskList currentList \u003d this.keywordDatabase.get(keyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"lennoxtr"},"content":"                currentList \u003d currentList.addTask(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"lennoxtr"},"content":"                this.keywordDatabase.put(keyword, currentList);","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"lennoxtr"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"lennoxtr"},"content":"                TaskList newList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"lennoxtr"},"content":"                newList \u003d newList.addTask(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":165,"author":{"gitId":"lennoxtr"},"content":"                this.keywordDatabase.put(keyword, newList);","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":167,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":169,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"lennoxtr"},"content":"     * Remove a task from the keyword and schedule database","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"lennoxtr"},"content":"     * @param task the task to remove from the","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"lennoxtr"},"content":"     *                list of Tasks in database assigned to a specified","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"lennoxtr"},"content":"     *                keyword","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"lennoxtr"},"content":"     * @return a new {@code Storage} with the task removed from the keyword and schedule database","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"lennoxtr"},"content":"    public Storage removeFromStorage(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"lennoxtr"},"content":"        removeFromKeywordStorage(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"lennoxtr"},"content":"        removeFromScheduleStorage(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"lennoxtr"},"content":"    private void removeFromKeywordStorage(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"lennoxtr"},"content":"        String removedTask \u003d task.getNature()","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"lennoxtr"},"content":"                + \" \" + task.getAction() + \" \" + task.getTimeInfo();","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"lennoxtr"},"content":"        for (String keyword : removedTask.split(\" \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"lennoxtr"},"content":"            if (this.keywordDatabase.containsKey(keyword)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"lennoxtr"},"content":"                TaskList currentList \u003d this.keywordDatabase.get(keyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"lennoxtr"},"content":"                int index \u003d currentList.searchIndexOf(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"lennoxtr"},"content":"                if (index \u003e\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":193,"author":{"gitId":"lennoxtr"},"content":"                    currentList \u003d currentList.removeTask(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"lennoxtr"},"content":"                if (currentList.getSize() \u003e 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"lennoxtr"},"content":"                    this.keywordDatabase.put(keyword, currentList);","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"lennoxtr"},"content":"                } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"lennoxtr"},"content":"                    this.keywordDatabase.remove(keyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":204,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"lennoxtr"},"content":"    private void removeFromScheduleStorage(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"lennoxtr"},"content":"        List\u003cLocalDateTime\u003e datesOfTasks \u003d task.getDates();","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"lennoxtr"},"content":"        if (datesOfTasks.size() \u003e 1) { //EVENT","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"lennoxtr"},"content":"            List\u003cLocalDateTime\u003e listOfDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"lennoxtr"},"content":"            LocalDateTime dateBegin \u003d datesOfTasks.get(0);","lastModifiedDate":"2023-02-20"},{"lineNumber":210,"author":{"gitId":"lennoxtr"},"content":"            LocalDateTime dateEnd \u003d datesOfTasks.get(1);","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"lennoxtr"},"content":"            while (dateBegin.compareTo(dateEnd) \u003c 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"lennoxtr"},"content":"                listOfDate.add(dateBegin);","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"lennoxtr"},"content":"                dateBegin \u003d dateBegin.plusDays(1);","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":216,"author":{"gitId":"lennoxtr"},"content":"            datesOfTasks \u003d listOfDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":217,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"lennoxtr"},"content":"        for (LocalDateTime date : datesOfTasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":220,"author":{"gitId":"lennoxtr"},"content":"            String searchDate \u003d date.toLocalDate().toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"lennoxtr"},"content":"            assert taskScheduleOnDates.containsKey(searchDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":222,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":223,"author":{"gitId":"lennoxtr"},"content":"            PriorityQueue\u003cPair\u003cLocalDateTime, Task\u003e\u003e scheduleOnDate \u003d taskScheduleOnDates.get(searchDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":224,"author":{"gitId":"lennoxtr"},"content":"            Pair\u003cLocalDateTime, Task\u003e deletedPair \u003d new Pair\u003c\u003e(datesOfTasks.get(0), task);","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"lennoxtr"},"content":"            for (Pair\u003cLocalDateTime, Task\u003e pair : scheduleOnDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":227,"author":{"gitId":"lennoxtr"},"content":"                if (pair.getKey().equals(datesOfTasks.get(0))","lastModifiedDate":"2023-02-20"},{"lineNumber":228,"author":{"gitId":"lennoxtr"},"content":"                        \u0026\u0026 pair.getValue().toString().equals(task.toString())) {","lastModifiedDate":"2023-02-20"},{"lineNumber":229,"author":{"gitId":"lennoxtr"},"content":"                    deletedPair \u003d pair;","lastModifiedDate":"2023-02-20"},{"lineNumber":230,"author":{"gitId":"lennoxtr"},"content":"                    break;","lastModifiedDate":"2023-02-20"},{"lineNumber":231,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":232,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":233,"author":{"gitId":"lennoxtr"},"content":"            scheduleOnDate.remove(deletedPair);","lastModifiedDate":"2023-02-20"},{"lineNumber":234,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":235,"author":{"gitId":"lennoxtr"},"content":"            if (scheduleOnDate.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":236,"author":{"gitId":"lennoxtr"},"content":"                taskScheduleOnDates.remove(searchDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":237,"author":{"gitId":"lennoxtr"},"content":"            } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":238,"author":{"gitId":"lennoxtr"},"content":"                taskScheduleOnDates.put(searchDate, scheduleOnDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":239,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":240,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":241,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":242,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":243,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":244,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":245,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":246,"author":{"gitId":"lennoxtr"},"content":"     * Asking the user whether he wants to save the current progress","lastModifiedDate":"2023-02-20"},{"lineNumber":247,"author":{"gitId":"lennoxtr"},"content":"     * Works with CLI version of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":248,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":249,"author":{"gitId":"lennoxtr"},"content":"     * @param listOfCurrentTasks the current list of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":250,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":251,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":252,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":253,"author":{"gitId":"lennoxtr"},"content":"    public static void saveProgressQuery(TaskList listOfCurrentTasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":254,"author":{"gitId":"lennoxtr"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":255,"author":{"gitId":"lennoxtr"},"content":"        System.out.println(\"SAVE YOUR GRAND PLAN FOR ANOTHER DAY? \");","lastModifiedDate":"2023-02-17"},{"lineNumber":256,"author":{"gitId":"lennoxtr"},"content":"        String isSaving \u003d sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":257,"author":{"gitId":"lennoxtr"},"content":"        if (isSaving.equals(\"YES\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":258,"author":{"gitId":"lennoxtr"},"content":"            saveProgress(listOfCurrentTasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":259,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":260,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":261,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":262,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":263,"author":{"gitId":"lennoxtr"},"content":"     * Asking the user whether he wants to save the current progress","lastModifiedDate":"2023-02-20"},{"lineNumber":264,"author":{"gitId":"lennoxtr"},"content":"     * Works with GUI version of Duke","lastModifiedDate":"2023-02-20"},{"lineNumber":265,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":266,"author":{"gitId":"lennoxtr"},"content":"     * @param listOfCurrentTasks the current list of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":267,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":268,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":269,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":270,"author":{"gitId":"lennoxtr"},"content":"    public static void saveProgressGui(String userCommand, TaskList listOfCurrentTasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":271,"author":{"gitId":"lennoxtr"},"content":"        if (userCommand.equals(\"YES\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":272,"author":{"gitId":"lennoxtr"},"content":"            saveProgress(listOfCurrentTasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":273,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":274,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":275,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":276,"author":{"gitId":"lennoxtr"},"content":"    private void addTaskToSchedule(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":277,"author":{"gitId":"lennoxtr"},"content":"        List\u003cLocalDateTime\u003e eventDates \u003d task.getDates();","lastModifiedDate":"2023-02-17"},{"lineNumber":278,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":279,"author":{"gitId":"lennoxtr"},"content":"        if (task.getNature().equals(\"DEADLINE\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":280,"author":{"gitId":"lennoxtr"},"content":"            LocalDateTime deadlineDate \u003d eventDates.get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":281,"author":{"gitId":"lennoxtr"},"content":"            LocalDate convertedDate \u003d deadlineDate.toLocalDate();","lastModifiedDate":"2023-02-18"},{"lineNumber":282,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":283,"author":{"gitId":"lennoxtr"},"content":"            String date \u003d convertedDate.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":284,"author":{"gitId":"lennoxtr"},"content":"            PriorityQueue\u003cPair\u003cLocalDateTime, Task\u003e\u003e currentQueue;","lastModifiedDate":"2023-02-20"},{"lineNumber":285,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":286,"author":{"gitId":"lennoxtr"},"content":"            if (this.taskScheduleOnDates.containsKey(date)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":287,"author":{"gitId":"lennoxtr"},"content":"                currentQueue \u003d this.taskScheduleOnDates.get(date);","lastModifiedDate":"2023-02-20"},{"lineNumber":288,"author":{"gitId":"lennoxtr"},"content":"            } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":289,"author":{"gitId":"lennoxtr"},"content":"                currentQueue \u003d new PriorityQueue\u003c\u003e(new DatetimeComparator());","lastModifiedDate":"2023-02-20"},{"lineNumber":290,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":291,"author":{"gitId":"lennoxtr"},"content":"            currentQueue.add(new Pair\u003cLocalDateTime, Task\u003e(deadlineDate, task));","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"lennoxtr"},"content":"            this.taskScheduleOnDates.put(date, currentQueue);","lastModifiedDate":"2023-02-17"},{"lineNumber":293,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":294,"author":{"gitId":"lennoxtr"},"content":"        } else if (task.getNature().equals(\"EVENT\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":295,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":296,"author":{"gitId":"lennoxtr"},"content":"            LocalDateTime dateBeginUnformatted \u003d eventDates.get(0);","lastModifiedDate":"2023-02-20"},{"lineNumber":297,"author":{"gitId":"lennoxtr"},"content":"            LocalDate dateBeginFormatted \u003d dateBeginUnformatted.toLocalDate();","lastModifiedDate":"2023-02-20"},{"lineNumber":298,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":299,"author":{"gitId":"lennoxtr"},"content":"            LocalDateTime dateEndUnformatted \u003d eventDates.get(1);","lastModifiedDate":"2023-02-20"},{"lineNumber":300,"author":{"gitId":"lennoxtr"},"content":"            LocalDate dateEndFormatted \u003d dateEndUnformatted.toLocalDate();","lastModifiedDate":"2023-02-20"},{"lineNumber":301,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":302,"author":{"gitId":"lennoxtr"},"content":"            while (dateBeginFormatted.compareTo(dateEndFormatted) \u003c\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":303,"author":{"gitId":"lennoxtr"},"content":"                String searchDate \u003d dateBeginFormatted.toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":304,"author":{"gitId":"lennoxtr"},"content":"                PriorityQueue\u003cPair\u003cLocalDateTime, Task\u003e\u003e currentQueue;","lastModifiedDate":"2023-02-20"},{"lineNumber":305,"author":{"gitId":"lennoxtr"},"content":"                if (this.taskScheduleOnDates.containsKey(searchDate)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":306,"author":{"gitId":"lennoxtr"},"content":"                    currentQueue \u003d this.taskScheduleOnDates.get(searchDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":307,"author":{"gitId":"lennoxtr"},"content":"                } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":308,"author":{"gitId":"lennoxtr"},"content":"                    currentQueue \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":309,"author":{"gitId":"lennoxtr"},"content":"                            new PriorityQueue\u003c\u003e(new DatetimeComparator());","lastModifiedDate":"2023-02-20"},{"lineNumber":310,"author":{"gitId":"lennoxtr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":311,"author":{"gitId":"lennoxtr"},"content":"                currentQueue.add(new Pair\u003cLocalDateTime, Task\u003e(dateBeginUnformatted, task));","lastModifiedDate":"2023-02-20"},{"lineNumber":312,"author":{"gitId":"lennoxtr"},"content":"                this.taskScheduleOnDates.put(searchDate, currentQueue);","lastModifiedDate":"2023-02-20"},{"lineNumber":313,"author":{"gitId":"lennoxtr"},"content":"                dateBeginFormatted \u003d dateBeginFormatted.plusDays(1);","lastModifiedDate":"2023-02-20"},{"lineNumber":314,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":315,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":316,"author":{"gitId":"lennoxtr"},"content":"            return;","lastModifiedDate":"2023-02-18"},{"lineNumber":317,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":318,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":319,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":320,"author":{"gitId":"lennoxtr"},"content":"     * Return a queue consisting of scheduled {@code Task} on a specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":321,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":322,"author":{"gitId":"lennoxtr"},"content":"     * @param searchDate the date to search for schedule","lastModifiedDate":"2023-02-20"},{"lineNumber":323,"author":{"gitId":"lennoxtr"},"content":"     * @return a {@code PriorityQueue} with the scheduled tasks on the specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":324,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":325,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":326,"author":{"gitId":"lennoxtr"},"content":"    public PriorityQueue\u003cPair\u003cLocalDateTime, Task\u003e\u003e getTaskScheduleOnDates(String searchDate) {","lastModifiedDate":"2023-02-18"},{"lineNumber":327,"author":{"gitId":"lennoxtr"},"content":"        if (this.taskScheduleOnDates.containsKey(searchDate)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":328,"author":{"gitId":"lennoxtr"},"content":"            return this.taskScheduleOnDates.get(searchDate);","lastModifiedDate":"2023-02-18"},{"lineNumber":329,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":330,"author":{"gitId":"lennoxtr"},"content":"            return new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":331,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":332,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":333,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lennoxtr":333}},{"path":"src/main/java/duke/util/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" * A template to create tasks specified from the user,","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":" * such as {@code ToDo}, {@code Deadline}, {@code ScheduledEvent}","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"    private String nature;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"    private String action;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"     * Constructs a task with the specified nature and action from the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"     * @param nature nature of the task as specified by the user:","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"     *               ToDo, Deadline, ...","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"     * @param action action of the task as specified by the user","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    public Task (String nature, String action) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"        this.nature \u003d nature;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"        this.action \u003d action;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     * Constructs a task with the specified nature and action from the user.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"     * @param nature nature of the task as specified by the user:","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"     *               ToDo, Deadline, ...","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"     * @param action action of the task as specified by the user","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"     * @param isDone whether a task is marked as done","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"    public Task (String nature, String action, boolean isDone) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"        this.nature \u003d nature;","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"        this.action \u003d action;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"     * Mark a task as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"     * @return a task marked as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"    public Task markDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"     * Mark a task as not done.","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"     * @return a task marked as not done.","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"    public Task unMark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"     * A dummy method for deadline and event child classes to override","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"    public String getTimeInfo () {","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"        return \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"     * Return the marking status of an event","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"     * @return the marking status of an event","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"        return isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"     * Return the required action of an event in","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"     * the form of {@code String}","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"     * @return the required action of an event","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"    public String getAction() {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"        return action;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"     * Return the nature of an event, whether it is","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"     * TODO, DEADLINE, or EVENT","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"     * @return the nature of an event","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"    public String getNature() {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"        return nature;","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"     * A dummy method for {@code ToDo}, {@code Deadline}, and {@code ScheduledEvent}","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"     * child classes to override","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"    public List\u003cLocalDateTime\u003e getDates() {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"        return List.of();","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"        String toPrintOut \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"        toPrintOut +\u003d \"[\" + this.nature.charAt(0) + \"]\";","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"[X] \";","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"            toPrintOut +\u003d \"[ ] \";","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"        toPrintOut +\u003d this.action;","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"        return toPrintOut;","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":128}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" * An implementation of the {@code ArrayList} to","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":" * store the {@code Task} assigned from the user","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":" * and perform required actions on them.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"    private List\u003cTask\u003e listTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"     * Constructs an empty list of {@code Task}.","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"        this.listTask \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"     * Marks the {@code Task} at the specified position as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"     * If tasks is already done, nothing happens.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"     * @param index index of the specified {@code Task} that user","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     *              wants to mark as done","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     * @return the list with the specified tasks marked as done","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"     * @throws duke.io.input.exception.UserInputException if index is out of range","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"     *              of the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"    public TaskList markTask(int index) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"        Task currentTask \u003d this.listTask.get(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"        this.listTask.set(index, currentTask.markDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"     * Unmarks the {@code Task} at the specified position if it\u0027s already done.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"     * Tasks will remain the same if they\u0027re not marked as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"     * @param index index of the specified {@code Task} that user","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"     *              wants to unmark","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"     * @return return the list with the specified task unmarked","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"     * @throws duke.io.input.exception.UserInputException if index is out of range","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"     *              of the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"    public TaskList unmarkTask(int index) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"        Task currentTask \u003d this.listTask.get(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"        this.listTask.set(index, currentTask.unMark());","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"     * Adds {@code Task} to the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"     * @param task the {@code Task} that user","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"     *              wants to add","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"     * @return the list of task with the new task added","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"    public TaskList addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"        this.listTask.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"     * Retrieve {@code Task} to the list of tasks,","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"     * return type is {@code Task}.","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"     * @param index in dex of the {@code Task}","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"     *               to retrieve","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"     * @return the task at the specified index","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"        assert (index \u003e\u003d 0);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"        return this.listTask.get(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"     * Return that size of the list of tasks,","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"     * which is also the current number of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"     * @return the number of task","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"        return this.listTask.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"     * Removed a {@code Task} from a specified position from the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"     * @return the new list of task with the specified task removed","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"    public TaskList removeTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"        assert (index \u003e\u003d 0);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"        this.listTask.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"     * Return the index of a specified {@code Task} in the list of tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"     * @param task the {@code Task} to search index","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"     * @return index of the specified {@code Task}","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"    public int searchIndexOf(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"            if (this.getTask(i).toString().equals(task.toString())) {","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"                index \u003d i;","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"                return index;","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"        return index;","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"        if (this.listTask.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"            return \"NOTHING ADDED TO LIST\";","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"lennoxtr"},"content":"            String toPrintOut \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"lennoxtr"},"content":"            for (int i \u003d 0; i \u003c this.listTask.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"lennoxtr"},"content":"                toPrintOut +\u003d (i + 1) + \". \" + this.listTask.get(i).toString() + \u0027\\n\u0027;","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"lennoxtr"},"content":"            return toPrintOut;","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":139}},{"path":"src/main/java/duke/util/service/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util.service;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" * A more specific implementation of {@code Task}","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" * as specified by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"     * Construct a {@code Deadline} with the","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"     * deadline and action specified by the user","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"     * with the keyword \"/BY\".","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"    public Deadline(LocalDateTime deadline, String action) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"        super(\"DEADLINE\", action);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"     * Construct a {@code Deadline} with the","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"     * deadline and action specified by the user","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     * with the keyword \"/BY\".","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     * A marked/ unmarked status of the task needs to be provided.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"    public Deadline(LocalDateTime deadline, String action, boolean isDone) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"        super(\"DEADLINE\", action, isDone);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"     * Return the deadline in the form of a {@code String}","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"        return \"/BY \" + deadline.format(","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"     * Return the deadline date in the form of a list","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"     * @return a list of {@code LocalDateTime} object consiting of","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"     *         the deadline date","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"    public List\u003cLocalDateTime\u003e getDates() {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"        return List.of(this.deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"        return super.toString() + \" (BY: \" + this.deadline.format(","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"                DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":64}},{"path":"src/main/java/duke/util/service/ScheduledEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util.service;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" * A more specific implementation of {@code Task}","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" * as specified by the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"public class ScheduledEvent extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    private LocalDateTime dateBegin;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    private LocalDateTime dateEnd;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"     * Construct a {@code Deadline} with the action specified","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"     * by the user, as well as the beginning date and end date of the action,","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"     * denoted in the user input as the keywords \"/FROM\"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"     * and \"/TO\".","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    public ScheduledEvent(LocalDateTime dateBegin,","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"                          LocalDateTime dateEnd, String action) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"        super(\"EVENT\", action);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"        this.dateBegin \u003d dateBegin;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"        this.dateEnd \u003d dateEnd;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"     * Construct a {@code Deadline} with the action specified","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"     * by the user, as well as the beginning date and end date of the action,","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"     * denoted in the user input as the keywords \"/FROM\"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"     * and \"/TO\". The marked/ unmarked status also needs to be provided","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"    public ScheduledEvent(LocalDateTime dateBegin,","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"                          LocalDateTime dateEnd, String action, boolean isDone) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"        super(\"EVENT\", action, isDone);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"        this.dateBegin \u003d dateBegin;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"        this.dateEnd \u003d dateEnd;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"     * Return the beginning date and ending date of an event","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"     * in the form of a list","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"     * @return a list of {@code LocalDateTime} objects consiting of","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"     *         the beginning date and ending date of the event","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"    public List\u003cLocalDateTime\u003e getDates() {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"        return List.of(this.dateBegin, this.dateEnd);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"     * Return the timing of event in the form of a {@code String}","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"    public String getTimeInfo() {","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"        return \" /FROM \" + dateBegin.format(","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"                + \" /TO \" + dateEnd.format(","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"        return super.toString() + \" (FROM: \" + dateBegin.format(","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"                DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\"))","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"                + \" TO: \" + dateEnd.format(","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"                        DateTimeFormatter.ofPattern(\"hh:mm a MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":79}},{"path":"src/main/java/duke/util/service/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util.service;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":" * Construct a {@code Deadline} with the","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" * deadline and action specified by the user","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"     * Construct a {@code Deadline} with the action specified","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"     * by the user","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    public ToDo(String action) {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"        super(\"TODO\", action);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"    public ToDo(String action, boolean isDone) {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"        super(\"TODO\", action, isDone);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lennoxtr":24}},{"path":"src/main/java/duke/workflow/DoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.workflow;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"import duke.io.input.ui.UserInterface;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":" * A more specific implementation of {@code Event}.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":" * Part of the workflow where the chatbot determines the next","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":" * possible action based on the user\u0027s input","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"public class DoTask extends Event {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    private boolean justOpenedDuke;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    private String userCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"    private Task removedTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"    private TaskList taskListFromCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"     * Constructs the {@code DoTask} as the user interacts","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"     * with Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"    public DoTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"        this.justOpenedDuke \u003d true;","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"        this.userCommand \u003d \"LIST\";","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"        this.taskListFromCommand \u003d new TaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"     * Load saved tasks from previous use","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"     * @param taskList list of saved task from previous use","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"    public void loadOldTasks(TaskList taskList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"lennoxtr"},"content":"     * Parse saved tasks from previous use to current taks database,","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lennoxtr"},"content":"     * consisting of a keyword database to search for tasks using keyword,","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"lennoxtr"},"content":"     * and a schedule database to search for scheduled tasks on a specified date","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"lennoxtr"},"content":"     * @param oldTaskList list of saved task from previous use","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"lennoxtr"},"content":"    public void updateKeywordDatabase(TaskList oldTaskList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lennoxtr"},"content":"        for (int i \u003d 0; i \u003c oldTaskList.getSize(); i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lennoxtr"},"content":"            Task taskToUpdate \u003d oldTaskList.getTask(i);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lennoxtr"},"content":"            this.storage \u003d this.storage.addToDatabase(taskToUpdate);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lennoxtr"},"content":"    private void parseTask(String userInput) {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"lennoxtr"},"content":"        Task newTask \u003d Parser.parseTask(userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"lennoxtr"},"content":"        this.taskList \u003d this.taskList.addTask(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"lennoxtr"},"content":"        this.storage \u003d this.storage.addToDatabase(newTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lennoxtr"},"content":"    private void findTaskOnDate(String userInput) {","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lennoxtr"},"content":"        LocalDate searchDate \u003d Parser.parseDate(userInput);","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lennoxtr"},"content":"        String searchDateAsString \u003d searchDate.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lennoxtr"},"content":"        PriorityQueue\u003cPair\u003cLocalDateTime, Task\u003e\u003e eventQueueOnDate \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"lennoxtr"},"content":"                this.storage.getTaskScheduleOnDates(searchDateAsString);","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"lennoxtr"},"content":"        TaskList scheduleOnDate \u003d new TaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lennoxtr"},"content":"        for (Pair\u003cLocalDateTime, Task\u003e pair : eventQueueOnDate) {","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lennoxtr"},"content":"            scheduleOnDate \u003d scheduleOnDate.addTask(pair.getValue());","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lennoxtr"},"content":"        this.taskListFromCommand \u003d scheduleOnDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"lennoxtr"},"content":"     * Determines the next possible action after the user has entered an input.","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"lennoxtr"},"content":"     * @param userCommand command from user, gotten from commandline","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"lennoxtr"},"content":"     * @return a new event that follows from the last user input","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"lennoxtr"},"content":"    public Event toNextEvent(String userCommand) {","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lennoxtr"},"content":"        this.justOpenedDuke \u003d false;","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lennoxtr"},"content":"        if (userCommand.equals(\"BYE\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lennoxtr"},"content":"            this.userCommand \u003d userCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lennoxtr"},"content":"            return new Ending(this.taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"lennoxtr"},"content":"        } else if (userCommand.equals(\"LIST\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lennoxtr"},"content":"            this.userCommand \u003d userCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lennoxtr"},"content":"            return this;","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"lennoxtr"},"content":"        } else if (Parser.checkInputValidity(userCommand, this.taskList.getSize())) {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lennoxtr"},"content":"            this.userCommand \u003d userCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lennoxtr"},"content":"            String[] userInputArray \u003d userCommand.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lennoxtr"},"content":"            List\u003cString\u003e userInputSplit \u003d Arrays.asList(userInputArray);","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"lennoxtr"},"content":"            String mainCommand \u003d userInputSplit.get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"lennoxtr"},"content":"            if (mainCommand.equals(\"MARK\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"lennoxtr"},"content":"                int indexOfTask \u003d Integer.valueOf(userInputSplit.get(1)) - 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lennoxtr"},"content":"                assert (userInputSplit.size() \u003e 0);","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"lennoxtr"},"content":"                this.taskList \u003d this.taskList.markTask(indexOfTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"lennoxtr"},"content":"                assert (this.taskList.getTask(indexOfTask).getStatus() \u003d\u003d true);","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"UNMARK\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"lennoxtr"},"content":"                int indexOfTask \u003d Integer.valueOf(userInputSplit.get(1)) - 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"lennoxtr"},"content":"                assert (userInputSplit.size() \u003e 0);","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"lennoxtr"},"content":"                this.taskList \u003d this.taskList.unmarkTask(indexOfTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"lennoxtr"},"content":"                assert (this.taskList.getTask(indexOfTask).getStatus() \u003d\u003d false);","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"TODO\") || mainCommand.equals(\"DEADLINE\")","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"lennoxtr"},"content":"                    || mainCommand.equals(\"EVENT\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"lennoxtr"},"content":"                parseTask(userCommand);","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"DELETE\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"lennoxtr"},"content":"                int indexOfTask \u003d Integer.valueOf(userInputSplit.get(1)) - 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"lennoxtr"},"content":"                this.removedTask \u003d this.taskList.getTask(indexOfTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"lennoxtr"},"content":"                this.taskList \u003d this.taskList.removeTask(indexOfTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"lennoxtr"},"content":"                this.storage \u003d this.storage.removeFromStorage(this.removedTask);","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"FIND\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"lennoxtr"},"content":"                String[] keywordToFind \u003d userCommand.split(\"FIND \");","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"lennoxtr"},"content":"                List\u003cString\u003e keywords \u003d Arrays.asList(keywordToFind);","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"lennoxtr"},"content":"                TaskList findList \u003d this.storage.getTaskWithKeywords(keywords.get(1));","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lennoxtr"},"content":"                this.taskListFromCommand \u003d findList;","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"SCHEDULE\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"lennoxtr"},"content":"                findTaskOnDate(userCommand);","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"lennoxtr"},"content":"     * Return the list of current tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"lennoxtr"},"content":"     * @return a {@code TaskList} consisting of current tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"lennoxtr"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"lennoxtr"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"lennoxtr"},"content":"        if (justOpenedDuke) {","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"lennoxtr"},"content":"            boolean firstTimeUsingDuke \u003d this.taskList.getSize() \u003d\u003d 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"lennoxtr"},"content":"            return UserInterface.welcomeUser(firstTimeUsingDuke);","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"lennoxtr"},"content":"        } else if (userCommand.equals(\"LIST\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"lennoxtr"},"content":"            return this.taskList.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"lennoxtr"},"content":"            String[] commands \u003d userCommand.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"lennoxtr"},"content":"            List\u003cString\u003e commandWords \u003d Arrays.asList(commands);","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"lennoxtr"},"content":"            String mainCommand \u003d commandWords.get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lennoxtr"},"content":"            if (mainCommand.equals(\"MARK\") || mainCommand.equals(\"UNMARK\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"lennoxtr"},"content":"                int index \u003d Integer.valueOf(commandWords.get(1)) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"lennoxtr"},"content":"                Task taskToPrint \u003d this.taskList.getTask(index);","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"lennoxtr"},"content":"                return UserInterface.printMarkedUnmarkedTask(mainCommand, taskToPrint);","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"DELETE\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"lennoxtr"},"content":"                int numberOfTasksRemaining \u003d this.taskList.getSize();","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"lennoxtr"},"content":"                return UserInterface.printDeletedTask(numberOfTasksRemaining, this.removedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"FIND\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"lennoxtr"},"content":"                return UserInterface.printSearchedTask(this.taskListFromCommand);","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"lennoxtr"},"content":"            } else if (mainCommand.equals(\"SCHEDULE\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"lennoxtr"},"content":"                return UserInterface.printSearchedTask(this.taskListFromCommand);","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"lennoxtr"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"lennoxtr"},"content":"                int numberOfTasks \u003d this.taskList.getSize();","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"lennoxtr"},"content":"                return UserInterface.printAddedTask(this.userCommand, numberOfTasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"lennoxtr"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"lennoxtr":176}},{"path":"src/main/java/duke/workflow/Ending.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.workflow;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":" * A more specific implementation of {@code Event}.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":" * Part of the workflow where the chatbot say goodbye to","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":" * the user and the program ends.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"public class Ending extends Event {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"     * Constructs the {@code Ending} event with an empty","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"     * list of task. Used when the user does not want to","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"     * interact with Duke","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"    public Ending() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"        super(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"     * Constructs the {@code Ending} event with a specified","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"     * list of task. Used when the user wants to log off","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     * after interacting with Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"    public Ending(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"        super(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"    public Event toNextEvent(String nextTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"     * Dummy method to implement the abstract class\u0027s method.","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"        return \"VERY WELL. THE WORLD IS SAFE FROM YOUR PLAN. FOR NOW\";","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":53}},{"path":"src/main/java/duke/workflow/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.workflow;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"public abstract class Event {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"    private boolean isFinalEvent;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"    public Event (boolean isFinalEvent) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"        this.isFinalEvent \u003d isFinalEvent;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"    public abstract Event toNextEvent(String nextTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"    public abstract TaskList getTaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"    public boolean isFinalEvent() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"        return this.isFinalEvent;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lennoxtr":18}},{"path":"src/main/java/duke/workflow/Greeting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.workflow;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":" * A","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":" * more specific implementation of {@code Event}.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":" *","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":" * Part of the workflow where the chatbot greets the user","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":" * and ask whether he/ she would like to begin using Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"public class Greeting extends Event {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"     * Constructs the {@code Greeting} event that greets the user.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"     * The flag status is set to -1, indicating the user has","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"     * not made any input.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"    public Greeting() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"     * Determine the next event of the workflow based on the user\u0027s input.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"     * @return {@code Ending} if user doesn\u0027t want to play, and","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"     *          {@code DoTask} if the user wants to use Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"    public Event toNextEvent(String nextTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"        if (nextTask.equals(\"NOT PLAYING\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"lennoxtr"},"content":"            return new Ending();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"lennoxtr"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"lennoxtr"},"content":"            DoTask doTask \u003d new DoTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"lennoxtr"},"content":"            TaskList oldTasks \u003d Storage.loadProgress();","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lennoxtr"},"content":"            doTask.loadOldTasks(oldTasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lennoxtr"},"content":"            doTask.updateKeywordDatabase(oldTasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lennoxtr"},"content":"            return doTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"lennoxtr"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"lennoxtr"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"lennoxtr"},"content":"        return new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"lennoxtr"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"lennoxtr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"lennoxtr"},"content":"        return \"SHALL WE PLAY A GAME?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lennoxtr":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"200.0\" prefHeight\u003d\"298.0\" prefWidth\u003d\"539.0\" spacing\u003d\"5.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"273.0\" prefWidth\u003d\"428.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"91.0\" fitWidth\u003d\"94.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"lennoxtr":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"700.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"758.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"724.0\" promptText\u003d\"Enter Text\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"724.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#898686\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-60.0\" prefHeight\u003d\"758.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"658.0\" prefWidth\u003d\"700.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"lennoxtr":23}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lennoxtr"},"content":"package duke.util;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lennoxtr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lennoxtr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lennoxtr"},"content":"import duke.util.service.ToDo;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lennoxtr"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lennoxtr"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lennoxtr"},"content":"    private ToDo todoCheck \u003d new ToDo(\"DRINK WATER\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lennoxtr"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lennoxtr"},"content":"    void markTaskTest() {","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lennoxtr"},"content":"        taskList \u003d taskList.addTask(todoCheck);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lennoxtr"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lennoxtr"},"content":"        assertEquals(\"[T][X] DRINK WATER\", taskList.getTask(0).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"lennoxtr"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lennoxtr"},"content":"    void unmarkTaskTest() {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lennoxtr"},"content":"        taskList \u003d taskList.addTask(todoCheck);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lennoxtr"},"content":"        taskList.markTask(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lennoxtr"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lennoxtr"},"content":"        assertEquals(\"[T][ ] DRINK WATER\", taskList.getTask(0).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"lennoxtr"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lennoxtr"},"content":"    void addTaskTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lennoxtr"},"content":"        taskList \u003d taskList.addTask(todoCheck);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"lennoxtr"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"lennoxtr"},"content":"        assertEquals(todoCheck.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lennoxtr"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"lennoxtr"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lennoxtr"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lennoxtr":34}}]
