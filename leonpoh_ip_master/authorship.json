[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"[E][] | |(2000-12-10T17:00 : 2000-12-10T17:00)","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"leonpoh":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"Feature 1 - Add Task","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"Add a task.","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"The task can be: todo, event, deadline","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"Feature 2 - Mark/Unmark Task as Done","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"Feature 3 - Delete Task","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"Feature 4 - Find task","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"Find a task by a given keyword.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"Feature 5 - List tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"Usage","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"todo - Adds a todo task","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"Adds a todo task to the list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"todo assignment","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"[T][] assignment","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":" Now you have 3 tasks in the list","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"event - Adds an event task","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"Adds an event task to the list of tasks. Date specified must be in dd/mm/yyyy HHmm format.","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"event lesson /from 15/09/2000 1700 /to 16/09/2001 1600","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"[E][X] lesson at: Sep 15 2020","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":" Now you have 3 tasks in the list","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"deadline - Adds a deadline task","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"Adds a deadline task to the list of tasks. Date specified must be in dd/mm/yyyy HHmm format.","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"deadline project /by 15/09/2000 1700","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"[D][] project by 15/09/2000 1800","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":" Now you have 3 tasks in the list","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"list - Lists all tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"Lists all tasks. Each task is given an index starting from 1.","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"list","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"1. [T][] assignment","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"2. [E][] lesson 15/09/2000 1800 to 16/09/2000 1900","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"3. [D][] project 15/09/2000 1800","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"done - Mark task as done","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"Mark a task specified by the index as done. Index is obtained through list.","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"done 1","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"Nice I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"1. [T][X] assignment","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"delete - Delete a task","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"Deletes a task specified by the index. Index is obtained through list.","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"leonpoh"},"content":"delete 1","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"leonpoh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"leonpoh"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"leonpoh"},"content":"[T][] assignment","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"leonpoh"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"leonpoh"},"content":"find - Find a task","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"leonpoh"},"content":"Finds a task specified by the given keyword. The search is case insensitive.","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"leonpoh"},"content":"find project","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"leonpoh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"2. [D][] project 15/09/2000 1800","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"help - Displays help page for commands","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"Displays help page for an individual command or all commands.","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"leonpoh"},"content":"Example of usage:","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"help todo","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"help","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"Excepted outcome for help todo:","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"todo command","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"leonpoh"},"content":"    Create a todo task.","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"leonpoh"},"content":"    Format: todo \u003ctask name\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"    Eg. todo homework1","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2021-07-17"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"### credits","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"leonpoh"},"content":"Help command was inspired by sgn00","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"leonpoh":101,"-":18}},{"path":"src/main/java/command/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":" * Encapsulates bye command","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"public class Bye implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    public Bye() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"bye\"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        ui.bye();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":34}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates user\u0027s command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public interface Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":27}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates deadline command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"     * Creates a Deadline Command","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     * @param newTask the task required to be done in this command","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    public DeadlineCommand(Task newTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"Deadline\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        list.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"        ui.printAddedTask(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"        storage.save(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":45}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates delete command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private int inputIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"     * Creates a delete command","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     * @param inputIndex the task\u0027s index to be deleted","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    public DeleteCommand(int inputIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"        this.inputIndex \u003d inputIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"Delete\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        if (inputIndex \u003c\u003d 0 || inputIndex \u003e list.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"OOPS!!! The index to remove cannot be less than 0 or \"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"        list.delete(this.inputIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"        ui.printDeletedTask(list.get(inputIndex), list);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":48}},{"path":"src/main/java/command/EventsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates Events command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class EventsCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    public EventsCommand(Task newTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"Events\"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        list.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"        ui.printAddedTask(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        storage.save(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":40}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates Events command","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"list\"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        TaskList result \u003d list.find(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"        ui.list(result);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        storage.save(list);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    ","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"leonpoh":40}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"public class HelpCommand implements Command{","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"    private static final String ALL \u003d \"all\";","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"    private String command;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"        this.command \u003d command.toLowerCase();","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"        this.command \u003d ALL;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"list\"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"        switch (command) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateByeMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"            case (\"deadline\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateDeadlineMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateDeleteMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateMarkMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"            case (\"unmark\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateUnmarkMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"            case (\"event\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateEventMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"            case (\"find\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateFindMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"            case (\"list\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateListMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateTodoMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"            case (\"help\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateHelpMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"            default:","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"                ui.appendToOutput(generateAllMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"    public String generateTodoMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"        return \"todo command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"                + \"    Create a todo task.\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: todo \u003ctask name\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. todo homework1\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"    public String generateEventMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"        return \"event command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"                + \"    Create an event task.\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: event \u003ctask name\u003e /from \u003cdate\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. event meeting1 /at 04/10/2000\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"                + \"    \u003cdate\u003e MUST be in dd/mm/yyyy HHmm\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"    public String generateDeadlineMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"        return \"deadline command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"                + \"    Create a deadline task.\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: deadline \u003ctask name\u003e /by \u003cdate\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. deadline meeting1 /by 04/10/2000\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"                + \"    \u003cdate\u003e MUST be in dd/mm/yyyy HHmm\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"    public String generateByeMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"        return \"bye command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"                + \"    Stops this programme.\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"leonpoh"},"content":"    ","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"leonpoh"},"content":"    public String generateDeleteMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"leonpoh"},"content":"        return \"delete command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"leonpoh"},"content":"                + \"    Deletes the task specified\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: delete \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. delete 3\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"                + \"    \u003ctask number\u003e is obtained by listing tasks\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"leonpoh"},"content":"    public String generateMarkMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"leonpoh"},"content":"        return \"Mark command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"leonpoh"},"content":"                + \"    Marks the task specified as done\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: done \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. mark 3\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"leonpoh"},"content":"                + \"    \u003ctask number\u003e is obtained by listing tasks\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"    public String generateUnmarkMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"leonpoh"},"content":"        return \"Unmark command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"leonpoh"},"content":"                + \"    Unmarks the task specified as done\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: unmark \u003ctask number\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. unmark 3\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"                + \"    \u003ctask number\u003e is obtained by listing tasks\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"leonpoh"},"content":"    public String generateListMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"leonpoh"},"content":"        return \"list command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"                + \"    Lists all tasks out in order of creation\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: list\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. list\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"    public String generateHelpMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"leonpoh"},"content":"        return \"help command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"leonpoh"},"content":"                + \"    Prints guide for commands.\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: help \u003ccommand\u003e , help\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. help, help todo\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"leonpoh"},"content":"    public String generateFindMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"leonpoh"},"content":"        return \"find command\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"leonpoh"},"content":"                + \"    Lists all tasks that match a given search term\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"leonpoh"},"content":"                + \"    Format: find \u003csearch term\u003e\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"leonpoh"},"content":"                + \"    Eg. find homework\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"leonpoh"},"content":"                + \"    This is a case insensitive search and does a\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"leonpoh"},"content":"                + \"    keyword search on all task names.\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"leonpoh"},"content":"    public String generateAllMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"leonpoh"},"content":"        return generateByeMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"leonpoh"},"content":"                + generateDeadlineMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"leonpoh"},"content":"                + generateDeleteMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"leonpoh"},"content":"                + generateMarkMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"leonpoh"},"content":"                + generateUnmarkMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"leonpoh"},"content":"                + generateEventMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"leonpoh"},"content":"                + generateFindMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"leonpoh"},"content":"                + generateHelpMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"leonpoh"},"content":"                + generateListMessage() + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"leonpoh"},"content":"                + generateTodoMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-02-14"},{"lineNumber":146,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":147,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-14"},{"lineNumber":148,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"leonpoh":150}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":" * Encapsulates List command","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"list\"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        ui.list(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":34}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates mark command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private int inputIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    public MarkCommand(int indexToMark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        this.inputIndex \u003d indexToMark;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"mark\"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        if (inputIndex \u003c\u003d 0 || inputIndex \u003e list.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"OOPS!!! The index to mark cannot be less than 0 or \"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        list.mark(inputIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        ui.printMarkedTask(list.get(inputIndex));","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":43}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates Todo command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    public TodoCommand(Task newTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"Todo\"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        list.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"        ui.printAddedTask(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        storage.save(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":40}},{"path":"src/main/java/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import main.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import main.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" * Encapsulates unmark command","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"public class UnMarkCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private int inputIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    public UnMarkCommand(int indexToMark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        this.inputIndex \u003d indexToMark;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * Executes the task when user inputs \"unmark\"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     * @param list    the list in duke to store the user\u0027s Task","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"     * @param ui      the user interface that is present in duke","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"     * @param storage the storage to store the task in the TaskList list","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException if there\u0027s an error","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        if (inputIndex \u003c\u003d 0 || inputIndex \u003e list.size()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"OOPS!!! The index to unmark cannot be less than 0 or \"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"                    + \"greater than the length of the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        list.unmark(inputIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        ui.printUnMarkedTask(list.get(inputIndex));","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     * Checks whether the task exits the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"     * @return true if this command exits the programme, false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":43}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":" * Handles all the exception in this project","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"leonpoh":10}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"leonpoh":61}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"package gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import main.Duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"leonpoh":33}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import main.Duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/meme.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/damith2.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"leonpoh":52}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package main;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":" * Main class for the project","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * Creates an instance of Duke","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     * @param filePath the relative path for the storage to store the task","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"            this.list \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"            this.list \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"     * starts the programme","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"    public String run(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"            Command command \u003d this.parser.parse(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"            command.execute(list, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"            return ui.print();","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        return this.run(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"    public String printHello() {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"        return ui.printHello();","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":51}},{"path":"src/main/java/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package main;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import gui.Main;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"leonpoh":13}},{"path":"src/main/java/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package main;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import command.Bye;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import command.EventsCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import command.FindCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import command.HelpCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"import command.ListCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"import command.UnMarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"import task.Deadlines;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"import task.Events;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"import task.ToDos;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":" * Parsers the user input","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"public class Parser {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"    private static final int INPUT_LENGTH_VALIDATE \u003d 2;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"    private static final int INPUT_LENGTH_WITH_DATE \u003d 3;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    private static final int INPUT_LENGTH_KEYWORD \u003d 2;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public Parser() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"     * Parses the user input","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"     * @param input the user\u0027s input from the command line","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"     * @return A command corresponding to the user\u0027s input i.e if user inputs bye it","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     *         will return a bye command.","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"            return new Bye();","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"            this.validateInputNotEmpty(splitInput, \"☹ OOPS!!! You must specify which task to mark\",","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"                    INPUT_LENGTH_VALIDATE);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"            if (!isNumeric(splitInput[1])) {","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"                throw new DukeException(\"input must int\");","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"            int inputIndex \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"            return new MarkCommand(inputIndex);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"            this.validateInputNotEmpty(splitInput, \"☹ OOPS!!! You must specify which task to unmark\",","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"                    INPUT_LENGTH_VALIDATE);","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"            if (!isNumeric(splitInput[1])) {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"                throw new DukeException(\"input must int\");","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"            int inputIndex \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"            return new UnMarkCommand(inputIndex);","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"            this.validateInputNotEmpty(splitInput, \"☹ OOPS!!! You must specify which task to delete\",","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"                    INPUT_LENGTH_VALIDATE);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"            if (!isNumeric(splitInput[1])) {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"                throw new DukeException(\"input must int\");","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"            int inputIndex \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"            return new DeleteCommand(inputIndex);","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"            int startIndex \u003d command.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"            this.validateInputNotEmpty(splitInput, \"☹ OOPS!!! The description of a todo cannot be empty.\",","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"                    INPUT_LENGTH_VALIDATE);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"            String taskName \u003d input.substring(startIndex);","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"            Task newTask \u003d new ToDos(taskName);","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"leonpoh"},"content":"            return new TodoCommand(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"leonpoh"},"content":"            this.validateInputNotEmpty(splitInput, \"☹ OOPS!!! The description of a deadline cannot be empty.\",","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"leonpoh"},"content":"                    INPUT_LENGTH_WITH_DATE);","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"leonpoh"},"content":"            int locationOfBy \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"leonpoh"},"content":"            for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"                if (splitInput[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"leonpoh"},"content":"                    locationOfBy \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"leonpoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"leonpoh"},"content":"            StringBuilder inputAfterBy \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"leonpoh"},"content":"            for (int i \u003d locationOfBy + 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"leonpoh"},"content":"                inputAfterBy.append(splitInput[i] + \" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"leonpoh"},"content":"            String finalInput \u003d inputAfterBy.toString().trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"leonpoh"},"content":"            this.checkValidDateFormat(finalInput, \"☹ OOPS!!! The deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"leonpoh"},"content":"            LocalDateTime date \u003d parseDate(finalInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"            int startIndex \u003d command.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"leonpoh"},"content":"            String taskName \u003d input.substring(startIndex).split(\"/\")[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"leonpoh"},"content":"            Task newTask \u003d new Deadlines(taskName, date);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"            return new DeadlineCommand(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"            this.validateInputNotEmpty(splitInput, \"☹ OOPS!!! The description of a event cannot be empty.\",","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"                    INPUT_LENGTH_WITH_DATE);","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"            int locationOfFrom \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"leonpoh"},"content":"            int locationOfTo \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"leonpoh"},"content":"            for (int i \u003d 0; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"                if (splitInput[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"                    locationOfFrom \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"leonpoh"},"content":"                if (splitInput[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"                    locationOfTo \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"leonpoh"},"content":"            StringBuilder inputAfterFrom \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"            StringBuilder inputAfterTo \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"leonpoh"},"content":"            for (int i \u003d locationOfFrom + 1; i \u003c locationOfTo; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"                inputAfterFrom.append(splitInput[i] + \" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"leonpoh"},"content":"            for (int i \u003d locationOfTo + 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"leonpoh"},"content":"                inputAfterTo.append(splitInput[i] + \" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"leonpoh"},"content":"            String finalInput \u003d inputAfterFrom.toString().trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"leonpoh"},"content":"            this.checkValidDateFormat(finalInput, \"☹ OOPS!!! The even time cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"leonpoh"},"content":"            this.checkValidDateFormat(finalInput, \"☹ OOPS!!! The deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"leonpoh"},"content":"            LocalDateTime dateFrom \u003d parseDate(finalInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"leonpoh"},"content":"            LocalDateTime dateTo \u003d parseDate(finalInput);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"leonpoh"},"content":"            int startIndex \u003d command.length();","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"leonpoh"},"content":"            String taskName \u003d input.substring(startIndex).split(\"/\")[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"leonpoh"},"content":"            Task newTask \u003d new Events(taskName, dateFrom, dateTo);","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"leonpoh"},"content":"            return new EventsCommand(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"leonpoh"},"content":"            checkKeywordFormat(splitInput);","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"leonpoh"},"content":"            return new FindCommand(splitInput[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"leonpoh"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"leonpoh"},"content":"            if (splitInput.length \u003e 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"leonpoh"},"content":"                return new HelpCommand(splitInput[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"leonpoh"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"leonpoh"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"leonpoh"},"content":"    private void validateInputNotEmpty(String[] splitInput, String message, int noOfInputs) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"leonpoh"},"content":"        if (splitInput.length \u003c INPUT_LENGTH_VALIDATE) {","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"leonpoh"},"content":"    private void checkValidDateFormat(String input, String message) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"leonpoh"},"content":"        String[] splitInput \u003d input.split(\"/\");","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"leonpoh"},"content":"        if (splitInput.length !\u003d 3 || !isNumeric(splitInput[0]) || !isNumeric(splitInput[1])) {","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"Not valid date format. Format must be dd/mm/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"leonpoh"},"content":"        String[] yearAndTime \u003d splitInput[2].split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"leonpoh"},"content":"        if (!(yearAndTime.length \u003d\u003d 2 \u0026\u0026 isNumeric(yearAndTime[0]) \u0026\u0026 isNumeric(yearAndTime[1]))) {","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"Not a valid date format Format must be dd/mm/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"leonpoh"},"content":"    private void checkKeywordFormat(String[] splitInput) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"leonpoh"},"content":"        if (splitInput.length \u003e INPUT_LENGTH_KEYWORD) {","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"Cannot have multiple keywords sorry :(.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":170,"author":{"gitId":"leonpoh"},"content":"     * Check whether the string is a real number.","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"leonpoh"},"content":"     * @param string any string","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"leonpoh"},"content":"     * @return true if it\u0027s a number false otherwise","lastModifiedDate":"2023-01-30"},{"lineNumber":174,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":175,"author":{"gitId":"leonpoh"},"content":"    public static boolean isNumeric(String string) {","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"leonpoh"},"content":"            int value \u003d Integer.parseInt(string);","lastModifiedDate":"2023-01-30"},{"lineNumber":178,"author":{"gitId":"leonpoh"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"leonpoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"leonpoh"},"content":"            System.out.println(\"Input String cannot be parsed to Integer.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"leonpoh"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"leonpoh"},"content":"     * Parses the string date into an actual LocalDateTime object","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":188,"author":{"gitId":"leonpoh"},"content":"     * @param date the date in String format (d/M/yyyy HHmm)","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"leonpoh"},"content":"     * @return LocalDateTime corresponding to the string format","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-30"},{"lineNumber":191,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":192,"author":{"gitId":"leonpoh"},"content":"    public static LocalDateTime parseDate(String date) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"leonpoh"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"leonpoh"},"content":"            return LocalDateTime.parse(date, dateFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"leonpoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"An error occurred while parsing date: \" + e);","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":199,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":202,"author":{"gitId":"leonpoh"},"content":"     * Parses the string date from the storage file into an actual LocalDateTime","lastModifiedDate":"2023-01-30"},{"lineNumber":203,"author":{"gitId":"leonpoh"},"content":"     * object","lastModifiedDate":"2023-01-30"},{"lineNumber":204,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":205,"author":{"gitId":"leonpoh"},"content":"     * @param date the date from the storage","lastModifiedDate":"2023-01-30"},{"lineNumber":206,"author":{"gitId":"leonpoh"},"content":"     * @return LocalDateTime corresponding to the string format","lastModifiedDate":"2023-01-30"},{"lineNumber":207,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-30"},{"lineNumber":208,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":209,"author":{"gitId":"leonpoh"},"content":"    public static LocalDateTime parseDateStorage(String date) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"leonpoh"},"content":"            return LocalDateTime.parse(date);","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"leonpoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"An error occurred while parsing date: \" + e);","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"leonpoh":216}},{"path":"src/main/java/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package main;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import task.Deadlines;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import task.Events;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"import task.ToDos;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":" * Stores the task from the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"    private File file;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"    private String fileName;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"     * Creates a Storage instance","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     * @param fileName the relative pathname","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"     * loads the tasks from the storage file.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"     * @return TaskList the TaskList will all the tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"            File file \u003d new File(fileName);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"                return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"            String input;","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"            while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"                String[] splitInput \u003d input.split(\"[|]\");","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"                String taskType \u003d Character.toString(splitInput[0].charAt(3));","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"                Task task;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"                        task \u003d new ToDos(splitInput[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"                        LocalDateTime storageDateTime \u003d Parser.parseDateStorage(splitInput[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"                        task \u003d new Deadlines(splitInput[2], storageDateTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"                        String[] splitDates \u003d splitInput[2].split(\":\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"                        String startDate \u003d splitDates[0].substring(1);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"                        String endDate \u003d splitDates[1].substring(0, splitDates[1].length() - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"                        LocalDateTime start \u003d Parser.parseDateStorage(startDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"                        LocalDateTime end \u003d Parser.parseDateStorage(endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"                        task \u003d new Events(splitInput[1], start, end);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"                        break;","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"                    default:","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"                        throw new DukeException(","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"                                \"Error occurred during file parsing, unexpected task type encountered.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"leonpoh"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"                if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"                    task.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"leonpoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"leonpoh"},"content":"            throw new DukeException(\"An error occurred during file parsing.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"leonpoh"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"leonpoh"},"content":"     * Saves the Task into the file","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"leonpoh"},"content":"     * @param list the TaskList to store","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"leonpoh"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"leonpoh"},"content":"        this.checkAndCreateFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"leonpoh"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"leonpoh"},"content":"            for (int i \u003d 1; i \u003c list.size() + 1; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"leonpoh"},"content":"                bufferedWriter.write(list.get(i).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"            System.out.println(\"File cannot be written to.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"     * Checks and create a file to store.","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"    private void checkAndCreateFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"        this.file \u003d new File(this.fileName);","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"leonpoh"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"leonpoh"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"leonpoh"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"leonpoh"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":124}},{"path":"src/main/java/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package main;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":" * Stores the task into a TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     * Creates a TaskList","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"     * @param list the list of tasks from storage","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"     * mark the task","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"     * @param inputIndex index to be mark","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public void mark(int inputIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        this.list.get(inputIndex - 1).mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"     * unmark the task","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"     * ","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"     * @param inputIndex index to be unmarked","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"    public void unmark(int inputIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        this.list.get(inputIndex - 1).unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        this.list.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"    public void delete(int inputIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"        this.list.remove(inputIndex - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"    public Task get(int inputIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"        return this.list.get(inputIndex - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"        return this.list;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"        return list.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"    public TaskList find(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"            if (list.get(i).toString().contains(input)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"                newTaskList.add(list.get(i));","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"        return new TaskList(newTaskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":74}},{"path":"src/main/java/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package main;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":" * Creates a Ui to interact with the user","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"    private StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    public Ui() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"        this.output \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    public String printHello() {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"            String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"            appendToOutput(\"Hello from\\n\" + logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"            return print();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    private void resetOutput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"        output.setLength(0);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"    public String print() {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        String temp \u003d output.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"        resetOutput();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        return temp;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        ","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"    public void appendToOutput(String str) {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"        output.append(str);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    public void printMarkedTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Duke: Ok! I\u0027ve marked this task as done:\" + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"    public void printUnMarkedTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Duke: Ok! I\u0027ve marked this task as not done yet:\" + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"    public void printAddedTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Got it. I\u0027ve added this task: \" + task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"    public void printDeletedTask(Task task, TaskList list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Noted. I\u0027ve removed this task:\" + task);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Here are the remaining Tasks: \");","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"        this.list(list);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"    public void list(TaskList list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Here are the task in your list: \" + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"        for (int i \u003d 1; i \u003c list.size() + 1; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"            appendToOutput(i + \".\" + list.getList().get(i - 1) + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"    public void bye() {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"        appendToOutput(\"Duke: \" + \"Bye\" + \". Hope I never see you again!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"        return (\"There seems to be a problem: \" + errorMessage);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":73}},{"path":"src/main/java/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"    private LocalDateTime deadLine;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"    public Deadlines(String taskName, LocalDateTime deadLine) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"        super(taskName);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"        this.deadLine \u003d deadLine;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"        return \"[D]\" + super.toString() + \"(\" + deadLine + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"leonpoh":16}},{"path":"src/main/java/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"    public Events(String taskName, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"        super(taskName);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"        return \"[E]\" + super.toString() + \"(\" + startTime + \" : \" + endTime + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"leonpoh":18}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"    private String taskName;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"    private boolean tag;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"        this.tag \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":" ","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"        this.tag \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"        this.tag \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    protected String tag() {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"        if(this.tag) {","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"            return \"[X]\";","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        else {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"            return \"[]\";","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"        return this.tag() + \" |\" + taskName + \"|\";","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"leonpoh":32}},{"path":"src/main/java/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"public class ToDos extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"    public ToDos(String taskName) {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"        super(taskName);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"leonpoh":11}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"leonpoh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"leonpoh":19}},{"path":"src/test/java/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package test.java.main;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import command.EventsCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import command.Bye;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import command.ListCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import main.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"class ParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"    void parserTest() throws DukeException  {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"bye\") instanceof Bye);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"done 2\") instanceof MarkCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"todo todo\") instanceof TodoCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"deadline deadline /by 25/07/2015 1500\") instanceof DeadlineCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"        assertTrue(parser.parse(\"event event /at 26/07/2014 1600\") instanceof EventsCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":31}},{"path":"src/test/java/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package test.java.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import task.Deadlines;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    void deadlineTestWithDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"        Deadlines test \u003d new Deadlines(\"deadline\", LocalDateTime.now());","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"        assertTrue(test.toString().contains(\"[D][] deadline\"), \"toString() method works\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"        test.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"        assertTrue(test.toString().contains(\"[D][X] deadline\"), \"markAsDone() method works\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":21}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"[T][] | borrow book|","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"[D][] | return book |(2000-10-02T18:00)","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"[E][] | project meeting |(2000-12-02T15:00 : 2000-12-02T15:00)","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"[T][] | borrow dildo|","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"leonpoh":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"todo borrow book","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"list","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"deadline return book /by 2/10/2000 1800","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"event project meeting /from 2/12/2000 1500 /to 2/13/2000 1600","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"todo borrow dildo","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"list","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"delete 3","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"leonpoh":7}}]
