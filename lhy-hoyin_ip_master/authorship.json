[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lhy-hoyin":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    mainClassName \u003d \"duke.Main\"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lhy-hoyin":22,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a Task with a due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Deadline with specified description and due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * @param by Due date of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Deadline with specified task status, description and due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     * @param isDone Status of the task (completed or not completed).","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * @param by Due date of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    public Deadline(boolean isDone, String description, LocalDateTime by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns the due date of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Due date of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    LocalDateTime getBy() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        return by;","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"     * Updates the due date of the task with specified dua date.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"     * @param by New due date of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    void setBy(LocalDateTime by) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    public String toCsv() {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        return \"D,\" + super.toCsv() + \",\" + by;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"                + \" (By: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"                + by.getDayOfMonth() + \" \" + by.getMonth() + \" \" + by.getYear() + \" \"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"                + by.getHour() + by.getMinute() // TODO: bugalert (may not always be 4-digits)","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"                + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lhy-hoyin":72}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" * Is the main class of the program.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    final TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    final Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    final Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public Duke() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        storage \u003d new Storage(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    private static void assertThis(boolean expectsTrue, String failureMessage) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        if (!expectsTrue) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"            throw new DukeException(failureMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    private void displayTaskCount() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"            ui.println(\"You do not have any task!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"            ui.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    private void displayTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"            ui.println(\"Your list is empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"            ui.println(\"You have the following task(s):\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"                ui.println(\"\\t\" + (i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    private void addNewTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        ui.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        ui.println(\"\\t\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        storage.saveDataToFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        displayTaskCount();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    void cli() {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        // Program Intro","lastModifiedDate":"2023-01-14"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        ui.println(\"Hello! I\u0027m Duke! :D\");","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        ui.println(\"What can I do for you today?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        //Initialise variables used inside the program loop","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        int taskIdx;","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        int descIdx;","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        Task activeTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        String cmd;","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"        String userCmd;","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        String taskDescription;","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        String[] inputs;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        // Program Loop","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"        while (isContinue) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"            System.out.print(\"\\n \u003e \");","lastModifiedDate":"2023-01-14"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"            userCmd \u003d sc.nextLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"            // Suppress all upper case letters, gets only the first word","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"            cmd \u003d userCmd.toLowerCase().split(\" \")[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"            try {","lastModifiedDate":"2023-01-15"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"                // State handling","lastModifiedDate":"2023-01-14"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"                switch (cmd) {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"                    taskDescription \u003d userCmd.substring(4).trim(); // exclude keyword","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"                    activeTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"                    addNewTask(activeTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"                    // Checks for missing due date","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(userCmd.contains(\" /by \"), \"Missing due date.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"                    descIdx \u003d userCmd.indexOf(\"deadline \"); // 9 chars","lastModifiedDate":"2023-01-15"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"                    int dueIdx \u003d userCmd.indexOf(\" /by \"); // 5 chars","lastModifiedDate":"2023-01-15"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis((descIdx + 9) \u003c dueIdx, \"Task description cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"                    taskDescription \u003d userCmd.substring(descIdx + 9, dueIdx).trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"                    String duedate \u003d userCmd.substring(dueIdx + 5).trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(!taskDescription.isEmpty(), \"Task description cannot be empty.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(!duedate.isEmpty(), \"Due date cannot be empty.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"                    addNewTask(new Deadline(taskDescription, parser.parseDateTime(duedate)));","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"                case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"                    // Checks for missing inputs","lastModifiedDate":"2023-01-15"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(userCmd.contains(\" /from \"), \"Missing start date/time.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(userCmd.contains(\" /to \"), \"Missing end date/time.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"                    descIdx \u003d userCmd.indexOf(\"event \"); // 6 chars","lastModifiedDate":"2023-01-15"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"                    int fromIdx \u003d userCmd.indexOf(\" /from \"); // 7 chars","lastModifiedDate":"2023-01-15"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"                    int toIdx \u003d userCmd.indexOf(\" /to \"); // 5 chars","lastModifiedDate":"2023-01-15"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis((descIdx + 6) \u003c fromIdx, \"Task description cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis((fromIdx + 7) \u003c toIdx, \"Start date/time cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"                    taskDescription \u003d userCmd.substring(descIdx + 6, fromIdx).trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"                    String start \u003d userCmd.substring(fromIdx + 7, toIdx).trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"                    String end \u003d userCmd.substring(toIdx + 5).trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(!taskDescription.isEmpty(), \"Task description cannot be empty.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(!start.isEmpty(), \"Start date/time cannot be empty.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(!end.isEmpty(), \"End date/time cannot be empty.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":136,"author":{"gitId":"lhy-hoyin"},"content":"                    addNewTask(new Event(","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"                            taskDescription,","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"lhy-hoyin"},"content":"                            parser.parseDateTime(start),","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"lhy-hoyin"},"content":"                            parser.parseDateTime(end))","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"lhy-hoyin"},"content":"                    );","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":142,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":143,"author":{"gitId":"lhy-hoyin"},"content":"                case \"ls\":","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"lhy-hoyin"},"content":"                case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"lhy-hoyin"},"content":"                    displayTasks();","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":147,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":148,"author":{"gitId":"lhy-hoyin"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"lhy-hoyin"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"lhy-hoyin"},"content":"                    boolean isMark \u003d cmd.compareTo(\"mark\") \u003d\u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"lhy-hoyin"},"content":"                    inputs \u003d userCmd.split(\" \");","lastModifiedDate":"2023-01-15"},{"lineNumber":153,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(inputs.length \u003e 1, \"Please indicate which task(s) to apply to.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":154,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":155,"author":{"gitId":"lhy-hoyin"},"content":"                    if (isMark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"lhy-hoyin"},"content":"                        ui.println(\"Nice I\u0027ve marked the task(s) as done:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"lhy-hoyin"},"content":"                    } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"lhy-hoyin"},"content":"                        ui.println(\"OK, I\u0027ve marked the task(s) as not done yet:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"lhy-hoyin"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":161,"author":{"gitId":"lhy-hoyin"},"content":"                    for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":162,"author":{"gitId":"lhy-hoyin"},"content":"                        String input \u003d inputs[i].trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":163,"author":{"gitId":"lhy-hoyin"},"content":"                        if (input.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"lhy-hoyin"},"content":"                            continue; // Blank, do nothing","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"lhy-hoyin"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":167,"author":{"gitId":"lhy-hoyin"},"content":"                        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":168,"author":{"gitId":"lhy-hoyin"},"content":"                            taskIdx \u003d Integer.parseInt(inputs[i]) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":169,"author":{"gitId":"lhy-hoyin"},"content":"                            Duke.assertThis(taskIdx \u003e\u003d 0 \u0026\u0026 taskIdx \u003c taskList.size(), \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":170,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":171,"author":{"gitId":"lhy-hoyin"},"content":"                            activeTask \u003d taskList.get(taskIdx);","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"lhy-hoyin"},"content":"                            activeTask.setDone(isMark); // Note: false means unmark","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"lhy-hoyin"},"content":"                            storage.saveDataToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":174,"author":{"gitId":"lhy-hoyin"},"content":"                            ui.println(\"\\t\" + activeTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":175,"author":{"gitId":"lhy-hoyin"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"lhy-hoyin"},"content":"                            ui.warn(\"\u0027\" + input + \"\u0027 is not a number.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":177,"author":{"gitId":"lhy-hoyin"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"lhy-hoyin"},"content":"                            ui.warn(\"Task \" + Integer.parseInt(inputs[i]) + \" does not exist.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"lhy-hoyin"},"content":"                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":180,"author":{"gitId":"lhy-hoyin"},"content":"                    } // for loop","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":182,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":183,"author":{"gitId":"lhy-hoyin"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"lhy-hoyin"},"content":"                    inputs \u003d userCmd.split(\" \");","lastModifiedDate":"2023-01-15"},{"lineNumber":185,"author":{"gitId":"lhy-hoyin"},"content":"                    Duke.assertThis(inputs.length \u003e 1, \"Please indicate which task(s) to apply to.\");","lastModifiedDate":"2023-01-15"},{"lineNumber":186,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":187,"author":{"gitId":"lhy-hoyin"},"content":"                    ArrayList\u003cInteger\u003e markedDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-15"},{"lineNumber":188,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":189,"author":{"gitId":"lhy-hoyin"},"content":"                    // Check and note what to delete","lastModifiedDate":"2023-01-15"},{"lineNumber":190,"author":{"gitId":"lhy-hoyin"},"content":"                    for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":191,"author":{"gitId":"lhy-hoyin"},"content":"                        String input \u003d inputs[i].trim();","lastModifiedDate":"2023-01-15"},{"lineNumber":192,"author":{"gitId":"lhy-hoyin"},"content":"                        if (input.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":193,"author":{"gitId":"lhy-hoyin"},"content":"                            continue; // Blank, do nothing","lastModifiedDate":"2023-01-27"},{"lineNumber":194,"author":{"gitId":"lhy-hoyin"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":195,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":196,"author":{"gitId":"lhy-hoyin"},"content":"                        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":197,"author":{"gitId":"lhy-hoyin"},"content":"                            // Parse input to int","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"lhy-hoyin"},"content":"                            taskIdx \u003d Integer.parseInt(inputs[i]) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":199,"author":{"gitId":"lhy-hoyin"},"content":"                            Duke.assertThis(taskIdx \u003e\u003d 0 \u0026\u0026 taskIdx \u003c taskList.size(), \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":200,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":201,"author":{"gitId":"lhy-hoyin"},"content":"                            markedDelete.add(taskIdx);","lastModifiedDate":"2023-01-15"},{"lineNumber":202,"author":{"gitId":"lhy-hoyin"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":203,"author":{"gitId":"lhy-hoyin"},"content":"                            ui.warn(\"\u0027\" + input + \"\u0027 is not a number.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":204,"author":{"gitId":"lhy-hoyin"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":205,"author":{"gitId":"lhy-hoyin"},"content":"                            ui.warn(\"Task \" + Integer.parseInt(inputs[i]) + \" does not exist.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":206,"author":{"gitId":"lhy-hoyin"},"content":"                        }","lastModifiedDate":"2023-01-15"},{"lineNumber":207,"author":{"gitId":"lhy-hoyin"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":208,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":209,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.println(\"Noted. I\u0027ve removed the task(s):\");","lastModifiedDate":"2023-01-30"},{"lineNumber":210,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":211,"author":{"gitId":"lhy-hoyin"},"content":"                    // Actual delete from tasklist (start from the back)","lastModifiedDate":"2023-01-15"},{"lineNumber":212,"author":{"gitId":"lhy-hoyin"},"content":"                    Collections.sort(markedDelete);","lastModifiedDate":"2023-01-15"},{"lineNumber":213,"author":{"gitId":"lhy-hoyin"},"content":"                    Collections.reverse(markedDelete);","lastModifiedDate":"2023-01-15"},{"lineNumber":214,"author":{"gitId":"lhy-hoyin"},"content":"                    for (int i : markedDelete) {","lastModifiedDate":"2023-01-27"},{"lineNumber":215,"author":{"gitId":"lhy-hoyin"},"content":"                        ui.println(\"\\t\" + taskList.remove(i));","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"lhy-hoyin"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":217,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":218,"author":{"gitId":"lhy-hoyin"},"content":"                    storage.saveDataToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":219,"author":{"gitId":"lhy-hoyin"},"content":"                    displayTaskCount();","lastModifiedDate":"2023-01-30"},{"lineNumber":220,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":221,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":222,"author":{"gitId":"lhy-hoyin"},"content":"                case \"find\":","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"lhy-hoyin"},"content":"                    String searchWords \u003d userCmd.substring(4).trim(); // exclude keyword","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"lhy-hoyin"},"content":"                    ArrayList\u003cTask\u003e matches \u003d taskList.search(searchWords);","lastModifiedDate":"2023-01-30"},{"lineNumber":225,"author":{"gitId":"lhy-hoyin"},"content":"                    if (matches.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":226,"author":{"gitId":"lhy-hoyin"},"content":"                        ui.println(\"Sorry, no match found.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":227,"author":{"gitId":"lhy-hoyin"},"content":"                        break;","lastModifiedDate":"2023-01-26"},{"lineNumber":228,"author":{"gitId":"lhy-hoyin"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":230,"author":{"gitId":"lhy-hoyin"},"content":"                    for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"lhy-hoyin"},"content":"                        ui.println(\"\\t\" + (i + 1) + \". \" + matches.get(i));","lastModifiedDate":"2023-01-30"},{"lineNumber":232,"author":{"gitId":"lhy-hoyin"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":233,"author":{"gitId":"lhy-hoyin"},"content":"                    // TODO: since index is separate from the actual tasklist, user might un/mark/delete wrong idx","lastModifiedDate":"2023-01-30"},{"lineNumber":234,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"lhy-hoyin"},"content":"                case \"save\":","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"lhy-hoyin"},"content":"                    storage.saveDataToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":238,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.println(\"Your list have been saved.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":239,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":241,"author":{"gitId":"lhy-hoyin"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"lhy-hoyin"},"content":"                case \"goodbye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"lhy-hoyin"},"content":"                case \":q\":","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"lhy-hoyin"},"content":"                case \"quit\":","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"lhy-hoyin"},"content":"                case \"quit()\":","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"lhy-hoyin"},"content":"                case \"exit\":","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"lhy-hoyin"},"content":"                case \"exit()\":","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.println(\"Saving your list ... \");","lastModifiedDate":"2023-01-30"},{"lineNumber":249,"author":{"gitId":"lhy-hoyin"},"content":"                    storage.saveDataToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":250,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.println(\"Goodbye!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":251,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.printBufferLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":252,"author":{"gitId":"lhy-hoyin"},"content":"                    Ui.printProgramInfo();","lastModifiedDate":"2023-01-26"},{"lineNumber":253,"author":{"gitId":"lhy-hoyin"},"content":"                    isContinue \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":254,"author":{"gitId":"lhy-hoyin"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":255,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":256,"author":{"gitId":"lhy-hoyin"},"content":"                default:","lastModifiedDate":"2023-01-14"},{"lineNumber":257,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.warn(\"Sorry, I don\u0027t understand your request :(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":258,"author":{"gitId":"lhy-hoyin"},"content":"                    ui.println(\"Did you spell something wrongly?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":259,"author":{"gitId":"lhy-hoyin"},"content":"                } // switch case","lastModifiedDate":"2023-01-27"},{"lineNumber":260,"author":{"gitId":"lhy-hoyin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":261,"author":{"gitId":"lhy-hoyin"},"content":"                ui.warn(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":262,"author":{"gitId":"lhy-hoyin"},"content":"            } catch (RuntimeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":263,"author":{"gitId":"lhy-hoyin"},"content":"                ui.warn(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":264,"author":{"gitId":"lhy-hoyin"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"lhy-hoyin"},"content":"        } // Program while loop","lastModifiedDate":"2023-01-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":268,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":269,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":270,"author":{"gitId":"lhy-hoyin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":271,"author":{"gitId":"lhy-hoyin"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2023-01-30"},{"lineNumber":272,"author":{"gitId":"lhy-hoyin"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2023-01-30"},{"lineNumber":273,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":274,"author":{"gitId":"lhy-hoyin"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-01-30"},{"lineNumber":275,"author":{"gitId":"lhy-hoyin"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-01-30"},{"lineNumber":276,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lhy-hoyin":275,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Is an extension of Exception to indicate exceptions specific to duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" * Reference:","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * \u003ca href\u003d\"https://www.baeldung.com/java-new-custom-exception\"\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" *     Baeldung - Create a Custom Exception in Java\u003c/a\u003e.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a new duke-specific exception with the specified detail message.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * @param errorMessage Details of the error.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a new duke-specific exception with the specified detail message and cause.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * @param errorMessage Details of the error.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * @param err The cause of the error.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        super(errorMessage, err);","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lhy-hoyin":30}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a Task with a start and end time.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Event with specified description, start and end time.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     * @param from Start time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"     * @param to End time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Event with specified task status, description, start and end time.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     * @param isDone Status of the task (completed or not completed).","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     * @param from Start time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"     * @param to End time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public Event(boolean isDone, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns the start time of this Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Start time of event.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    LocalDateTime getFrom() {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        return from;","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     * Updates the start time of this Event with specified start time.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * @param from New start time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"    void setFrom(LocalDateTime from) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"     * Return the end time of this Event.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"     * @return End time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    LocalDateTime getTo() {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        return to;","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"     * Updates the end time of this Event with specified end time.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"     * @param to New end time of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"    void setTo(LocalDateTime to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"    public String toCsv() {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"        return \"E,\" + super.toCsv() + \",\"","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"                + from + \",\" + to;","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-15"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"                + \" (From: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"                + from.getDayOfMonth() + \" \" + from.getMonth() + \" \" + from.getYear() + \" \"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"                + from.getHour() + from.getMinute() // TODO: bugalert (may not always be 4-digits)","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"                + \" To: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"                + to.getDayOfMonth() + \" \" + to.getMonth() + \" \" + to.getYear() + \" \"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"                + to.getHour() + to.getMinute() // TODO: bugalert (may not always be 4-digits)","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"                + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lhy-hoyin":99}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Main entry point of the program.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class Main {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    private enum Flag {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        CLI_MODE,","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        NO_LOAD_SAVES,","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"     * Uses varargs given via program to set flags to determine the behaviour of the application.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * @param varargs Variable number of arguments provided by the program.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * @return List of known flags detected.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    private static ArrayList\u003cFlag\u003e processVarArgs(String[] varargs) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        ArrayList\u003cFlag\u003e flags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        // Process varargs, if any","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        for (int i \u003d 0; i \u003c varargs.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"            if (varargs[i].compareTo(\"--cli\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"                flags.add(Flag.CLI_MODE);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"            } else if (varargs[i].compareTo(\"--no-load-saves\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"                flags.add(Flag.NO_LOAD_SAVES);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        return flags;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"     * Is the entry point of the application.","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"     * @param args Arguments provided through the console when running the program.","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        Ui.printProgramInfo();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        System.out.println(\"Initialising system . . .\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        // Process varargs for flags","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        ArrayList\u003cFlag\u003e flags \u003d processVarArgs(args);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        //Initialise components","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        // Retrieve saved data (if any)","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        if (!flags.contains(Flag.NO_LOAD_SAVES)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"            duke.storage.loadDataFromFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        System.out.println(\"System is ready!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        duke.ui.println(\"\\n\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        duke.ui.printBufferLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        if (flags.contains(Flag.CLI_MODE)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"            duke.cli();","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"            duke.ui.println(\"Launching GUI ...\");","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"            TODO: Application.launch(Duke.class, args);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lhy-hoyin":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a Parser to parse date and time.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Parser.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public Parser() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        // Empty","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a string representation of a date into LocalDate.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * Expects input to be formatted as \"YYYY-MM-DD\" (fixed to \"-\" seperator).","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * TODO: need to catch exceptions","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     * @param dateStr String representation of a date.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Date in a LocalDate instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    private LocalDate parseDate(String dateStr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        return LocalDate.parse(dateStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a string representation of a date into LocalDate.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"     * Expects input to be formatted as \"YYYY-MM-DD\" but seperator is arbitrary.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * Arbitrary seperator needs to be specified.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * TODO: need to catch exceptions","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"     * @param dateStr String representation of a date.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"     * @param seperator Seperator used to separate the day, month, year.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Date in a LocalDate instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    private LocalDate parseDate(String dateStr, char seperator) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        String[] date \u003d dateStr.split(String.valueOf(seperator));","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        int[] dateInfo \u003d Stream.of(date).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        return LocalDate.of(dateInfo[0], dateInfo[1], dateInfo[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a string representation of a time into LocalTime.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     * Expects input to be formatted as \"HH:MM:SS\" or \"HH:MM\" (fixed to \u0027:\u0027 seperator).","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"     * TODO: need to catch exceptions","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * @param timeStr String representation of a time.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Time in a LocalTime instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    private LocalTime parseTime(String timeStr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        return LocalTime.parse(timeStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a string representation of a time into LocalTime.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"     * Expects input to be formatted as \"HH:MM:SS\" or \"HH:MM\" but seperator is arbitrary.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"     * Arbitrary seperator needs to be specified.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"     * TODO: need to catch exceptions","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"     * @param timeStr String representation of a time.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"     * @param seperator Seperator used to separate the hour, minute, (second).","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Time in a LocalTime instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"    private LocalTime parseTime(String timeStr, char seperator) {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        String[] time \u003d timeStr.split(String.valueOf(seperator));","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        int[] timeInfo \u003d Stream.of(time).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        if (timeInfo.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"            return LocalTime.of(timeInfo[0], timeInfo[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"            return LocalTime.of(timeInfo[0], timeInfo[1], timeInfo[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a string representation of a date and time into LocalDateTime.","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     * Expects input to be formatted as \"YYYY-MM-DD HH:MM:SS\" or \"YYYY-MM-DD HH:MM\" (fixed to \u0027 \u0027 seperator).","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     * @param str String representation of a date \u0026 time.","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Date and time in a LocalDateTime instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"    public LocalDateTime parseDateTime(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        return parseDateTime(str, \u0027 \u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a string representation of a date and time into LocalDateTime.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"     * Expects input to be formatted as \"YYYY-MM-DD HH:MM:SS\" or \"YYYY-MM-DD HH:MM\" but seperator is arbitrary.","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"     * Arbitrary seperator (between date and time) needs to be specified.","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     * @param str String representation of a date \u0026 time.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * @param seperator Character separating the date and time.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Date and time in a LocalDateTime instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"    public LocalDateTime parseDateTime(String str, char seperator) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"        String[] s \u003d str.split(String.valueOf(seperator));","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        return LocalDateTime.of(parseDate(s[0]), parseTime(s[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"lhy-hoyin":105}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import duke.storage.Storable;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" * Abstract - cannot be instantiated; serves as template.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * Have to be Storable","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"public abstract class Task implements Storable {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a Task with specified description.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a Task with specified task status and description.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * @param isDone Status of the task (completed or not completed)","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns description of this Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Description of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        return description;","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns task status of this Task. (Completed/Uncompleted)","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"     * @return task status.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    boolean isDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        return isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * Updates the task status with specified status.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"     * @param isDone Has the task been completed?","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    void setDone(boolean isDone) {","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    public String toCsv() {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        return (isDone ? \"true\" : \"false\") + \",\" + description;","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        return \"[\" + (isDone ? \"√\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-01-15"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lhy-hoyin":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a collection of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a TaskList instance.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     * Adds a Task to this TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * @return true (as specified by ArrayList.add).","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        return tasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Removes the Task at specified index.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"     * @param idx Index of the Task to be removed.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"     * @return The Task that was removed from TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    public Task remove(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        if (idx \u003c 0 || idx \u003e tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"            // out of bounds","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        return tasks.remove(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"     * Removes all Task from the TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public void removeAllTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Consolidates all the String representation of every Task in TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * Each representation is separated by a newline.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * Representation is specified by \u003ccode\u003eStorable\u003c/code\u003e.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"     * @return String representation of all the Task in this TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public String prepareFileSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"            sb.append(t.toCsv()).append(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a list of Task in this TaskList which Task description contains the specified search words.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"     * @param searchStr String of words to search for in the Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"     * @return List of matching Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"    public ArrayList\u003cTask\u003e search(String searchStr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"            if (t.description.contains(searchStr)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"                results.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        return results;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns the Task from this TaskList at the specified index.","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"     * @param idx Index of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     * @return Task at the specified position.","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"    public Task get(int idx) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"     * Return the number of Task in this TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     * @return The number of Task in this TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if this TaskList contains no Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"     * @return true if this TaskList contains no Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"lhy-hoyin":110}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a Task with no due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Todo with specified description.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        super(description);","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Todo with specified task status and description.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     * @param isDone Status of the task (completed or not completed).","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        super(isDone, description);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    public String toCsv() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        return \"T,\" + super.toCsv();","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lhy-hoyin":43}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Customised how messages are printed to console.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    /** Name of the program developer. */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String AUTHOR \u003d \"lhy-hoyin\";","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    /** Printable of the program name. */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String LOGO \u003d \"\"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"            + \" ____        _\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Ui.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        // Empty","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * Prints specified message to console and move cursor to next line.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * Similar to System.out.println.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * @param message Details of message to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void println(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     * Prints specified warning to console and move cursor to next line.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"     * Message is prepended with a \"OOPS!\" to indicate that something unexpected","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"     * has happened.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"     * @param message Details of warning to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    public void warn(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        System.out.println(\"OOPS! \" + message);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"     * Prints the program logo and developer name.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"     * Static context allows this to be printed even more an instance has been initialized.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    static void printProgramInfo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        System.out.println(\"Developed by: \" + AUTHOR);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     * Prints a buffer line.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    void printBufferLine() {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"lhy-hoyin":63}},{"path":"src/main/java/duke/storage/Storable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Provide a interface standard for objects that are meant to be stored in file.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" * Similar to Java\u0027s `Serializable` interface.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"public interface Storable {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a string representation of this object.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"     * Attributes of this object should be separated by commas.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"     * @return String of an object.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    String toCsv();","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"lhy-hoyin":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import duke.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import duke.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import duke.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":" * Handles read and write of the (storable) taskList to/from file.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    /** Relative path of save file. */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String TASKS_FILE_PATH \u003d \"./data/duke/tasks.csv\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs instance of Storage using a reference to a TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * Read/write is relative to this taskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * @param taskList Reference to a TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        this.tasklist \u003d taskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     * Writes the data of TaskList to file.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    public void saveDataToFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        // Prepare data into string format for saving","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        String fileDataStr \u003d tasklist.prepareFileSave();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        // Write to file","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        writeToFile(TASKS_FILE_PATH, fileDataStr);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"     * Reads save file and put them into the referenced TaskList.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     * Does nothing if save file does not exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    public void loadDataFromFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        Path f \u003d Paths.get(TASKS_FILE_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        // No saved data file, do nothing","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        if (!Files.exists(f)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"            return;","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        // Purge taskList","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        tasklist.removeAllTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"            BufferedReader br \u003d Files.newBufferedReader(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"            String currentLine;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"            while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"                String[] taskInfo \u003d currentLine.split(\",\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"                if (taskInfo[0].compareTo(\"T\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"                    tasklist.add(new Todo(","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"                            Boolean.parseBoolean(taskInfo[1]),","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"                            taskInfo[2]));","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"                } else if (taskInfo[0].compareTo(\"D\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"                    tasklist.add(new Deadline(","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"                            Boolean.parseBoolean(taskInfo[1]),","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"                            taskInfo[2],","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"                            parser.parseDateTime(taskInfo[3], \u0027T\u0027)));","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"                } else if (taskInfo[0].compareTo(\"E\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"                    tasklist.add(new Event(","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"                            Boolean.parseBoolean(taskInfo[1]),","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"                            taskInfo[2],","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"                            parser.parseDateTime(taskInfo[3], \u0027T\u0027),","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"                            parser.parseDateTime(taskInfo[4], \u0027T\u0027)));","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"            } // while loop","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"            new Ui().warn(\"Corrupt data. Cannot load from file.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * Writes specified file content to specified file path.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"     * @param filePath Where to write to file.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"     * @param fileContent What to write to file.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"    private void writeToFile(String filePath, String fileContent) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"            Path f \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"            Files.createDirectories(f.getParent()); // Create directory (if not exist)","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"            if (!Files.exists(f)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"                Files.createFile(f); // Create non-existing file","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"            Files.writeString(f, fileContent); // Write to file","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"lhy-hoyin":115}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" * Contains test for Parser class","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"class ParserTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    void parseDateTime_spaceSeperator_success() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        final LocalDate eDate \u003d LocalDate.of(2020, 2, 20);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        final LocalTime eTime \u003d LocalTime.of(23, 12, 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        final LocalDateTime expected \u003d LocalDateTime.of(eDate, eTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, parser.parseDateTime(\"2020-02-20 23:12:01\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    void parseDateTime_arbitrarySeperator_success() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        final LocalDate eDate \u003d LocalDate.of(2020, 2, 20);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        final LocalTime eTime \u003d LocalTime.of(23, 12, 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        final LocalDateTime expected \u003d LocalDateTime.of(eDate, eTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, parser.parseDateTime(\"2020-02-20T23:12:01\", \u0027T\u0027));","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, parser.parseDateTime(\"2020-02-20!23:12:01\", \u0027!\u0027));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, parser.parseDateTime(\"2020-02-20~23:12:01\", \u0027~\u0027));","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, parser.parseDateTime(\"2020-02-20/23:12:01\", \u0027/\u0027));","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lhy-hoyin":38}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" * Contains test for Ui class","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * Reference: https://www.baeldung.com/java-testing-system-out-println","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"public class UiTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    void setUp() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    /* // assert fails even though file comparison says its identical","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    void printProgramLogo_staticContext_success() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        String expected","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"                \u003d \" ____        _\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"                + \"Developed by: lhy-hoyin\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        Ui.printProgramInfo();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, outputStreamCaptor.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    /**/","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    void println() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        ui.println(\"Testing println() function\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"Testing println() function\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    void warn() {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        ui.warn(\"Testing warn() function\");","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"OOPS! Testing warn() function\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    @AfterEach void tearDown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lhy-hoyin":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"todo read book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"unmark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"exit","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lhy-hoyin":10}}]
