{"authorDailyContributionsMap":{"lhy-hoyin":[{"date":"2023-01-14","commitResults":[{"hash":"92c62dd22758681b22b922424c6d728a76062b1b","messageTitle":"Implemented skeletal working version to start, run (echo user input), and exit program.","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":6}}},{"hash":"63c9049de8e93294a3119e740e5ad703093aed76","messageTitle":"Added chatbot customisation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":22}}},{"hash":"287c290a883dc67bca2d91d2096385b135b01515","messageTitle":"Fixed bug where program does not truly exits upon saying \"bye\". Extracted out command detection. Added new UNKNOWN state.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":12}}},{"hash":"b41bcae9e3b3f8ef3268f114104f8fb76a55e112","messageTitle":"Added support for various exit keywords. Adjusted program loop exiting.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":18}}},{"hash":"db6923a20615e2ca188c3255a1c98706a362ce89","messageTitle":"Implemented list feature (detect state, add to list, read from list). Added LIST state, Changed EHCO state to ADD State. Enhanced state detection (lower first, first word only).","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":6}}}]},{"date":"2023-01-15","commitResults":[{"hash":"7d6fdd46e7f32633b6cb12d832775442e4e406ce","messageTitle":"Enforced requirement of a \"add\" keyword for adding to list.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"ee7ec5933d95d70a2960f656620684438398e500","messageTitle":"Converted ArrayList\u003cString\u003e to ArrayList\u003cTask\u003e","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":5}}},{"hash":"3fed8253ca67405e61165b17496a945f86bcf241","messageTitle":"Added functionality for marking and marking task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":2}}},{"hash":"7f4d35fdf53da3cad155dae39844f3d7e1fa966a","messageTitle":"Optimised \u0026 merged mark and unmark code. Added comments for future exceptions to watch for.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":16}}},{"hash":"0460142b72f97ac76314e6fe8046934e5fcdf863","messageTitle":"Implemented subclasses of Task (Todo, Deadline, Event)","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":2}}},{"hash":"ed51256d12724b605207262c15c0d50fbe46a7f3","messageTitle":"Updated \"add\" to \"todo\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":8}}},{"hash":"6262c18fdd8832cb5084b09d81de331978e07ed5","messageTitle":"Updated UI message for todo task, extracted certain print message into functions.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":16}}},{"hash":"3552b7ed5e7a9c678589fb789a0129c4f5697f0b","messageTitle":"Implemented support for deadline- and event- typed tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":10}}},{"hash":"73f56307e5d35a2b4d86d7c03b769ed7865efc43","messageTitle":"minor changes (added comments, moved State into `Duke` class)","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":20}}},{"hash":"490d09e84c821b575960c8b4ebb69c19f4a4cc8e","messageTitle":"Added automated testing for UI (note, user input is not part of expected output). Had to clean up ending space of the logo","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":2,"deletions":2}}},{"hash":"4fc596adc8269567fbffb7e86dc4057f1431e8fc","messageTitle":"Added DukeException class","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"0bae5ba2af23e35a0857beea5fa56b08cbea5e7b","messageTitle":"Implemented code to handle various exceptions.","messageBody":"","tags":["Level-5","C-MassOps","BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":73}}},{"hash":"cdd84ca1fa465584f92aa66de1a6718858514a8d","messageTitle":"Implemented functionality to delete task","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":8}}}]},{"date":"2023-01-17","commitResults":[{"hash":"47697477a7421575ce1d8e05b070c1d9bb67b15e","messageTitle":"Made Duke static methods private. Implemented default case for program loop.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":12}}}]},{"date":"2023-01-20","commitResults":[{"hash":"fef8237253267d3de9964d3125dd3d97d97470a6","messageTitle":"Move some Duke related methods from static context into a instance context","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":35}}},{"hash":"d3ef32d132f195750c82d107e6ed1702e112a629","messageTitle":"Implement basic writing of data (in CSV format) to data file upon task creation and program exit","messageBody":"To do:\n * implement reading from data file during program startup\n * save to file during mark/unmark/delete\n * extra: add a \"save\" command to allow user to save manually\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"b8828f63ef1a76ad829478e6f16dac4f960173bc","messageTitle":"Implement data save upon mark/unmark/delete","messageBody":"Add \"save\" keyword to manually do data save\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"8c9f3c66621b1d124b463b81c56ee23f5f88f402","messageTitle":"Implement loading of data from file Overload constructors for Task (and children classes) for isDone Change the file save data for isDone attribute","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":7}}}]},{"date":"2023-01-24","commitResults":[{"hash":"69a3cea94d0e9cc90d655723ebdf2e54a226fcf1","messageTitle":"Implement parsing to Local Date/Time/DateTime for specific String format","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"eb3050801c57e3e938f6e4264c32694e62dd0058","messageTitle":"Provide alternative implementation for parsing date and time using built-in parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"8027dead6f4a297abe55217fdf2a1aa12ac59a3e","messageTitle":"Update Deadline and Event class to store in LocalDateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":15}}}]},{"date":"2023-01-25","commitResults":[{"hash":"a61dcf66cd4d5350f8dbcea8371a23b74656152f","messageTitle":"Organize the classes into suitable java packages (minimal)","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0},"md":{"insertions":1,"deletions":1}}}]},{"date":"2023-01-26","commitResults":[{"hash":"99012478f9b9278dd637b35501f2c459381140e3","messageTitle":"Refactor code to separate into more OOP classes Move storage related into its own package","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":284,"deletions":184}}},{"hash":"bb95e15b90b426b1038ae4c8a7cab1eec08ff647","messageTitle":"Convert detectState(..) to fully use switch case","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":23}}},{"hash":"f1a2a0b19b8576b5a313be81291f354e325b897b","messageTitle":"Remove enum State Merge detectState(..) switch case into main program loop","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":141,"deletions":182}}},{"hash":"340a113ad6ddf345875963a79e74bc334a05a23f","messageTitle":"Delegate task parameters parsing to TaskList when adding task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":23}}},{"hash":"01dda1b66ab3d319d5e4ba56a2b53d9088d1be3a","messageTitle":"no message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":15}}},{"hash":"4dae771cbffb8787cacebd088e476b7b51b92dbb","messageTitle":"Remove getInner() function that violates OOP concepts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":10}}},{"hash":"013fc8bc4d612a85d8badc6315e281d173e06adb","messageTitle":"Separate writeToFile functionality from saveDataToFile()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":15}}},{"hash":"ea54f3c4167afdb759bf5d4fbca40b2fd2451e42","messageTitle":"Reverse commit #340a113","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":34}}},{"hash":"32c159b7533799c5b446215e1d4591b72f6b498a","messageTitle":"Make duke components final","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":10}}},{"hash":"6b81d501433c8e4f065234feb7f6265b51287998","messageTitle":"Add parsing date/time with arbitrary separator","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":17}}},{"hash":"03fe10331269e7c7f7f3a4576e5c4b7ab090511e","messageTitle":"Use gradle to build and run Duke (Minimal)","messageBody":"","tags":["A-Jar","A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"ddfe8aed0b869c749dbcaee7cc360ec57dbe10a1","messageTitle":"Implement find function to look for a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}}]},{"date":"2023-01-27","commitResults":[{"hash":"61f8904e0d542124e650cb649cb395607efc543f","messageTitle":"Added JavaDocs for all classes and most methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":307,"deletions":14}}},{"hash":"bf2fecf13e8d4d61c6aa79a78e3c10a3fbbb6530","messageTitle":"Adds bounds checking when removing Task from TaskList Changes some access modifiers Renames displayLine() printBufferLine() Reorders import statements in Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"7b230519a4d9a95f4c212ab24547e2872ed01020","messageTitle":"Conforms code to coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":48}}},{"hash":"0d9e319ae51dcc0bb4cfd6c8ca01b5802b3a7941","messageTitle":"Adds punctuation behind each parameter description","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":80}}},{"hash":"c06c9e5bcd5fc4aec3795dc213cb06ee93304c61","messageTitle":"Add JUnit Test for Parser and Ui","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":0}}}]},{"date":"2023-01-29","commitResults":[{"hash":"bf82be3118f6b6abadbd723cdecf90f0f3248700","messageTitle":"Use Checkstyle with Gradle Checkstyle configuration from AddressBook Level 3 project","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"496dcbc174511e28b30832c4ee4782cb6959942d","messageTitle":"Enforce coding standards flagged by checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":41}}}]},{"date":"2023-01-30","commitResults":[{"hash":"c529bdeb1298324209b74dc896de99e50843b822","messageTitle":"Sets up multi-mode launching. Can launch in CLI mode (existing) or GUI mode (to be implemented).","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":1},"java":{"insertions":130,"deletions":61}}}]},{"date":"2023-02-05","commitResults":[{"hash":"c9dba7d153ba1ff7bb760172750fb8a76ff4dc31","messageTitle":"Implements a GUI that replaces the function of the console. GUI offers no additional features. GUI only provides a \"imaged\" view to simulate a conversation.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":47,"deletions":0},"java":{"insertions":361,"deletions":203}}},{"hash":"4eeca877951fdde0bede2fa7567de4303cc77a70","messageTitle":"Resolve some issues mentioned in PR reviews","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":45}}},{"hash":"6a76aa0bc45e81f0335167af822d1ae4d3bc93b7","messageTitle":"Add Javadoc for overridden Applications methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}}]},{"date":"2023-02-06","commitResults":[{"hash":"c126db3b93b94e4d72af9fa7c9e20ac08e193299","messageTitle":"Add assert statement to document important assumptions","messageBody":"Components of class instance are assumed to exist prior to usage.\n\nSuch assumptions may not hold true, since code changes may\nunknowingly remove such components.\n\nAssert statements helps to ensure that important assumptions\nholds at various points of the code.\n\nLet\u0027s add assert statements to ensure that components of the class\ninstance are not null before interaction with that component.\n\nUsing assert statements is preferable since the programmer is\nresponsible for the validity of the components.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"91327b998f94adee03f7f737ac220aef0c19100f","messageTitle":"Add assert statements to ensure string validity","messageBody":"Date/Time parser assumes string inputted is not null and contains\nsome non-whitespace text.\n\nExisting checks to ensure the string validity prior to\npassing/calling to parser may unknowing be modified or removed.\n\nLet\u0027s add assert statements to ensure the validity of the string\nbefore starting to parse.\n\nUsing assert statements here ensure the integrity of the string,\nand can prompt for proper user-input checks further up the\nabstraction.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"209392e7db263a63b0f53e7c11eb57761f0b211f","messageTitle":"Minor code changes","messageBody":"Rename some parameter, method, enum names.\nUpdate some javadocs/comments.\nRemove unused imports. Add import to use Flag enum directly.\nRefactor duke initialization in main.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":39}}},{"hash":"525e4abb7db4736a455f27a1376e033a7c724c96","messageTitle":"Fix bug issue where typing exit (or other keywords) into the GUI does not trigger the exiting behavior.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"4bb6aa39adb9f0065d274cbff109edea99a13997","messageTitle":"Add assert statement to document important assumptions","messageBody":"Components of class instance are assumed to exist prior to usage.\n\nSuch assumptions may not hold true, since code changes may\nunknowingly remove such components.\n\nAssert statements helps to ensure that important assumptions\nholds at various points of the code.\n\nLet\u0027s add assert statements to ensure that components of the class\ninstance are not null before interaction with that component.\n\nUsing assert statements is preferable since the programmer is\nresponsible for the validity of the components.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"45afb28a060a5cfd906feecf2948ed337c14de2f","messageTitle":"Abstract Task related classes into a .task sub-package","messageBody":"Task related classes are not categorized into its own sub-package.\n\nPutting the classes into its own sub-package provides better\norganization and abstraction.\n\nLet\u0027s move task related classes into its own .task sub-package.\nAccordingly, update access modifiers of methods of these classes.\n\nThis is related to A-MoreOOP and A-Packages in week 3 tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":18}}},{"hash":"654936d0ad23b074e0b873d76797669e9f388240","messageTitle":"Change toString() of tasks sub-classes to use String.format","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":14}}},{"hash":"9bbc07f755cf92acbb6fc2c2d2c2dc93f81fa864","messageTitle":"Fixed minor bug","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b38ce86e8ec3ea2812dd8dd17288127a9907f8bb","messageTitle":"Improve code quality by refactoring some code","messageBody":"Code may be generally hard to read or have unsafe practices.\n\nLet\u0027s improve code quality through the following refactors:\n* Abstract inline method call\n* Clarify and improve code comments\n* Consolidate duplicate conditional fragments\n* Remove unused variables and code blocks\n* Rename method name for more clarity\n* Replacing magic literals\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":59}}},{"hash":"07756c489203f705b1b856c38ef69ffd231438a4","messageTitle":"Add assert statements to ensure string validity","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2023-02-07","commitResults":[{"hash":"946a224cb9eefd92f37ec7866e087ed63218a242","messageTitle":"Replace Magic Literal, Add \"default\" branch, Add javadocs comments.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}}]},{"date":"2023-02-08","commitResults":[{"hash":"3d312c46c2585c9a25755fb85cdc4825c486ac02","messageTitle":"Spilt Duke.executeCommand into sub-packaged classes","messageBody":"Duke.executeCommand is a very long method (~180 LoC).\n\nA long method makes it very hard to debug, and will become a even\nbigger problem as more features are added.\n\nLet\u0027s\n* extract method\n* functionally split the method into various classes\n\nBy using classes, additional features would just add more classes,\nhence reduce code clutter.\n\nSome other methods were modified to keep the program features\nworking. Implementation of some methods where improved.\n","fileTypesAndContributionMap":{"java":{"insertions":526,"deletions":241}}},{"hash":"f97ab1c7b7865b4fb3e61bb45d5bf0bcc1d004e4","messageTitle":"Added java docs, enforced checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":185,"deletions":17}}}]}]},"authorFileTypeContributionMap":{"lhy-hoyin":{"java":1856,"md":1,"fxml":47,"sh":0,"bat":0,"gradle":22,"txt":10}},"authorContributionVariance":{"lhy-hoyin":102481.13},"authorDisplayNameMap":{"lhy-hoyin":"CS2103-W17-3 LO H.. YIN"}}
