[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"        };","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"                dateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"                    date \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"                } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"                    // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"        // If date or dateTime is still null, input is in invalid format","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"        if (date \u003d\u003d null \u0026\u0026 dateTime \u003d\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"            throw new DukeException.InvalidDateException(\"Reenter date in this format: (ddMMyyyy) or (ddMMyyyy HHmm).\");","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"            this.dateTime \u003d date.atStartOfDay().plusDays(1).minusNanos(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"        return dateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isAfter(dateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"    public boolean isUpcoming() {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isBefore(dateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"        String deadline \u003d this.dateTime.format(formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":69}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    public enum Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"        // Fixed number of commands","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"        TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"), MARK(\"mark\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"        UNMARK(\"unmark\"), DELETE(\"delete\"), LIST(\"list\"), BYE(\"bye\"), FILTERDATE(\"filterdate\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"        private final String command;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        Command(String command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"            this.command \u003d command;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"        public String getCommand() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"            return command;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"    public static void main(String[] args) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"        String logo \u003d \"  /\\\\_/\\\\\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"                + \" /\\u25DE   \\u25DF\\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"                + \"( \\u25d5   \\u25d5 )\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"                + \" \\\\     /\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"                + \"  \\\\   /\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"                + \"   \\\\ /\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"                + \"    \\u25CF\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"        System.out.println(logo + \"BorzAI\\n\"); // Intro","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"        System.out.println(\"\\tWhen all I do is for you, Kermie \\u2665\\n\" // Greeting","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"                + \"\\tWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // Create list","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"            tasks \u003d storage.loadTasks();","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"            System.out.println(\"\\t\" + e);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Allow user input","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"        while (true) {","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"            String[] parts \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"            Task t \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"            int index;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"                Command command \u003d Command.valueOf(parts[0].trim().toUpperCase());","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"                switch (command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"                    case BYE: // Exit","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"                    case LIST: // Display list","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"                            t \u003d tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"                            index \u003d i + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"                            if (i \u003d\u003d tasks.size() - 1) { // Last item","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"                                System.out.println(\"\\t\" + index + \".\" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"                                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"                            }","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"                            System.out.println(\"\\t\" + index + \".\" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"                    case FILTERDATE:","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(\"Command has to be followed by date.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"                        LocalDate date \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"                        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"                                DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"                                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"                                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"                        };","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"                        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"                            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"                                date \u003d LocalDate.parse(parts[1].trim(), formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"                                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"                            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"                                // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"                            }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"                        if (date \u003d\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidDateException(\"Reenter date in this format: (ddMMyyyy)\");","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"linustws"},"content":"                        int count \u003d 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"linustws"},"content":"                        for (Task task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"linustws"},"content":"                            if (task instanceof Deadline) {","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"linustws"},"content":"                                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"linustws"},"content":"                                if (deadline.getDeadline().toLocalDate().isEqual(date)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"linustws"},"content":"                                    System.out.println(\"\\t  \" + deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"linustws"},"content":"                                    count++;","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"linustws"},"content":"                                }","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"linustws"},"content":"                            } else if (task instanceof Event) {","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"linustws"},"content":"                                Event event \u003d (Event) task;","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"linustws"},"content":"                                if (event.getStartDateTime().toLocalDate().isEqual(date) ||","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"linustws"},"content":"                                        event.getEndDateTime().toLocalDate().isEqual(date) ||","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"linustws"},"content":"                                        (event.getStartDateTime().toLocalDate().isBefore(date) \u0026\u0026","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"linustws"},"content":"                                                event.getEndDateTime().toLocalDate().isAfter(date))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"linustws"},"content":"                                    System.out.println(\"\\t  \" + event);","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"linustws"},"content":"                                    count++;","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"linustws"},"content":"                                }","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"linustws"},"content":"                            }","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNumber of tasks on \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \": \" + count);","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"linustws"},"content":"                    case MARK: // Mark","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"linustws"},"content":"                        index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"linustws"},"content":"                        t \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"linustws"},"content":"                        t.setDone(true);","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"linustws"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"linustws"},"content":"                    case UNMARK: // Unmark","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"linustws"},"content":"                        index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"linustws"},"content":"                        t \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"linustws"},"content":"                        t.setDone(false);","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"linustws"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":135,"author":{"gitId":"linustws"},"content":"                    case DELETE: // Delete","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"linustws"},"content":"                        index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"linustws"},"content":"                        t \u003d tasks.get(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"linustws"},"content":"                        tasks.remove(index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"linustws"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNoted. I\u0027ve removed this task:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"linustws"},"content":"                        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"linustws"},"content":"                            System.out.println(\"\\tNow you have \" + tasks.size() + \" task in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":146,"author":{"gitId":"linustws"},"content":"                            continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"linustws"},"content":"                    case TODO: // Add todo to list","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":153,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"linustws"},"content":"                        t \u003d new ToDo(parts[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"linustws"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":156,"author":{"gitId":"linustws"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":157,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"linustws"},"content":"                    case DEADLINE: // Add deadline to list","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"linustws"},"content":"                        String deadlineError \u003d \"A deadline has to have 2 non-blank strings separated with a /by keyword.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(deadlineError);","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"linustws"},"content":"                        String[] d_parts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"linustws"},"content":"                        if (d_parts.length \u003c 2 || d_parts[0].trim().isEmpty() || d_parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(deadlineError);","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":167,"author":{"gitId":"linustws"},"content":"                        t \u003d new Deadline(d_parts[0], d_parts[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":168,"author":{"gitId":"linustws"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"linustws"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"linustws"},"content":"                    case EVENT: // Add event to list","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"linustws"},"content":"                        String eventError \u003d \"An event has to have 3 non-blank strings separated with /from and /to keywords.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":173,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(eventError);","lastModifiedDate":"2023-01-23"},{"lineNumber":175,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":176,"author":{"gitId":"linustws"},"content":"                        String[] e_parts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"linustws"},"content":"                        if (e_parts.length \u003c 3 || e_parts[0].trim().isEmpty() || e_parts[1].trim().isEmpty() || e_parts[2].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"linustws"},"content":"                            throw new DukeException.InvalidCommandException(eventError);","lastModifiedDate":"2023-01-23"},{"lineNumber":179,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":180,"author":{"gitId":"linustws"},"content":"                        t \u003d new Event(e_parts[0], e_parts[1], e_parts[2]);","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"linustws"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":182,"author":{"gitId":"linustws"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"linustws"},"content":"                    default: // Invalid command but should not reach here because valueOf should throw an IllegalArgumentException","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"linustws"},"content":"                        throw new DukeException.InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-23"},{"lineNumber":186,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":187,"author":{"gitId":"linustws"},"content":"                if (command \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":191,"author":{"gitId":"linustws"},"content":"                if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":192,"author":{"gitId":"linustws"},"content":"                    System.out.println(\"\\tNow you have \" + tasks.size() + \" task in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":193,"author":{"gitId":"linustws"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":194,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":195,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":196,"author":{"gitId":"linustws"},"content":"            } catch (IndexOutOfBoundsException e) { // Index not in array","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":198,"author":{"gitId":"linustws"},"content":"                    throw new DukeException.IndexOutOfBoundsException(\"Please enter a valid index.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":199,"author":{"gitId":"linustws"},"content":"                } catch (DukeException.IndexOutOfBoundsException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":200,"author":{"gitId":"linustws"},"content":"                    System.out.println(e2.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":201,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":202,"author":{"gitId":"linustws"},"content":"            } catch (NumberFormatException e) { // 2nd arg not int","lastModifiedDate":"2023-01-23"},{"lineNumber":203,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":204,"author":{"gitId":"linustws"},"content":"                    throw new DukeException.InvalidCommandException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":205,"author":{"gitId":"linustws"},"content":"                } catch (DukeException.InvalidCommandException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":206,"author":{"gitId":"linustws"},"content":"                    System.out.println(e2.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":207,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":208,"author":{"gitId":"linustws"},"content":"            } catch (IllegalArgumentException e) { // Invalid command","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":210,"author":{"gitId":"linustws"},"content":"                    throw new DukeException.InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-23"},{"lineNumber":211,"author":{"gitId":"linustws"},"content":"                } catch (DukeException.InvalidCommandException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":212,"author":{"gitId":"linustws"},"content":"                    System.out.println(e2.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":213,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":214,"author":{"gitId":"linustws"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":215,"author":{"gitId":"linustws"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":216,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":218,"author":{"gitId":"linustws"},"content":"        scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"linustws"},"content":"        System.out.println(\"\\tWoof (\\u256F\\u11BA\\u2570\\u0E51)\"); // Outro","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"linustws":218,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public abstract class DukeException extends Exception{","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"        super(\"\\t\\u2639 OOPS!!! \" + message);","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    public static class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"        public InvalidCommandException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"            super(\"Invalid command! \" + message);","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    public static class InvalidDateException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"        public InvalidDateException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"            super(\"Invalid date/time entered! \" + message);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"    public static class IndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"        public IndexOutOfBoundsException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"            super(\"Invalid index entered! \" + message);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"linustws":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"        LocalDate startDate \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"        LocalDateTime startDateTime \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"        LocalDate endDate \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        LocalDateTime endDateTime \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"        };","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"                startDateTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"                    startDate \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"                } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                    // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"                endDateTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"                    endDate \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"                } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"                    // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"        // If date or dateTime is still null, input is in invalid format","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"        if ((startDate \u003d\u003d null \u0026\u0026 startDateTime \u003d\u003d null) || (endDate \u003d\u003d null \u0026\u0026 endDateTime \u003d\u003d null)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"            throw new DukeException.InvalidDateException(\"Reenter dates in this format: (ddMMyyyy) or (ddMMyyyy HHmm).\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"            this.startDateTime \u003d startDate.atStartOfDay();","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"            this.endDateTime \u003d endDate.atStartOfDay().plusDays(1).minusNanos(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"        if (this.endDateTime.isBefore(this.startDateTime)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"            throw new DukeException.InvalidDateException(\"End date cannot be before start date.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"        return startDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"        return endDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"    public boolean isUpcoming() {","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isBefore(startDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"    public boolean isOngoing() {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isAfter(startDateTime) \u0026\u0026 LocalDateTime.now().isBefore(endDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"linustws"},"content":"    public boolean isPassed() {","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isAfter(endDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"linustws"},"content":"        String start \u003d this.startDateTime.format(formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"linustws"},"content":"        String end \u003d this.endDateTime.format(formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"linustws"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":104}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    private Path filename;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    public Storage() {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        filename \u003d Paths.get(\".\", \"data\", \"tasks.ser\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"        File file \u003d filename.toFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filename.toString()))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"        File file \u003d filename.toFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"        if(file.length() !\u003d 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"            try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filename.toString()))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"        return tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"linustws":48}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"public abstract class Task implements Serializable{","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    private String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        return description;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d isDone; // Set done status","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"run","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"mark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"unmark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"linustws":11}}]
