[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    public enum Command { // Fixed number of commands","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"        TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"), MARK(\"mark\"),","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"        UNMARK(\"unmark\"), DELETE(\"delete\"), LIST(\"list\"), BYE(\"bye\");","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"        private final String command;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"        Command(String command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"            this.command \u003d command;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        public String getCommand() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"            return command;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"        String logo \u003d \"  /\\\\_/\\\\\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"                + \" /\\u25DE   \\u25DF\\\\\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"                + \"( \\u25d5   \\u25d5 )\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"                + \" \\\\     /\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"                + \"  \\\\   /\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"                + \"   \\\\ /\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"                + \"    \\u25CF\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"        System.out.println(logo + \"BorzAI\\n\"); // Intro","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"        System.out.println(\"\\tWhen all I do is for you, Kermie \\u2665\\n\" // Greeting","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"                + \"\\tWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Allow user input","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(); // Create list","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"        while (true) {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"            String[] parts \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"            Task t \u003d null;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"            int index;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"                Command command \u003d Command.valueOf(parts[0].trim().toUpperCase());","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"                switch (command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"                    case BYE: // Exit","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"                    case LIST: // Display list","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"                        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"                            t \u003d taskList.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"                            index \u003d i + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"                            if (i \u003d\u003d taskList.size() - 1) { // Last item","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"                                System.out.println(\"\\t\" + index + \".\" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"                                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"                            }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"                            System.out.println(\"\\t\" + index + \".\" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"                    case MARK: // Mark","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"                        index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"                        t \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"                        t.markAsDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\t  \" + t);","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"                    case UNMARK: // Unmark","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"                        index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"                        t \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"                        t.unmarkAsDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\t  \" + t);","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"                    case DELETE: // Delete","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"                        index \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"                        t \u003d taskList.get(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"                        taskList.remove(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\t  \" + t);","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"                        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"                            System.out.println(\"\\tNow you have \" + taskList.size() + \" task in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"                            continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"                        System.out.println(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"                        continue;","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"                    case TODO: // Add todo to list","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"linustws"},"content":"                        t \u003d new ToDo(parts[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"linustws"},"content":"                        taskList.add(t);","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"linustws"},"content":"                    case DEADLINE: // Add deadline to list","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"linustws"},"content":"                        String[] d_parts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"linustws"},"content":"                        if (d_parts.length \u003c 2 || d_parts[0].trim().isEmpty() || d_parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"The description of a deadline has to have 2 non-blank strings separated with a /by keyword.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"linustws"},"content":"                        t \u003d new Deadline(d_parts[0], d_parts[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"linustws"},"content":"                        taskList.add(t);","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"linustws"},"content":"                    case EVENT: // Add event to list","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"linustws"},"content":"                        if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":112,"author":{"gitId":"linustws"},"content":"                        String[] e_parts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"linustws"},"content":"                        if (e_parts.length \u003c 3 || e_parts[0].trim().isEmpty() || e_parts[1].trim().isEmpty() || e_parts[2].trim().isEmpty()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"linustws"},"content":"                            throw new DukeException(\"The description of an event has to have 3 non-blank strings separated with /from and /to keywords.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"linustws"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":116,"author":{"gitId":"linustws"},"content":"                        t \u003d new Event(e_parts[0], e_parts[1], e_parts[2]);","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"linustws"},"content":"                        taskList.add(t);","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"linustws"},"content":"                    default: // Invalid command but should not reach here because valueOf should throw an exception","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"linustws"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"linustws"},"content":"                if (command \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\t  \" + t);","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"linustws"},"content":"                if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"linustws"},"content":"                    System.out.println(\"\\tNow you have \" + taskList.size() + \" task in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"linustws"},"content":"                    continue;","lastModifiedDate":"2023-01-16"},{"lineNumber":130,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":131,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\tNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"linustws"},"content":"            } catch (DukeException e) { // Invalid arguments","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\t\" + e);","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"linustws"},"content":"            } catch (NumberFormatException e) { // 2nd arg not int","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\t\\u2639 OOPS!!! Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"linustws"},"content":"            } catch (IndexOutOfBoundsException e) { // Index not in array","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\t\\u2639 OOPS!!! Index entered does not exists in list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"linustws"},"content":"            } catch (IllegalArgumentException e) { // Invalid command","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"linustws"},"content":"                System.out.println(\"\\t\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":142,"author":{"gitId":"linustws"},"content":"        scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"linustws"},"content":"        System.out.println(\"\\tWoof (\\u256F\\u11BA\\u2570\\u0E51)\"); // Outro","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"linustws":141,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    private String e;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"        this.e \u003d e;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"        return \"\\u2639 OOPS!!! \" + e;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"linustws":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    protected String start;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"    protected String end;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    protected String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d true; // Mark done","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d false; // Unmark done","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"run","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"mark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"unmark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"linustws":11}}]
