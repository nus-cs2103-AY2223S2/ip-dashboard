[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linustws":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"    compile group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.6\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linustws":4,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        ui.showStartUp();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"    public void run() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"            } finally {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"        new Duke(\"./data/tasks.ser\").run();","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"linustws":45,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    private static boolean isExit;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    public static class AddCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        private Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"        public AddCommand(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003dfalse;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"            ui.showAdded(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"            ui.showListSize(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"    public static class ListCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"        public ListCommand() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003dfalse;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"            tasks.showList(ui);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"    public static class MarkCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"        private int index;","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"        public MarkCommand(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003dfalse;","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"            Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"                task \u003d tasks.getTask(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"                throw new DukeException(\"Invalid index entered!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"            tasks.markTask(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"            ui.showMarked(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"    public static class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"        private int index;","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"        public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003dfalse;","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"            Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"                task \u003d tasks.getTask(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"                throw new DukeException(\"Invalid index entered!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"            tasks.unmarkTask(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"            ui.showUnmarked(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"    public static class DeleteCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"        private int index;","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"linustws"},"content":"        public DeleteCommand(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"linustws"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003dfalse;","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"linustws"},"content":"            Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"linustws"},"content":"                task \u003d tasks.getTask(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"linustws"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"linustws"},"content":"                throw new DukeException(\"Invalid index entered!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"linustws"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"linustws"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"linustws"},"content":"            ui.showDeleted(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"linustws"},"content":"            ui.showListSize(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"linustws"},"content":"    public static class FilterCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"linustws"},"content":"        private Object obj;","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"linustws"},"content":"        public FilterCommand(Object obj) {","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"linustws"},"content":"            this.obj \u003d obj;","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003dfalse;","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"linustws"},"content":"            if (obj instanceof LocalDate) {","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"linustws"},"content":"                LocalDate date \u003d (LocalDate) obj;","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"linustws"},"content":"                tasks.filterTasksByDate(ui, date);","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"linustws"},"content":"    public static class ExitCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"linustws"},"content":"        public ExitCommand() {","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"linustws"},"content":"            Command.isExit \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"linustws"},"content":"        @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":136,"author":{"gitId":"linustws"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"linustws"},"content":"            ui.closeScanner();","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"linustws"},"content":"            ui.showExit();","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"linustws"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"linustws"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"linustws":145}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        int indexInput;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        switch(parts[0].trim()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"                ToDo todo \u003d new ToDo(parts[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"                return new Command.AddCommand(todo);","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"                String deadlineError \u003d \"A deadline has to have a string and date separated with a /by keyword.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(deadlineError);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"                String[] d_parts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"                if (d_parts.length \u003c 2 || d_parts[0].trim().isEmpty() || d_parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(deadlineError);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"                Deadline deadline \u003d new Deadline(d_parts[0].trim(), d_parts[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"                return new Command.AddCommand(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"            case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"                String eventError \u003d \"An event has to have a string and 2 dates separated with /from and /to keywords.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(eventError);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"                String[] e_parts \u003d parts[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"                if (e_parts.length \u003c 3 || e_parts[0].trim().isEmpty() || e_parts[1].trim().isEmpty() || e_parts[2].trim().isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(eventError);","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"                Event event \u003d new Event(e_parts[0].trim(), e_parts[1].trim(), e_parts[2].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"                return new Command.AddCommand(event);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"            case \"list\":","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"                return new Command.ListCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"                    indexInput \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"                return new Command.MarkCommand(indexInput - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"                    indexInput \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"                return new Command.UnmarkCommand(indexInput - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) { // 2nd arg not entered","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"                    indexInput \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by an integer.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"                return new Command.DeleteCommand(indexInput - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"            case \"filterdate\":","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"                if (parts.length !\u003d 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"duke.command.Command has to be followed by date.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"                LocalDate date \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"                        DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"                        DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"                };","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"                for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"linustws"},"content":"                    try {","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"linustws"},"content":"                        date \u003d LocalDate.parse(parts[1].trim(), formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"linustws"},"content":"                        break;","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"linustws"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"linustws"},"content":"                        // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"linustws"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"linustws"},"content":"                if (date \u003d\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"linustws"},"content":"                    throw new DukeException(\"Reenter date in this format: (ddMMyyyy)\");","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"linustws"},"content":"                return new Command.FilterCommand(date);","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"linustws"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"linustws"},"content":"                return new Command.ExitCommand();","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"linustws"},"content":"            default:","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"linustws"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"linustws":108}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"linustws":7}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"    private Path filename;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"    public Storage(String filename) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"        String[] parts \u003d filename.split(\"/\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"        this.filename \u003d Paths.get(parts[0], parts[1], parts[2]);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filename.toString()))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"            oos.writeObject(tasks.getTasks());","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"        File file \u003d filename.toFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"        if(file.length() !\u003d 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"            try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filename.toString()))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"                tasks.setTasks((ArrayList\u003cTask\u003e) ois.readObject());","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"            } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"        return tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"linustws":60}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        LocalDateTime dateTime \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"        };","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"                dateTime \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"                    date \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"                    // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"        // If date or dateTime is still null, input is in invalid format","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"        if (date \u003d\u003d null \u0026\u0026 dateTime \u003d\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"            throw new DukeException(\"Reenter date in this format: (ddMMyyyy) or (ddMMyyyy HHmm).\");","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"            this.deadline \u003d date.atStartOfDay().plusDays(1).minusNanos(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"            this.deadline \u003d dateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"        return deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isAfter(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"    public boolean isUpcoming() {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isBefore(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"        String deadline \u003d this.deadline.format(formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        LocalDate startDate \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        LocalDateTime startDateTime \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"        LocalDate endDate \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"        LocalDateTime endDateTime \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"ddMMyyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"        };","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"                startDateTime \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"                    startDate \u003d LocalDate.parse(start, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"                } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"                    // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"                endDateTime \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"                try {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"                    endDate \u003d LocalDate.parse(end, formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"                    break;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"                } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"                    // Invalid format, try the next one","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"        // If date or dateTime is still null, input is in invalid format","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"        if ((startDate \u003d\u003d null \u0026\u0026 startDateTime \u003d\u003d null) || (endDate \u003d\u003d null \u0026\u0026 endDateTime \u003d\u003d null)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"            throw new DukeException(\"Reenter dates in this format: (ddMMyyyy) or (ddMMyyyy HHmm).\");","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"            this.startDateTime \u003d startDate.atStartOfDay();","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"            this.endDateTime \u003d endDate.atStartOfDay().plusDays(1).minusNanos(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"        if (this.endDateTime.isBefore(this.startDateTime)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"            throw new DukeException(\"End date cannot be before start date.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"        return startDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"        return endDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"    public boolean isUpcoming() {","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isBefore(startDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"linustws"},"content":"    public boolean isOngoing() {","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isAfter(startDateTime) \u0026\u0026 LocalDateTime.now().isBefore(endDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"linustws"},"content":"    public boolean isPassed() {","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"linustws"},"content":"        return LocalDateTime.now().isAfter(endDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"linustws"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"linustws"},"content":"        String start \u003d this.startDateTime.format(formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"linustws"},"content":"        String end \u003d this.endDateTime.format(formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"linustws"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":108}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"public abstract class Task implements Serializable{","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    private String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"        return (isDone ? \"X\" : \" \"); // Mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"        return description;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"        return isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"        this.isDone \u003d isDone; // Set done status","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":38}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"        return tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"        task.setDone(true);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"        task.setDone(false);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"    public void showList(Ui ui) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"        ui.showList(this);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"    public void filterTasksByDate(Ui ui, LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"                if (deadline.getDeadline().toLocalDate().isEqual(date)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"                    ui.printUi(deadline.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"                    count++;","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"                if (event.getStartDateTime().toLocalDate().isEqual(date) ||","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"                        event.getEndDateTime().toLocalDate().isEqual(date) ||","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"                        (event.getStartDateTime().toLocalDate().isBefore(date) \u0026\u0026","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"                                event.getEndDateTime().toLocalDate().isAfter(date))) {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"                    ui.printUi(event.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"                    count++;","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"        ui.printUi(\"Number of tasks on \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \": \" + count);","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"linustws":74}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"linustws":12}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"    public Ui() {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"linustws"},"content":"    public void printUi(String message){","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"linustws"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"linustws"},"content":"    public void showStartUp() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"linustws"},"content":"        String logo \u003d \"  /\\\\_/\\\\\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"linustws"},"content":"                + \" /\\u25DE   \\u25DF\\\\\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"linustws"},"content":"                + \"( \\u25d5   \\u25d5 )\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"linustws"},"content":"                + \" \\\\     /\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"linustws"},"content":"                + \"  \\\\   /\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"linustws"},"content":"                + \"   \\\\ /\\n\"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"linustws"},"content":"                + \"    \\u25CF\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"linustws"},"content":"        System.out.println(logo + \"BorzAI\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"linustws"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"linustws"},"content":"        printUi(\"When all I do is for you, Kermie \\u2665\\n\\tWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"linustws"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"linustws"},"content":"        printUi(\"Error: Unable to load tasks from file.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"linustws"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"linustws"},"content":"        printUi(\"__________________________________________________________\");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"linustws"},"content":"    public void showAdded(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"linustws"},"content":"        printUi(\"Got it. I\u0027ve added this task:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"linustws"},"content":"    public void showListSize(TaskList tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"linustws"},"content":"        if (tasks.getSize() \u003d\u003d 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"linustws"},"content":"            printUi(\"Now you have \" + tasks.getSize() + \" task in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"linustws"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"linustws"},"content":"            printUi(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"linustws"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"linustws"},"content":"        printUi(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"linustws"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"linustws"},"content":"            Task t \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"linustws"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"linustws"},"content":"            printUi(index + \".\" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"linustws"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"linustws"},"content":"    public void showMarked(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"linustws"},"content":"        printUi(\"Nice! I\u0027ve marked this task as done:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"linustws"},"content":"    public void showUnmarked(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"linustws"},"content":"        printUi(\"OK, I\u0027ve marked this task as not done yet:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"linustws"},"content":"    public void showDeleted(Task t) {","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"linustws"},"content":"        printUi(\"Noted. I\u0027ve removed this task:\\n\\t  \" + t);","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"linustws"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"linustws"},"content":"        printUi(\"\\u2639 OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"linustws"},"content":"    public void showExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"linustws"},"content":"        printUi(\"Woof (\\u256F\\u11BA\\u2570\\u0E51)\");","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"linustws"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"linustws"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"linustws"},"content":"        scanner.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"linustws"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"linustws"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"linustws":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linustws"},"content":"read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"linustws"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"linustws"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"linustws"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"linustws"},"content":"deadline return book /by 01012023","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"linustws"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"linustws"},"content":"event project meeting /from 01012023 1400 /to 01032023 1600","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"linustws"},"content":"mark 1","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"linustws"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"linustws"},"content":"mark 3","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"linustws"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"linustws"},"content":"unmark 5","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"linustws"},"content":"unmark 2","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"linustws"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"linustws"},"content":"filterdate 01012023","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"linustws"},"content":"filterdate 01022023","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"linustws"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"linustws":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"linustws"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"linustws":1,"-":20}}]
