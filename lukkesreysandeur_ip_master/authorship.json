[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"# duke.duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lukkesreysandeur":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lukkesreysandeur":17,"-":40}},{"path":"src/main/java/duke/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" * Handles strings that are supposed to be dates and formats them properly.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"public class DateHandler {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"     * Parses a user entered string into a date.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The time frame entered by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A String representing the date if a date was entered;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     *         the original input otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    public static String parse(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"            LocalDate date \u003d LocalDate.parse(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch(DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"            return input;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"lukkesreysandeur":31}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"    private void flip() {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"        db.flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"        return db;","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lukkesreysandeur":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the Duke chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"public class Duke {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The Ui object that handles interactions with the user. */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The list that contains the actual task objects. */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The storage object that helps to save state to a file. */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The parser object that helps to make sense of the commands entered by the user. */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the Duke object by initialising all required components and loading the save file in.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    public Duke() {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"            storage.loadState(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(ui.showError(e));","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The welcome message.","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    public String run() {","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"        return ui.welcomeMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"     * Parses the input into a command and returns the result to the GUI.","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string with the chatbot\u0027s response.","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"            return ui.showError(e);","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":58}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":" * Taken From: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"public class Launcher {","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lukkesreysandeur":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /** An instance of the duke chatbot. */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"            stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lukkesreysandeur":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"        if (response.equals(\"Bye! Hope to see you again soon!\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.run(), dukeImage));","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lukkesreysandeur":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeUnknownInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":" * Helps to parse user input into commands that the chat bot understands.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"     * Parses the user inputted command and returns a command; throws error if command is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param fullCommand Command entered by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return Command object that will handle the requested action.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeUnknownInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"    public Command parse(String fullCommand) throws DukeUnknownInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"        String command \u003d commands[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        String params;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"        if (commands.length !\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"            params \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"            params \u003d commands[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        switch (command) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"list\":","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"            return new ListCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"            return new MarkCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"            return new UnmarkCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"            return new TodoCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"            return new DeadlineCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"            return new EventCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"            return new DeleteCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"            return new ExitCommand(params);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"find\":","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"            return new FindCommand(params);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"        default:","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeUnknownInputException();","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":59}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeCannotFindFileException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the storage used to save the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * Handles the reading and writing of text files so that state can be saved.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The filepath of the saved file. */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    private final String saveLocation \u003d \"data/savestate.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The folder that the saved file is stored in. */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    private final String saveFolder \u003d \"data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    /** Boolean stating whether the folder has been created. */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    private boolean isFolderCreated \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    /** Boolean stating whether the file has been created. */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    private boolean isFileCreated \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the storage object.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * Sets the booleans to true if the file and folder can be found.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"    public Storage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        File folder \u003d new File(saveFolder);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"        if (folder.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"            isFileCreated \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        File savedFile \u003d new File(saveLocation);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        if (savedFile.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"            isFolderCreated \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"     * Saves the current state of the tasklist by writing to a text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"     * Creates new folder and file if they cannot be found, then sets the booleans to true.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param lst The current tasklist object.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"    public void saveState(TaskList lst) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!isFolderCreated) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"            File folder \u003d new File(saveFolder);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"            if (!folder.mkdir()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"                System.out.println(\"Something went wrong, folder not created\");","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"                isFolderCreated \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!isFileCreated) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"            File savedFile \u003d new File(saveLocation);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"                savedFile.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"            isFileCreated \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"        assert isFileCreated;","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"        String data \u003d lst.listToText();","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"            FileWriter writer \u003d new FileWriter(saveLocation);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"            assert writer !\u003d null;","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"            writer.write(data);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"            writer.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"lukkesreysandeur"},"content":"     * Loads the saved text file into the tasklist, throws error if the file cannot be found.","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param lst The tasklist to be saved into.","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeCannotFindFileException","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"lukkesreysandeur"},"content":"    public void loadState(TaskList lst) throws DukeCannotFindFileException {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"lukkesreysandeur"},"content":"        assert isFileCreated;","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!isFileCreated) {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeCannotFindFileException();","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"lukkesreysandeur"},"content":"        File savedFile \u003d new File(saveLocation);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"lukkesreysandeur"},"content":"            Scanner scanner \u003d new Scanner(savedFile);","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"lukkesreysandeur"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lukkesreysandeur"},"content":"                String taskText \u003d scanner.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lukkesreysandeur"},"content":"                if (taskText.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"lukkesreysandeur"},"content":"                    break;","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"lukkesreysandeur"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lukkesreysandeur"},"content":"                lst.loadTask(taskText);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lukkesreysandeur":102}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeTooManyInputsException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the list that contains the tasks of the chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    /** List to store the tasks. */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the tasklist by creating a new list to store the tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * Adds the input task to the tasklist","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param t The task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A response acknowledging the addition of a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String add(Task t) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        list.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        int size \u003d list.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Sure no problem. I\u0027ve added this task:\\n\\t%s\\nNow you have %d task%s in the list\",","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"                t.toString(), size, size \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"     * Lists the items in the tasklist along with their completed state.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return Response containing the contents of the tasklist in text form.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"    public String listItems() {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"            str.append(String.format(\"%d. %s\\n\", count, t.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"            count++;","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"        if (str.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"            return \"You currently have no items in the list. Add some tasks to see your list!\";","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"        str.deleteCharAt(str.length() - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Here are the tasks in your list:\\n%s\", str);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"     * Marks or unmarks a specified task in the tasklist depending on the action given.","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param param The index of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param action One of two actions: \"mark\" or \"unmark\".","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string detailing whether the action was successful or not.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"    public String changeState(String param, String action) throws DukeInvalidInputException {","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"        assert param !\u003d null;","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"        assert param.length() !\u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"        Matcher matcher \u003d pattern.matcher(param.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"lukkesreysandeur"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeTooManyInputsException();","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"lukkesreysandeur"},"content":"            int index \u003d Integer.parseInt(param.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"lukkesreysandeur"},"content":"            if (action.equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"lukkesreysandeur"},"content":"                return list.get(index - 1).markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"lukkesreysandeur"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"lukkesreysandeur"},"content":"                return list.get(index - 1).markNotDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(String.format(\"I\u0027d love to %s that but I only understand numbers. \", action) +","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Try inputting a number instead!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(String.format(\"You gave me an invalid number to %s. \", action) +","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Type list to see what you have in the list so far.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"lukkesreysandeur"},"content":"     * Deletes specified task from the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The index of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string telling the user if the deletion of the task was successful.","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"lukkesreysandeur"},"content":"    public String delete(String input) throws DukeInvalidInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"lukkesreysandeur"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"lukkesreysandeur"},"content":"        Matcher matcher \u003d pattern.matcher(input.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"lukkesreysandeur"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeTooManyInputsException();","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"lukkesreysandeur"},"content":"            int index \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"lukkesreysandeur"},"content":"            Task removed \u003d list.remove(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"lukkesreysandeur"},"content":"            int size \u003d list.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"lukkesreysandeur"},"content":"            return String.format(\"Sure thing. This task has been deleted:\\n\\t%s\\nNow you have %d task%s in the list\",","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"lukkesreysandeur"},"content":"                    removed, size, size \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"I can\u0027t delete what doesn\u0027t exist. \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Type list to see what you have in the list so far.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Sorry but I can only delete it if you give me its number. \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Try inputting a number instead!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"lukkesreysandeur"},"content":"     * Converts the tasklist contents into formatted text that can be stored in a text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string of a certain format that represents the tasklist contents.","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"lukkesreysandeur"},"content":"    public String listToText() {","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"lukkesreysandeur"},"content":"        StringBuilder textString \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"lukkesreysandeur"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"lukkesreysandeur"},"content":"            textString.append(t.toText());","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"lukkesreysandeur"},"content":"        return textString.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"lukkesreysandeur"},"content":"     * Loads a task into the tasklist based on formatted text.","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param taskText The string representing the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"lukkesreysandeur"},"content":"    public void loadTask(String taskText) {","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"lukkesreysandeur"},"content":"            list.add(Task.fromText(taskText));","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(\"Text is formatted wrongly\");","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"lukkesreysandeur"},"content":"     * Finds tasks with the keyword in their description and returns them.","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param keywords The keywords used to search the task description.","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string containing all the tasks that contain the keywords.","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"lukkesreysandeur"},"content":"    public String find(String keywords) throws DukeEmptyInputException {","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"lukkesreysandeur"},"content":"        if (keywords.trim().equals(\"\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeEmptyInputException();","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"lukkesreysandeur"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"lukkesreysandeur"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"lukkesreysandeur"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"lukkesreysandeur"},"content":"            if (t.getName().contains(keywords)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"lukkesreysandeur"},"content":"                str.append(String.format(\"%d. %s\\n\", count, t));","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"lukkesreysandeur"},"content":"                count++;","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"lukkesreysandeur"},"content":"        if (str.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"lukkesreysandeur"},"content":"            return \"It appears that you have no matching tasks!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"lukkesreysandeur"},"content":"        str.deleteCharAt(str.length() - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"lukkesreysandeur"},"content":"        return \"These are the matching tasks that I have found:\\n\" + str;","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"lukkesreysandeur":172}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the user interface that the user interacts with.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the Ui object.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"     * Greets the user after the chatbot is started.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"        return \"Hello! I\u0027m Interrobang\\nWhat can I do for you today?\";","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * Shows the user an error that occurred as a result of their commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param e The exception that occurred.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The error message.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String showError(DukeException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        return e.getMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"     * Says bye to the user after the exit command is called.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"    public String sayBye() {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"        return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":44}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents a command that can be executed by the program as a result of user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The entered user input. */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String input;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the command object.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    public Command(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return true if the command is an exit command;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"     *         false otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":38}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to create a deadline and add it to the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the deadline command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the deadline, adds it to the tasklist, then saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to add the deadline to.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.add(Deadline.createDeadline(super.input));","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        storage.saveState(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":39}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to delete a certain task.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the delete command.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"     * Deletes the specified task.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to delete from.","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeEmptyInputException();","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.delete(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        storage.saveState(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":40}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to create an event and add it to the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the event command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the event, adds it to the tasklist, then saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to add the event to.","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.add(Event.createEvent(super.input));","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        storage.saveState(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":39}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command used to exit the program.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the exit command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * Checks if the syntax of the bye statement is correct, throws error if not.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The given tasklist.","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!input.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"            DukeException e \u003d  new DukeInvalidInputException(\"Say bye properly by typing only bye!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"            return e.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        return ui.sayBye();","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns true as this is the exit command.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return true","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":50}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to find tasks with a specified keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the find command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"     * Finds all tasks with the keyword in their description.","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to search.","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.find(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"lukkesreysandeur":38}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to list all items in the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the list command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * Lists all items currently in the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to add the deadline to.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!input.equals(\"\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"            DukeException e \u003d  new DukeInvalidInputException(\"If you would like to see the items in the list, \" +","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"please type just list\");","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"            return e.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.listItems();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":43}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" * Represent the command to mark a task as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the mark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to add the deadline to.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.changeState(input, \"mark\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        storage.saveState(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":38}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to create a todo and add it to the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the todo command.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the todo, adds it to the tasklist, then saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to add the deadline to.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.add(Todo.createTodo(input));","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        storage.saveState(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":39}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents the command to mark a task as not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the unmark command.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input The given user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"        super(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"     * Marks the specified task as not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param tasks The tasklist to add the deadline to.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param ui The ui object used to interact with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param storage The storage object that saves the current state of the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        String response \u003d tasks.changeState(input, \"unmark\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        storage.saveState(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":38}},{"path":"src/main/java/duke/exceptions/DukeCannotFindFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeCannotFindFileException extends DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeCannotFindFileException() {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"I cannot seem to find the saved file, I\u0027ll create one whenever you update your list!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/duke/exceptions/DukeEmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeEmptyInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeEmptyInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"Some fields appear empty. Please enter actual inputs.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Whoops! %s\", super.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":12}},{"path":"src/main/java/duke/exceptions/DukeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeInvalidInputException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(String.format(\"That\u0027s an invalid input. %s\", errorMessage));","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/duke/exceptions/DukeTooManyInputsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeTooManyInputsException extends DukeInvalidInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeTooManyInputsException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"Sorry you need to specify a single input.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/duke/exceptions/DukeUnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeUnknownInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeUnknownInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"I\u0027m not sure I understand what that means.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.DateHandler;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents a type of task called a deadline that has a due date.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The time to do the task by. */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param description The name of the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param by The date/time to finish it by.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    private Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * Creates a new deadline object, throws error if input is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input A string that contains the parameters entered after the user command.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The created deadline object.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Deadline createDeadline(String input) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        String sanitisedInput \u003d input.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.isEmpty() || sanitisedInput.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Deadlines need a description and a deadline.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"You need to specify the deadline using /by. Why don\u0027t you try again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] arguments \u003d input.split(\"/by\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg1 \u003d arguments[0].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg2 \u003d arguments[1].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"        if (arg1.isEmpty() || arg2.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeEmptyInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        System.out.println(arg2.length());","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        arg2 \u003d DateHandler.parse(arg2);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"        return new Deadline(arg1, arg2);","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"     * Converts the deadline into a text format that can be saved to a text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the deadline in a different format.","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toText() {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"D %d %s /by %s\\n\", super.isDone ? 1 : 0, super.name, by);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":72}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.DateHandler;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents a type of task called an event that has a starting and ending time.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    /** String representing the starting time. */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    /** String representing the ending time. */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises an event object.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param event The name of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param from The starting time.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param to The ending time.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    private Event(String event, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"        super(event);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     * Creates a new event object, throws error if input is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input A string that contains the parameters entered after the user command.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The created event object.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Event createEvent(String input) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        String sanitisedInput \u003d input.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.isEmpty() || sanitisedInput.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Events need a description, a from date and a to date.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"You need to specify the event duration using /from and /to.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] arguments \u003d input.split(\"/from\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg1 \u003d arguments[0].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!arguments[1].contains(\"/to\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"It would appear that your message is out of order. \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Try putting /from before /to.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] remainder \u003d arguments[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg2 \u003d remainder[0].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"        arg2 \u003d DateHandler.parse(arg2);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg3 \u003d remainder[1].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"        arg3 \u003d DateHandler.parse(arg3);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"        if (arg1.isEmpty() || arg2.isEmpty() || arg3.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeEmptyInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"        return new Event(arg1, arg2, arg3);","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"lukkesreysandeur"},"content":"     * Converts the event into a text format that can be saved to a text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the event in a different format.","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toText() {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"E %d %s /from %s /to %s\\n\", super.isDone ? 1 : 0, super.name, from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":82}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents a generic task class with a name and whether the task has been marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"    /** The name of the task. */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    /** Boolean indicating if the task has been marked done. */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initilaises the task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param name A string representing the name of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"     * Marks a task as done; does nothing if it was already marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return Response indicating if the task was successfully marked done or","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"     *         if the task was already marked done.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"            return String.format(\"Perhaps you forgot, but this task was already marked done!:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Well done! I\u0027ve marked this task as done:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return Response indicating if the task was successfully marked not done or","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"     *         if the task was already marked not done.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"    public String markNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"            return String.format(\"No need to tell me, the task was not even marked as done!:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Okay, I have marked this task as not done:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns a status icon indicating if the task has been marked done.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return X if the task has been done, a space otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), name);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"lukkesreysandeur"},"content":"     * Converts the task into a text format that can be saved to a text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the task in a different format.","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toText() {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"! %d %s\\n\", isDone ? 1 : 0, name);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"lukkesreysandeur"},"content":"     * Converts string that has been formatted in a certain way into a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param taskText The string representing the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The newly created task from the text.","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeEmptyInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Task fromText(String taskText) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] params \u003d taskText.split(\" \", 3);","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lukkesreysandeur"},"content":"        String type \u003d params[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lukkesreysandeur"},"content":"        String status \u003d params[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"lukkesreysandeur"},"content":"        Task newTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lukkesreysandeur"},"content":"        switch (type) {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"T\":","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lukkesreysandeur"},"content":"            newTask \u003d Todo.createTodo(params[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"lukkesreysandeur"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"D\":","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"lukkesreysandeur"},"content":"            newTask \u003d Deadline.createDeadline(params[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"lukkesreysandeur"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"lukkesreysandeur"},"content":"        case \"E\":","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"lukkesreysandeur"},"content":"            newTask \u003d Event.createEvent(params[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"lukkesreysandeur"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"lukkesreysandeur"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(\"Incorrect format\");","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"lukkesreysandeur"},"content":"            return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"lukkesreysandeur"},"content":"        if (status.equals(\"1\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"lukkesreysandeur"},"content":"            newTask.isDone \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"lukkesreysandeur"},"content":"        return newTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"lukkesreysandeur"},"content":"    public String getName() {","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"lukkesreysandeur"},"content":"        return name;","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":124}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":" * Represents a type of task called todo that only has a name.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":" * @author lukkesreysandeur","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"     * Initialises the todo object.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    private Todo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"     * Creates a new todo object, throws error if input is invalid.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"     * @param input A string that contains the parameters entered after the user command.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return The created todo object.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"     * @throws DukeInvalidInputException","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Todo createTodo(String input) throws DukeInvalidInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        String sanitisedInput  \u003d input.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.isEmpty() || sanitisedInput.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Todos need a description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"        return new Todo(sanitisedInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the todo.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"     * Converts the todo into a text format that can be saved to a text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"     * ","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"     * @return A string representing the todo in a different format.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toText() {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"T %d %s\\n\", super.isDone ? 1 : 0, super.name);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lukkesreysandeur":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lukkesreysandeur":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    private final InputStream in \u003d System.in;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"    private final PrintStream out \u003d System.out;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    @AfterEach","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    public void resetIO() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"        System.setIn(in);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        System.setOut(out);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that Duke object is initialised properly\")","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    public void createDukeTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"        assertNotNull(duke, \"Duke object should be properly initialised.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lukkesreysandeur":35}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.TodoCommand;;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"import duke.exceptions.DukeUnknownInputException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"    public void setParser() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to ensure parser object is initialised.\")","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"    public void createParserTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"        assertNotNull(parser, \"Parser should be initialised.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that DeadlineCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnDeadlineTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"deadline\").getClass(), DeadlineCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that EventCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnEventTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"event\").getClass(), EventCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that TodoCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnTodoTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"todo\").getClass(), TodoCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that DeleteCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnDeleteTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"delete\").getClass(), DeleteCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that ExitCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnExitTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"bye\").getClass(), ExitCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that MarkCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnMarkTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"mark\").getClass(), MarkCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that UnmarkCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnUnmarkTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"unmark\").getClass(), UnmarkCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to make sure that ListCommand is returned\")","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"lukkesreysandeur"},"content":"    public void returnListTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"lukkesreysandeur"},"content":"            assertEquals(parser.parse(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (DukeUnknownInputException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"lukkesreysandeur"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"lukkesreysandeur"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"lukkesreysandeur"},"content":"    @DisplayName(\"Test to ensure exception is thrown upon incorrect input\")","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"lukkesreysandeur"},"content":"    public void throwExceptionTest() {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"lukkesreysandeur"},"content":"        Exception e \u003d assertThrows(DukeUnknownInputException.class, () -\u003e parser.parse(\"blah\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"lukkesreysandeur"},"content":"        String expected \u003d \"Whoops! I\u0027m not sure I understand what that means.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"lukkesreysandeur"},"content":"        String actual \u003d e.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"lukkesreysandeur"},"content":"        assertTrue(actual.contains(expected));","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lukkesreysandeur":122}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"deadline t /by today","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lukkesreysandeur":1,"-":20}}]
