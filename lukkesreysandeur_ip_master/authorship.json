[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"    private Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Deadline createDeadline(String input) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"        String sanitisedInput \u003d input.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.isEmpty() || sanitisedInput.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Deadlines need a description and a deadline.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"You need to specify the deadline using /by. Why don\u0027t you try again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] arguments \u003d input.split(\"/by\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg1 \u003d arguments[0].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg2 \u003d arguments[1].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"        if (arg1.isEmpty() || arg2.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeEmptyInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        return new Deadline(arg1, arg2);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public static void printResponse(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        String horizLine \u003d \"_____________________________\";","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"        System.out.printf(\"%s\\n%s\\n%s\\n%n\", horizLine, input, horizLine);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        ToDoList lst \u003d new ToDoList();","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"        printResponse(\"Hello! I\u0027m Interrobang\\nWhat can I do for you today?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"        String command \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"                switch (command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"                        printResponse(lst.listItems());","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"                        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"                        printResponse(lst.changeState(scanner.nextLine(), command));","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"                        printResponse(lst.add(Todo.createTodo(scanner.nextLine())));","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"                        printResponse(lst.add(Deadline.createDeadline(scanner.nextLine())));","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"                        printResponse(lst.add(Event.createEvent(scanner.nextLine())));","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"                    case \"delete\":","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"                        printResponse(lst.delete(scanner.nextLine()));","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"                    default:","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"                        throw new DukeUnknownInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"                printResponse(e.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"            command \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"        printResponse(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lukkesreysandeur":43,"-":4}},{"path":"src/main/java/DukeExceptions/DukeEmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeEmptyInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeEmptyInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"Some fields appear empty. Please enter actual inputs.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/DukeExceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Whoops! %s\", super.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":12}},{"path":"src/main/java/DukeExceptions/DukeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeInvalidInputException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(String.format(\"That\u0027s an invalid input. %s\", errorMessage));","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/DukeExceptions/DukeTooManyInputsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeTooManyInputsException extends DukeInvalidInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeTooManyInputsException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"Sorry you need to specify a single input.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/DukeExceptions/DukeUnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"package DukeExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class DukeUnknownInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    public DukeUnknownInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(\"I\u0027m not sure I understand what that means.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"    private Event(String event, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"        super(event);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Event createEvent(String input) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"        String sanitisedInput \u003d input.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.isEmpty() || sanitisedInput.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Events need a description, a from date and a to date.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"You need to specify the event duration using /from and /to.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] arguments \u003d input.split(\"/from\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg1 \u003d arguments[0].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!arguments[1].contains(\"/to\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"It would appear that your message is out of order. \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Try putting /from before /to.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"        String[] remainder \u003d arguments[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg2 \u003d remainder[0].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        String arg3 \u003d remainder[1].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"        if (arg1.isEmpty() || arg2.isEmpty() || arg3.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeEmptyInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        return new Event(arg1, arg2, arg3);","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"    protected String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"            return String.format(\"Perhaps you forgot, but this task was already marked done!:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Well done! I\u0027ve marked this task as done:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    public String markNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"        if (!isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"            return String.format(\"No need to tell me, the task was not even marked as done!:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Okay, I have marked this task as not done:\\n\\t%s\", this);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.name);","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":34}},{"path":"src/main/java/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeEmptyInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeTooManyInputsException;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"public class ToDoList {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"    public ToDoList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    public String add(Task t) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"        list.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"        int size \u003d list.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Sure no problem. I\u0027ve added this task:\\n\\t%s\\nNow you have %d task%s in the list\",","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"                t.toString(), size, size \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"lukkesreysandeur"},"content":"    public String listItems() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"lukkesreysandeur"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"lukkesreysandeur"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"lukkesreysandeur"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lukkesreysandeur"},"content":"            str.append(String.format(\"%d. %s\\n\", count, t.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lukkesreysandeur"},"content":"            count++;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"lukkesreysandeur"},"content":"        str.deleteCharAt(str.length() - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"Here are the tasks in your list:\\n%s\", str);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"lukkesreysandeur"},"content":"    public String changeState(String param, String action) throws DukeInvalidInputException, DukeEmptyInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"lukkesreysandeur"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lukkesreysandeur"},"content":"        Matcher matcher \u003d pattern.matcher(param.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lukkesreysandeur"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeTooManyInputsException();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lukkesreysandeur"},"content":"            int index \u003d Integer.parseInt(param.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lukkesreysandeur"},"content":"            if (action.equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"lukkesreysandeur"},"content":"                return list.get(index - 1).markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"lukkesreysandeur"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"lukkesreysandeur"},"content":"                return list.get(index - 1).markNotDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"lukkesreysandeur"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(String.format(\"I\u0027d love to %s that but I only understand numbers. \", action) +","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Try inputting a number instead!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(String.format(\"You gave me an invalid number to %s. \", action) +","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Type list to see what you have in the list so far.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"lukkesreysandeur"},"content":"    public String delete(String input) throws DukeInvalidInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"lukkesreysandeur"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"lukkesreysandeur"},"content":"        Matcher matcher \u003d pattern.matcher(input.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"lukkesreysandeur"},"content":"        if (matcher.find()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeTooManyInputsException();","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"lukkesreysandeur"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"lukkesreysandeur"},"content":"            int index \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"lukkesreysandeur"},"content":"            Task removed \u003d list.remove(index - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"lukkesreysandeur"},"content":"            int size \u003d list.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"lukkesreysandeur"},"content":"            return String.format(\"Sure thing. This task has been deleted:\\n\\t%s\\nNow you have %d task%s in the list\",","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"lukkesreysandeur"},"content":"                    removed, size, size \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"I can\u0027t delete what doesn\u0027t exist. \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Type list to see what you have in the list so far.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"lukkesreysandeur"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Sorry but I can only delete it if you give me its number. \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"lukkesreysandeur"},"content":"                    \"Try inputting a number instead!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"lukkesreysandeur":75}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"import DukeExceptions.DukeInvalidInputException;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"    private Todo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lukkesreysandeur"},"content":"    public static Todo createTodo(String input) throws DukeInvalidInputException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lukkesreysandeur"},"content":"        String sanitisedInput  \u003d input.trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lukkesreysandeur"},"content":"        if (input.isEmpty() || sanitisedInput.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lukkesreysandeur"},"content":"            throw new DukeInvalidInputException(\"Todos need a description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lukkesreysandeur"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lukkesreysandeur"},"content":"        return new Todo(sanitisedInput);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lukkesreysandeur"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lukkesreysandeur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lukkesreysandeur"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lukkesreysandeur"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lukkesreysandeur"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lukkesreysandeur"},"content":"deadline t /by today","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lukkesreysandeur"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lukkesreysandeur"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lukkesreysandeur"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lukkesreysandeur"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lukkesreysandeur"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lukkesreysandeur"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lukkesreysandeur":7}}]
