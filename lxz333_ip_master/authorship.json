[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"# duke project template","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lxz333":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"    mainClassName \u003d \"Execute\"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lxz333":16,"-":40}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"lxz333"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lxz333":59}},{"path":"src/main/java/Execute.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * The main class that runs Duke.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"public class Execute {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"lxz333":10}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"public class Launcher {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lxz333":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lxz333":27}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.JPG\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.JPG\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        String greeting \u003d \"Hi~ I\u0027m duke.Duke\u003e_\u003c\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"        duke \u003d new Duke();","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"        duke.loadDataFromDisk();","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"lxz333"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lxz333":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import task.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import task.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"import task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"import task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":" * Duke is the body part of the chatbot we designed.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"    protected final ArrayList\u003cString\u003e commandList;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    protected Parser parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    protected Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    protected Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    protected String directoryPath;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    protected String dataFilePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"    public Duke() {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"        this.dataFilePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"        this.directoryPath \u003d \"./data\";","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"        this.commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"        this.storage \u003d new Storage(directoryPath, dataFilePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"     * Adds the task to the taskList.","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"     * @param task_given The task we want to add to the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"    public void addTask(Task task_given) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        this.taskList.add(task_given);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"     * Returns the message of successfully adding a task to the taskList.","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"     * @param task The task we want to add to the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"     * @return Message of successful adding.","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"    public String messageOfAdd(Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"lxz333"},"content":"        return \"Got it. I\u0027ve added this task:\\n \" + task.toString() + \"\\nNow you have \" +","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"                taskList.size() + \" tasks in the list:D\";","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"lxz333"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"lxz333"},"content":"     * @param index The index of the task we want to mark as done.","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"lxz333"},"content":"     * @return Message of marking a task as done.","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"lxz333"},"content":"     * @throws DukeException When any DukeException happens.","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"lxz333"},"content":"    public String markAsDone(int index) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"lxz333"},"content":"        if (taskList.size() \u003c\u003d index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"lxz333"},"content":"            throw new WrongIndexException();","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"lxz333"},"content":"        Task task \u003d this.taskList.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"lxz333"},"content":"        task.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"lxz333"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"lxz333"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"lxz333"},"content":"     * @param index The index of the task we want to mark as undone.","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"lxz333"},"content":"     * @return Message of marking a task as undone.","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"lxz333"},"content":"     * @throws DukeException When any DukeException happens.","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"lxz333"},"content":"    public String markAsUndone(int index) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"lxz333"},"content":"        if (taskList.size() \u003c\u003d index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"lxz333"},"content":"            throw new WrongIndexException();","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"lxz333"},"content":"        Task task \u003d this.taskList.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"lxz333"},"content":"        task.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"lxz333"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"lxz333"},"content":"     * Deletes a task from the taskList.","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"lxz333"},"content":"     * @param index The index of the task we want to delete.","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"lxz333"},"content":"     * @return Message of deletion.","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"lxz333"},"content":"     * @throws WrongIndexException If the index is out of bound.","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"lxz333"},"content":"    public String deleteMessage(int index) throws WrongIndexException {","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"lxz333"},"content":"        if (taskList.size() \u003c\u003d index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"lxz333"},"content":"            throw new WrongIndexException();","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"lxz333"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"lxz333"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"lxz333"},"content":"        return \"Noted. I\u0027ve removed this task:\\n \" + task.toString() +","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"lxz333"},"content":"                \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"lxz333"},"content":"     * Prints the matching tasks in the taskList.","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"lxz333"},"content":"     * @param keywordList Keywords used for searching.","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"lxz333"},"content":"     * @return Tasks that contains the keyword.","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"lxz333"},"content":"    public String findMessage(String... keywordList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"lxz333"},"content":"        return \"Here are the matching tasks in your list:\\n\" + taskList.getTasksWanted(keywordList);","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"lxz333"},"content":"     * Loads the data stored in the disk.","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"lxz333"},"content":"    public void loadDataFromDisk() {","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"lxz333"},"content":"        storage.loadData(commandList);","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"lxz333"},"content":"        for (String userInput: commandList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"lxz333"},"content":"            String[] expressions \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"lxz333"},"content":"            String command \u003d expressions[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"lxz333"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"lxz333"},"content":"                if (userInput.equals(parser.convertEnum(Command.LIST))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"lxz333"},"content":"                    continue;","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.MARK))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"lxz333"},"content":"                    String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"lxz333"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d markAsDone(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.UNMARK))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"lxz333"},"content":"                    String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"lxz333"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d markAsUndone(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"lxz333"},"content":"                } else if (userInput.equals(parser.convertEnum(Command.BYE))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"lxz333"},"content":"                    continue;","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.TODO))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"lxz333"},"content":"                    Todo todo_task \u003d new Todo(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"lxz333"},"content":"                    addTask(todo_task);","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d messageOfAdd(todo_task);","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.DEADLINE))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":150,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"lxz333"},"content":"                    Deadline ddl_task \u003d new Deadline(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"lxz333"},"content":"                    addTask(ddl_task);","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d messageOfAdd(ddl_task);","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.EVENT))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"lxz333"},"content":"                    Event event_task \u003d new Event(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"lxz333"},"content":"                    addTask(event_task);","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d messageOfAdd(event_task);","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.DELETE))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"lxz333"},"content":"                    String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"lxz333"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":163,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d deleteMessage(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":164,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.FIND))) {","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"lxz333"},"content":"                    String keywords \u003d userInput.substring(5);","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"lxz333"},"content":"                    String[] keywordList \u003d keywords.split(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"lxz333"},"content":"                    String tmp \u003d findMessage(keywordList);","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"lxz333"},"content":"                } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"lxz333"},"content":"                    throw new WeirdInputException();","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"lxz333"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":172,"author":{"gitId":"lxz333"},"content":"            } catch (WeirdInputException exc)  {","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"lxz333"},"content":"                String tmp \u003d ui.separate(exc.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"lxz333"},"content":"            } catch (DukeException exc) {","lastModifiedDate":"2023-01-31"},{"lineNumber":175,"author":{"gitId":"lxz333"},"content":"                String tmp \u003d ui.separate(exc.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":176,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":177,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":178,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":179,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":180,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"lxz333"},"content":"     * Output the response to user input.","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"lxz333"},"content":"     * @param userInput Command input by the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"lxz333"},"content":"     * @return Corresponding output.","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"lxz333"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"lxz333"},"content":"        commandList.add(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"lxz333"},"content":"        storage.saveToDisk(userInput + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"lxz333"},"content":"            String[] expressions \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"lxz333"},"content":"            String command \u003d expressions[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"lxz333"},"content":"            String response \u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"lxz333"},"content":"            if (userInput.equals(parser.convertEnum(Command.LIST))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"lxz333"},"content":"                response \u003d taskList.printCurrentTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.MARK))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"lxz333"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"lxz333"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"lxz333"},"content":"                response \u003d markAsDone(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.UNMARK))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"lxz333"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"lxz333"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"lxz333"},"content":"                response \u003d markAsDone(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"lxz333"},"content":"            } else if (userInput.equals(parser.convertEnum(Command.BYE))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"lxz333"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.TODO))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"lxz333"},"content":"                Todo todo_task \u003d new Todo(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"lxz333"},"content":"                addTask(todo_task);","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"lxz333"},"content":"                response \u003d messageOfAdd(todo_task);","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.DEADLINE))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"lxz333"},"content":"                Deadline ddl_task \u003d new Deadline(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"lxz333"},"content":"                addTask(ddl_task);","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"lxz333"},"content":"                response \u003d messageOfAdd(ddl_task);","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.EVENT))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"lxz333"},"content":"                Event event_task \u003d new Event(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"lxz333"},"content":"                addTask(event_task);","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"lxz333"},"content":"                response \u003d messageOfAdd(event_task);","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.DELETE))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"lxz333"},"content":"                String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":224,"author":{"gitId":"lxz333"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":225,"author":{"gitId":"lxz333"},"content":"                response \u003d deleteMessage(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":226,"author":{"gitId":"lxz333"},"content":"            } else if (command.equals(parser.convertEnum(Command.FIND))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"lxz333"},"content":"                parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"lxz333"},"content":"                String keywords \u003d userInput.substring(5);","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"lxz333"},"content":"                String[] keywordList \u003d keywords.split(\" \");","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"lxz333"},"content":"                response \u003d findMessage(keywordList);","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"lxz333"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":232,"author":{"gitId":"lxz333"},"content":"                throw new WeirdInputException();","lastModifiedDate":"2023-02-11"},{"lineNumber":233,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":234,"author":{"gitId":"lxz333"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":235,"author":{"gitId":"lxz333"},"content":"        } catch (WeirdInputException exc) {","lastModifiedDate":"2023-02-11"},{"lineNumber":236,"author":{"gitId":"lxz333"},"content":"            return exc.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":237,"author":{"gitId":"lxz333"},"content":"        } catch (DukeException exc) {","lastModifiedDate":"2023-02-11"},{"lineNumber":238,"author":{"gitId":"lxz333"},"content":"            return exc.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":239,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":240,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":241,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":242,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":243,"author":{"gitId":"lxz333"},"content":"     * Runs the program and outputs corresponding results.","lastModifiedDate":"2023-02-07"},{"lineNumber":244,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":245,"author":{"gitId":"lxz333"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":246,"author":{"gitId":"lxz333"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":247,"author":{"gitId":"lxz333"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":248,"author":{"gitId":"lxz333"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":249,"author":{"gitId":"lxz333"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":250,"author":{"gitId":"lxz333"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":251,"author":{"gitId":"lxz333"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"lxz333"},"content":"        System.out.println(ui.greeting());","lastModifiedDate":"2023-01-31"},{"lineNumber":254,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":255,"author":{"gitId":"lxz333"},"content":"        loadDataFromDisk();","lastModifiedDate":"2023-01-31"},{"lineNumber":256,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":257,"author":{"gitId":"lxz333"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":258,"author":{"gitId":"lxz333"},"content":"        String userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":259,"author":{"gitId":"lxz333"},"content":"        while (true) {","lastModifiedDate":"2023-01-31"},{"lineNumber":260,"author":{"gitId":"lxz333"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":261,"author":{"gitId":"lxz333"},"content":"            commandList.add(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":262,"author":{"gitId":"lxz333"},"content":"            String[] expressions \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":263,"author":{"gitId":"lxz333"},"content":"            String command \u003d expressions[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":264,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":265,"author":{"gitId":"lxz333"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":266,"author":{"gitId":"lxz333"},"content":"                if (userInput.equals(parser.convertEnum(Command.LIST))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":267,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(taskList.printCurrentTasks()));","lastModifiedDate":"2023-02-07"},{"lineNumber":268,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.MARK))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":269,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":270,"author":{"gitId":"lxz333"},"content":"                    String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":271,"author":{"gitId":"lxz333"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":272,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(markAsDone(index)));","lastModifiedDate":"2023-02-07"},{"lineNumber":273,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.UNMARK))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":274,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":275,"author":{"gitId":"lxz333"},"content":"                    String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":276,"author":{"gitId":"lxz333"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":277,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(markAsDone(index)));","lastModifiedDate":"2023-02-07"},{"lineNumber":278,"author":{"gitId":"lxz333"},"content":"                } else if (userInput.equals(parser.convertEnum(Command.BYE))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":279,"author":{"gitId":"lxz333"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":280,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.TODO))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":281,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":282,"author":{"gitId":"lxz333"},"content":"                    Todo todo_task \u003d new Todo(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":283,"author":{"gitId":"lxz333"},"content":"                    addTask(todo_task);","lastModifiedDate":"2023-01-31"},{"lineNumber":284,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(messageOfAdd(todo_task)));","lastModifiedDate":"2023-02-07"},{"lineNumber":285,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.DEADLINE))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":286,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":287,"author":{"gitId":"lxz333"},"content":"                    Deadline ddl_task \u003d new Deadline(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":288,"author":{"gitId":"lxz333"},"content":"                    addTask(ddl_task);","lastModifiedDate":"2023-01-31"},{"lineNumber":289,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(messageOfAdd(ddl_task)));","lastModifiedDate":"2023-02-07"},{"lineNumber":290,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.EVENT))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":291,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":292,"author":{"gitId":"lxz333"},"content":"                    Event event_task \u003d new Event(userInput);","lastModifiedDate":"2023-01-31"},{"lineNumber":293,"author":{"gitId":"lxz333"},"content":"                    addTask(event_task);","lastModifiedDate":"2023-01-31"},{"lineNumber":294,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(messageOfAdd(event_task)));","lastModifiedDate":"2023-02-07"},{"lineNumber":295,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.DELETE))) {","lastModifiedDate":"2023-01-31"},{"lineNumber":296,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-01-31"},{"lineNumber":297,"author":{"gitId":"lxz333"},"content":"                    String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-01-31"},{"lineNumber":298,"author":{"gitId":"lxz333"},"content":"                    int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":299,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(deleteMessage(index)));","lastModifiedDate":"2023-02-07"},{"lineNumber":300,"author":{"gitId":"lxz333"},"content":"                } else if (command.equals(parser.convertEnum(Command.FIND))) {","lastModifiedDate":"2023-02-07"},{"lineNumber":301,"author":{"gitId":"lxz333"},"content":"                    parser.checkEmpty(userInput, command);","lastModifiedDate":"2023-02-07"},{"lineNumber":302,"author":{"gitId":"lxz333"},"content":"                    String keyword \u003d userInput.substring(5);","lastModifiedDate":"2023-02-07"},{"lineNumber":303,"author":{"gitId":"lxz333"},"content":"                    System.out.println(ui.separate(findMessage(keyword)));","lastModifiedDate":"2023-02-07"},{"lineNumber":304,"author":{"gitId":"lxz333"},"content":"                } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":305,"author":{"gitId":"lxz333"},"content":"                    throw new WeirdInputException();","lastModifiedDate":"2023-01-31"},{"lineNumber":306,"author":{"gitId":"lxz333"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":307,"author":{"gitId":"lxz333"},"content":"            } catch (WeirdInputException exc) {","lastModifiedDate":"2023-01-31"},{"lineNumber":308,"author":{"gitId":"lxz333"},"content":"                System.out.println(ui.separate(exc.toString()));","lastModifiedDate":"2023-01-31"},{"lineNumber":309,"author":{"gitId":"lxz333"},"content":"            } catch (DukeException exc) {","lastModifiedDate":"2023-01-31"},{"lineNumber":310,"author":{"gitId":"lxz333"},"content":"                System.out.println(ui.separate(exc.toString()));","lastModifiedDate":"2023-01-31"},{"lineNumber":311,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":312,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":313,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":314,"author":{"gitId":"lxz333"},"content":"        System.out.println(ui.ending());","lastModifiedDate":"2023-01-31"},{"lineNumber":315,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":316,"author":{"gitId":"lxz333"},"content":"        String stringCommands \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":317,"author":{"gitId":"lxz333"},"content":"        for (String command: commandList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":318,"author":{"gitId":"lxz333"},"content":"            stringCommands +\u003d (command + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":319,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":320,"author":{"gitId":"lxz333"},"content":"        storage.saveToDisk(stringCommands + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":321,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lxz333":320,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * Exception class.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    protected String errorMsg;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"     * Constructor.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"     * @param errorMsg The error message of the exception.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"     * Returns the error message.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"     * @return The error message.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"        return this.errorMsg;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":28}},{"path":"src/main/java/duke/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"public class EmptyDeadlineException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"     * Constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"        super(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":10}},{"path":"src/main/java/duke/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"public class EmptyEventException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"    public EmptyEventException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"        super(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":7}},{"path":"src/main/java/duke/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"public class EmptyListException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"    public EmptyListException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"        super(\"OOPS!!! The list cannot be empty when u do marking, unmarking or deleting.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":7}},{"path":"src/main/java/duke/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"public class EmptyTodoException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"        super(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":7}},{"path":"src/main/java/duke/WeirdInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"public class WeirdInputException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"    public WeirdInputException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":8}},{"path":"src/main/java/duke/WrongIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"public class WrongIndexException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"    public WrongIndexException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"        super(\"OOPS!!! The index cannot be out of bounds.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":7}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":" * Storage class that can do data saving and data loading.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    protected String directoryPath;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"     * Constructor.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"     * @param directoryPath The path of the directory for storage.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"     * @param filePath The path of the file for storage.","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    public Storage(String directoryPath, String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"     * Saves the command message to the disk.","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"     * @param commandMsg The command message to save to the disk.","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"    public void saveToDisk(String commandMsg) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"            if (new File(filePath).exists() \u003d\u003d false) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"                Files.createDirectories(Path.of(directoryPath));","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"            fw.write(commandMsg);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"            System.out.println(\"Error: unable to save tasks to the disk :(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"lxz333"},"content":"     * Loads the data from the disk.","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"lxz333"},"content":"     * @param commandList The ArrayList we use to store the output data.","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"lxz333"},"content":"    public void loadData(ArrayList\u003cString\u003e commandList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"lxz333"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"lxz333"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"lxz333"},"content":"            if (file.exists() \u003d\u003d false) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"lxz333"},"content":"                return;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"lxz333"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"lxz333"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"lxz333"},"content":"                String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"lxz333"},"content":"                commandList.add(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"lxz333"},"content":"            sc.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"lxz333"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"lxz333"},"content":"            System.out.println(\"No data storage file exists.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lxz333":71}},{"path":"src/main/java/task/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * Enum class that specifies all possible commands.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"public enum Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE, FIND","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"lxz333":8}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":" * Deadline class that extends from the Task class.","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":" * It has an additional deadline attribute.","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"    protected LocalDate ddl;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    protected String name;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"     * @param name The content of the deadline command.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"    public Deadline(String name) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"        super(name);","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"        this.name \u003d name.substring(\"deadline\".length() + 1, name.indexOf(\"/by\") - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"        this.ddl \u003d LocalDate.parse(name.substring(name.indexOf(\"/by\") + 4));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"        return \"[D]\" + super.toString().substring(0, \"[ ] \".length()) +","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"                this.name + \" (by: \" + ddl.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":31}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * Event class that extends from the Task class.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" * It has additional attributes starting time and ending time.","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"    protected String start;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    protected String end;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"    protected String name;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"     * Constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"     * @param name The content of the event command.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    public Event(String name) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"        super(name);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"        this.start \u003d name.substring(name.indexOf(\"/from\") + \"/from \".length(), name.indexOf(\"/to\") - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"        this.end \u003d name.substring(name.indexOf(\"/to\") + \"/to \".length());","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"        this.name \u003d name.substring(\"event\".length() + 1, name.indexOf(\"/from\") - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"        return \"[E]\" + super.toString().substring(0, \"[ ] \".length()) + this.name +","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"                \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":29}},{"path":"src/main/java/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import duke.*;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":" * Parser class that handles user input.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"     * Checks whether the input is empty or not.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"     * @param input The user input.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"     * @param command The corresponding command we check the input against.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"     * @throws DukeException When the input is empty.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"    public void checkEmpty(String input, String command) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"        if (input.length() \u003c command.length() + 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"            switch (command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"                    throw new EmptyTodoException();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"                    throw new EmptyDeadlineException();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"                case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"                    throw new EmptyEventException();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"                case \"mark\": case \"unmark\": case \"delete\": case \"find\":","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"                    throw new EmptyListException();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"     * Coverts enum into string.","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"     * @param c Enum command given.","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"     * @return Lowercase form of the enum.","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"    public String convertEnum(Command c) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"        switch (c) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"            case LIST: case MARK: case TODO: case EVENT: case FIND:","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"            case DELETE: case UNMARK: case DEADLINE: case BYE:","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"                res \u003d c.name().toLowerCase();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lxz333":46}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * The superclass of all kinds of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    protected String name;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"    protected boolean isMarked;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"     * Constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"     * @param name Content of the task.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"     * Mark the task.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    public void mark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"     * Unmark the task.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"        if (this.isMarked) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"            return \"[ ] \" + this.name;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"lxz333":42}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":" * The ArrayList of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"     * Prints the tasks in the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"     * @return All tasks stored in the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    public String printCurrentTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"            res \u003d \"Sorry this list is empty T^T\";","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"            return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"        res +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"            if (i \u003d\u003d this.size() - 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"                res +\u003d (i + 1) + \". \" + this.get(i);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"                res +\u003d (i + 1) + \". \" + this.get(i) + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"    public String getTasksWanted(String... keywords) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"            for (String keyword: keywords) {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"                if (this.get(i).toString().contains(keyword)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"                    if (i \u003d\u003d this.size() - 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"                        result +\u003d count + \". \" + this.get(i);","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"lxz333"},"content":"                    } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"lxz333"},"content":"                        result +\u003d count + \". \" + this.get(i) + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"lxz333"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"lxz333"},"content":"                    count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"lxz333"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"lxz333"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"lxz333"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"lxz333"},"content":"        return result;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lxz333":48}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * Todo class that extends from the Task class.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" * It has no additional attribute.","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"        super(name);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lxz333":15}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":" * The Ui that processes user input and replies the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"     * Greets the user when Duke is started.","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"     * @return Greeting sentences.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    public String greeting() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"        String str \u003d \"Hi~ I\u0027m duke.Duke\u003e_\u003c\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"        return str;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"     * Puts the input string between 2 separating lines.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"     * @param str The input string.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"     * @return New string with separating lines.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"    public String separate(String str) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"        String sep_line \u003d \"---------------------------------------------------------------\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"        return sep_line + \"\\n\" + str + \"\\n\" + sep_line;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"lxz333"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"lxz333"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"lxz333"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"lxz333"},"content":"     * @return Message of goodbye.","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"lxz333"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"lxz333"},"content":"    public String ending() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"lxz333"},"content":"        String str \u003d \"Bye~ Hope to see you again soon:)\";","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"lxz333"},"content":"        return separate(str);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"lxz333":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#a1344a\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lxz333":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.effect.Blend?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#220101\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"lxz333"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"lxz333"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"lxz333"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"lxz333"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" spacing\u003d\"1.0\" style\u003d\"-fx-background-color: lavender; -fx-font-size: 14px; -fx-font-style: normal;\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"lxz333"},"content":"               \u003ceffect\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"lxz333"},"content":"                  \u003cBlend /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"               \u003c/effect\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"lxz333"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"lxz333"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"lxz333"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"lxz333"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"lxz333":27}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"import task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"    public void testMsgOfAdd() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"        Task task \u003d new Task(\"todo borrow book\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"        assertEquals(duke.messageOfAdd(task), \"Got it. I\u0027ve added this task:\\n \" + task + \"\\nNow you have 0 tasks in the list:D\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"lxz333":15}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"public class EventTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    public void testToString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"        Event event \u003d new Event(\"event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"        assertEquals(event.toString(), \"[E][ ] project meeting (from: Mon 2pm to: 4pm)\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"lxz333":13}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"package ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"public class UiTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"    public void testGreeting() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"        String str \u003d \"Hi~ I\u0027m duke.Duke\u003e_\u003c\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"        assertEquals(str, \"Hi~ I\u0027m duke.Duke\u003e_\u003c\\nWhat can I do for you?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"lxz333":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lxz333"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lxz333"},"content":"todo borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lxz333"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"lxz333"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"lxz333"},"content":"blah","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"lxz333"},"content":"todo","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"lxz333"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"lxz333"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"lxz333"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"lxz333"},"content":"unmark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"lxz333"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"lxz333"},"content":"delete 1","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"lxz333"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"lxz333"},"content":"delete 4","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"lxz333"},"content":"mark 4","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"lxz333":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lxz333"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lxz333":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"lxz333"},"content":"java -classpath ../bin Execute \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lxz333":1,"-":37}}]
