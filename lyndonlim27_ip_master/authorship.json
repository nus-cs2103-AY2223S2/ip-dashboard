[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lyndonlim27":16,"-":40}},{"path":"data/eren.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"  TYPE  | COMPLETED | DETAILS | DATE","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"Deadline|    NO     | hoho | 27 Jan 1999 03:00pm","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"  Event |    NO     | bobo | 27 Jan 1999 07:00pm - 28 Jan 1999 09:00am","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"  Todo  |    NO     | Clean house | ---","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"  Todo  |    NO     | testing | ---","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"  Todo  |    NO     | haha | ---","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"  Todo  |    NO     | hehe | ---","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"  Todo  |    NO     | test | ---","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":8}},{"path":"src/main/java/duke/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":" * Handles the conversion of time from user input","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"public class DateTime {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"     * Return dateTime from user given input","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * @param words user input that has been put into an array of strings","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * @param index the index before the date","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     * @return return LocalDateTime derived from user input","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    public static LocalDateTime getDateTime(String[] words, int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"        if (index !\u003d -1 \u0026\u0026 words.length \u003e\u003d index+2) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"                dateTime \u003d LocalDateTime.parse(words[index+1] + \" \" + words[index+2], formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"                return dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"                return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"                return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"            return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lyndonlim27":36}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"import javax.swing.*;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    private HBox hbox;","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    private Circle circle;","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"        circle.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"        hbox.setStyle(\"-fx-background-color: Beige\");","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":70}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":" * This class is for the starting screen and the loop the commands in Ui class","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":" * ","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":" * CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":" * AY22/23 Semester 2.","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":" * @author Lyndon Lim Liang Hng ","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    private boolean hasEnded;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new Duke instance","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"     * @param mainWindow Controller for MainWindow","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"    public Duke(MainWindow mainWindow) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"        assert mainWindow !\u003d null : \"Something is wrong with the creaiton of mainWindow\";","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        parser \u003d new Parser(mainWindow);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"        ui \u003d new Ui(parser,mainWindow);","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        tasks \u003d new TaskList(storage.loadFile(),mainWindow);","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(\"Hello! I\u0027m Eren\\nWhat can I do for you?\");","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(\"Type your input below: \\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"     * Receives input from user and sends to Ui class to handle it","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"     * @param input User input command","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"    public void processInput(String input) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        ui.receiveInput(tasks, storage,input);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"lyndonlim27":56,"-":1}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Exception for when command is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new EmptyDescriptionException instance","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"     * @param errorMessage Error message to display when exception thrown","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    public EmptyDescriptionException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"lyndonlim27":17}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Exception for when command is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new InvalidCommandException instance","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"     * @param errorMessage Error message to display when exception thrown","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"lyndonlim27":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"            duke \u003d new Duke(fxmlLoader.\u003cMainWindow\u003egetController());","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMain(duke, this);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    private Main main;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    private Image erenImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Eren.jpeg\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"     * Set the current instance of duke and main for this class","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"     * @param duke current instance of duke","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"     * @param main current instance of main","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"    public void setMain(Duke duke, Main main) {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"        this.main \u003d main;","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"     * Creates one dialog box echoing user input and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"    private void handleUserInput() throws IOException{","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"        duke.processInput(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"     * Creates a dialog box containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"     * the dialog container.","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"    public void sendDukeResponse(String reply) {","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"        if (reply !\u003d \"\") {","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"                    DialogBox.getDukeDialog(reply, erenImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"            );","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new Parser instance","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * @param mainWindow Controller for MainWindow","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    public Parser(MainWindow mainWindow) {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"     * Runs the input command given by the user and write into file if list has changed","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"     * @param tasks Arraylist containing task objects","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"     * @param storage Storage class that manages save and loading","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     * @param words User input","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     * @return true if command is bye, otherwise return false","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"     * @throws IndexOutOfBoundsException When index given is larger than the taskList","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"     * @throws NumberFormatException When a string is given instead of a number for some commmands","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"     * @throws InvalidCommandException When user inputs an invalid command","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"     * @throws EmptyDescriptionException When user inputs an empty description","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    public boolean runCommand(TaskList tasks, Storage storage, String[] words) throws IndexOutOfBoundsException,","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"            NumberFormatException, InvalidCommandException, EmptyDescriptionException {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        boolean hasTaskChanged \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        words[0] \u003d words[0].toUpperCase();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        switch(words[0]) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"        case \"BYE\":","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"            return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        case \"LIST\":","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"            tasks.printList();","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        case \"MARK\":","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"            Task markTask \u003d tasks.getTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"            markTask.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"            hasTaskChanged \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(markTask.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"            Task unmarkTask \u003d tasks.getTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"            unmarkTask.unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"            hasTaskChanged \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(unmarkTask.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"        case \"TODO\":","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"            String[] sliceWords \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"            hasTaskChanged \u003d tasks.addTask(sliceWords, words[0]);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"            hasTaskChanged \u003d tasks.deleteTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        case \"FIND\":","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"            if (words.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"                throw new EmptyDescriptionException(\"Search keyword cannot be empty\");","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"            String[] findWords \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"            tasks.findTask(String.join(\" \", findWords));","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"            throw new InvalidCommandException(\"Invalid command. Please try again\");","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"        if(words[0] !\u003d \"LIST\" \u0026\u0026 hasTaskChanged) {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"            storage.saveFile(tasks.getListOfTask());","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"     * Returns the index of given word","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"     * @param words Array of words to look from","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"     * @param word Word to look for","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"     * @return The index of the given word, if it doesnt exist, return -1","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"    public static int getIndexOfWord(String[] words, String word) {","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"            if (words[i].equals(word)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"                index \u003d i;","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"        return index;","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lyndonlim27":102}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    private static String FILE_PATH \u003d \"./data/eren.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    private static String DIR_PATH \u003d \"./data/\";","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     * Saves the list of task in txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"        String fileContent;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"        String dateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"        fileContent \u003d \"  TYPE  | COMPLETED | DETAILS | DATE\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"            dateTime \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"            if (t.getType() \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"                fileContent +\u003d \"  Todo  |\";","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"            else if (t.getType() \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"                fileContent +\u003d \"Deadline|\";","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"                    Deadline task \u003d (Deadline) t;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"                    dateTime \u003d task.getDateTime();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"            else {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"                fileContent +\u003d \"  Event |\";","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"                if (t instanceof Event) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"                    Event task \u003d (Event) t;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"                    dateTime \u003d task.getDateTime();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"            fileContent +\u003d t.isDone() ? \"    YES    | \" : \"    NO     | \";","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"            fileContent +\u003d t.getDescription() + \" | \" ;","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"            fileContent +\u003d (dateTime \u003d\u003d null ? \"---\" : dateTime) + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"            Files.createDirectories(Paths.get(DIR_PATH));","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Error creating folder\");","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        if(!file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(\"Error saving to file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        writeToFile(fileContent);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"     * Writes to file","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"     * @param description File content to be written to the file","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"    public void writeToFile(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"            fw.write(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"            fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"          } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Error writing to file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"          }","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"     * Loads the list of task from txt file","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"        try {   ","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"                BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"                String currLine;","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"                Boolean hasSkipped \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"                String[] splitInput;","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"                Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\");","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"                while ((currLine \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"                    if(!hasSkipped) {","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"                        splitInput \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"                        if(splitInput[0].contains(\"Deadline\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"                            dateTime \u003d LocalDateTime.parse(splitInput[3].trim(), formatter); ","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"                            task \u003d new Deadline(splitInput[2].trim(),dateTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"                        } else if(splitInput[0].contains(\"Todo\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"                            task \u003d new Todo(splitInput[2].trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"                        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"                            String[] splitToAndFrom \u003d (splitInput[3].trim()).split(\" - \");","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"                            dateTime \u003d LocalDateTime.parse(splitToAndFrom[0], formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"                            LocalDateTime dateTimeTo \u003d LocalDateTime.parse(splitToAndFrom[1], formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"                            task \u003d new Event(splitInput[2].trim(), dateTime, dateTimeTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"lyndonlim27"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"                        if(splitInput[1].contains(\"YES\"))","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"lyndonlim27"},"content":"                            task.mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"                        tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"lyndonlim27"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"                    hasSkipped \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"                assert tasks.size() \u003e\u003d 0 : \"Something is wrong with the data file\";","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"                fileReader.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"lyndonlim27"},"content":"                return tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Error when loading file, a new file will be created\");","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"        return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lyndonlim27":132}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":" * Contains the task list and it has operations to add/delete tasks in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"    ","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new TaskList instance","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"     * @param mainWindow Controller for MainWindow","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"     * @param list List of the tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    public TaskList(ArrayList\u003cTask\u003e list, MainWindow mainWindow) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"        tasks \u003d list;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"     * Adds a Task to the list given the description","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"     * @param words Description given by user input","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"     * @param type The type of task","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"     * @return true if task has been added successfully, else false","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"     * @throws EmptyDescriptionException when user gives an empty description","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    public boolean addTask(String[] words, String type) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"            throw new EmptyDescriptionException(\"The description of \" + type + \" cannot be empty. Please try again\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        if (type.equals(\"TODO\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"            task \u003d new Todo(String.join(\" \", words ));","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"            String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"            if (type.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"                int indexForBy \u003d Parser.getIndexOfWord(words, \"/by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"                assert indexForBy \u003c -1 : \"Something is wrong with the retrival of the index for the word by\";","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"                if (indexForBy \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"                    throw new EmptyDescriptionException(\"The description of \" + type + \" cannot be empty. Please try again\");","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTimeBy \u003d DateTime.getDateTime(words,indexForBy);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"                if (dateTimeBy \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"                    mainWindow.sendDukeResponse(\"Please enter in this format {description} /by DD/MM/YYYY HHMM. Try again\");","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"                    return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"                description \u003d String.join(\" \",Arrays.copyOfRange(words, 0, indexForBy));","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"                task \u003d new Deadline(description,DateTime.getDateTime(words,indexForBy));","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"            else {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"                int indexForFrom \u003d Parser.getIndexOfWord(words, \"/from\");","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"                assert indexForFrom \u003c -1 : \"Something is wrong with the retrival of the index for the word from\";","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"                if (indexForFrom \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"                    throw new EmptyDescriptionException(\"The description of \" + type + \" cannot be empty. Please try again\");","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"                int indexForTo \u003d Parser.getIndexOfWord(words, \"/to\");","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"                assert indexForTo \u003c -1 : \"Something is wrong with the retrival of the index for the word from\";","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"                if (DateTime.getDateTime(words,indexForFrom) \u003d\u003d null || DateTime.getDateTime(words,indexForTo) \u003d\u003d null) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"                    mainWindow.sendDukeResponse(\"Please enter in this format {description} /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM. Try again\");","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"                    return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"                assert tasks.size() \u003e\u003d 1 : \"Something is wrong with add of task\";","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTimeFrom \u003d DateTime.getDateTime(words,indexForFrom);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTimeTo \u003d DateTime.getDateTime(words,indexForTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"                description \u003d String.join(\" \",Arrays.copyOfRange(words, 0, indexForFrom));","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"                task \u003d new Event(description,dateTimeFrom,dateTimeTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"        assert tasks.size() \u003e\u003d 1 : \"Something is wrong with add of task\";","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"        return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"     * Deletes a Task from the list given the index","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"     * @param num Index of the task to be deleted","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"     * @return true if task has been deleted, else false","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"     * @throws IndexOutOfBoundsException If num \u003e listOfTask.size()","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"    public boolean deleteTask(int num) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"        Task selectedTask \u003d getTask(num);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"        tasks.remove(selectedTask);","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"        assert tasks.size() \u003e\u003d 0 : \"Something is wrong with deleting of task\";","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(\"Noted. I\u0027ve removed this task:\\n\" + selectedTask);","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"        return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"     * Prints the list","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"    public void printList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"        String listOfTask \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"           listOfTask +\u003d (i+1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(listOfTask);","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"     * Retrieves the Task object from the list given an index","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"     * @param num Index of the task to retrieve","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"lyndonlim27"},"content":"     * @return returns a Task object","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"     * @throws IndexOutOfBoundsException When accessed index is not within the list length","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"    public Task getTask(int num) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"        return tasks.get(num-1);","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"     * Returns a list of task","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"     * @return return a list of task","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"    public ArrayList\u003cTask\u003e getListOfTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"lyndonlim27"},"content":"        return tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"     * Prints out all matching task in the list based on user\u0027s keyword","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"lyndonlim27"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"lyndonlim27"},"content":"     * @param description user input keyword","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"    public void findTask(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"lyndonlim27"},"content":"        String foundTasks \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"        boolean hasFound \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"lyndonlim27"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"lyndonlim27"},"content":"                if (!hasFound) {","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"lyndonlim27"},"content":"                    hasFound \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"                    mainWindow.sendDukeResponse(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"                foundTasks +\u003d index + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"                index++;","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"        mainWindow.sendDukeResponse(foundTasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"        if (!hasFound) {","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(\"No matching tasks found in your list:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lyndonlim27":160}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    private BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new Ui instance","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     * @param parser Parser instance","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     * @param mainWindow Controller for MainWindow","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    public Ui(Parser parser, MainWindow mainWindow) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     * Receives command given by the user and pass to parser to run the command","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"     * @param tasks Arraylist containing task objects","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"     * @param storage Storage class that manages save and loading","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"     * @return true if command is bye, otherwise return false","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"     * @throws IOException If an I/O error occurs","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"    public boolean receiveInput(TaskList tasks, Storage storage, String input) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"        String[] words;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        boolean isCommandBye \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        words \u003d input.split(\" \");","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"        try { ","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"            isCommandBye \u003d parser.runCommand(tasks, storage, words);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(\"Number out of range/Input empty. Please try again!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(\"Invalid number. Please enter a number!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"            mainWindow.sendDukeResponse(e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"        return isCommandBye;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"lyndonlim27":52}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":" * Represents a Deadline task","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    public LocalDateTime date;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new Deadline instance","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * @param date Date and time of the due date","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"     * Returns date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     * @return String representation of date and time in this format \"DD MMM yyyy hh:mma\"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        return \"[\" + type + \"]\" + \"[\" + getStatusIcon()+ \"] \" + this.description + \" (by: \" + ","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"                date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":" * Represents an Event task","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"    public LocalDateTime dateTimeFrom;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    public LocalDateTime dateTimeTo;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new Todo instance","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     * @param dateTimeFrom Starting date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     * @param dateTimeTo Ending date and time","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    public Event(String description, LocalDateTime dateTimeFrom, LocalDateTime dateTimeTo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        this.dateTimeFrom \u003d dateTimeFrom;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"        this.dateTimeTo \u003d dateTimeTo;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"     * Returns date and time of from and to","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"     * @return String representation of date and time from and to in this format \"DD MMM yyyy hh:mma\"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"        return dateTimeFrom.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\")) + \" - \" +","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"                dateTimeTo.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        return \"[\" + type + \"]\" + \"[\" + getStatusIcon()+ \"] \" + this.description + \" (from: \" + ","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"                dateTimeFrom.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\")) + \" to: \" +","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"                dateTimeTo.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Represents a task","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"    protected char type \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new task instance","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"     * Retrieves mark status of task","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"     * @return Return a string \"X\" if the task is mark as completed, otherwise return blank","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"     * Returns the status of the current task","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"     * @return false if task is unmark and True if task is mark","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"     * Returns the type of the current task","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"     * @return Type of current task","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"    public char getType() {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"        return this.type;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"     * Returns the description of the current task","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"     * @return Description of current task","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        return this.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"     * Mark the task as done","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"     * Unmark the task as not done","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":70}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"package duke.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"/*","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":" * Represents a Todo task","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"     * Constructs a new Todo instance","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"        return \"[\" + type + \"]\" + \"[\" + getStatusIcon()+ \"] \" + this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":25}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"\u003cfx:root fx:id\u003d\"hbox\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: azure; -fx-border-color: lightgrey transparent lightgrey transparent;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"        \u003cLabel fx:id\u003d\"dialog\" cache\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"            \u003cFont name\u003d\"AppleGothic Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"      \u003cCircle fx:id\u003d\"circle\" fill\u003d\"DODGERBLUE\" radius\u003d\"49.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"            \u003cDropShadow /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"         \u003c/effect\u003e\u003c/Circle\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: darkblue; -fx-border-color: darkblue;\" stylesheets\u003d\"@../stylesheets/scrollPane.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type your input...\" style\u003d\"-fx-background-color: aliceblue; -fx-prompt-text-fill: black; -fx-border-color: darkblue;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"            \u003cFont name\u003d\"AppleGothic Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: deepskyblue; -fx-border-color: black;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"553.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: darkblue; -fx-border-color: darkblue;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: aliceblue; -fx-border-color: aliceblue;\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":23}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"//import duke.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"//import duke.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"//import duke.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"//import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"///*","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"// * Test for Parser class","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"// */","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"//public class ParserTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"//    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"//     * Tests whether a todo task can be mark","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"//     */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"//    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"//    public void markTodoTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"//        Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"//        TaskList taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"//        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"//        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"//            parser.runCommand(taskList, storage, (\"Todo Clean house\").split(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"//            String command \u003d \"mark \" + taskList.getListOfTask().size();","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"//            parser.runCommand(taskList, storage, command.split(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"//            Task lastTask \u003d taskList.getListOfTask().get(taskList.getListOfTask().size() - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"//            assertEquals(lastTask.isDone(),true);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"//            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"//        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"//    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"//    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"//     * Tests whether a task can be unmark","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"//     */","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"//    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"//    public void unmarkTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"//        Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"//        TaskList taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"//        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"//        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"//            String command \u003d \"unmark \" + taskList.getListOfTask().size();","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"//            parser.runCommand(taskList, storage, command.split(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"//            Task lastTask \u003d taskList.getListOfTask().get(taskList.getListOfTask().size() - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"//            assertEquals(lastTask.isDone(),false);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"//            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"//        }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"//    }","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"//    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"//     * Tests whether a task can be deleted","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"//     */","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"//    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"//    public void deleteTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"//        Storage storage \u003d new Storage();","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"//        TaskList taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"//        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"//        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"//            int originalLen \u003d taskList.getListOfTask().size();","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"//            String command \u003d \"delete \" + taskList.getListOfTask().size();","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"//            parser.runCommand(taskList, storage, command.split(\" \"));","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"//            assertEquals(originalLen - 1,taskList.getListOfTask().size());","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"//            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"//        }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"//    }","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"//}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":68}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"//import java.time.LocalDate;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"//import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"//import java.time.LocalTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"//import duke.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"//import duke.task.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"//import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"//import duke.task.Todo;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"//import duke.task.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"///*","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"// * Test for TaskList class","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"// */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"//public class TaskListTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"//    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"//     * Tests whether a todo task can be added successfully","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"//     */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"//    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"//    public void addTodoTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"//        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"//        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"//            String[] description \u003d {\"Meet Friends\"};","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"//            taskList.addTask(description, \"TODO\");","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"//            assertEquals((new Todo(\"Meet Friends\")).toString(), taskList.getListOfTask().get(0).toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"//            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"//        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"//    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"//    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"//     * Tests whether a deadline task can be added successfully","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"//     */","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"//    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"//    public void addDeadlineTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"//        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"//        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"//            String[] description \u003d (\"Do 2103T iP /by 27/02/2023 2359\").split(\" \");","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"//            LocalDateTime dateTime \u003d LocalDateTime.of(LocalDate.of(2023, 2, 27), LocalTime.of(23, 59));","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"//            taskList.addTask(description, \"DEADLINE\");","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"//            assertEquals((new Deadline(\"Do 2103T iP\",dateTime)).toString(), taskList.getListOfTask().get(0).toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"//            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"//        }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"//    }","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"//    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"//     * Tests whether a event task can be added successfully","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"//     */","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"//    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"//    public void addEventTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"//","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"//        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"//        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"//            String[] description \u003d (\"2103T Team project /from 27/03/2023 2359 /to 29/03/2023 0000\").split(\" \");","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"//            LocalDateTime dateTimeFrom \u003d LocalDateTime.of(LocalDate.of(2023, 3, 27), LocalTime.of(23, 59));","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"//            LocalDateTime dateTimeTo \u003d LocalDateTime.of(LocalDate.of(2023, 3, 29), LocalTime.of(00, 00));","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"//            taskList.addTask(description, \"Event\");","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"//            assertEquals((new Event(\"2103T Team project\",dateTimeFrom,dateTimeTo)).toString(), taskList.getListOfTask().get(0).toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"//            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"//        }","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"//    }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"//}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"lyndonlim27":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"read book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":10}}]
