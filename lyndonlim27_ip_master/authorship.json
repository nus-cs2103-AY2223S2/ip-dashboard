[{"path":"data/eren.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"  TYPE  | COMPLETED | DETAILS | DATE","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"Deadline|    YES    | hoho | 27 Jan 1999 03:00pm","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"  Event |    NO     | bobo | 27 Jan 1999 07:00pm - 28 Jan 1999 09:00am","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"  Todo  |    NO     | hasdhasdas | 27 Jan 1999 07:00pm - 28 Jan 1999 09:00am","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"lyndonlim27":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"    public LocalDateTime date;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    public Deadline(String description, LocalDateTime date) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * Return date and time","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * @return String representation of date and time in this format \"DD MMM yyyy hh:mma\"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    public String getDateTime(){","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"        return \"[\" + type + \"]\" + \"[\" + getStatusIcon()+ \"] \" + this.description + \" (by: \" + ","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"                date.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"import java.io.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":" * A talking robot","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":" * CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":" * AY22/23 Semester 2.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":" * @author Lyndon Lim Liang Hng ","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    private static BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"    private static ArrayList\u003cTask\u003e strArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    private static String FILE_PATH \u003d \"./data/eren.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"    private static String DIR_PATH \u003d \"./data/\";","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"        System.out.println(\"Hello! I\u0027m Eren\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"lyndonlim27"},"content":"        boolean bool;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"lyndonlim27"},"content":"        loadFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lyndonlim27"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"lyndonlim27"},"content":"            bool \u003d runCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"lyndonlim27"},"content":"            if(!bool)","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lyndonlim27"},"content":"     * Run the input command given by the user","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lyndonlim27"},"content":"     * @return return False if command is bye, otherwise return true","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"lyndonlim27"},"content":"    private static boolean runCommand() throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"lyndonlim27"},"content":"        String[] words;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lyndonlim27"},"content":"        System.out.print(\"Type your input below: \\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"lyndonlim27"},"content":"        words \u003d br.readLine().split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"lyndonlim27"},"content":"        words[0] \u003d words[0].toUpperCase();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"lyndonlim27"},"content":"        try { ","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"lyndonlim27"},"content":"            switch(words[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"lyndonlim27"},"content":"            case \"BYE\":","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"lyndonlim27"},"content":"                horizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"lyndonlim27"},"content":"                return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"lyndonlim27"},"content":"            case \"LIST\":","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"lyndonlim27"},"content":"                printList();","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"lyndonlim27"},"content":"            case \"MARK\":","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"lyndonlim27"},"content":"                Task markTask \u003d getTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lyndonlim27"},"content":"                markTask.mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(markTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"lyndonlim27"},"content":"            case \"UNMARK\":","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"lyndonlim27"},"content":"                Task unmarkTask \u003d getTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"lyndonlim27"},"content":"                unmarkTask.unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(unmarkTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"lyndonlim27"},"content":"            case \"TODO\":","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"lyndonlim27"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"lyndonlim27"},"content":"            case \"EVENT\":","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"lyndonlim27"},"content":"                String[] sliceWords \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"lyndonlim27"},"content":"                specialTask(sliceWords, words[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"lyndonlim27"},"content":"            case \"DELETE\":","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"lyndonlim27"},"content":"                deleteTask(Integer.parseInt(words[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"lyndonlim27"},"content":"            default:","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"lyndonlim27"},"content":"                throw new InvalidCommandException(\"\");","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"lyndonlim27"},"content":"            if(words[0] !\u003d \"LIST\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lyndonlim27"},"content":"                saveFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"lyndonlim27"},"content":"            horizontalLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"lyndonlim27"},"content":"            return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"lyndonlim27"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Number out of range/empty. Please try again!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"lyndonlim27"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Invalid number. Please enter a number!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"lyndonlim27"},"content":"        } catch(InvalidCommandException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Invalid command. Pleas try again!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"lyndonlim27"},"content":"        } ","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"lyndonlim27"},"content":"        horizontalLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"lyndonlim27"},"content":"        return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"lyndonlim27"},"content":"     * Print a double horizontal line","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"lyndonlim27"},"content":"    private static void horizontalLine() { ","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"lyndonlim27"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"lyndonlim27"},"content":"            System.out.print(\"\u003d\");","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"lyndonlim27"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"lyndonlim27"},"content":"     * Print the list","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"lyndonlim27"},"content":"    private static void printList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"lyndonlim27"},"content":"        for (int i \u003d 0; i \u003c strArr.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println((i+1) + \". \" + strArr.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"lyndonlim27"},"content":"     * Retrieve the Task object from the list given an index","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"lyndonlim27"},"content":"     * @param num Index of the task to retrieve","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"lyndonlim27"},"content":"     * @return returns a Task object","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"lyndonlim27"},"content":"    private static Task getTask(int num) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"lyndonlim27"},"content":"        return strArr.get(num-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"lyndonlim27"},"content":"     * Add a Task to the list given the description","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"lyndonlim27"},"content":"     * @param words Array of strings to be added to the list","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"lyndonlim27"},"content":"     * @param type The type of task","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"lyndonlim27"},"content":"    private static void specialTask(String[] words, String type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"lyndonlim27"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"lyndonlim27"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"The description of \" + type + \" cannot be empty. Please try again\");","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"lyndonlim27"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"lyndonlim27"},"content":"        if (type.equals(\"TODO\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"lyndonlim27"},"content":"            task \u003d new Todo(String.join(\" \", words ));","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"lyndonlim27"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"lyndonlim27"},"content":"            String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"lyndonlim27"},"content":"            if (type.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"lyndonlim27"},"content":"                int indexForBy \u003d getIndexOfWord(words, \"/by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"lyndonlim27"},"content":"                if (indexForBy \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"lyndonlim27"},"content":"                    System.out.println(\"The description of \" + type + \" cannot be empty. Please try again\");","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"lyndonlim27"},"content":"                    return;","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTimeBy \u003d getDateTime(words,indexForBy);","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"lyndonlim27"},"content":"                if (dateTimeBy \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"lyndonlim27"},"content":"                    System.out.println(\"Please enter in this format {description} /by DD/MM/YYYY HHMM. Try again\");","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"lyndonlim27"},"content":"                    return;","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"lyndonlim27"},"content":"                description \u003d String.join(\" \",Arrays.copyOfRange(words, 0, indexForBy));","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"lyndonlim27"},"content":"                task \u003d new Deadline(description,getDateTime(words,indexForBy));","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"lyndonlim27"},"content":"            else {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"lyndonlim27"},"content":"                int indexForFrom \u003d getIndexOfWord(words, \"/from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"lyndonlim27"},"content":"                if (indexForFrom \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"lyndonlim27"},"content":"                    System.out.println(\"The description of \" + type + \" cannot be empty. Please try again\");","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"lyndonlim27"},"content":"                    return;","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"lyndonlim27"},"content":"                int indexForTo \u003d getIndexOfWord(words, \"/to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"lyndonlim27"},"content":"                if (getDateTime(words,indexForFrom) \u003d\u003d null || getDateTime(words,indexForTo) \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"lyndonlim27"},"content":"                    System.out.println(\"Please enter in this format {description} /from DD/MM/YYYY HHMM /to DD/MM/YYYY HHMM. Try again\");","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"lyndonlim27"},"content":"                    return;","lastModifiedDate":"2023-01-26"},{"lineNumber":176,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTimeFrom \u003d getDateTime(words,indexForFrom);","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTimeTo \u003d getDateTime(words,indexForTo);","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"lyndonlim27"},"content":"                description \u003d String.join(\" \",Arrays.copyOfRange(words, 0, indexForFrom));","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"lyndonlim27"},"content":"                task \u003d new Event(description,dateTimeFrom,dateTimeTo);","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"lyndonlim27"},"content":"        strArr.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"lyndonlim27"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"lyndonlim27"},"content":"        System.out.println(\"Now you have \" + strArr.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"lyndonlim27"},"content":"     * Delete a Task from the list given the index","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"lyndonlim27"},"content":"     * @param num Index of the task to be deleted","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"lyndonlim27"},"content":"    private static void deleteTask(int num) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"lyndonlim27"},"content":"        Task selectedTask \u003d getTask(num);","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"lyndonlim27"},"content":"        strArr.remove(selectedTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"lyndonlim27"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + selectedTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"lyndonlim27"},"content":"        System.out.println(\"Now you have \" + strArr.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":201,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"lyndonlim27"},"content":"     * Function to save list of task in txt file","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"lyndonlim27"},"content":"    private static void saveFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"lyndonlim27"},"content":"        String fileContent;","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"lyndonlim27"},"content":"        String dateTime \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"lyndonlim27"},"content":"        fileContent \u003d \"  TYPE  | COMPLETED | DETAILS | DATE\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"lyndonlim27"},"content":"        for (Task t : strArr) {","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"lyndonlim27"},"content":"            if (t.type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"lyndonlim27"},"content":"                fileContent +\u003d \"  Todo  |\";","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"lyndonlim27"},"content":"            else if (t.type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"lyndonlim27"},"content":"                fileContent +\u003d \"Deadline|\";","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"lyndonlim27"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"lyndonlim27"},"content":"                    Deadline task \u003d (Deadline) t;","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"lyndonlim27"},"content":"                    dateTime \u003d task.getDateTime();","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":219,"author":{"gitId":"lyndonlim27"},"content":"            else {","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"lyndonlim27"},"content":"                fileContent +\u003d \"  Event |\";","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"lyndonlim27"},"content":"                if (t instanceof Event) {","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"lyndonlim27"},"content":"                    Event task \u003d (Event) t;","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"lyndonlim27"},"content":"                    dateTime \u003d task.getDateTime();","lastModifiedDate":"2023-01-26"},{"lineNumber":224,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":225,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":226,"author":{"gitId":"lyndonlim27"},"content":"            fileContent +\u003d t.isDone ? \"    YES    | \" : \"    NO     | \";","lastModifiedDate":"2023-01-26"},{"lineNumber":227,"author":{"gitId":"lyndonlim27"},"content":"            fileContent +\u003d t.description + \" | \" ;","lastModifiedDate":"2023-01-26"},{"lineNumber":228,"author":{"gitId":"lyndonlim27"},"content":"            fileContent +\u003d (dateTime \u003d\u003d null ? \"---\" : dateTime) + \"\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":230,"author":{"gitId":"lyndonlim27"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":232,"author":{"gitId":"lyndonlim27"},"content":"            Files.createDirectories(Paths.get(DIR_PATH));","lastModifiedDate":"2023-01-26"},{"lineNumber":233,"author":{"gitId":"lyndonlim27"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-01-26"},{"lineNumber":234,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Error creating folder\");","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"lyndonlim27"},"content":"        if(!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"lyndonlim27"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"lyndonlim27"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"lyndonlim27"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"lyndonlim27"},"content":"                System.out.println(\"Error saving to file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"lyndonlim27"},"content":"        writeToFile(fileContent);","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"lyndonlim27"},"content":"     * Function to write to file","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":249,"author":{"gitId":"lyndonlim27"},"content":"     * @param description File content to be written to the file","lastModifiedDate":"2023-01-26"},{"lineNumber":250,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-26"},{"lineNumber":251,"author":{"gitId":"lyndonlim27"},"content":"    private static void writeToFile(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":252,"author":{"gitId":"lyndonlim27"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":253,"author":{"gitId":"lyndonlim27"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":254,"author":{"gitId":"lyndonlim27"},"content":"            fw.write(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":255,"author":{"gitId":"lyndonlim27"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":256,"author":{"gitId":"lyndonlim27"},"content":"          } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":257,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Error writing to file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":258,"author":{"gitId":"lyndonlim27"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":259,"author":{"gitId":"lyndonlim27"},"content":"          }","lastModifiedDate":"2023-01-26"},{"lineNumber":260,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":261,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":262,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":263,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":264,"author":{"gitId":"lyndonlim27"},"content":"     * Function to load the list of task from txt file","lastModifiedDate":"2023-01-26"},{"lineNumber":265,"author":{"gitId":"lyndonlim27"},"content":"     */ ","lastModifiedDate":"2023-01-26"},{"lineNumber":266,"author":{"gitId":"lyndonlim27"},"content":"    private static void loadFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":267,"author":{"gitId":"lyndonlim27"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-01-26"},{"lineNumber":268,"author":{"gitId":"lyndonlim27"},"content":"        try {   ","lastModifiedDate":"2023-01-26"},{"lineNumber":269,"author":{"gitId":"lyndonlim27"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":270,"author":{"gitId":"lyndonlim27"},"content":"                BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-26"},{"lineNumber":271,"author":{"gitId":"lyndonlim27"},"content":"                String currLine;","lastModifiedDate":"2023-01-26"},{"lineNumber":272,"author":{"gitId":"lyndonlim27"},"content":"                Boolean hasSkipped \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":273,"author":{"gitId":"lyndonlim27"},"content":"                String[] splitInput;","lastModifiedDate":"2023-01-26"},{"lineNumber":274,"author":{"gitId":"lyndonlim27"},"content":"                Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":275,"author":{"gitId":"lyndonlim27"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\");","lastModifiedDate":"2023-01-26"},{"lineNumber":276,"author":{"gitId":"lyndonlim27"},"content":"                LocalDateTime dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":277,"author":{"gitId":"lyndonlim27"},"content":"                while ((currLine \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":278,"author":{"gitId":"lyndonlim27"},"content":"                    if(!hasSkipped) {","lastModifiedDate":"2023-01-26"},{"lineNumber":279,"author":{"gitId":"lyndonlim27"},"content":"                        splitInput \u003d currLine.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":280,"author":{"gitId":"lyndonlim27"},"content":"                        if(splitInput[0].contains(\"Deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":281,"author":{"gitId":"lyndonlim27"},"content":"                            dateTime \u003d LocalDateTime.parse(splitInput[3].trim(), formatter); ","lastModifiedDate":"2023-01-26"},{"lineNumber":282,"author":{"gitId":"lyndonlim27"},"content":"                            task \u003d new Deadline(splitInput[2].trim(),dateTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":283,"author":{"gitId":"lyndonlim27"},"content":"                        } else if(splitInput[0].contains(\"Todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":284,"author":{"gitId":"lyndonlim27"},"content":"                            task \u003d new Todo(splitInput[2].trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":285,"author":{"gitId":"lyndonlim27"},"content":"                        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":286,"author":{"gitId":"lyndonlim27"},"content":"                            String[] splitToAndFrom \u003d (splitInput[3].trim()).split(\" - \");","lastModifiedDate":"2023-01-26"},{"lineNumber":287,"author":{"gitId":"lyndonlim27"},"content":"                            dateTime \u003d LocalDateTime.parse(splitToAndFrom[0], formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":288,"author":{"gitId":"lyndonlim27"},"content":"                            LocalDateTime dateTimeTo \u003d LocalDateTime.parse(splitToAndFrom[1], formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":289,"author":{"gitId":"lyndonlim27"},"content":"                            task \u003d new Event(splitInput[2].trim(), dateTime, dateTimeTo);","lastModifiedDate":"2023-01-26"},{"lineNumber":290,"author":{"gitId":"lyndonlim27"},"content":"                        }","lastModifiedDate":"2023-01-26"},{"lineNumber":291,"author":{"gitId":"lyndonlim27"},"content":"                        if(splitInput[1].contains(\"YES\"))","lastModifiedDate":"2023-01-26"},{"lineNumber":292,"author":{"gitId":"lyndonlim27"},"content":"                            task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":293,"author":{"gitId":"lyndonlim27"},"content":"                        strArr.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":294,"author":{"gitId":"lyndonlim27"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":295,"author":{"gitId":"lyndonlim27"},"content":"                    hasSkipped \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":296,"author":{"gitId":"lyndonlim27"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":297,"author":{"gitId":"lyndonlim27"},"content":"                fileReader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":298,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":299,"author":{"gitId":"lyndonlim27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":300,"author":{"gitId":"lyndonlim27"},"content":"            System.out.println(\"Error when loading file, a new file will be created\");","lastModifiedDate":"2023-01-26"},{"lineNumber":301,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":302,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":303,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":304,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":305,"author":{"gitId":"lyndonlim27"},"content":"     * Return index of given word","lastModifiedDate":"2023-01-26"},{"lineNumber":306,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":307,"author":{"gitId":"lyndonlim27"},"content":"     * @param words the array of words to look from","lastModifiedDate":"2023-01-26"},{"lineNumber":308,"author":{"gitId":"lyndonlim27"},"content":"     * @param word the word to look for","lastModifiedDate":"2023-01-26"},{"lineNumber":309,"author":{"gitId":"lyndonlim27"},"content":"     * @return return the index of the given word, if it doesnt exist, return -1","lastModifiedDate":"2023-01-26"},{"lineNumber":310,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":311,"author":{"gitId":"lyndonlim27"},"content":"    private static int getIndexOfWord(String[] words, String word) {","lastModifiedDate":"2023-01-26"},{"lineNumber":312,"author":{"gitId":"lyndonlim27"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-01-26"},{"lineNumber":313,"author":{"gitId":"lyndonlim27"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":314,"author":{"gitId":"lyndonlim27"},"content":"            if (words[i].equals(word)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":315,"author":{"gitId":"lyndonlim27"},"content":"                index \u003d i;","lastModifiedDate":"2023-01-26"},{"lineNumber":316,"author":{"gitId":"lyndonlim27"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":317,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":318,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":319,"author":{"gitId":"lyndonlim27"},"content":"        return index;","lastModifiedDate":"2023-01-26"},{"lineNumber":320,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":321,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":322,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":323,"author":{"gitId":"lyndonlim27"},"content":"     * Return dateTime from user given input","lastModifiedDate":"2023-01-26"},{"lineNumber":324,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":325,"author":{"gitId":"lyndonlim27"},"content":"     * @param words user input that has been put into an array of strings","lastModifiedDate":"2023-01-26"},{"lineNumber":326,"author":{"gitId":"lyndonlim27"},"content":"     * @param index the index before the date","lastModifiedDate":"2023-01-26"},{"lineNumber":327,"author":{"gitId":"lyndonlim27"},"content":"     * @return return LocalDateTime derived from user input","lastModifiedDate":"2023-01-26"},{"lineNumber":328,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":329,"author":{"gitId":"lyndonlim27"},"content":"    private static LocalDateTime getDateTime(String[] words, int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":330,"author":{"gitId":"lyndonlim27"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":331,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":332,"author":{"gitId":"lyndonlim27"},"content":"        if (index !\u003d -1 \u0026\u0026 words.length \u003e\u003d index+2) {","lastModifiedDate":"2023-01-26"},{"lineNumber":333,"author":{"gitId":"lyndonlim27"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":334,"author":{"gitId":"lyndonlim27"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":335,"author":{"gitId":"lyndonlim27"},"content":"                dateTime \u003d LocalDateTime.parse(words[index+1] + \" \" + words[index+2], formatter); ","lastModifiedDate":"2023-01-26"},{"lineNumber":336,"author":{"gitId":"lyndonlim27"},"content":"                return dateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":337,"author":{"gitId":"lyndonlim27"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":338,"author":{"gitId":"lyndonlim27"},"content":"                return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":339,"author":{"gitId":"lyndonlim27"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":340,"author":{"gitId":"lyndonlim27"},"content":"                return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":341,"author":{"gitId":"lyndonlim27"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":342,"author":{"gitId":"lyndonlim27"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":343,"author":{"gitId":"lyndonlim27"},"content":"            return null;","lastModifiedDate":"2023-01-26"},{"lineNumber":344,"author":{"gitId":"lyndonlim27"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":336,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"    public LocalDateTime dateTimeFrom;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"    public LocalDateTime dateTimeTo;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"    public Event(String description, LocalDateTime dateTimeFrom, LocalDateTime dateTimeTo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"        this.dateTimeFrom \u003d dateTimeFrom;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"        this.dateTimeTo \u003d dateTimeTo;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     * Return date and time of from and to","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"     * @return String representation of date and time from and to in this format \"DD MMM yyyy hh:mma\"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"        return dateTimeFrom.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\")) + \" - \" +","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"                dateTimeTo.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"        return \"[\" + type + \"]\" + \"[\" + getStatusIcon()+ \"] \" + this.description + \" (from: \" + ","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"                dateTimeFrom.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\")) + \" to: \" +","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"                dateTimeTo.format(DateTimeFormatter.ofPattern(\"DD MMM yyyy hh:mma\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":35}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"lyndonlim27":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"    protected char type \u003d \u0027 \u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"     * Retrieve mark status of task","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"     * ","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"     * @return Return a string \"X\" if the task is mark as completed, otherwise return blank","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lyndonlim27"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"lyndonlim27"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lyndonlim27"},"content":"     * Mark the task as done","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lyndonlim27"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lyndonlim27"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lyndonlim27"},"content":"     * Unmark the task as not done","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lyndonlim27"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"lyndonlim27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":33}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lyndonlim27"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lyndonlim27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lyndonlim27"},"content":"        return \"[\" + type + \"]\" + \"[\" + getStatusIcon()+ \"] \" + this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lyndonlim27"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lyndonlim27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lyndonlim27"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"lyndonlim27"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"lyndonlim27"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"lyndonlim27"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lyndonlim27"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lyndonlim27"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"lyndonlim27"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"lyndonlim27"},"content":"read book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"lyndonlim27"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"lyndonlim27"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"lyndonlim27":10}}]
