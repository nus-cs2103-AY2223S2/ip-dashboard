[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"# Connor project template","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"3. After that, locate the `src/main/java/connor.Connor.java` file, right-click it, and choose `Run connor.Connor.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lywich":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    mainClassName \u003d \"connor.Connor\"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    archiveBaseName \u003d \"Connor\"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lywich":3,"-":38}},{"path":"src/main/java/connor/Connor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import connor.parser.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import connor.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import connor.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import connor.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import connor.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import java.io.File;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"public class Connor {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    public enum Commands {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        HI,","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        BYE,","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        MARK,","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"        UNMARK,","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"        LIST,","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"        TODO,","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        EVENT,","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        DELETE,","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        DELETEALL,","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        FIND","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    /** Storage variable for this instance */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    /** Collection of tasks for this instance */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    /** UI to print messages for this instance */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    /** Parser to parse inputs for this instance */","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate a new Connor object.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    public Connor() {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        this.ui.greet();","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        this.storage \u003d new Storage(getFile());","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"            LinkedList\u003cTask\u003e memory \u003d storage.initialize();","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"            this.tasks \u003d new TaskList(memory);","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"     * Returns a File object that is created in a relative directory path of the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"     * Creates a new Directory if the directory does not exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"     * Creates a new File if the data file does not exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"     * Utilises an existing file if it exists.","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"     * @return File object that stores tasks across instances.","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    private File getFile() {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        String homeDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"        Path directoryPath \u003d Paths.get(homeDir, \"data\");","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        Path dataPath \u003d Paths.get(homeDir, \"data\", \"connor.Connor.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"            if (Files.exists(dataPath)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"                Ui.printMessage(\"Existing data detected, loading data.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"                return new File(String.valueOf(dataPath));","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"                Ui.printMessage(\"No existing data detected, creating new save file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"                return new File(\"data/connor.Connor.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"            Ui.printMessage(\"ALERT! FAILED TO CREATE DIRECTORY!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"        return new File(\"data/connor.Connor.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"     * Scans in user input and parses it.","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"     * Stores the output in the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        boolean isOver \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"        while (!isOver \u0026\u0026 sc.hasNextLine() ) {","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"            String input \u003d sc.nextLine().trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"            isOver \u003d this.parser.parse(input, this.tasks, this.ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"            this.storage.updateFile(tasks.getList());","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"        new Connor().run();","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lywich":106}},{"path":"src/main/java/connor/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import connor.Connor;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import connor.task.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import connor.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"public class Parser {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"     * Throws InvalidTaskException if an invalid input such as \"\" or \" \".","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"     * @param input String that comes after command.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"     * @throws InvalidTaskException if input is only blanks spaces.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    private void validateName(String input) throws InvalidTaskException {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"        if (input.trim().length() \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"     * Returns a String array of size 2, intended to be used when parsing Deadline tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"     * Index 0 is the taskName and index 1 is the Deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     * @param input String that comes after command.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     * @return String array of only taskName and Deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     * @throws InvalidTaskException if taskName is blank spaces.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    private String[] getNameDeadlinePair(String input) throws InvalidTaskException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        if (byIndex \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        String[] pair \u003d new String[2];","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        pair[0] \u003d input.substring(0, byIndex - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        validateName(pair[0]);","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        pair[1] \u003d input.substring(byIndex + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        return pair;","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"     * Returns a String array of size 3, intended to be used when parsing Event tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     * Index 0 is the taskName, index 1 is start period and index 2 is end period.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"     * @param input String that comes after command.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     * @return String array of only taskName, start period and end period.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"     * @throws InvalidTaskException if taskName is blank spaces.","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    private String[] getNameStartEndTuple(String input) throws InvalidTaskException {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        int byIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        if (fromIndex \u003c 1 || byIndex \u003c 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        String[] tuple \u003d new String[3];","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        tuple[0] \u003d input.substring(0, fromIndex - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        validateName(tuple[0]);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        tuple[1] \u003d input.substring(fromIndex + 6, byIndex - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"        tuple[2] \u003d input.substring(byIndex + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        return tuple;","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"     * Returns a Task instance depending on the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"     * Information refers to the input of the user after the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"     * Throws InvalidTaskException if taskName is invalid.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"     * @param command Command of the input.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"     * @param information String that comes after command.","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"     * @return Task instance.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     * @throws InvalidTaskException if taskName is blank spaces.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"    public Task parseCommand(String command, String information) throws InvalidTaskException {","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        if (command.equals(\"TODO\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"            validateName(information);","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"            return new Todo(information);","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        } else if (command.equals(\"DEADLINE\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"            String[] pair \u003d getNameDeadlinePair(information);","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"            return new Deadline(pair[0], pair[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        } else if (command.equals(\"EVENT\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"            String[] tuple \u003d getNameStartEndTuple(information);","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"            return new Event(tuple[0], tuple[1], tuple[2]);","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"     * Returns the String that comes after the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"     * This should only be called for inputs with more than 1 word.","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"     * @param input Full user input String.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"     * @return String that comes after the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"     * @throws InvalidTaskException if there is no String after the command","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"    private String getTask(String input) throws InvalidTaskException {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        if (input.indexOf(\u0027 \u0027) \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"        return input.substring(input.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"     * Returns the command of the input.","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"     * @param input the first word of the user input String.","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"     * @return String of the input command.","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"    private String getCommand(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"        if (input.indexOf(\u0027 \u0027) \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"            return input.toUpperCase();","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"            return input.substring(0, input.indexOf(\u0027 \u0027)).toUpperCase();","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"     * Returns true if the input command is valid.","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"     * Else, returns false and print the corresponding error message.","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"     * @param input Full user input String.","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"     * @param tasks current collection of Tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"     * @param ui UI to print messages.","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"     * @return true if valid command, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"    public boolean parse(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        String command \u003d getCommand(input).trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"            switch (Connor.Commands.valueOf(command)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"            case HI:","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"                ui.greetings(\"HI\");","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"            case BYE:","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"                ui.greetings(\"BYE\");","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"                return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"            case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"                System.out.println(tasks.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"            case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"                tasks.markDone(Integer.parseInt(getTask(input)), ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"                tasks.markUndone(Integer.parseInt(getTask(input)), ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"            case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"            case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"                Task task \u003d parseCommand(command, getTask(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"                tasks.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"lywich"},"content":"                ui.addTaskMessage(task, tasks.getSize());","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"lywich"},"content":"            case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"                tasks.deleteTask(getTask(input), ui);","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"            case DELETEALL:","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"lywich"},"content":"                tasks.deleteAllTask();","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"lywich"},"content":"                ui.deleteAllMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"lywich"},"content":"            case FIND:","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"                System.out.println(tasks.find(getTask(input)));","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"lywich"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"lywich"},"content":"            Ui.printMessage(\"INVALID COMMAND\");","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"lywich"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"lywich"},"content":"            Ui.printMessage(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"lywich":178}},{"path":"src/main/java/connor/storage/CorruptedDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"public class CorruptedDataException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"    public CorruptedDataException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"        super(\"DATA IS CORRUPTED! PLEASE TRY AGAIN\");","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"lywich":8}},{"path":"src/main/java/connor/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import connor.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import connor.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import connor.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import connor.task.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"public class Storage {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    /** dataFile that stores the tasks between sessions. */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    private File dataFile;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"     * Constructor that reads information from a File object.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"     * @param dataFile File contains the current list of Tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    public Storage(File dataFile) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"        this.dataFile \u003d dataFile;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"     * Returns a Task after reading one line in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"     * @param str String of one line in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"     * @return Task instance read from memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"     * @throws CorruptedDataException if command is unreadable.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    public Task interpretLine(String str) throws CorruptedDataException {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        String[] directives \u003d str.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        if (directives[0].equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"            return new Todo(directives[2], Boolean.parseBoolean(directives[1]));","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        } else if (directives[0].equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"            return new Deadline(directives[2], Boolean.parseBoolean(directives[1]), directives[3]);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        } else if (directives[0].equals(\"E\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"            return new Event(directives[2], Boolean.parseBoolean(directives[1]), directives[3], directives[4]);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        throw new CorruptedDataException();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"     * Returns a LinkedList that is from the memory if it is valid and not corrupted.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"     * Ignores that line if memory is corrupted.","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"     * @param sc scanner object to read the File object.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"     * @return LinkedList read from memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    public LinkedList\u003cTask\u003e readFile(Scanner sc) {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"                tasks.add(interpretLine(sc.nextLine()));","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"            } catch (CorruptedDataException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"                System.out.println(\"        \" + e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        return tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"     * Returns a LinkedList that is read from the dataFile.","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"     * @return LinkedList that is read from dataFile.","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"     * @throws IOException if File does not exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"    public LinkedList\u003cTask\u003e initialize() throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        this.dataFile.createNewFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        Scanner sc \u003d new Scanner(this.dataFile);","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"        return readFile(sc);","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"     * Writes the contents of the LinkedList into the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"     * @param tasks the collection of Task to be stored in memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    public void updateFile(LinkedList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"            FileWriter writer \u003d new FileWriter(String.valueOf(this.dataFile));","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"            writer.write(\"\");","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"                writer.append(tasks.get(i).dataFormat() + \"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"            writer.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"            System.out.println(\"        ALERT! Unable to overwrite data, input is not saved!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"lywich":95}},{"path":"src/main/java/connor/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"    /** LocalDateTime representation of the deadline of the this task. */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    /** data format representation of this instance to be stored in memory. */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    private String dataFormat;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate a new Deadline using only taskName and DateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"     * @param DateTime the due date of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    public Deadline(String taskName, String DateTime) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        super(taskName);","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"            this.deadline \u003d parseDateTime(DateTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"            this.dataFormat \u003d dateTimeFormat(DateTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"            System.out.println(\"        \" + e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate a Deadline from the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"     * @param isDone indicates if task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     * @param dataFormat the dateformat of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"    public Deadline(String taskName, Boolean isDone, String dataFormat) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        super(taskName, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        this.deadline \u003d LocalDateTime.parse(dataFormat);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        this.dataFormat \u003d dataFormat;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     * Returns a String in a format that is meant to be stored in the memory with additional deadline information.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"     * @return String that represents the Task instance in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    public String dataFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        return \"D|\" + super.dataFormat() + \"|\" + this.dataFormat;","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"     * Returns a String which is a concatenation of task type, if the task is done, taskName and deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"     * @return String representation of the task to be printed.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        return \"[D]\"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"                + super.toString()","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"                + \" (by: \"","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"                + this.formatDateTime(this.deadline)","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lywich":68}},{"path":"src/main/java/connor/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"    /** LocalDateTime representing the start date/time */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    /** LocalDateTime representing the end date/time */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    private LocalDateTime startEndTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    /** String representation of the dateformat for start dateTime */","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    private String dataFormat1;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    /** String representation of the dateformat for end dateTime */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    private String dataFormat2;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate a new Event object that has a taskName, start and end date/time.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     * @param taskStart dateTime of when the task start.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     * @param taskEnd endTime of when the task end.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    public Event(String taskName, String taskStart, String taskEnd) {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        super(taskName);","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"            this.startDateTime \u003d parseDateTime(taskStart);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"            this.startEndTime \u003d parseDateTime(taskEnd);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"            System.out.println(\"        \" + e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        this.dataFormat1 \u003d dateTimeFormat(taskStart);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        this.dataFormat2 \u003d dateTimeFormat(taskEnd);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate an Event object from memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     * @param isDone indicates if the event is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     * @param startDateFormat date format of the start dateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"     * @param endDataFormat date format of the end dateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    public Event(String taskName, Boolean isDone, String startDateFormat, String endDataFormat) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        super(taskName, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        this.startDateTime \u003d LocalDateTime.parse(startDateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        this.startEndTime \u003d LocalDateTime.parse(endDataFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        this.dataFormat1 \u003d startDateFormat;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        this.dataFormat2 \u003d endDataFormat;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"     * Returns a String in a format that is meant to be stored in the memory with additional start and end dateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"     * @return String that represents the Task instance in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    public String dataFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        return \"E|\" + super.dataFormat() + \"|\" + this.dataFormat1 + \"|\" + this.dataFormat2;","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"     * Returns a String which is a concatenation of task type, if the task is done, taskName, start and end dateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"     * @return String representation of the task to be printed.","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"                + \" (from: \"","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"                + this.formatDateTime(this.startDateTime)","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"                + \" to: \"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"                + this.formatDateTime(this.startEndTime)","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lywich":79}},{"path":"src/main/java/connor/task/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"public class InvalidTaskException extends Exception{","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"        super(\"INVALID TASK DESCRIPTION\");","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"lywich":7}},{"path":"src/main/java/connor/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"    /** String that represents the name of the task. */","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    /** Boolean that is true if a task is marked. */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"     * Constructor for Task that assumes that a task is not marked.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     * Constructor for Task that marks a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     * Meant for reading from memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"     * @param isDone indicates if the task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    public Task(String taskName, Boolean isDone) {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     * Returns String representing if a task is marked.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"     * @return String [X] if marked.","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    public String getMark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"            return \"[X]\";","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        return \"[ ]\";","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"     * Sets isDone to true.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    public void mark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"     * Set isDone to false.","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-15"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"     * Returns the taskName of this instance.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"     * @return String of the taskName.","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        return this.taskName;","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     * Returns a String by converting LocalDateTime to print.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"     * @param input LocalDateTime representation of a dateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"     * @return String from LocalDateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    public String formatDateTime(LocalDateTime input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        String month \u003d input.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        int day \u003d input.getDayOfMonth();","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        int year \u003d input.getYear();","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        String hour \u003d String.format(\"%02d\", input.getHour());","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        String minute \u003d String.format(\"%02d\", input.getMinute());","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        return month + \" \" + day + \" \" + year + \" \" + hour + minute;","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"     * Returns a String in a parseable format into LocalDateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"     * @param input substring from user input containing date and time.","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"     * @return String that is parseable into LocalDateTime.","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"    public String dateTimeFormat(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        String[] dateTimePair \u003d input.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        String date \u003d dateTimePair[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        String time \u003d dateTimePair[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"        String hrStr \u003d time.substring(0, 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        String minStr \u003d time.substring(2, 4);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        return date + \"T\" + hrStr + \":\" + minStr + \":00\";","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"     * Returns a LocalDateTime object that has the date and time of the input.","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"     * @param input substring from user input containing date and time.","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"     * @return LocalDateTime with the date and time of the input.","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"     * @throws DateTimeException","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"    public LocalDateTime parseDateTime(String input) throws DateTimeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"        String formattedDateTime \u003d dateTimeFormat(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"        return LocalDateTime.parse(formattedDateTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"     * Returns a String in a format that is meant to be stored in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"     * @return String that represents the Task instance in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"    public String dataFormat() {","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"        return this.isDone + \"|\" + this.taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"     * Returns a String which is a concatenation of if the task is done and the taskName.","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        return getMark() + \" \" + this.taskName;","lastModifiedDate":"2023-01-17"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lywich":129}},{"path":"src/main/java/connor/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import connor.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"public class TaskList {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"    /** Collections of tasks for this instance. */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    private LinkedList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    /** Constructor to instantiate a new TaskList object. */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"        this.tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    /** Constructor to instantiate a TaskList object using existing date from memory. */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    public TaskList(LinkedList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"     * Adds a task into the collection of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     * @param task the task to be added into the collection of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"     * Deletes a specific task as specified by the user number input.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"     * @param number the task to be deleted (list starts at 1).","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"     * @param ui prints the message.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     * @throws InvalidTaskException if number is invalid or is not a number.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"    public void deleteTask(String number, Ui ui) throws InvalidTaskException {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"            int value \u003d Integer.parseInt(number);","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"            if (number.length() \u003c 1 || value \u003e this.tasks.size() || value \u003c\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"                Task task \u003d this.tasks.remove(value - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"                ui.deleteTaskMessage(task, this.tasks.size());","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"     * Deletes all task in the Collection.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    public void deleteAllTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        this.tasks.clear();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"     * Marks the specific task as done and print a confirmation message.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"     * @param number the task to be marked done (list starts at 1).","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"     * @param ui prints the message.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    public void markDone(int number, Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        this.tasks.get(number - 1).mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        ui.markDoneMessage(this.tasks.get(number - 1).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     * Marks the specific task as undone and print a confirmation message.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"     * @param number the task to be marked undone (list starts at 1).","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"     * @param ui prints the message.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    public void markUndone(int number, Ui ui) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        this.tasks.get(number - 1).unmark();","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        ui.markUndoneMessage(this.tasks.get(number - 1).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"     * Returns a String representing the tasks in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"     * Meant to be printed to the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"     * @return String representation of the tasks in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"        str.append(Ui.LINE).append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"            str.append(\"        \")","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"                    .append(i + 1)","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"                    .append(\".\")","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"                    .append(this.tasks.get(i).toString())","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        str.append(\"        I have \")","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"                .append(this.tasks.size())","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"                .append(\" tasks in my memory\")","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"                .append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"        return str.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"     * Returns a String representation of all tasks with the keyword.","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"     * @param keyword the keyword to be searched","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"     * @return String representation of all tasks with the keyword.","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"        str.append(Ui.LINE).append(\"        HERE ARE THE MATCHING RESULTS:\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"            if (this.tasks.get(i).getTaskName().contains(keyword)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"                str.append(\"        \")","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"                        .append(counter++)","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"                        .append(\".\")","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"                        .append(this.tasks.get(i).toString())","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"        return str.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"    public LinkedList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lywich":134}},{"path":"src/main/java/connor/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate a new Todo object with a taskName.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"        super(taskName);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"     * Constructor to instantiate a Todo object read from the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"     * @param isDone indicates if task is done.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    public Todo(String taskName, Boolean isDone) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        super(taskName, isDone);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     * Returns a String in a format that is meant to be stored in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"     * @return String that represents the Task instance in the memory.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    public String dataFormat() {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        return \"T|\" + super.dataFormat();","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"     * Returns a String which is a concatenation of task type, if the task is done and taskName.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"     * @return String representation of the task to be printed.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"lywich":46}},{"path":"src/main/java/connor/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import connor.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"public class Ui {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"    public static final String LINE \u003d \"        ________________________________________________________\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"    public static void printMessage(String response) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"        System.out.println(LINE + \"        \" + response);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    public void greet() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"        printMessage(\"Hello! I\u0027m Connor, the android sent by Cyberlife.\\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"                + \"        Please type in your command below.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    public void greetings(String responseType) {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        switch (responseType) {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"            case \"HI\":","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"                printMessage(\"Hi, I hope that you are having a nice day.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"            case \"BYE\":","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"                printMessage(\"It was a good session Hank, Bye.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    public void addTaskMessage(Task task, int size) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        String message \u003d \"I have added \" + task.getTaskName() + \" to my memory\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        message \u003d message + \"          \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        message \u003d message + \"        You have \" + size + \" tasks in the list\";","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        printMessage(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    public void deleteAllMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        printMessage(\"All tasks on the list have been cleared\");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    public void deleteTaskMessage(Task task, int size) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        String message \u003d \"I have removed \" + task.getTaskName() + \" from my memory\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        message \u003d message + \"          \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        message \u003d message + \"        You have \" + size + \" tasks in the list\";","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        printMessage(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    public void markDoneMessage(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        printMessage(\"Understood, I have marked the task as done:\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"                + \"        \"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"                + message);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    public void markUndoneMessage(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        printMessage(\"Understood, I have marked the task as undone:\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"                + \"        \"","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"                + message);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"lywich":58}},{"path":"src/test/java/connor/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import connor.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getSize(), 0);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getSize(), 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getSize(), 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getSize(), 3);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    public void deleteInvalidTaskTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"            tasks.deleteTask(\"5\", new Ui());","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"            assertEquals(e.getMessage(), new InvalidTaskException().getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    public void deleteValidTaskTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"            tasks.deleteTask(\"2\", new Ui());","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"            assertEquals(1, 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getSize(), 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    public void markDoneTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        tasks.markDone(1, new Ui());","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getList().get(0).toString(), \"[T][X] work\");","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    public void markUndoneTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        tasks.markDone(1, new Ui());","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getList().get(0).toString(), \"[T][X] work\");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        tasks.markUndone(1, new Ui());","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.getList().get(0).toString(), \"[T][ ] work\");","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        String ans \u003d \"        ________________________________________________________\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"                \"\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"                \"        1.[T][ ] work\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"                \"        2.[D][ ] sleep (by: MAY 5 2020 2000)\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"                \"        I have 2 tasks in my memory\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        assertEquals(tasks.toString(), ans);","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"    public void findTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Todo(\"work\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Deadline(\"sleep\", \"2020-05-05 2000\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        tasks.addTask(new Event(\"assist with work\", \"2020-05-05 1800\", \"2020-05-05 2200\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"        String output \u003d tasks.find(\"work\");","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        String expected \u003d \"        ________________________________________________________\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        + \"        HERE ARE THE MATCHING RESULTS:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        + \"        1.[T][ ] work\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        + \"        2.[E][ ] assist with work (from: MAY 5 2020 1800 to: MAY 5 2020 2200)\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"        assertEquals(output, expected);","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"lywich":102}},{"path":"src/test/java/connor/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package connor.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    public void getMarkTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"        Todo todo \u003d new Todo(\"sleep\");","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"        assertEquals(todo.getMark(), \"[ ]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"        todo.mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"        assertEquals(todo.getMark(), \"[X]\");","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    public void formatDateTimeTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        Deadline deadline \u003d new Deadline(\"sleep\", \"2020-05-05 2000\");","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        String output \u003d deadline.formatDateTime(LocalDateTime.parse(\"2020-05-05T18:00:00\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        assertEquals(output, \"MAY 5 2020 1800\");","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public void dateTimeFormatTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        Todo todo \u003d new Todo(\"sleep\", true);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        String str \u003d todo.dateTimeFormat(\"2020-05-05 1800\");","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        assertEquals(str, \"2020-05-05T18:00:00\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    public void dataFormatTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        Todo todo \u003d new Todo(\"sleep\", true);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        Deadline deadline \u003d new Deadline(\"eat\", \"2020-05-05 2000\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        Event event \u003d new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\");","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        assertEquals(todo.dataFormat(), \"T|true|sleep\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        assertEquals(deadline.dataFormat(), \"D|false|eat|2020-05-05T20:00:00\");","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        assertEquals(event.dataFormat(), \"E|false|dinner|2020-05-05T18:00:00|2020-05-05T22:00:00\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        Todo todo \u003d new Todo(\"sleep\", true);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        Deadline deadline \u003d new Deadline(\"eat\", \"2020-05-05 2000\");","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        Event event \u003d new Event(\"dinner\", \"2020-05-05 1800\", \"2020-05-05 2200\");","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        assertEquals(todo.toString(), \"[T][X] sleep\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        assertEquals(deadline.toString(), \"[D][ ] eat (by: MAY 5 2020 2000)\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        assertEquals(event.toString(), \"[E][ ] dinner (from: MAY 5 2020 1800 to: MAY 5 2020 2200)\");","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"lywich":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"Hi","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"todo buy food","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"deadline do CS2103T /by 2023-05-05 1800","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"event Dinner /from 2023-01-01 1600 /to 2023-01-01 1800","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"unmark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"deadline   /by 2023-05-05 1800","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"event   /from 2023-01-01 1600 /to 2023-01-01 1800","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"find food","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"delete 50","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"delete 0","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"delete -1","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"delete","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"delete","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"delete garbage","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"deleteall","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"lywich":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\connor\\Connor.java","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"java -classpath ..\\bin connor.Connor \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lywich":2,"-":19}}]
