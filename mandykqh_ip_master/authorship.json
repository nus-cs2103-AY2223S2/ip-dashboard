[{"path":"src/main/java/genie/Genie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import java.io.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":" * The main class for Genie, a Command-line Interface bot. Primarily functions as a task planner that responds to","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":" * and recognises user commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"public class Genie {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"    public Genie() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"            tasks \u003d storage.loadData();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"            System.out.println(ui.showErrorMessage() + \"\\n\" + e);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"     * This driver creates the Genie bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"     * @param args an array of command-line arguments","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"        new Genie().activate();","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"     * Starts up the Genie bot on the command-line interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"    public void activate() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"        ui.bootLogo();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"        ui.greet();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"        ui.printLoadedTaskList(storage.getLoadedTaskList());","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"                //String i \u003d ui.readCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"                String i \u003d sc.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"                ui.printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"                Command c \u003d parser.parse(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"                isExit \u003d c.isExitCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"                System.out.println(ui.showErrorMessage() + \"\\n\" + e);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mandykqh":59,"-":1}},{"path":"src/main/java/genie/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.command.*;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.exception.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.exception.EmptyInputException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.exception.InvalidInputException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":" * Deals with making sense of the user command on Genie. Creates the required action upon retrieving a user command.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"     * A constructor for Parser class.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"    public Parser() {}","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"     * Takes in a user input and returns its corresponding command for further action by Genie.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"     * @param in user input","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"     * @return \u003cCode\u003eCommand\u003c/Code\u003e aligning to the user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"     * @throws DukeException if error occurs in parsing","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"    public Command parse(String in) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"        String i \u003d in.toLowerCase();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"        if (i.equals(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"        } else if (i.equals(\"list\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"            String command \u003d i.split(\" \")[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"            int index \u003d -1;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"            switch (command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"                index \u003d Integer.parseInt(i.split(\" \")[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"                index \u003d Integer.parseInt(i.split(\" \")[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"                index \u003d Integer.parseInt(i.split(\" \")[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"            case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"                String taskType \u003d i.split(\" \")[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"                if (i.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"                    throw new EmptyInputException(taskType);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"                return new AddCommand(taskType, i);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"            case \"find\":","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"                String keyword \u003d i.replace(\"find \", \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"    public boolean isACommand(String i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"        return i.startsWith(\"unmark\") ||","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mandykqh"},"content":"                i.startsWith(\"mark\") ||","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"mandykqh"},"content":"                i.startsWith(\"todo\") ||","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"mandykqh"},"content":"                i.startsWith(\"event\") ||","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mandykqh"},"content":"                i.startsWith(\"deadline\") ||","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mandykqh"},"content":"                i.startsWith(\"delete\");","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":66}},{"path":"src/main/java/genie/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":" * Deals with loading and saving tasks in the specified file. Loads every line of task on the file and stores it in","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":" * the current task list available for viewing upon using the \"list\" command.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    private static final String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"    private static FileWriter fw;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    private ArrayList\u003cString\u003e loadedTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"     * A constructor for Storage class. Creates an \u003ccode\u003eArrayList\u0026lt;String\u0026gt\u003c/code\u003e to store all the read tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"     * from file.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"    public Storage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"        this.loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"     * Loads data from the specified file. Creates the necessary directory and file in a specified location if it is","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"     * unavailable on the user\u0027s local folder.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"     * @return \u003ccode\u003eTaskList\u003c/code\u003e containing an array of Tasks read from the file","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"     * @throws IOException if an error occurs while loading the data","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"    //@author mandykqh-reused","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"    //Reused from https://stackoverflow.com/questions/28947250/create-a-directory-if-it-does-not-exist-and-then","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"    // -create-the-files-in-that-direct","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"    //with minor modifications","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"    public TaskList loadData() throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"        if (!directory.exists()){","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"            directory.mkdir();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"            //System.out.println(\"Seems like you\u0027re new here. Welcome onboard and let\u0027s get started! ^-^\");","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"            return new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"            return readTextFileToList(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"    //@author","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"     * Reads contents of the loaded .txt file into a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"     * @param f loaded file","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"     * @return \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"     * @throws IOException if an error occurs in reading the file","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"    public TaskList readTextFileToList(File f) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mandykqh"},"content":"        Scanner fs \u003d new Scanner(f);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"mandykqh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"mandykqh"},"content":"        while (fs.hasNext()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mandykqh"},"content":"            String strTask \u003d fs.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mandykqh"},"content":"            char taskLetter \u003d strTask.charAt(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"mandykqh"},"content":"            loadedTasks.add(strTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"mandykqh"},"content":"            switch (taskLetter) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"mandykqh"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"mandykqh"},"content":"                tasks.addToDoFromFile(strTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"mandykqh"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"mandykqh"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"mandykqh"},"content":"                tasks.addEventFromFile(strTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"mandykqh"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"mandykqh"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"mandykqh"},"content":"                tasks.addDeadlineFromFile(strTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"mandykqh"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"mandykqh"},"content":"        saveListToFile(tasks.getTasks()); //TODO save by each task as stopping program/bugs wipes all data","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"mandykqh"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"mandykqh"},"content":"    /*","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"mandykqh"},"content":"    public void saveTaskToFile(genie.task.Task t) throws IOException {","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"mandykqh"},"content":"        fw.write(t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"mandykqh"},"content":"        fw.write(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"mandykqh"},"content":"    */","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"mandykqh"},"content":"     * Closes \u003ccode\u003eFileWriter\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"mandykqh"},"content":"     * @throws IOException if an error occurs in closing \u003ccode\u003eFileWriter\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"mandykqh"},"content":"    public void closeFileWriter() throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"mandykqh"},"content":"        fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"mandykqh"},"content":"     * Saves \u003ccode\u003eTaskList\u003c/code\u003e to the specified .txt file","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"mandykqh"},"content":"     * @param list task list","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"mandykqh"},"content":"     * @throws IOException if an error occurs in writing task into the file","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"mandykqh"},"content":"    public void saveListToFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"mandykqh"},"content":"            fw \u003d new FileWriter(PATH);","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"mandykqh"},"content":"            for(Task t : list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"mandykqh"},"content":"                String formatted \u003d t.toFileFormat(); // format: [X][X] xxx | \u003cfrom\u003e - \u003cby\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"mandykqh"},"content":"                fw.write(formatted);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"mandykqh"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"mandykqh"},"content":"     * Gets \u003ccode\u003eTaskList\u003c/code\u003e from the loaded data.","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"mandykqh"},"content":"     * @return task list in \u003ccode\u003eArrayList\u0026lt;String\u0026gt;\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"mandykqh"},"content":"    public ArrayList\u003cString\u003e getLoadedTaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"mandykqh"},"content":"        return this.loadedTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":116}},{"path":"src/main/java/genie/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.task.Event;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.task.ToDo;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":" * Contains the task list and has operations to perform actions on it.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"     * A constructor that initialises \u003ccode\u003eArrayList\u0026lt;Task\u0026gt; of size 100.\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"     * Stores task into the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"     * @param t task","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"    public void storeTask(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"     * Adds \u003ccode\u003eToDo\u003c/code\u003e into task list from user\u0027s input.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"     * @param i user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"     * @return task","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"    public Task addToDoFromUser(String i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"        ToDo t \u003d new ToDo(i.replace(\"todo \", \"\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"        storeTask(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"        return t;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"     * Adds \u003ccode\u003eToDo\u003c/code\u003e into task list from .txt file input.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"     * @param sf .txt input","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"     * @return task","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"    public Task addToDoFromFile(String sf) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"        char status \u003d sf.charAt(4);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"        ToDo t \u003d new ToDo(sf.substring(7));","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"        storeTask(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"            t.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"        return t;","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"     * Adds \u003ccode\u003eDeadline\u003c/code\u003e into task list from user\u0027s input.","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"     * @param i user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"mandykqh"},"content":"     * @return task","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"mandykqh"},"content":"    public Task addDeadlineFromUser(String i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mandykqh"},"content":"        String[] contents \u003d i.split(\" /by \");","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mandykqh"},"content":"        Deadline d \u003d new Deadline(contents[0].replace(\"deadline \", \"\"), contents[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"mandykqh"},"content":"        storeTask(d);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"mandykqh"},"content":"        return d;","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"mandykqh"},"content":"     * Adds \u003ccode\u003eDeadline\u003c/code\u003e into task list from .txt file input.","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"mandykqh"},"content":"     * @param sf .txt input","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"mandykqh"},"content":"     * @return task","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"mandykqh"},"content":"    public Task addDeadlineFromFile(String sf) {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"mandykqh"},"content":"        char status \u003d sf.charAt(4);","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"mandykqh"},"content":"        String[] contents \u003d sf.substring(7).split(\" \\\\| \");","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"mandykqh"},"content":"        String deadlineDesc \u003d contents[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"mandykqh"},"content":"        String deadlineBy \u003d contents[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"mandykqh"},"content":"        Deadline d \u003d new Deadline(deadlineDesc, deadlineBy);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"mandykqh"},"content":"        storeTask(d);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"mandykqh"},"content":"        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"mandykqh"},"content":"            d.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"mandykqh"},"content":"        return d;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"mandykqh"},"content":"     * Adds \u003ccode\u003eEvent\u003c/code\u003e into task list from user\u0027s input.","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"mandykqh"},"content":"     * @param i user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"mandykqh"},"content":"     * @return task","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"mandykqh"},"content":"    public Task addEventFromUser(String i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"mandykqh"},"content":"        String[] contents \u003d i.split(\" /from \");","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"mandykqh"},"content":"        String[] fromTo \u003d contents[1].split(\" /to \");","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"mandykqh"},"content":"        Event e \u003d new Event(contents[0].replace(\"event \", \"\"), fromTo[0], fromTo[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"mandykqh"},"content":"        storeTask(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"mandykqh"},"content":"        return e;","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"mandykqh"},"content":"     * Adds \u003ccode\u003eEvent\u003c/code\u003e into task list from .txt file input.","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"mandykqh"},"content":"     * @param sf .txt input","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"mandykqh"},"content":"     * @return task","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"mandykqh"},"content":"    public Task addEventFromFile(String sf) {","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"mandykqh"},"content":"        char status \u003d sf.charAt(4);","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"mandykqh"},"content":"        String[] contents \u003d sf.substring(7).split(\" \\\\| \");","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"mandykqh"},"content":"        String eventDesc \u003d contents[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"mandykqh"},"content":"        String[] eventFromTo \u003d contents[1].split(\" - \");","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"mandykqh"},"content":"        String eventFrom \u003d eventFromTo[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"mandykqh"},"content":"        String eventTo \u003d eventFromTo[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"mandykqh"},"content":"        Event e \u003d new Event(eventDesc, eventFrom, eventTo);","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"mandykqh"},"content":"        storeTask(e);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"mandykqh"},"content":"        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"mandykqh"},"content":"            e.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"mandykqh"},"content":"        return e;","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"mandykqh"},"content":"     * Delete task at index of task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"mandykqh"},"content":"     * @param index of task list to be deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"mandykqh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"mandykqh"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"mandykqh"},"content":"     * Get task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"mandykqh"},"content":"     * @return task list","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"mandykqh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"mandykqh"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //@@author mandykqh-reused","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/17134773/to-check-if-string-contains-particular-word","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e searchMatchingTasks(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (t.containsWord(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return matchingTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":132,"-":14}},{"path":"src/main/java/genie/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    // Art generated from: https://patorjk.com/","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    private final static String GENIE_LOGO \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"                    \"                       ______                  _       \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"                    \"                      / ____/  ___    ____    (_)  ___ \\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"                    \"                     / / __   / _ \\\\  / __ \\\\  / /  / _ \\\\\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"                    \"                    / /_/ /  /  __/ / / / / / /  /  __/\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"                    \"                    \\\\____/   \\\\___/ /_/ /_/ /_/   \\\\___/ \\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"     * A constructor for Ui class.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"    public Ui() {}","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"     * Prints greet message.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"    public void greet() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Hello! This is Genie, your personal task tracker!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"     * Prints Genie logo.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"    public void bootLogo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"        System.out.println(GENIE_LOGO);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"     * Prints a line.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"    public void printLine() {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"     * Prints task list if it is not empty. Otherwise, prints an empty task message.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"     * @param tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"                Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"                System.out.println(i + \". \" + t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mandykqh"},"content":"            showEmptyListMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"mandykqh"},"content":"     * Echos user\u0027s input.","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"mandykqh"},"content":"     * @return user\u0027s input","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"mandykqh"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"mandykqh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"mandykqh"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"mandykqh"},"content":"     * Prints mark done message.","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"mandykqh"},"content":"     * @param t task to be marked done","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"mandykqh"},"content":"    public void showMarkDoneMessage(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"mandykqh"},"content":"     * Prints add task message.","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"mandykqh"},"content":"     * @param t task to be added","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"mandykqh"},"content":"     * @param size number of tasks in the list","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"mandykqh"},"content":"    public void showAddTaskMessage(Task t, int size) {","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"mandykqh"},"content":"     * Prints unmark done message.","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"mandykqh"},"content":"     * @param t task to be unmarked done","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"mandykqh"},"content":"    public void showUnmarkDoneMessage(Task t) {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Okay, I\u0027ve marked this task as not done yet:\\n\" + \"  \" + t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"mandykqh"},"content":"     * Prints delete task message.","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"mandykqh"},"content":"     * @param t task to be deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"mandykqh"},"content":"     * @param size number of tasks in the list","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"mandykqh"},"content":"    public void showDeleteTaskMessage(Task t, int size) {","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + \"  \" + t.toString() +","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"mandykqh"},"content":"                \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"mandykqh"},"content":"     * Prints add farewell message.","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"mandykqh"},"content":"    public void showFarewellMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"mandykqh"},"content":"     * Returns general error message.","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"mandykqh"},"content":"     * @return error message","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"mandykqh"},"content":"    public String showErrorMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"mandykqh"},"content":"        return \"Something went wrong here xx...\";","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"mandykqh"},"content":"     * Prints loaded task list from .txt file","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"mandykqh"},"content":"     * @param tl task list","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"mandykqh"},"content":"    public void printLoadedTaskList(ArrayList\u003cString\u003e tl) {","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"mandykqh"},"content":"        if (tl.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"mandykqh"},"content":"            showEmptyListMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"mandykqh"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"mandykqh"},"content":"            System.out.println(\"Here is a record of your task list from where you had previously left off:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"mandykqh"},"content":"            for (int i \u003d 0; i \u003c tl.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"mandykqh"},"content":"                System.out.println(\"  \" + tl.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"mandykqh"},"content":"            System.out.println(\"Now, what can I do for you?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"mandykqh"},"content":"     * Prints empty list message.","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"mandykqh"},"content":"    public void showEmptyListMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"Your task list is currently empty! Let\u0027s get started! ^-^\");","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"mandykqh"},"content":"    public void printMatchingTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"mandykqh"},"content":"        if(tasks.size() \u003e 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"mandykqh"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"mandykqh"},"content":"            for(int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"mandykqh"},"content":"                Task t \u003d tasks.get(i - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"mandykqh"},"content":"                System.out.println(i + \". \" + t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"mandykqh"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"mandykqh"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"mandykqh"},"content":"            showEmptyMatchingTasksMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"mandykqh"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"mandykqh"},"content":"    public void showEmptyMatchingTasksMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"mandykqh"},"content":"        System.out.println(\"There are no matching tasks for your search :(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":166}},{"path":"src/main/java/genie/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    private String taskType;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    private Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    public AddCommand(String taskType, String fullCommand) { //todo javadoc for command package","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"            task \u003d taskList.addToDoFromUser(fullCommand);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"            task \u003d taskList.addDeadlineFromUser(fullCommand);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"        case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"            task \u003d taskList.addEventFromUser(fullCommand);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"        ui.showAddTaskMessage(task, taskList.getTasks().size());","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":35}},{"path":"src/main/java/genie/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    private String commandType;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {}","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":15}},{"path":"src/main/java/genie/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    private int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"        Task t \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"        taskList.deleteTask(index - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"        ui.showDeleteTaskMessage(t, taskList.getTasks().size());","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":23}},{"path":"src/main/java/genie/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    public ExitCommand() {}","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"        ui.showFarewellMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"        storage.saveListToFile(taskList.getTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"        storage.closeFileWriter();","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":21}},{"path":"src/main/java/genie/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    private String keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d taskList.searchMatchingTasks(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"        ui.printMatchingTaskList(matchingTasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"mandykqh":24}},{"path":"src/main/java/genie/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"        ui.printList(taskList.getTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":17}},{"path":"src/main/java/genie/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    private int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"        Task t \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"        t.markDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"        ui.showMarkDoneMessage(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":23}},{"path":"src/main/java/genie/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import genie.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import genie.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    private int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"        Task t \u003d tasklist.getTasks().get(index - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"        t.unmarkDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"        ui.showUnmarkDoneMessage(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mandykqh":23}},{"path":"src/main/java/genie/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"    public DukeException(String e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"        super(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":7}},{"path":"src/main/java/genie/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"    public EmptyInputException(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"        super(\"OOPS!!! The description of \" + s + \" cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":7}},{"path":"src/main/java/genie/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":7}},{"path":"src/main/java/genie/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":" * Deals with creating deadline tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    protected String by; //TODO make by to be of type Date","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"     * A constructor that takes in the task descriptor and deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"     * @param description of deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"     * @param by due date of task","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        //this.by \u003d parseDate(by);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"     * Returns deadline as a formatted string to print for list command.                                                                                                                                                                                                          for list command","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"     * @return deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"            Date date \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").parse(this.by);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"            String formattedDate \u003d new SimpleDateFormat(\"EEE, dd/MM/yyyy, h:mm a\").format(date);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"            this.by \u003d formattedDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"            //return \"Sorry, I can\u0027t recognize this date format! \u003e\u003c\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"            //        \"Try this format instead: deadline xxx /by YYYY-MM-DD hh:mm\";","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"     * Returns deadline as a formatted string to print after loading .txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"     * @return deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"            Date date \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").parse(this.by);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"            String formattedDate \u003d new SimpleDateFormat(\"EEE, dd/MM/yyyy, h:mm a\").format(date);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"            this.by \u003d formattedDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"            return \"[D]\" + super.toString() + \" | \" + formattedDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"            //return \"Sorry, I can\u0027t recognize this date format! \u003e\u003c\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"            //        \"Try this format instead: deadline xxx /by YYYY-MM-DD hh:mm\";","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"            return \"[D]\" + super.toString() + \" | \" + this.by;","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"mandykqh"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"mandykqh"},"content":"    public String parseDate(String date) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"mandykqh"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"mandykqh"},"content":"            Date d \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").parse(this.by);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"mandykqh"},"content":"            String formattedDate \u003d new SimpleDateFormat(\"EEE, dd/MM/yyyy, hma\").format(d);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"mandykqh"},"content":"            return formattedDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"mandykqh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"mandykqh"},"content":"            //return \"Sorry, I can\u0027t recognize this date format! \u003e\u003c\\n\" +","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"mandykqh"},"content":"            //        \"Try this format instead: deadline xxx /by YYYY-MM-DD hh:mm\";","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"mandykqh"},"content":"            return date;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"mandykqh"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"mandykqh"},"content":"    */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":75}},{"path":"src/main/java/genie/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import genie.task.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":" * Deals with creating event tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"     * A constructor that takes in task descriptor and event duration","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"     * @param description of event","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"     * @param from start of event","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"     * @param to end of event","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"     * Returns event as a formatted string to print for list command.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"     * @return event","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from +","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"                \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"     * Returns to do as a formatted string to print after loading .txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"     * @return event","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"        return \"[E]\" + super.toFileFormat() + \" | \" + this.from + \" - \" + this.to;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":42}},{"path":"src/main/java/genie/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":" * Deals with creating tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"     * A constructor that takes in the task descriptor and initialises task as undone.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"     * @param description","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"     * Retrieves the status of the task (marked done or undone).","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"     * @return \"X\" if marked done, \" \" otherwise","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"     * Changes the status of the task to marked done.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mandykqh"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mandykqh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mandykqh"},"content":"     * Changes the status of the task to marked undone.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mandykqh"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mandykqh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"mandykqh"},"content":"     * Retrieves the status and description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"mandykqh"},"content":"     * @return formatted \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"mandykqh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"mandykqh"},"content":"        return this.getStatusBox() + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"mandykqh"},"content":"     * Retrieves the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"mandykqh"},"content":"     * @return formatted \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"mandykqh"},"content":"    public String getStatusBox() {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"mandykqh"},"content":"        return \"[\" +  this.getStatusIcon() + \"] \";","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"mandykqh"},"content":"     * Retrieves the status and description of the task formatted for .txt file","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"mandykqh"},"content":"     * @return formatted \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"mandykqh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mandykqh"},"content":"        return this.getStatusBox() + this.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"mandykqh"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"mandykqh"},"content":"        return description.contains(keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"mandykqh"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"mandykqh"},"content":"        return description;","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"mandykqh"},"content":"    public boolean containsWord(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"mandykqh"},"content":"        Pattern pattern \u003d Pattern.compile(\"\\\\b\" + keyword + \"\\\\b\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"mandykqh"},"content":"        Matcher matcher \u003d pattern.matcher(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"mandykqh"},"content":"        return matcher.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":78}},{"path":"src/main/java/genie/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":" * Deals with creating to do tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"     * A constructor that takes in the task descriptor.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"     * @param description of to do","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"     * Returns to do as a formatted string to print for list command.                                                                                                                                                                                                          for list command","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"     * @return to do","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"     * Returns to do as a formatted string to print after loading .txt file.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"     * @return to do","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mandykqh"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mandykqh"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mandykqh"},"content":"        return \"[T]\" + super.toFileFormat();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mandykqh":31}},{"path":"src/test/java/genie/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"    public void testToStringConversion() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[D][ ] do homework (by: Sat, 28/01/2023, 11:59 PM)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"                new Deadline(\"do homework\", \"2023-01-28 23:59\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[D][ ] do homework (by: 20/3 4pm)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"                new Deadline(\"do homework\", \"20/3 4pm\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"        Deadline d \u003d new Deadline(\"watch lecture\", \"2023-01-28 23:59\");","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"        d.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[D][X] watch lecture (by: Sat, 28/01/2023, 11:59 PM)\", d.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"        d.unmarkDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[D][ ] watch lecture (by: Sat, 28/01/2023, 11:59 PM)\", d.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"mandykqh"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"mandykqh"},"content":"    public void testToFileFormatConversion() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[D][ ] homework | Sat, 28/01/2023, 8:00 PM\",","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"mandykqh"},"content":"                new Deadline(\"homework\", \"2023-01-28 20:00\").toFileFormat());","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[D][ ] homework | 28/1 5pm\",","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"mandykqh"},"content":"                new Deadline(\"homework\", \"28/1 5pm\").toFileFormat());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"mandykqh":26}},{"path":"src/test/java/genie/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"    public void testToStringConversion() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[E][ ] team meeting (from: 16/1 8pm to: 9pm)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"                new Event(\"team meeting\", \"16/1 8pm\", \"9pm\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[E][ ] team meeting | sat 8pm - 9pm\",","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"                new Event(\"team meeting\", \"sat 8pm\", \"9pm\").toFileFormat());","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"mandykqh":17}},{"path":"src/test/java/genie/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"package genie.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"    public void testToStringConversion() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[T][ ] read book\", new ToDo(\"read book\").toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"        ToDo t \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"mandykqh"},"content":"        t.markDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[T][X] read book\", t.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"mandykqh"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"mandykqh"},"content":"    public void testToFileFormatConversion() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"        assertEquals(\"[T][ ] read book\", new ToDo(\"read book\").toFileFormat());","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"mandykqh"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"mandykqh"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"mandykqh":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mandykqh"},"content":"deadline homework /by 2023-01-23 23:59","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"mandykqh"},"content":"event meeting /from 4pm /to 6pm","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"mandykqh"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"mandykqh"},"content":"mark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"mandykqh"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mandykqh"},"content":"unmark 2","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mandykqh"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mandykqh"},"content":"find homework","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mandykqh"},"content":"find hw","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mandykqh"},"content":"bye","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"mandykqh":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"mandykqh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/genie/*.java","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mandykqh"},"content":"java -classpath ../bin genie.Genie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mandykqh":2,"-":36}}]
