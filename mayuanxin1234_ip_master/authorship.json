[{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"[T][X] read book ","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"[D][ ] return book (by: Oct 5 2020 1800)","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"[E][ ] project meeting  (from: Oct 2 2021 1200 to: Jan 5 2023 1300)","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"[T][ ] join sports club ","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"[T][ ] borrow book ","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" * Main Duke class which keep track a list of tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"class Duke {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Duke constructor that creates a new list with the specified input file directory","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * @param filePath a file location that has all the commands to Duke","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     * Main Program that reads the commands and processes them onto DUKE","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        int currIteration \u003d 0;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"                String fullCommand \u003d ui.readCommand(tasks, currIteration);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"                currIteration++;","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            } finally {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        new Duke(\"./././text-ui-test/input.txt\").run();","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mayuanxin1234":59,"-":3}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    public Ui() {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Error initialising DUKE! File Corrupted!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        for (int n \u003d 0; n \u003c 50; n++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    public String readCommand(TaskList tasks, int currIteration) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        String result \u003d tasks.printCommands(currIteration);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DukeException(\"End of command!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(result);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        return result;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":44}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * AddCommand class that encompasses the todo, deadline, event commands","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    protected String fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    protected String[] s;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a new AddCommand object that has takes note of the full command and the command separated by a space","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     * @param fullCommand input by user","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"     * @param s parsed command with spaces removed","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    public AddCommand(String fullCommand, String[] s) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        this.s \u003d s;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     * A method that performs the desired action of the command","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"     * @param tasks the TaskList class that keeps track of the tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * @param ui User Interface controlling what gets shown on the screen","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     * @param storage Storage class that handles the file input and output (saving)","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        if (s[0].equals(\"todo\")){","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            tasks.todo(s);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (s[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            tasks.deadline(s);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (s[0].equals(\"event\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            tasks.event(s);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"     * Tests if at end of command stack","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"     * @return false if not at end, true if no more commands left","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":52}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * Abstract class containing 2 methods for the command objects to implement","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":17}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * DeleteCommand class that handles the actions of the delete command","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a new DeleteCommand","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * @param taskNumber which task number to be removed","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Action to be performed by the delete command","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * @param tasks the TaskList class that keeps track of the tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     * @param ui User Interface controlling what gets shown on the screen","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     * @param storage Storage class that handles the file input and output (saving)","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            tasks.delete(taskNumber);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     * Tests if at end of command stack","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     * @return false if not at end, true if no more commands left","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":42}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * ExitCommand class that handles the actions of the \u0027bye\u0027 command","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a new ExitCommand","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     * Action to be performed by the bye command","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * @param tasks   the TaskList class that keeps track of the tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param ui      User Interface controlling what gets shown on the screen","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * @param storage Storage class that handles the file input and output (saving)","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        storage.store(tasks.getDataBase());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     * Tests if at end of command stack","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"     * @return false if not at end, true if no more commands left","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    private String[] s;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    public FindCommand(String[] s) {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"        this.s \u003d s;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"        for (int  i \u003d 1; i \u003c s.length; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"            task +\u003d s[i];","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"            task +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        tasks.find(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":" * ListCommand class that handles the actions of the list command","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    public String fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a new ListCommand","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public ListCommand(String fullCommand) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Action to be performed by the list command","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * @param tasks the TaskList class that keeps track of the tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param ui User Interface controlling what gets shown on the screen","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * @param storage Storage class that handles the file input and output (saving)","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        tasks.printList();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Tests if at end of command stack","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     * @return false if not at end, true if no more commands left","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":39}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" * MarkCommand class that handles the actions of the mark/unmark command","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    protected String fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    protected String markOrNot;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    protected int taskNumber;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a new DeleteCommand","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     * @param fullCommand fullcommand input by user","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * @param markOrNot   whether command is mark/unmark","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * @param taskNumber  which task to mark/unmark","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public MarkCommand(String fullCommand, String markOrNot, int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        this.markOrNot \u003d markOrNot;","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     * Action to be performed by the mark/unmark command","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     * @param tasks   the TaskList class that keeps track of the tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     * @param ui      User Interface controlling what gets shown on the screen","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     * @param storage Storage class that handles the file input and output (saving)","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        if (this.markOrNot.equals(\"unmark\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            tasks.unmark(taskNumber);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (this.markOrNot.equals(\"mark\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            tasks.mark(taskNumber);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"     * Tests if at end of command stack","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"     * @return false if not at end, true if no more commands left","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":58}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.exception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"        super(message);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"mayuanxin1234":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    enum ActionP {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"        bye, list, unmark, mark, todo, deadline, event, delete, find;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"        String[] s \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"        String command \u003d s[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        if (command.equals(ActionP.list.name())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            return new ListCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (command.equals(ActionP.bye.name())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (command.equals(ActionP.unmark.name()) || command.equals(ActionP.mark.name())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"            int taskNumber \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"            return new MarkCommand(fullCommand, command, taskNumber);","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (command.equals(ActionP.todo.name()) || command.equals(ActionP.deadline.name()) ||","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                command.equals(ActionP.event.name())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            return new AddCommand(fullCommand, s);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (command.equals(ActionP.delete.name())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            int taskNumberDelete \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            return new DeleteCommand(taskNumberDelete);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (command.equals((ActionP.find.name()))) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            return new FindCommand(s);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":39}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    private String filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"            ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"                result.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            return result;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            System.out.println(\"Error! Please check FIlename!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            return null;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public void store(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"            String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            Path path \u003d Paths.get(home);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            File f \u003d new File(\"./text-ui-test/duke.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                f.delete();","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            FileWriter fw \u003d new FileWriter(\"./text-ui-test/duke.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"                fw.write(list.get(i).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                fw.write(\u0027\\n\u0027);","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":63}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" * A class that creates a deadline object for the deadline command","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * A constructor to create a deadline object","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * @param description What task to be kept track","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     * @param date        date and time the task is due","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public Deadlines(String description, String date) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        this.date \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * To String method that returns the specified (MMM d YYYY HHmm)","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a string of the above format","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"                \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"mayuanxin1234":38}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * A class of events that encapsulates the event object created by event command","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"     * A constructor of events object","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     * @param description the task to be stored","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * @param startTime   the time the task starts","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * @param endTime     the time the task ends","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public Events(String description, String startTime, String endTime) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm \");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        this.startTime \u003d LocalDateTime.parse(startTime, formatterStart);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, formatterEnd);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     * A to string method of format [E][] (from: MMM d yyyy HHmm to: MMM d yyyy HHmm)","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     * @return the string of above specifications","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) +","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                \" to: \" + endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"mayuanxin1234":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":" * A Task class describing the tasks and keeping track of the task status whether is done or not.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a task object","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * @param description the data to be stored","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * The status icon X or no icon if the task is done or not done","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a string of \"X\" or \" \"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     * A method to mark the task as done","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"     * A method to unmark the task","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean find(String word) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        if(word.equals(this.description)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"     * A toString method of the format [x] todo_task","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a string of above format","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"mayuanxin1234":62}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"public class TaskList {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    protected ArrayList\u003cString\u003e listOfCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    protected ArrayList\u003cTask\u003e listDataBase \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    public TaskList(ArrayList\u003cString\u003e commands) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"        this.listOfCommands \u003d commands;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void printList() {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Here are the tasks in your list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c listDataBase.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"            System.out.println(listDataBase.get(i).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public void unmark(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        Task taskName \u003d listDataBase.get(taskNumber - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        taskName.unMark();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(taskName.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public void mark(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        Task taskName \u003d listDataBase.get(taskNumber - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        taskName.markAsDone();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(taskName.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    public void todo(String[] s) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        for (int j \u003d 1; j \u003c s.length; j++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"            taskDescription +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"            taskDescription +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        ToDos taskName \u003d new ToDos(taskDescription);","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(taskName.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        listDataBase.add(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Now you have \" + listDataBase.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    public void deadline(String[] s) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        boolean isTime \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        String time \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        for (int j \u003d 1; j \u003c s.length; j++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"            if (s[j].equals(\"/by\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                isTime \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            } else if (isTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                if (j + 1 \u003d\u003d s.length) {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                    time +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"                    time +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"                    time +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"                taskDescription +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"                taskDescription +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        Deadlines taskName \u003d new Deadlines(taskDescription, time);","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(taskName.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        listDataBase.add(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Now you have \" + listDataBase.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"    public void event(String[] s) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        boolean isStartTime \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        boolean isEndTime \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        String startTime \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        for (int j \u003d 1; j \u003c s.length; j++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"            if (s[j].equals(\"/from\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"                isStartTime \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"            } else if (isStartTime \u0026\u0026 !s[j].equals(\"/to\") \u0026\u0026 !isEndTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"                startTime +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                startTime +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"            } else if (s[j].equals(\"/to\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"                isEndTime \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"            } else if (isEndTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"                if (j + 1 \u003d\u003d s.length) {","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                    endTime +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                    endTime +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                    endTime +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                taskDescription +\u003d s[j];","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                taskDescription +\u003d \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"        Events taskName \u003d new Events(taskDescription, startTime, endTime);","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(taskName.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"        listDataBase.add(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Now you have \" + listDataBase.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"    public void delete(int taskNumberDelete) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"        Task currentTask \u003d listDataBase.get(taskNumberDelete - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(currentTask.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        listDataBase.remove(taskNumberDelete - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Now you have \" + listDataBase.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"    public ArrayList\u003cTask\u003e getDataBase() {","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"        return this.listDataBase;","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"    public String printCommands(int currIteration) {","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        if (currIteration \u003c listOfCommands.size()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"            return listOfCommands.get(currIteration);","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"        return null;","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"    public void find(String word) {","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c listDataBase.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"            Task task \u003d listDataBase.get(i);","lastModifiedDate":"2023-01-22"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"            if(task.find(word)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"                System.out.print(count);","lastModifiedDate":"2023-01-22"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"                System.out.print(\u0027.\u0027);","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"                count++;","lastModifiedDate":"2023-01-22"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":153}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * A todo class for the todo command","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"     * A constructor to create a todo object","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"     * @param description the task to be kept","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"     * A task Icon of T represented for todo","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * @return \"T\"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        return \"T\";","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * A toString method of format [T] task_todo","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a string of above format","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"mayuanxin1234":36}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package duke.parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static duke.parser.Parser.parse;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void checkToDoClass() {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"            String fullCommand \u003d \"todo read book\";","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"            String[] s \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"            assertEquals(new AddCommand(fullCommand, s).getClass(), Parser.parse(fullCommand).getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void checkDeleteClassTest() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            String fullCommand \u003d \"delete 1\";","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            String[] s \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            assertEquals(new DeleteCommand(Integer.parseInt(s[1])).getClass(), Parser.parse(fullCommand).getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public void checkExitClassTest() {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            String fullCommand \u003d \"bye\";","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            String[] s \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            assertEquals(new ExitCommand().getClass(), Parser.parse(fullCommand).getClass());","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":45}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"[T][X] read book ","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"[D][ ] return book (by: Oct 5 2020 1800)","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"[E][ ] project meeting  (from: Oct 2 2021 1200 to: Jan 5 2023 1300)","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"[T][ ] join sports club ","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"[T][ ] borrow book ","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mayuanxin1234":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"deadline return book /by 2020-10-05 1800","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"event project meeting /from 2021-10-02 1200 /to 2023-01-05 1300","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"todo join sports club","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"find return book","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"mayuanxin1234":9}}]
