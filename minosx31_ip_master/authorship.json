[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"    private static Pattern p \u003d Pattern.compile(\"deadline\\\\s(.*)\\\\s/by\\\\s(.*)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"    private String doBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    public Deadline (String description, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"        this.doBy \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public static String description(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        m.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        return m.group(1);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    public static String deadline(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        m.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        return m.group(2);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + this.doBy + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    private static String numOfTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"        return tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    public static void main(String[] args) throws IncorrectInputException {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"        Pattern mark \u003d Pattern.compile(\"(mark|unmark)([0-9])?\");","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"        Pattern index \u003d Pattern.compile(\"(mark|unmark|delete)?([0-9])\");","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        Pattern delete \u003d Pattern.compile(\"(delete)\\\\s([0-9])\");","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        Scanner sc \u003d new Scanner(System.in );","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        System.out.println(\"Hello I\u0027m Duke!\\n\" + \"How can I help you?\");","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"        while (true) {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"                Matcher matchMark \u003d mark.matcher(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"                Matcher matchIndex \u003d index.matcher(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"                Matcher matchDelete \u003d delete.matcher(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"                    System.out.println(\"Bye. Hope to see you again!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"                    System.out.println(\"Here are the tasks in your list\");","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"                    if (tasks.size() !\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"                        for (int i\u003d0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"                            System.out.println((i+1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"                } else if (matchMark.find() \u0026\u0026 matchIndex.find()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"                    Task currTask \u003d tasks.get(Integer.parseInt(matchIndex.group())-1);","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"                    if (matchMark.group().equals(\"mark\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"                        currTask.markAsDone();","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"                        System.out.println(\"[\" + currTask.getStatusIcon() + \"] \" + currTask.getDescription());","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"                    } else if (matchMark.group().equals(\"unmark\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"                        currTask.markAsUndone();","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"                        System.out.println(\"[\" + currTask.getStatusIcon() + \"] \" + currTask.getDescription());","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"                } else if (Task.isTask(input)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"                    String type \u003d Task.taskType(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"                    if (type.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"                        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"                            toAdd \u003d new Todo(Todo.description(input));","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"                            tasks.add(toAdd);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"                        } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"                            throw new IncorrectInputException(\"Enter a description!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"                    } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"                        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"                            toAdd \u003d new Deadline(Deadline.description(input), Deadline.deadline(input));","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"                            tasks.add(toAdd);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"                        } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"                            throw new IncorrectInputException(\"Enter a description with a deadline!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"                    } else if (type.equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"                        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"                            toAdd \u003d new Event(Event.description(input), Event.period(input));","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"                            tasks.add(toAdd);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"                        } catch (IllegalStateException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"                            throw new IncorrectInputException(\"Enter a description and event period!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"                    System.out.println(toAdd.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + Duke.numOfTasks(tasks) + \"in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"                } else if (matchDelete.find()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"                    Task toDelete \u003d tasks.get(Integer.parseInt(matchDelete.group(2))-1);","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"                    System.out.println(\"Alright, removing this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"                    System.out.println(toDelete.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"                    tasks.remove(toDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + Duke.numOfTasks(tasks) + \"in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"                    throw new IncorrectInputException(\"Enter a valid task!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"            } catch (IncorrectInputException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"minosx31":87,"-":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"    private static Pattern pattern \u003d Pattern.compile(\"event\\\\s(.*)\\\\s/from(.*)\\\\s/to(.*)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"    private String[] period;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    public Event(String description, String[] period) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"        this.period \u003d period;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public static String description(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        Matcher m \u003d pattern.matcher(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        m.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        return m.group(1);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    public static String[] period(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        Matcher m \u003d pattern.matcher(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        m.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        return new String[] {m.group(2), m.group(3)};","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (from:\" + this.period[0] + \" to:\" + this.period[1] + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":29}},{"path":"src/main/java/IncorrectInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"public class IncorrectInputException extends Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"    public IncorrectInputException (String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"        super(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"minosx31":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"    private String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    private static Pattern p \u003d Pattern.compile(\"(todo|event|deadline).*\");","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    public Task (String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"        this.description \u003d input;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    public static boolean isTask(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        return p.matcher(input).find();","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    public static String taskType(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        m.find();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        return m.group(1);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        return this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    public String addedTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"        return \"Added: \" + this.description;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"        return \"Added: \" + this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"minosx31":47}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"    private static Pattern p \u003d Pattern.compile(\"todo\\\\s(.*)\");","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    public static String description(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"        Matcher m \u003d p.matcher(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"        m.find();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        return m.group(1);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"todo read book","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"minosx31":1}}]
