[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"checkstyle {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minosx31":21,"-":39}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"T |   | make cheatsheet ","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"D |   | assignment 2 | 2023-02-20T18:30","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"T | X | take a nap","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"E |   | blackpink concert | 2023-05-13T19:30 to 2023-05-13T22:30","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"T | X | netflix and chill","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"minosx31":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"### Getting help: `help`","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"Shows a list of available commands and the command format.","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"### Adding a Deadline: `deadline`","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"Adds a task that needs to be done by a specific date and time.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"### Adding an Event: `event`","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"Adds a task that starts and ends at a specific date and time.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"### Adding a Todo: `todo`","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"Adds a task that needs to be completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"Lists out all current tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"### Marking a task: `mark` ","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"Marks a task as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"Marks a task as undone.","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"Finds a task that matches a specific keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"Deletes a specific task.","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"### Saying goodbye: `bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"Exits from the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"### `help` - Shows all commands","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"Shows all the available commands and their respective formats.","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"Format: `help`","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"I see you asked for help? YOU GOT IT!","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"Try the following commands:","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"\u003e [Deadline] deadline DESCRIPTION /by YYYY-MM-DDTHH:MM","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"\u003e [Event] event DESCRIPTION /from YYYY-MM-DDTHH:MM /to YYYY-MM-DDTHH:MM","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"\u003e [Todo] todo DESCRIPTION","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"\u003e [Find] find KEYWORD","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"\u003e [Mark] mark INDEX","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"\u003e [Unmark] unmark INDEX","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"\u003e [Delete] delete INDEX","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"\u003e [List] list","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"\u003e [Bye] bye","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"\u003e [Help] help","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"### `deadline` - Adds a deadline task","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"Adds a task that needs to be done by a specific date and time.","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"Format: `deadline DESCRIPTION /by YYYY-MM-DDTHH:mm`","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"Example of usage: `deadline report /by 2023-01-01T16:30`","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"Gotcha! I have added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"[D][ ] report (BY: Sunday, January 1 2023, 4:30 PM)","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"Now you have a total of 1 tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"### `event` - Adds an event task","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"Adds a task that starts and ends at a specific date and time.","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"Format: `event DESCRIPTION /from YYYY-MM-DDTHH:mm /to YYYY-MM-DDTHH:mm`","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"Example of usage: `event study /from 2023-02-18T00:00 /to 2023-02-26T23:59`","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"Gotcha! I have added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"[E][ ] study (FROM: Saturday, February 18 2023, 12:00 AM, TO: Sunday, February 26 2023, 11:59 PM)","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"minosx31"},"content":"Now you have a total of 1 tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"minosx31"},"content":"### `todo` - Adds a todo task","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"minosx31"},"content":"Adds a task that needs to be completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"minosx31"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"minosx31"},"content":"Example of usage: `todo sleep`","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"minosx31"},"content":"Expected outcome: ","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"minosx31"},"content":"Gotcha! I have added this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"minosx31"},"content":"[T][ ] sleep","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"minosx31"},"content":"Now you have a total of 1 tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"minosx31"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"minosx31"},"content":"Lists out all current tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"minosx31"},"content":"Format: `list`","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"minosx31"},"content":"Here are the current tasks you have:","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"minosx31"},"content":"1. [T][ ] sleep","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"minosx31"},"content":"2. [D][ ] report (BY: Sunday, January 1 2023, 4:30 PM)","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"minosx31"},"content":"3. [E][ ] study (FROM: Saturday, February 18 2023, 12:00 AM, TO: Sunday, February 26 2023, 11:59 PM)","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"minosx31"},"content":"### `mark` - Marks a task","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"minosx31"},"content":"Marks a task as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"minosx31"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"minosx31"},"content":"Example of usage: `mark 2`","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"minosx31"},"content":"Ok, I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"minosx31"},"content":"[T][X] sleep","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"minosx31"},"content":"### `unmark` - Unmarks a task","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"minosx31"},"content":"Unmarks a task if it is marked as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"minosx31"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"minosx31"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"minosx31"},"content":"Ok, I\u0027ve marked this task as undone:","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"minosx31"},"content":"[T][ ] sleep","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"minosx31"},"content":"### `find` - Find matching tasks","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"minosx31"},"content":"Finds a task that matches a specific keyword.","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"minosx31"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"minosx31"},"content":"Example of usage: `find sleep`","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"minosx31"},"content":"I found these tasks:","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"minosx31"},"content":"1. [T][ ] sleep early","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"minosx31"},"content":"2. [T][ ] stop sleeping in the afternoon","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"minosx31"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"minosx31"},"content":"Deletes a specific task.","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"minosx31"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"minosx31"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"minosx31"},"content":"Alright, I have removed this task:","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"minosx31"},"content":"[T][ ] sleep","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"minosx31"},"content":"Now you have a total of 6 tasks.","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"minosx31"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"minosx31"},"content":"***","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"minosx31"},"content":"### `bye` - Exits from program","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"minosx31"},"content":"Saves all existing tasks into data file and exits the program.","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"minosx31"},"content":"Format: `bye`","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":181,"author":{"gitId":"minosx31"},"content":"Expected outcome:","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"minosx31"},"content":"Exiting Duke now...","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"minosx31"},"content":"Bye, see you again!","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"minosx31":159,"-":26}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"    private void flip() {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"        db.flip();","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"        return db;","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" * Represents Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"public class Duke {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * A constructor for usage in GUI.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    public Duke() {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        this.storage \u003d new Storage(\"./data.txt\", this.ui);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        this.tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"     * @param filePath Path of data file.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"        this.storage \u003d new Storage(filePath, this.ui);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        this.tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"     * Runs the Duke program.","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    public void run() {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        Parser parser \u003d new Parser(this.storage, this.tasks, this.ui);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"        while (ui.isRunning()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"                String[] userInput \u003d ui.readUserInput();","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"                Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"                command.execute(storage, tasks, ui);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"                ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"     * Gets a response based on user\u0027s input.","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"     * @return A String response.","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"        Parser parser \u003d new Parser(this.storage, this.tasks, this.ui);","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"            return command.execute(storage, tasks, ui);","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"        new Duke(\"./data.txt\").run();","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":70}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"public class Launcher {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"            stage.show();","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"    @FXML","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"        );","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":53}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":" * Represents a ByeCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        storage.saveData(tasks.retrieveList());","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        ui.exit();","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        return ui.displayExitMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":18}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" * A Command interface for various types of commands to inherit from.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"public interface Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    String execute(Storage storage, TaskList tasks, Ui ui) throws DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":13}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" * Represents a DeadlineCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    private String deadlineDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private String deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"     * A constructor for DeadlineCommand.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * @param deadlineDescription The description of the Deadline task.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     * @param deadline The string representation of the deadline date.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    public DeadlineCommand(String deadlineDescription, String deadline) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        this.deadlineDescription \u003d deadlineDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        Task newTask \u003d new Deadline(deadlineDescription, deadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        assert newTask !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        String toDisplay \u003d String.format(\"Gotcha! I have added this task:\\n%s\\nNow you have a total of %d tasks.\",","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"                newTask, tasks.getSize());","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        ui.displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":35}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" * Represents a DeleteCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    private int taskNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"            Task taskToDelete \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"            assert taskToDelete !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"            tasks.deleteTask(taskNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"            String toDisplay \u003d String.format(\"Alright, I have removed this task:\\n%s\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"                    + \"Now you have a total of %d tasks.\", taskToDelete, tasks.getSize());","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"            ui.displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"            return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"I can\u0027t delete a task that doesn\u0027t exist!!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":33}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" * Represents an EventCommand that implements the Command interface .","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    private String eventDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private String[] eventPeriod;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"     * A constructor for EventCommand.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * @param eventDescription The description of the Event task.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     * @param eventPeriod A String array that contains the event period.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    public EventCommand(String eventDescription, String[] eventPeriod) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        this.eventDescription \u003d eventDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        this.eventPeriod \u003d eventPeriod;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        Task newTask \u003d new Event(eventDescription, eventPeriod);","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        assert newTask !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        String toDisplay \u003d String.format(\"Gotcha! I have added this task:\\n%s\\nNow you have a total of %d tasks.\",","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"                newTask, tasks.getSize());","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        ui.displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" * Represents a FindCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private String keyword;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d tasks.findMatchingTasks(keyword);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        return ui.displayMatchedTasks(matchedTasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":25}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"enum Commands {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    Deadline(\"deadline DESCRIPTION /by YYYY-MM-DDTHH:MM\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    Event(\"event DESCRIPTION /from YYYY-MM-DDTHH:MM /to YYYY-MM-DDTHH:MM\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    Todo(\"todo DESCRIPTION\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    Find(\"find KEYWORD\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    Mark(\"mark INDEX\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    Unmark(\"unmark INDEX\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    Delete(\"delete INDEX\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    List(\"list\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    Bye(\"bye\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    Help(\"help\");","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    private String commandFormat;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    Commands(String format) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        commandFormat \u003d format;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    String getCommandFormat() {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        return commandFormat;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":" * Represents a HelpCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        String toDisplay \u003d \"I see you asked for help? YOU GOT IT!\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"                + \"Try the following commands:\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"        for (Commands c : Commands.values()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"            toDisplay +\u003d String.format(\"\u003e [%s] %s\\n\", c, c.getCommandFormat());","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"        ui.displayMessage(toDisplay);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"minosx31":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":" * Represents a ListCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        return ui.displayTasks(tasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":16}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" * Represents a MarkCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    private int taskNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    private boolean toMark;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"     * A constructor for MarkCommand.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"     * @param taskNumber The task number to mark.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * @param toMark Indicates whether to mark or unmark.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    public MarkCommand(int taskNumber, boolean toMark) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"        if (!tasks.isValidTaskNumber(taskNumber)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"I cannot mark a task that doesn\u0027t exist!!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        String toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        if (toMark) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"            tasks.markTask(taskNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"            toDisplay \u003d \"Ok, I\u0027ve marked this task as done:\\n\" + tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"            tasks.unmarkTask(taskNumber - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"            toDisplay \u003d \"Ok, I\u0027ve marked this task as undone:\\n\" + tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"        ui.displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":40}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" * Represents a TodoCommand that implements the Command interface.","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    private String todoDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    public TodoCommand(String todoDescription) {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        this.todoDescription \u003d todoDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        Task newTask \u003d new Todo(todoDescription);","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        assert newTask !\u003d null;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        String toDisplay \u003d String.format(\"Gotcha! I have added this task:\\n%s\\nNow you have a total of %d tasks.\",","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"                newTask, tasks.getSize());","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        ui.displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":27}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" * Represents a Deadline that is a Task.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, \"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"            + \"MMMM d yyyy, h:mm a\");","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private String doBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"     * @param deadline Date of deadline.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        this.doBy \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"     * Translates the task into data format.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"     * @return A String that represents the task in data format.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    public String toData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        return String.format(\"D | %s | %s | %s\", this.getStatusIcon(), this.getDescription(), this.doBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"     * Checks if Deadline details are valid.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"     * @param deadlineDetails The details of Deadline task that are entered by user.","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"     * @return A String array containing the details that are required by Deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"     * @throws DukeException If there are missing details for Deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"    public static String[] checkDeadlineDetails(String deadlineDetails) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"        if (deadlineDetails.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You did not enter the required details for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        if (!deadlineDetails.contains(\"/by\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You have entered a wrong format for this command :(\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"                    + \"Type \u0027help\u0027 for a list of commands and their respective formats.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"        String deadlineDescription;","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"            deadlineDescription \u003d deadlineDetails.split(\" /by \", 2)[0];","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"            // If a description is not entered, index 1 will be empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"            String deadline \u003d deadlineDetails.split(\" /by \", 2)[1];","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"            if (deadlineDescription.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"You did not enter a description for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"Please enter a description for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"        String deadline \u003d deadlineDetails.split(\" /by \", 2)[1];;","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"        if (deadline.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You did not enter a deadline for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"        return new String[] {deadlineDescription, deadline};","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"        return String.format(\"[D][%s] %s (BY: %s)\", this.getStatusIcon(),","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"                this.getDescription(), this.deadline.format(DATE_TIME_FORMATTER));","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" * Represents an Event that is a Task.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, \"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"            + \"MMMM d yyyy, h:mm a\");","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private String[] period;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     * Constructor for Event.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"     * @param period Event period.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    public Event(String description, String[] period) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        this.period \u003d period;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(period[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        this.toDateTime \u003d LocalDateTime.parse(period[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"     * Translates the task into data format.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"     * @return A String that represents the task in data format.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    public String toData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"        return String.format(\"E | %s | %s | %s to %s\", this.getStatusIcon(),","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"                this.getDescription(), this.period[0], this.period[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"     * Check if Event details are valid.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"     * @param eventDetails The details of Event task that are entered by user.","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"     * @return A String array containing the details that are required by Event.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"     * @throws DukeException If there are missing details for Event.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"    public static String[] checkEventDetails(String eventDetails) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        if (eventDetails.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You did not enter the required details for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"        if (!eventDetails.contains(\"/from\") || !eventDetails.contains(\"/to\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You have entered a wrong format for this command :(\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"                    + \"Type \u0027help\u0027 for a list of commands and their respective formats.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"        String eventDescription;","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"            eventDescription \u003d eventDetails.split(\" /from \", 2)[0];","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"            // If a description is not entered, index 1 will be empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"            String period \u003d eventDetails.split(\" /from \", 2)[1];","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"            if (eventDescription.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"You did not enter a description for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"Please enter a description for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"        eventDetails \u003d eventDetails.split(\" /from \", 2)[1];","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"        String fromDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"            fromDate \u003d eventDetails.split(\" /to \", 2)[0];","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"            // If a start date or end date is not entered, index 1 will be empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"            String toDate \u003d eventDetails.split(\" /to \", 2)[1];","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"            if (fromDate.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"You did not enter a date which your task starts!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"Please enter a start date and an end date for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"        String toDate;","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"        toDate \u003d eventDetails.split(\" /to \", 2)[1];","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"        if (toDate.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You did not enter a date which your task ends!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"        return new String[] {eventDescription, fromDate, toDate};","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"        return String.format(\"[E][%s] %s (FROM: %s, TO: %s)\", this.getStatusIcon(), this.getDescription(),","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"                this.fromDateTime.format(DATE_TIME_FORMATTER), this.toDateTime.format(DATE_TIME_FORMATTER));","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":91}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":" * Task is the abstract base class for the other 3 types of Task: Todo, Deadline and Event.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    private String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     * Gets the description for a task.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"     * @return The String description for a task.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        return this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"     * Mark a task as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"     * Mark a task as undone.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"     * Gets a String representation of the task status.","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"     * @return \u0027X\u0027 if task is done and \" \" if not done.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"    public abstract String toData();","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"        return \"Added: \" + this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"minosx31":53}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":" * Represents a Todo that is a Task.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"     * Translates the task into data format.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"     * @return A String that represents the task in data format.","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    public String toData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"        return String.format(\"T | %s | %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"     * Checks if Todo details are valid.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"     * @param todoDetails The details of Todo task that are entered by user.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"     * @throws DukeException If no details are entered.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public static void checkTodoDetails(String todoDetails) throws DukeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        if (todoDetails.isBlank()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You did not enter the required details for your task!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":35}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":" * Represents exceptions that occur in Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"        super(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":10}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":" * Responsible for interpreting user inputs.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"public class Parser {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"     * Class constructor that takes in a Storage, TaskList and Ui","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"     * @param storage Interacts with the specified data file.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"     * @param tasks Contains all current tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"     * @param ui Interacts with user.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    public String getCommand(String[] userInput) {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        return userInput[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"    public String getCommandDetails(String[] userInput) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"            return userInput[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You have entered a command with no details! Please try again.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"    public int getTaskNumber(String commandDetails) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"            int taskNumber \u003d Integer.parseInt(commandDetails);","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"            if (taskNumber \u003c 1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"You entered an invalid task number :(\");","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"            return taskNumber;","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"You entered an invalid task number :(\");","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"     * Takes in an input from the user and executes the command.","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"     * @param userInput Input from user stored in a String array.","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"     * @return A Command corresponding to user input.","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"    public Command parse(String[] userInput) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"        switch (getCommand(userInput)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"        case \"list\":","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"            int taskNumberToMark \u003d getTaskNumber(userInput[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"            return new MarkCommand(taskNumberToMark, true);","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"            int taskNumberToUnmark \u003d getTaskNumber(getCommandDetails(userInput));","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"            return new MarkCommand(taskNumberToUnmark, false);","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"            String todoDetails \u003d getCommandDetails(userInput);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"            Todo.checkTodoDetails(todoDetails);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"            return new TodoCommand(todoDetails);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"            String[] deadlineDetails \u003d Deadline.checkDeadlineDetails(getCommandDetails(userInput));","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"            return new DeadlineCommand(deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"        case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"            String[] eventDetails \u003d Event.checkEventDetails(getCommandDetails(userInput));","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"            return new EventCommand(eventDetails[0], new String[] {eventDetails[1], eventDetails[2]});","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"            int taskNumber \u003d getTaskNumber(getCommandDetails(userInput));","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"        case \"find\":","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"minosx31"},"content":"            return new FindCommand(getCommandDetails(userInput));","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"minosx31"},"content":"        case \"help\":","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"minosx31"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"minosx31"},"content":"        default:","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"Enter a valid command!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":100}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.io.File;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":" * Responsible for both loading and storing data from a specified file.","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"public class Storage {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    private String filePath;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"     * A constructor for Storage.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"     * @param filePath The file path of the data file.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"     * @param ui The current Ui that is running.","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public Storage(String filePath, Ui ui) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"     * Retrieves the current tasks from the data file.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"     * @return An ArrayList of current tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"                String nextLine \u003d fileReader.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"                String[] taskSplit \u003d nextLine.split(\" \\\\| \", 3);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"                String taskType \u003d taskSplit[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"                String taskMark \u003d taskSplit[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"                String taskDetails \u003d taskSplit[2];","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"                case \"T\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d new Todo(taskDetails);","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"                    if (taskMark.equals(\"X\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"                    tasks.add(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"                case \"D\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"                    String[] deadlineDetails \u003d taskDetails.split(\" \\\\| \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"                    String deadlineDescription \u003d deadlineDetails[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"                    String deadline \u003d deadlineDetails[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d new Deadline(deadlineDescription, deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"                    if (taskMark.equals(\"X\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"                    tasks.add(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"                case \"E\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"                    String[] eventDetails \u003d taskDetails.split(\" \\\\| \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"                    String eventDescription \u003d eventDetails[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"                    String[] eventPeriod \u003d eventDetails[1].split(\" to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d new Event(eventDescription, eventPeriod);","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"                    if (taskMark.equals(\"X\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"                    tasks.add(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"                default:","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"            ui.displayMessage(\"Error loading data file!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"        return tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"     * Stores the current tasks as data into data file.","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"     * @param tasks An ArrayList of current tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"minosx31"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"minosx31"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"minosx31"},"content":"                fileWriter.write(String.format(\"%s\\n\", task.toData()));","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"minosx31"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"minosx31"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"minosx31"},"content":"            ui.displayMessage(\"Error creating or finding file!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"minosx31":103}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":" * Represents a list that contains the current tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"public class TaskList {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * Retrieves a list of current tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     * @return An ArrayList of current tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    public ArrayList\u003cTask\u003e retrieveList() {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"     * Returns number of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"     * @return The number of tasks currently.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"     * Retrieves a particular task.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"     * @param index Index of task in the ArrayList.","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"     * @return The requested task.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"     * Adds a new task to the ArrayList.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"     * Removes a particular task.","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"     * @param index Index of task in the ArrayList.","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"     * To mark a particular task as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"     * @param index Index of task in the ArrayList.","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"     * To mark a particular task as undone.","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"     * @param index Index of task in the ArrayList.","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"        this.taskList.get(index).markAsUndone();","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"     * Returns an ArrayList of matched tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"     * @param keyword Keyword to look for in the tasks\u0027 description.","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"     * @return An ArrayList of Task objects.","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) {","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"        for (Task currentTask : taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"            String taskDescription \u003d currentTask.getDescription();","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"                matchedTasks.add(currentTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"        return matchedTasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"    public boolean isValidTaskNumber(int taskNumber) {","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"        return taskNumber \u003c\u003d taskList.size();","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":92}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":" * Interacts with the user by displaying messages.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"public class Ui {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to Duke!\\nHow can I help you?\";","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Exiting Duke now...\\n\" + \"Bye, see you again!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    public Ui() {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"     * Takes in user input and splits it by the first whitespace.","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"     * @return A String array containing the user input.","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public String[] readUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        String userInput \u003d this.sc.nextLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"        return userInput.split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"     * Prints the specified message for the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"     * Prints the exit message for the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"    public String displayExitMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"        displayMessage(GOODBYE_MESSAGE);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"     * Prints the welcome message for the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"        displayMessage(WELCOME_MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"     * Lets the user know the current number of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"     * @param taskList Contains the list of current tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"    public String displayTasks(TaskList taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"        String toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"            toDisplay \u003d \"You currently have no tasks!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"            toDisplay \u003d \"Here are the current tasks you have:\";","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"                toDisplay +\u003d String.format(\"\\n%s. %s\", i + 1, taskList.getTask(i));","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"        displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"     * Lets the user know what are the tasks that match.","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"     * @param matchedTasks An ArrayList containing matched tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"    public String displayMatchedTasks(ArrayList\u003cTask\u003e matchedTasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"        String toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"        if (matchedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"            toDisplay \u003d \"No tasks found!\";","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"            toDisplay \u003d \"I found these tasks:\";","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"                toDisplay +\u003d String.format(\"\\n%s. %s\", i + 1, matchedTasks.get(i));","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"        displayMessage(toDisplay);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"        return toDisplay;","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"        return this.isRunning;","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"minosx31"},"content":"    public void exit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"minosx31"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":97}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-radius: 6px; -fx-border-color: black; -fx-background-color: FFEBCD; -fx-background-radius: 6px;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"            \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"1.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"516.0\" promptText\u003d\"Enter a command\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"78.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"            \u003cFont name\u003d\"PT Serif Caption\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"510.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\" AnchorPane.bottomAnchor\u003d\"0.5\" AnchorPane.rightAnchor\u003d\"0.5\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"            \u003cFont name\u003d\"PT Serif\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"556.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"584.0\" style\u003d\"-fx-background-color: #697990;\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"         \u003c/content\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"minosx31":26}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import duke.command.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    void addTodoTest(@TempDir Path tempDir) throws DukeException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        Path temp \u003d Files.createTempFile(null, \".txt\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        Storage storage \u003d new Storage(temp.toString(), ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        TaskList tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        Parser parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        String[] testInput \u003d \"todo sleep\".split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"        Command command \u003d parser.parse(testInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        command.execute(storage, tasks, ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        assertEquals(new Todo(\"sleep\").toString(), tasks.getTask(0).toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    void deleteTodoTest(@TempDir Path tempDir) throws DukeException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"        Path temp \u003d Files.createTempFile(null, \".txt\");","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"        Storage storage \u003d new Storage(temp.toString(), ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"        TaskList tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"        Parser parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"        String[] testInput1 \u003d \"todo sleep\".split(\" \", 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"        parser.parse(testInput1);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"        Command command1 \u003d parser.parse(testInput1);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"        command1.execute(storage, tasks, ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"        String[] testInput2 \u003d \"delete 1\".split(\" \", 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        Command command2 \u003d parser.parse(testInput2);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        command2.execute(storage, tasks, ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":51}},{"path":"src/test/java/duke/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import static java.util.Collections.singletonList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"import duke.command.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"public class StorageTest {","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    void storageTest(@TempDir Path tempDir) throws DukeException, IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        Path temp \u003d Files.createTempFile(null, \".txt\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        Storage storage \u003d new Storage(temp.toString(), ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        TaskList tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        Parser parser \u003d new Parser(storage, tasks, ui);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        String[] testInput1 \u003d \"event blackpink concert /from 2023-05-13T19:30 /to 2023-05-13T22:30\".split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"        Command command1 \u003d parser.parse(testInput1);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        command1.execute(storage, tasks, ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        String[] testInput2 \u003d \"bye\".split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        Command command2 \u003d parser.parse(testInput2);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"        command2.execute(storage, tasks, ui);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        assertEquals(Files.readAllLines(temp), singletonList(new Event(\"blackpink concert\",","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"                new String[] {\"2023-05-13T19:30\", \"2023-05-13T22:30\"}).toData()));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"todo read book","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"minosx31":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minosx31":1,"-":20}}]
