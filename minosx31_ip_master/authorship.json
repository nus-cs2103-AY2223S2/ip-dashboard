[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minosx31":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minosx31":2,"-":39}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.util.Parser;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.util.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.util.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.util.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"public class Duke {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        this.tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    public void run() {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        Parser parser \u003d new Parser(this.storage, this.tasks, this.ui);","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        while (ui.isRunning()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"                String[] userInput \u003d ui.readUserInput();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"                parser.parse(userInput);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"                ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"        new Duke(\"./data.txt\").run();","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":35}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    private String doBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM d yyyy, h:mm a\");","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    public Deadline (String description, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"        this.doBy \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    public String toData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"        return String.format(\"D | %s | %s | %s\", this.getStatusIcon(), this.getDescription(), this.doBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription() +","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"                \" (by: \" + this.deadline.format(DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    private String[] period;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM d yyyy, h:mm a\");","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    public Event(String description, String[] period) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        this.period \u003d period;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(period[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        this.toDateTime \u003d LocalDateTime.parse(period[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    public String toData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        return String.format(\"E | %s | %s | %s to %s\",this.getStatusIcon(), this.getDescription(), this.period[0], this.period[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription()","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"                + \" (from: \" + this.fromDateTime.format(DATE_TIME_FORMATTER)","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"                + \" to: \" + this.toDateTime.format(DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"    private String description;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"    public Task (String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"        this.description \u003d input;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"        return this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    public abstract String toData();","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"        return \"Added: \" + this.description;","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"minosx31":34}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.task;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"    public Todo (String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    public String toData() {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"        return String.format(\"T | %s | %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"minosx31":16}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"    public DukeException (String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"        super(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":7}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"public class Parser {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public Parser(Storage storage, TaskList tasks, Ui ui) {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    public void parse(String[] userInput) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"        String command \u003d userInput[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        switch (command) {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"            ui.displayExitMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"            storage.saveData(this.tasks.retrieveList());","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"            ui.exit();","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        case \"list\":","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"            ui.displayTasks(this.tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"                int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"                tasks.markTask(taskNumber - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"                ui.displayMarkedTask(tasks, taskNumber - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"                ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"                int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"                tasks.unmarkTask(taskNumber - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"                ui.displayMarkedTask(tasks, taskNumber - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"                ui.displayMessage(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"                String description \u003d userInput[1];","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"                Task newTask \u003d new Todo(description);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"                ui.displayAddedTask(newTask, tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"Enter a valid Todo!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"                String[] deadlineDetails \u003d userInput[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"                String deadlineDescription \u003d deadlineDetails[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"                String deadline \u003d deadlineDetails.length \u003e 0 ? deadlineDetails[1] : null;","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"                if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"                    throw new DukeException(\"Enter a valid deadline!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"                Task newTask \u003d new Deadline(deadlineDescription, deadline);","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"                ui.displayAddedTask(newTask, tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"Enter a description with a deadline!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"        case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"                String[] eventDetails \u003d userInput[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"                String eventDescription \u003d eventDetails[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"                String eventPeriod \u003d eventDetails.length \u003e 0 ? eventDetails[1] : null;","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"                if (eventPeriod \u003d\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"                    throw new DukeException(\"Enter a valid event period!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"                String[] splitEventPeriod \u003d eventPeriod.split( \" / to \");","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"                if (splitEventPeriod.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"minosx31"},"content":"                    throw new DukeException(\"Enter a valid event period!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"minosx31"},"content":"                Task newTask \u003d new Event(eventDescription, splitEventPeriod);","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"minosx31"},"content":"                tasks.addTask(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"minosx31"},"content":"                ui.displayAddedTask(newTask, tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"Enter a description and an event period!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"minosx31"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"minosx31"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"minosx31"},"content":"                int taskNumber \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"minosx31"},"content":"                Task taskToDelete \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"minosx31"},"content":"                tasks.deleteTask(taskNumber - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"minosx31"},"content":"                ui.displayDeletedTask(taskToDelete, tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"minosx31"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"minosx31"},"content":"                throw new DukeException(\"Enter a valid task number!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"minosx31"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"minosx31"},"content":"        default:","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"Enter a valid task!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":112}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import java.io.File;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"public class Storage {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    private String filePath;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"                String nextLine \u003d fileReader.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"                String[] taskSplit \u003d nextLine.split(\" \\\\| \", 3);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"                String taskType \u003d taskSplit[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"                String taskMark \u003d taskSplit[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"                String taskDetails \u003d taskSplit[2];","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"                case \"T\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d new Todo(taskDetails);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"                    if (taskMark.equals(\"X\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"                    tasks.add(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"                case \"D\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"                    String[] deadlineDetails \u003d taskDetails.split(\" \\\\| \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"                    String deadlineDescription \u003d deadlineDetails[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"                    String deadline \u003d deadlineDetails[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d new Deadline(deadlineDescription, deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"                    if (taskMark.equals(\"X\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"                    tasks.add(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"                case \"E\": {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"                    String[] eventDetails \u003d taskDetails.split(\" \\\\| \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"                    String eventDescription \u003d eventDetails[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"                    String[] eventPeriod \u003d eventDetails[1].split(\" to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"                    Task toAdd \u003d new Event(eventDescription, eventPeriod);","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"                    if (taskMark.equals(\"X\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"                        toAdd.markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"                    tasks.add(toAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"                default:","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"        return tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"                fileWriter.write(String.format(\"%s\\n\", task.toData()));","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"            throw new DukeException(\"Error creating or finding file!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"minosx31":85}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"public class TaskList {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    public ArrayList\u003cTask\u003e retrieveList() {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"    public int size() {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"        this.taskList.get(index).markAsUndone();","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":41}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package duke.util;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"public class Ui {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Welcome to Duke!\\nHow can I help you?\";","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"    public Ui () { //handle interaction with user","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    public String[] readUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"        String userInput \u003d this.sc.nextLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"        return userInput.split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"    public void displayExitMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        displayMessage(\"Exiting Duke now...\\n\" + \"Bye, see you again!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"        displayMessage(WELCOME_MESSAGE);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    public void displayTasks(TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"            displayMessage(\"You currently have no tasks!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"            String toDisplay \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"                toDisplay +\u003d String.format(\"\\n%s. %s\", i + 1, taskList.getTask(i));","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"            displayMessage(toDisplay);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"    public void displayAddedTask(Task newTask, TaskList tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        String toDisplay \u003d String.format(\"Gotcha! I have added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"                newTask.toString(), tasks.size());","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"        displayMessage(toDisplay);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"    public void displayDeletedTask(Task taskToDelete, TaskList tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"        String toDisplay \u003d String.format(\"Alright, I have removed this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"                taskToDelete.toString(), tasks.size());","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"        displayMessage(toDisplay);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"    public void displayMarkedTask(TaskList taskList, int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"        displayMessage(\"Ok, I\u0027ve marked this task as done:\\n\" + taskList.getTask(index).toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"    public boolean isRunning() {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"        return this.isRunning;","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"    public void exit() {","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"minosx31":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"todo read book","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"minosx31":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minosx31":1,"-":20}}]
