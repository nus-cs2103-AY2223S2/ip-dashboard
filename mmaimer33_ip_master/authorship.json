[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"   ","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"# Acknowledgements","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"- Values.java (4-9): Logo art generated on https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dPixlBot","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"- Values.java (15-17): Color support obtained from https://stackoverflow.com/a/45444716","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"-":24,"mmaimer33":4}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the bye command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * Abstract class for duke.commands.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"     * Executes the command, calling whatever methods necessary from Ui instance and modifying","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"     *      the TaskList if required.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"     * @param ui The Duke Ui reference.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"     * @param list The Duke TaskList reference.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"     * @param command The full input command string for verification and further parsing.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public abstract void execute (Ui ui, TaskList list, String command);","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent a Deadline (due date).","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"        return \"D\";","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        return this.description + \" (by: \" + this.dueDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":24}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the deadline command.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":11}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the mark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    /** Utility class instances */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"     * @param filePath Path to file containing stored Duke data (task list). Must not have extension.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"            list \u003d storage.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"            if (list.getSize() !\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"                new ListCommand().execute(ui, list, \"\");","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"            ui.pixlPrintException(de);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            ui.pixlPrint(\"Creating a new list...\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"     * Runs the Duke program.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    public void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        ui.open();","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"                String commandStr \u003d ui.getNewCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"                Command command \u003d parser.parse(commandStr);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"                command.execute(ui, list, commandStr);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"                isExit \u003d parser.getIsExit();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"                ui.pixlPrintException(de);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"            storage.save(list);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"            ui.pixlPrintException(de);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"        ui.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"        new Duke(\"src/data/Duke\").run();","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"mmaimer33":64}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * An exception class for Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"        super(msg);","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mmaimer33":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent an Event (start and end dates).","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    private String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        return \"E\";","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        return this.description + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":23}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the event command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the list command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the mark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A class to parse commands received from user input.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    /** Same basic instances as Duke */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    /** Check for program exit (true when bye command entered).*/","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * @param ui The Ui reference of Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * @param storage The Storage reference of Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     * @param list The TaskList reference of Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    public Parser(Ui ui, Storage storage, TaskList list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     * Parses a command received from input.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"     * @param commandStr command to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"     * @return The Command obtained from parsing.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If command input is invalid.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    public Command parse(String commandStr) throws DukeException{","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        switch (commandStr.split(\"\\\\s+\")[0]) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        case \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            return new TodoCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"            return new EventCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"            return new MarkCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"            return new DeleteCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"        return isExit;","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":59}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":" * A class to handle storing and loading of task list data.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    /** Path of file to store list data */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    private String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     * @param filePath Path to file to store list data (no extension).","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     * Saves the current taskList on file.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If data could not be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public void save(TaskList list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"            FileOutputStream fos \u003d new FileOutputStream(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            oos.writeObject(list);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"            oos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            fos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        } catch (IOException fe) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Could not save file.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"     * Loads data from the file path (provided in constructor).","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"     * @return The TaskList, if found.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If data could not be read.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"            TaskList list \u003d (TaskList) ois.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"            fis.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"            ois.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"            return list;","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"No task list found on hard disk.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":60}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A class to represent a task.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" * @author mmaimer33","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"public abstract class Task implements java.io.Serializable {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    // Constructor","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     * Gets the representative status mark for the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     * @return \u0027X\u0027 if done; \u0027 \u0027 otherwise.","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     * Mark task as completed.","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    public void complete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"     * Mark task as incomplete.","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    public void uncomplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    public abstract String getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":41}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A class to encapsulate task list information \u0026 behaviour.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    /** The task list */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for TaskList class to create empty list.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for TaskList class to load existing list.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        list.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"     * Removes a task from the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"     * @param task Task to be removed.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        list.remove(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"     * Removes the task at a specific index from the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"     * @param taskIndex Index of task to be removed.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    public void removeTask(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        list.remove(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"     * Gets the task stored in a given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"     * @param taskIndex Index to get task from.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"     * @return Task stored at taskIndex.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        return list.get(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"     * Gets the size of the current list.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"     * @return Size of list.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"        return list.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"mmaimer33":65}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent a ToDo (no date).","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        return \"T\";","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":18}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the todo command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class TodoCommand extends Command{","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A class to handle all User Interactions: getting command input and printing output.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    /** Scanner to get user input */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     * Welcomes the user by printing a message and the Logo","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public void open() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(\"Welcome to\\n\" + Values.LOGO);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(\"Enter a command to start.\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     * Wishes the user goodbye and closes the Scanner.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    public void close() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        pixlPrint(\"Goodbye! See you again :)\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.HLINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        scanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"     * Prints some text as PixlBot.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"     * @param text Text to print.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    public void pixlPrint(String text) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.COLOR_PURPLE + \"PixlBot: \" + Values.COLOR_RESET + text);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.HLINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"     * Prints some text as PixlBot, in the given color.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"     * @param text Text to print.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"     * @param color ANSI color code for text.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"    public void pixlPrint(String text, String color) {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.COLOR_PURPLE + \"PixlBot: \" + color + text + Values.COLOR_RESET);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.HLINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"     * Special print method to display the message from an exception.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"     * @param e Exception to display.","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"    public void pixlPrintException(Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"        pixlPrint(\"Uh oh! \" + e.getMessage(), Values.COLOR_RED);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"     * Gets a new command from standard input.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"     * @return The command received, as is.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"    public String getNewCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"mmaimer33":69}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the mark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    public void execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":9}},{"path":"src/main/java/Values.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"// A class to store global variable values.","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"public final class Values {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"    // Logo art generated on https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dPixlBot","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"    public static final String LOGO \u003d \"__________.__       .__ __________        __   \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"            \"\\\\______   \\\\__|__  __|  |\\\\______   \\\\ _____/  |_ \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"            \" |     ___/  \\\\  \\\\/  /  | |    |  _//  _ \\\\   __\\\\\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"            \" |    |   |  |\u003e    \u003c|  |_|    |   (  \u003c_\u003e )  |  \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"            \" |____|   |__/__/\\\\_ \\\\____/______  /\\\\____/|__|  \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"            \"                   \\\\/           \\\\/             \";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    // Horizontal line for formatting","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public static final String HLINE \u003d \"--------------------\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    // Color support obtained from https://stackoverflow.com/a/45444716","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public static final String COLOR_PURPLE \u003d \"\\033[0;35m\";  // PURPLE","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    public static final String COLOR_RED \u003d \"\\033[0;31m\";     // RED","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public static final String COLOR_RESET \u003d \"\\033[0m\";  // Text Reset","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    // Whitespace","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"todo An initial task!","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"deadline Submit an assignment /by Tuesday, 2023","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"todo H","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"event A class? /from February 2021 /to 2025","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"deadline Such Much /by tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mmaimer33":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"mmaimer33":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"mmaimer33":1}}]
