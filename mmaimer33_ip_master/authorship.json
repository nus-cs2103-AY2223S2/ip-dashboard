[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent a Deadline (due date).","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    private String dueDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"        return \"D\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        return this.description + \" (by: \" + this.dueDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    private static void PixlPrint(String text) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.PURPLE + \"PixlBot: \" + Values.RESET + text);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"//        System.out.println(\"Pixlbot: \" + text);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.HLINE);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    private static void PixlPrint(String text, String textColor) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.PURPLE + \"PixlBot: \" + textColor + text + Values.RESET);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.HLINE);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    private static String formatTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        return String.format(\"[%s][%s] %s\", task.getTaskType(), task.getStatusIcon(), task.getDescription());","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    private static int indexOf(String[] arr, String item) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"            if (arr[i].equals(item)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"                return i;","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        return 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    private static void listCommand() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder output \u003d new StringBuilder(\"Current list:\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            output.append(\"\\t\").append(i + 1).append(\". \").append(formatTask(list.get(i))).append(\"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        PixlPrint(output.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    private static void todoCommand(String command) throws DukeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"ToDo description cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        // Get task name.","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(i \u003d\u003d 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(parts[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        Task task \u003d new ToDo(taskName.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"        list.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        PixlPrint(\"Added new todo!\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"                \"\\t\" + formatTask(task) +","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"                \"\\nYou now have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"    private static void deadlineCommand(String command) throws DukeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"        int byIndex \u003d indexOf(parts, \"/by\");","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"        // Get name of task.","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 1; i \u003c byIndex; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(i \u003d\u003d 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(parts[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"        // Get due date.","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder dueDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d byIndex+1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"            dueDate.append(i \u003d\u003d byIndex+1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"            dueDate.append(parts[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"        if (taskName.length() \u003d\u003d 0 || dueDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide both a deadline description and a due date.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"                    \"\\tFormat: deadline \u003cdescription\u003e /by \u003cdue_date\u003e\");","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"mmaimer33"},"content":"        Task task \u003d new Deadline(taskName.toString(), dueDate.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"mmaimer33"},"content":"        list.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"mmaimer33"},"content":"        PixlPrint(\"Added new deadline!\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"mmaimer33"},"content":"                \"\\t\" + formatTask(task) +","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"mmaimer33"},"content":"                \"\\nYou now have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"mmaimer33"},"content":"    private static void eventCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"mmaimer33"},"content":"        int fromIndex \u003d indexOf(parts, \"/from\");","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"mmaimer33"},"content":"        int toIndex \u003d indexOf(parts, \"/to\");","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"mmaimer33"},"content":"        // Get task name.","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 1; i \u003c fromIndex; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(i \u003d\u003d 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(parts[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"mmaimer33"},"content":"        // Get start date.","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder startDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d fromIndex+1; i \u003c toIndex; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"mmaimer33"},"content":"            startDate.append(i \u003d\u003d fromIndex+1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"mmaimer33"},"content":"            startDate.append(parts[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"mmaimer33"},"content":"        // Get end date.","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d toIndex+1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"mmaimer33"},"content":"            endDate.append(i \u003d\u003d toIndex+1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"mmaimer33"},"content":"            endDate.append(parts[i]);","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"mmaimer33"},"content":"        if (taskName.length() \u003d\u003d 0 || startDate.length() \u003d\u003d 0 || endDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a description, start date, and end date.\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"mmaimer33"},"content":"                    \"\\tFormat: event \u003cdescription\u003e /from \u003cstart_date\u003e /to \u003cend_date\u003e\");","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"mmaimer33"},"content":"        Task task \u003d new Event(taskName.toString(), startDate.toString(), endDate.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"mmaimer33"},"content":"        list.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"mmaimer33"},"content":"        PixlPrint(\"Added new event!\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"mmaimer33"},"content":"                \"\\t\" + formatTask(task) +","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"mmaimer33"},"content":"                \"\\nYou now have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"mmaimer33"},"content":"    private static void markCommand(String command) throws DukeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"mmaimer33"},"content":"            Task task \u003d list.get(Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"mmaimer33"},"content":"            task.complete();","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"mmaimer33"},"content":"            PixlPrint(\"You completed a task!\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"mmaimer33"},"content":"                    \"\\t\" + formatTask(task));","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"mmaimer33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a valid task number to mark.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"mmaimer33"},"content":"    private static void unmarkCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"mmaimer33"},"content":"            Task task \u003d list.get(Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"mmaimer33"},"content":"            task.uncomplete();","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"mmaimer33"},"content":"            PixlPrint(\"Un-doing the task...\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"mmaimer33"},"content":"                    \"\\t\" + formatTask(task));","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"mmaimer33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a valid task number to unmark.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"mmaimer33"},"content":"    private static void deleteCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"mmaimer33"},"content":"            Task task \u003d list.remove(Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"mmaimer33"},"content":"            PixlPrint(\"Removed the task:\\n\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"mmaimer33"},"content":"                    \"\\t\" + formatTask(task) +","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"mmaimer33"},"content":"                    \"\\nYou now have \" + list.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"mmaimer33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a valid task number to delete.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"mmaimer33"},"content":"    private static void chatCycle(String command) throws DukeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"mmaimer33"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"mmaimer33"},"content":"            listCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"mmaimer33"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"mmaimer33"},"content":"            markCommand(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"mmaimer33"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"mmaimer33"},"content":"            unmarkCommand(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"mmaimer33"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"mmaimer33"},"content":"            todoCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"mmaimer33"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"mmaimer33"},"content":"            deadlineCommand(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"mmaimer33"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"mmaimer33"},"content":"            eventCommand(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"mmaimer33"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"mmaimer33"},"content":"            deleteCommand(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"mmaimer33"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"I don\u0027t know that command.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"mmaimer33"},"content":"        // Print the logo and welcome user.","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(\"Welcome to\\n\" + Values.LOGO);","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(\"Enter a command to start.\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"mmaimer33"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"mmaimer33"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"mmaimer33"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"mmaimer33"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"mmaimer33"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"mmaimer33"},"content":"                chatCycle(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"mmaimer33"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"mmaimer33"},"content":"                PixlPrint(\"Uh oh! \" + e.getMessage(), Values.RED);","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"mmaimer33"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"mmaimer33"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"mmaimer33"},"content":"        // End program","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"mmaimer33"},"content":"        PixlPrint(\"Goodbye! See you again :)\");","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"mmaimer33"},"content":"        System.out.println(Values.HLINE);","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"mmaimer33":198}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * An exception class for Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"        super(msg);","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mmaimer33":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent an Event (start and end dates).","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    private String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        return \"E\";","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        return this.description + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A class to represent a task.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" * @author mmaimer33","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    private boolean completed;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    // Constructor","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * Gets the representative status mark for the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     * @return \u0027X\u0027 if done; \u0027 \u0027 otherwise.","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        return this.completed ? \"X\" : \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"     * Mark task as completed.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    public void complete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"     * Mark task as incomplete.","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    public void uncomplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    public abstract String getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":39}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent a ToDo (no date).","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"        return \"T\";","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":18}},{"path":"src/main/java/Values.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"// A class to store global variable values.","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"public final class Values {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"    // Logo art generated on https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dPixlBot","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"    public static final String LOGO \u003d \"__________.__       .__ __________        __   \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"            \"\\\\______   \\\\__|__  __|  |\\\\______   \\\\ _____/  |_ \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"            \" |     ___/  \\\\  \\\\/  /  | |    |  _//  _ \\\\   __\\\\\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"            \" |    |   |  |\u003e    \u003c|  |_|    |   (  \u003c_\u003e )  |  \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"            \" |____|   |__/__/\\\\_ \\\\____/______  /\\\\____/|__|  \\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"            \"                   \\\\/           \\\\/             \";","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    // Horizontal line for formatting","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public static final String HLINE \u003d \"--------------------\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    // Color support obtained from https://stackoverflow.com/a/45444716","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public static final String PURPLE \u003d \"\\033[0;35m\";  // PURPLE","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    public static final String RED \u003d \"\\033[0;31m\";     // RED","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public static final String RESET \u003d \"\\033[0m\";  // Text Reset","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    // Whitespace","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"todo An initial task!","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"deadline Submit an assignment /by Tuesday, 2023","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"todo H","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"event A class? /from February 2021 /to 2025","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"deadline Such Much /by tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mmaimer33":13}}]
