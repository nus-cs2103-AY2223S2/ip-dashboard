[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"   ","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"# Acknowledgements","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"- Values.java (4-9): Logo art generated on https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dPixlBot","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"- Values.java (15-17): Color support obtained from https://stackoverflow.com/a/45444716","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"-":24,"mmaimer33":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    // JavaFX","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"-":40,"mmaimer33":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.GUi;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":" * The main class for the Duke program.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * Runs the main Duke program.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        Application.launch(GUi.class);","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"     * Main method of Duke. Runs the program with default settings.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"     * @param args Default main command-line args.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"mmaimer33":25}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * An exception class for Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for DukeException class","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"     * @param msg A message for the exception.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        super(msg);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mmaimer33":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":" * A class to parse commands received from user input.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    // Check for program exit (true when bye command entered).","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Parser class.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public Parser() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"     * Parses a command received from input.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"     * @param commandStr command to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"     * @return The Command obtained from parsing.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If command input is invalid.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    public Command parse(String commandStr) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        switch (commandStr.split(Values.SPACEX)[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        case \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"            return new TodoCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"            return new EventCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"            return new MarkCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"            return new DeleteCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"        case \"find\":","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"            return new FindCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Invalid command\");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"     * Utility function to find index of element in a String array.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"     * @param arr The array to search.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"     * @param item The item to find.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"     * @return Index of item if present; -1 otherwise.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"    public static int getIndexOf(String[] arr, String item) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"            if (arr[i].equals(item)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"                return i;","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"        return -1;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"     * Gets whether the program needs to exit (has received a \u0027bye\u0027 command).","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"     * @return true if program must exit now; false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"mmaimer33"},"content":"        return isExit;","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":" * A class to handle storing and loading of task list data.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    // Path of file to store list data.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    private String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"     * @param filePath Path to file to store list data (no extension).","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"     * Saves the current taskList on file.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If data could not be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    public void save(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"            FileOutputStream fos \u003d new FileOutputStream(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"            oos.writeObject(list);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"            oos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"            fos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"        } catch (IOException fe) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Could not save file: \" + fe.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"     * Loads data from the file path (provided in constructor).","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"     * @return The TaskList, if found.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If data could not be read.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"            FileInputStream fis \u003d new FileInputStream(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"            ArrayList\u003cTask\u003e list \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"            fis.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"            ois.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"            return list;","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"No task list found on hard disk.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":63}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" * A class to encapsulate task list information \u0026 behaviour.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    // The task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for TaskList class to create empty list.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for TaskList class to load existing list.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        if (obj instanceof TaskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"            TaskList other \u003d (TaskList) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"            return this.list.equals(other.list);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        list.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"     * Removes the task at a specific index from the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"     * @param taskIndex Index of task to be removed.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"    public Task removeTask(int taskIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"        return list.remove(taskIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"     * Returns a new TaskList of all tasks that contain a given keyword in their description.","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"     * @param keyword The word to search for.","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"     * @return The resulting TaskList.","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"            if (task.searchDescription(keyword)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"                output.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"        return new TaskList(output);","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"     * Gets the task stored in a given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"     * @param taskIndex Index to get task from.","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"     * @return Task stored at taskIndex.","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"        return list.get(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"mmaimer33"},"content":"     * Gets the size of the current list.","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"mmaimer33"},"content":"     * @return Size of list.","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"mmaimer33"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"mmaimer33"},"content":"        return list.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"mmaimer33"},"content":"     * Gets the ArrayList storing the tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"mmaimer33"},"content":"     * @return The list.","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"mmaimer33"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"mmaimer33"},"content":"        return list;","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"mmaimer33":97}},{"path":"src/main/java/duke/Values.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"// A class to store global variable values.","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"public final class Values {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"    // Logo art generated on https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dPixlBot","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"    /** String for PixlBot Logo. */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    public static final String LOGO \u003d \"__________.__       .__ __________        __   \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"            + \"\\\\______   \\\\__|__  __|  |\\\\______   \\\\ _____/  |_ \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"            + \" |     ___/  \\\\  \\\\/  /  | |    |  _//  _ \\\\   __\\\\\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"            + \" |    |   |  |\u003e    \u003c|  |_|    |   (  \u003c_\u003e )  |  \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"            + \" |____|   |__/__/\\\\_ \\\\____/______  /\\\\____/|__|  \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"            + \"                   \\\\/           \\\\/             \";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    /** String for a horizontal line. */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public static final String HLINE \u003d \"-------------------------\";","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    // Color support obtained from https://stackoverflow.com/a/45444716","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    /** ANSI value for color purple. */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    public static final String COLOR_PURPLE \u003d \"\\033[0;35m\"; // PURPLE","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    /** ANSI value for color red. */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public static final String COLOR_RED \u003d \"\\033[0;31m\"; // RED","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    /** ANSI value for color reset. */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    public static final String COLOR_RESET \u003d \"\\033[0m\"; // Text Reset","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"    /** Single whitespace character for print usage. */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    /** Regex for splitting strings by spaces */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public static final String SPACEX \u003d \"\\\\s+\";","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":30}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the bye command.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"        // Do nothing.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        return \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":15}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" * Abstract class for duke.commands.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"     * Executes the command, calling whatever methods necessary from Ui instance and modifying","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"     *      the TaskList if required.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"     * @param ui The Duke Ui reference.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * @param list The Duke TaskList reference.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * @param command The full input command string for verification and further parsing.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     * @return The output of executing the command.","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"     * @throws DukeException If there is an error in running the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    public abstract String execute (Ui ui, TaskList list, String command) throws DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":21}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the deadline command.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(Values.SPACEX);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        int byIndex \u003d Parser.getIndexOf(parts, \"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        // Get name of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 1; i \u003c byIndex; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(i \u003d\u003d 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(parts[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        // Get due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder dueDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d byIndex + 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"            dueDate.append(i \u003d\u003d byIndex + 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"            dueDate.append(parts[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"        if (taskName.length() \u003d\u003d 0 || dueDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide both a deadline description and a due date.\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"                    + \"\\tFormat: deadline \u003cdescription\u003e /by \u003cdue_date\u003e\");","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"        // Convert date string to LocalDate","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        LocalDate localDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"            localDate \u003d LocalDate.parse(dueDate.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"        } catch (RuntimeException re) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Could not parse date. Please use format \u0027yyyy-mm-dd\u0027.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"        Task task \u003d new Deadline(taskName.toString(), localDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"        list.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"        return ui.pixlPrint(\"Added new deadline!\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"                + \"\\t\" + task.formatTask()","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"                + \"\\nYou now have \" + list.getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":55}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the mark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"            Task task \u003d list.removeTask(Integer.parseInt(command.split(Values.SPACEX)[1]) - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"            return ui.pixlPrint(\"Removed the task:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"                    + \"\\t\" + task.formatTask()","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"                    + \"\\nYou now have \" + list.getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a valid task number to delete.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":24}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the event command.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(Values.SPACEX);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        int fromIndex \u003d Parser.getIndexOf(parts, \"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        int toIndex \u003d Parser.getIndexOf(parts, \"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        // Get task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 1; i \u003c fromIndex; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(i \u003d\u003d 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(parts[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        // Get start date.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder startDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d fromIndex + 1; i \u003c toIndex; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"            startDate.append(i \u003d\u003d fromIndex + 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"            startDate.append(parts[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        // Get end date.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder endDate \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d toIndex + 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"            endDate.append(i \u003d\u003d toIndex + 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"            endDate.append(parts[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        if (taskName.length() \u003d\u003d 0 || startDate.length() \u003d\u003d 0 || endDate.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a description, start date, and end date.\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"                    + \"\\tFormat: event \u003cdescription\u003e /from \u003cstart_date\u003e /to \u003cend_date\u003e\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"        Task task \u003d new Event(taskName.toString(), startDate.toString(), endDate.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"        list.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"        return ui.pixlPrint(\"Added new event!\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"                + \"\\t\" + task.formatTask()","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"                + \"\\nYou now have \" + list.getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":51}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the find command.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(Values.SPACEX);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please enter a keyword to search for.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        TaskList foundTasks \u003d list.find(parts[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        if (foundTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"            return ui.pixlPrint(\"No matching tasks found :/\");","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder output \u003d new StringBuilder(\"These are the matching tasks from your list:\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 0; i \u003c foundTasks.getSize(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"            output.append(\"\\t\").append(i + 1).append(\". \").append(foundTasks.getTask(i).formatTask()).append(\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        return ui.pixlPrint(output.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mmaimer33":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the list command.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        if (obj instanceof ListCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder output \u003d new StringBuilder(\"Your current task list:\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"            output.append(\"\\t\").append(i + 1).append(\". \").append(list.getTask(i).formatTask()).append(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        return ui.pixlPrint(output.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":30}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the mark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"            Task task \u003d list.getTask(Integer.parseInt(command.split(Values.SPACEX)[1]) - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"            task.complete();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"            return ui.pixlPrint(\"You completed a task!\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"                    + \"\\t\" + task.formatTask());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a valid task number to mark.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":24}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the todo command.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        String[] parts \u003d command.split(Values.SPACEX);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"ToDo description cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        // Get task name.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        StringBuilder taskName \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        for (int i \u003d 1; i \u003c parts.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(i \u003d\u003d 1 ? \"\" : Values.SPACE);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"            taskName.append(parts[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        Task task \u003d new ToDo(taskName.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        list.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        return ui.pixlPrint(\"Added new todo!\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"                + \"\\t\" + task.formatTask()","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"                + \"\\nYou now have \" + list.getSize() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":34}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import duke.gui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":" * A Command subclass for the mark command.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    public String execute(Ui ui, TaskList list, String command) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"            Task task \u003d list.getTask(Integer.parseInt(command.split(Values.SPACEX)[1]) - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"            task.uncomplete();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"            return ui.pixlPrint(\"Un-doing the task...\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"                    + \"\\t\" + task.formatTask());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"            throw new DukeException(\"Please provide a valid task number to unmark.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"mmaimer33":24}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":" * Abstraction for a single HBox to display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"public class DialogBox extends HBox{","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    private Label text;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    private ImageView displayPic;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for DialogBox class.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"     * @param text The message text to be displayed.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"     * @param displayPic An image of the \"person\" to be shown alongside the message.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public DialogBox(Label text, ImageView displayPic) {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        this.displayPic \u003d displayPic;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        displayPic.setFitWidth(100.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        displayPic.setFitHeight(100.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        this.getChildren().addAll(text, displayPic);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"     * Flips the dialog box horizontally.","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"     * Creates a DialogBox aligned for the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"     * @param text The message text to be displayed.","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"     * @param displayPic An image of the \"person\" to be shown alongside the message.","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"     * @return","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"    public static DialogBox getUserDialog(Label text, ImageView displayPic) {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"        return new DialogBox(text, displayPic);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"     * Creates a DialogBox aligned for the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"     * @param text The message text to be displayed.","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"     * @param displayPic An image of the \"person\" to be shown alongside the message.","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"     * @return","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    public static DialogBox getDukeDialog(Label text, ImageView displayPic) {","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"        var db \u003d new DialogBox(text, displayPic);","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"mmaimer33":67}},{"path":"src/main/java/duke/gui/GUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":" * Encapsulates the main GUI scene, creating and styling nodes as appropriate.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"public class GUi extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    // Window support values","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    private final double MIN_WIDTH \u003d 400.0;","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"    private final double MIN_HEIGHT \u003d 600.0;","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"    // JavaFX components","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    private Button enterButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    // Image files","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/pixlbot.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"    // Duke behaviour support","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"    private TaskList list;","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        // Scroll container","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"        enterButton \u003d new Button(\"Enter\");","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, enterButton);","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"        stage.setTitle(\"PixlBot\");","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"//        stage.setResizable(false);","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"        stage.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"        stage.setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"mmaimer33"},"content":"        mainLayout.setPrefSize(MIN_WIDTH, MIN_HEIGHT);","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"mmaimer33"},"content":"        styleNodes();","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"mmaimer33"},"content":"        // Add functionality.","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"mmaimer33"},"content":"        enterButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"mmaimer33"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"mmaimer33"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"mmaimer33"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"mmaimer33"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"mmaimer33"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"mmaimer33"},"content":"        // Scroll to end whenever dialogueContainer\u0027s height changes.","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"mmaimer33"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"mmaimer33"},"content":"        stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"mmaimer33"},"content":"        initialize();","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"mmaimer33"},"content":"     * Initializes the Duke behaviour classes.","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"mmaimer33"},"content":"    private void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"mmaimer33"},"content":"        isExit \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"mmaimer33"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"mmaimer33"},"content":"        storage \u003d new Storage(\"data/Duke\");","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"mmaimer33"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"mmaimer33"},"content":"        welcomeUser();","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"mmaimer33"},"content":"            list \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"mmaimer33"},"content":"            if (list.getSize() !\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"mmaimer33"},"content":"                sayAsDuke(new ListCommand().execute(ui, list, \"\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"mmaimer33"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"mmaimer33"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"mmaimer33"},"content":"            sayAsDuke(ui.pixlPrintException(de));","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"mmaimer33"},"content":"            sayAsDuke(\"Creating a new list...\");","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"mmaimer33"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"mmaimer33"},"content":"     * Welcomes the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"mmaimer33"},"content":"    private void welcomeUser() {","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"mmaimer33"},"content":"        dialogContainer.getChildren().add(new Label(ui.open()));","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"mmaimer33"},"content":"     * Saves data and exits.","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"mmaimer33"},"content":"    private void exitProgram() {","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"mmaimer33"},"content":"            storage.save(list.getList());","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"mmaimer33"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"mmaimer33"},"content":"            sayAsDuke(ui.pixlPrintException(de));","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"mmaimer33"},"content":"        stage.close();","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"mmaimer33"},"content":"     * Displays the given text as Duke.","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"mmaimer33"},"content":"     * @param text The message to be displayed.","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"mmaimer33"},"content":"    private void sayAsDuke(String text) {","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"mmaimer33"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"mmaimer33"},"content":"                DialogBox.getDukeDialog(new Label(text), new ImageView(duke)));","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"mmaimer33"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"mmaimer33"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"mmaimer33"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"mmaimer33"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"mmaimer33"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"mmaimer33"},"content":"        if (isExit) {","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"mmaimer33"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"mmaimer33"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(user)));","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"mmaimer33"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":157,"author":{"gitId":"mmaimer33"},"content":"            exitProgram();","lastModifiedDate":"2023-02-07"},{"lineNumber":158,"author":{"gitId":"mmaimer33"},"content":"            return;","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":161,"author":{"gitId":"mmaimer33"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"mmaimer33"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"mmaimer33"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-02-07"},{"lineNumber":164,"author":{"gitId":"mmaimer33"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"mmaimer33"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":167,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":168,"author":{"gitId":"mmaimer33"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":170,"author":{"gitId":"mmaimer33"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"mmaimer33"},"content":"            isExit \u003d parser.getIsExit();","lastModifiedDate":"2023-02-07"},{"lineNumber":172,"author":{"gitId":"mmaimer33"},"content":"            return command.execute(ui, list, input);","lastModifiedDate":"2023-02-07"},{"lineNumber":173,"author":{"gitId":"mmaimer33"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-02-07"},{"lineNumber":174,"author":{"gitId":"mmaimer33"},"content":"            return ui.pixlPrintException(de);","lastModifiedDate":"2023-02-07"},{"lineNumber":175,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":177,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":178,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":179,"author":{"gitId":"mmaimer33"},"content":"     * Handles node styling.","lastModifiedDate":"2023-02-07"},{"lineNumber":180,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":181,"author":{"gitId":"mmaimer33"},"content":"    private void styleNodes() {","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"mmaimer33"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-07"},{"lineNumber":183,"author":{"gitId":"mmaimer33"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-07"},{"lineNumber":184,"author":{"gitId":"mmaimer33"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-07"},{"lineNumber":185,"author":{"gitId":"mmaimer33"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":186,"author":{"gitId":"mmaimer33"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":187,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":188,"author":{"gitId":"mmaimer33"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-07"},{"lineNumber":189,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":190,"author":{"gitId":"mmaimer33"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":192,"author":{"gitId":"mmaimer33"},"content":"        enterButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":193,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":194,"author":{"gitId":"mmaimer33"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":195,"author":{"gitId":"mmaimer33"},"content":"        AnchorPane.setBottomAnchor(enterButton, 1.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":196,"author":{"gitId":"mmaimer33"},"content":"        AnchorPane.setRightAnchor(enterButton, 1.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":197,"author":{"gitId":"mmaimer33"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":198,"author":{"gitId":"mmaimer33"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-07"},{"lineNumber":199,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":200,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":201,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"mmaimer33":201}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.gui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":" * Temporary class to launch the GUI.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"public class Launcher {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"        Application.launch(GUi.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"mmaimer33":12}},{"path":"src/main/java/duke/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.gui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import duke.Values;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" * A class to handle all User Interactions: getting command input and printing output.","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"public class Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"    public Ui() {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"     * Welcomes the user by printing a message and the Logo","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    public String open() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"        return \"Welcome to\\n\" + Values.LOGO","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"            + \"\\nEnter a command to start.\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"     * Wishes the user goodbye and closes the Scanner.","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public String close() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        return pixlPrint(\"Goodbye! See you again :)\");","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"     * Prints some text as PixlBot.","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"     * @param text Text to print.","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    public String pixlPrint(String text) {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        return \"PixlBot says:\\n\" + text;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"     * Prints some text as PixlBot, in the given color.","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"     * @param text Text to print.","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"     * @param color ANSI color code for text.","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    public String pixlPrint(String text, String color) {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"        return \"PixlBot says:\\n\" + text;","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"     * Special print method to display the message from an exception.","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"     * @param e Exception to display.","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"    public String pixlPrintException(Exception e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"        return pixlPrint(\"Uh oh! \" + e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"mmaimer33":57}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent a Deadline (due date).","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    /** Due-date of the task. */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * @param description The deadline details.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * @param dueDate The LocalDate for the deadline in \"yyyy-mm-dd\" format.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"            Deadline other \u003d (Deadline) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"            return this.description.equals(other.description)","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"                    \u0026\u0026 this.dueDate.equals(other.dueDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"        return \"D\";","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        return this.description + \" (by: \" + this.dueDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent an Event (start and end dates).","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"    // Start and end dates/time.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    private String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    private String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Event class.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"     * @param description The event details.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"     * @param startDate The event start date/time.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * @param endDate The event end date/time.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"            Event other \u003d (Event) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"            return this.description.equals(other.description)","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"                    \u0026\u0026 this.startDate.equals(other.startDate)","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"                    \u0026\u0026 this.endDate.equals(other.endDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"        return \"E\";","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        return this.description + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A class to represent a task.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" * @author mmaimer33","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"public abstract class Task implements java.io.Serializable {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"    // Details of the task (what the task is).","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"    // Tracks whether the task is done.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"     * @param description The task details.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"     * Gets the representative status mark for the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"     * @return \u0027X\u0027 if done; \u0027 \u0027 otherwise.","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"     * Mark task as completed.","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    public void complete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"     * Mark task as incomplete.","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"    public void uncomplete() {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"     * Formats the task as \"[type][status] description\". E.g. [T][ ] Todo1.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"     * @return The formatted representation.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"mmaimer33"},"content":"    public String formatTask() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"mmaimer33"},"content":"        return String.format(\"[%s][%s] %s\", getTaskType(), getStatusIcon(), getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"mmaimer33"},"content":"     * Checks if a given word is in the description of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"mmaimer33"},"content":"     * @param word Word to search for.","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"mmaimer33"},"content":"     * @return true if word exists; false otherwise.","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"mmaimer33"},"content":"    public boolean searchDescription(String word) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"mmaimer33"},"content":"        return description.contains(word);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"mmaimer33"},"content":"     * Gets the type of task, as a String","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"mmaimer33"},"content":"     * @return \u0027T\u0027 for ToDo; \u0027D\u0027 for Deadline; \u0027E\u0027 for Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"mmaimer33"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"mmaimer33"},"content":"     * Gets the Task description (details).","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"mmaimer33"},"content":"     * @return String of the description.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"mmaimer33"},"content":"    public abstract String getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":73}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":" * A task subclass to represent a ToDo (no date).","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"     * @param description The todo details.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        if (obj instanceof ToDo) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"            ToDo other \u003d (ToDo) obj;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"            return this.description.equals(other.description);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        return \"T\";","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mmaimer33":37}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"    public void parse_listInput_listCommand() throws Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"        assertEquals(parser.parse(\"list\"), new ListCommand());","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    @Test public void parse_invalidInput_dukeExceptionThrown() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"            assertNull(parser.parse(\"randomness :)\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"            fail();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"            assertEquals(de.getMessage(), \"Invalid command\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"mmaimer33":28}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"mmaimer33"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"mmaimer33"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"mmaimer33"},"content":"    public void create_listInput_newList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"mmaimer33"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"mmaimer33"},"content":"                new ToDo(\"Task One\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"                new ToDo(\"Task (2)\")","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"mmaimer33"},"content":"        ));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"mmaimer33"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"mmaimer33"},"content":"                new ToDo(\"Task One\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"mmaimer33"},"content":"                new ToDo(\"Task (2)\")","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"mmaimer33"},"content":"        ));","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"mmaimer33"},"content":"        TaskList list \u003d new TaskList(testList);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"mmaimer33"},"content":"        assertEquals(list.getList(), expectedList);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"mmaimer33"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"mmaimer33"},"content":"    public void addTask_normalInput_success() {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"mmaimer33"},"content":"        ArrayList\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"mmaimer33"},"content":"                new ToDo(\"Task 1\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"mmaimer33"},"content":"                new Deadline(\"Task 2\", LocalDate.parse(\"2000-01-01\")),","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"mmaimer33"},"content":"                new Event(\"Task 3\", \"now\", \"later\")","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"mmaimer33"},"content":"        ));","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"mmaimer33"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"mmaimer33"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"mmaimer33"},"content":"        list.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"mmaimer33"},"content":"        list.addTask(new Deadline(\"Task 2\", LocalDate.parse(\"2000-01-01\")));","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"mmaimer33"},"content":"        list.addTask(new Event(\"Task 3\", \"now\", \"later\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"mmaimer33"},"content":"        assertEquals(list, new TaskList(expectedList));","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"mmaimer33"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"mmaimer33"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"mmaimer33":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mmaimer33"},"content":"todo An initial task!","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"mmaimer33"},"content":"deadline Submit an assignment /by Tuesday, 2023","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"mmaimer33"},"content":"todo H","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mmaimer33"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mmaimer33"},"content":"event A class? /from February 2021 /to 2025","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"mmaimer33"},"content":"deadline Such Much /by tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"mmaimer33"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"mmaimer33"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mmaimer33"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mmaimer33"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mmaimer33"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mmaimer33":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"mmaimer33"},"content":"REM run the program, feed duke.command from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"mmaimer33":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"mmaimer33"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"mmaimer33":1}}]
