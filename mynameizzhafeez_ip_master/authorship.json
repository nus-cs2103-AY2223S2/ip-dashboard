[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"    private String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    public Deadline(String content, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"        super(content);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Deadline create(String content) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param content what to place in this task.","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns the output Deadline object.","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        String source \u003d \"Deadline Creation\";","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] contentAndBy \u003d Parser.handleMissingField(content, \"/by\", \"by\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        String parsedContent \u003d contentAndBy[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        String by \u003d contentAndBy[1].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(parsedContent, \"content\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(by, \"by\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Deadline(parsedContent, by);","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    static String HORIZONTAL \u003d \"+\u003d\".repeat(20);","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"    static String INDENT \u003d \"\u003e \";","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"    static String ENDWORD \u003d \"bye\";","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"        Duke.indent();","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"Hallo Hallo niece and nephew! My name is Uncle Roger.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"What you want?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        Duke.start(scanner, Duke.ENDWORD);","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void putHorizontal() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"         * Prints a horizontal line.","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns void","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(Duke.HORIZONTAL);","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void indent() {","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"         * Indents the next output.","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns void","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.print(Duke.INDENT);","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void start(Scanner scanner, String endWord) {","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param scanner the scanner object already created.","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param endWord the trigger word to end the loop.","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns void","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        while (true) {","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            response \u003d scanner.nextLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            if (response.equals(endWord)) {","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"                break;","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"            Duke.indent();","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"            Parser.parseResponse(response, taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"            Duke.putHorizontal();","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"Bye Bye. Leave good review please! PLEAASEEE!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        Duke.putHorizontal();","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mynameizzhafeez":49,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"        super(errorMessage, err);","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"    private String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"    private String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"    public Event(String content, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"        super(content);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Event create(String content) {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param content what to place in this task.","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns the output Event object.","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        String source \u003d \"Event Creation\";","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] contentAndFrom \u003d Parser.handleMissingField(content, \"/from\", \"from\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] fromAndTo \u003d Parser.handleMissingField(content, \"/to\", \"to\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        String parsedContent \u003d contentAndFrom[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        String from \u003d fromAndTo[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        String to \u003d fromAndTo[1].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(parsedContent, \"content\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(from, \"from\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(to, \"to\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Event(parsedContent, from, to);","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":36}},{"path":"src/main/java/InputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class InputFormatException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"    public InputFormatException(String source, String reason, Throwable err) {","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"Haiya input format wrong. \\nHere is where you mess up: \" + source + \"\\nHere is why you wrong: \" + reason, err);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":5}},{"path":"src/main/java/MemoPad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"public class MemoPad {","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"    public MemoPad() {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns whether the pad is empty or not.","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    public void printSize() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(String.format(\"Now have %d items.\", this.tasks.size()));","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    public void addItem(char taskType, String content) {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"         * Adds to the list if there is space.","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param item the string to add to the list.","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task \u003d Task.create(taskType, content);","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            System.out.println(\"Task creation unsuccessful.\");","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            return;","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"Added task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        this.printSize();","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    public void deleteItem(String response) {","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"         * Marks the specified item.","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param unparsedId tries to parse this response.","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] splitted \u003d response.split(\" \", 2);","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(\"Item Marking\", \"Haiya where your number? FAILURE.\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        String unparsedId \u003d splitted[1];","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"            int id \u003d Integer.parseInt(unparsedId.strip())-1;","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            if (id \u003c this.tasks.size()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"                System.out.println(\"Deleted task:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"                System.out.println(this.tasks.get(id));","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"                this.tasks.remove(id);","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"                this.printSize();","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"            } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"                throw new NotFoundException(\"List\", String.format(\"Haiya we only got %d things lah.\", this.tasks.size()), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(\"Item Deletion\", \"Haiya this not number. FAILURE.\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    public void printItem(int id, boolean withNumber) {","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"         * Prints the item at this id.","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param id the index of the item to be printed.","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param withNumber whether to add the numbering.","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        String numbering \u003d withNumber ? (id+1) + \". \" : \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(numbering + this.tasks.get(id));","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    public void listItems() {","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"         * Lists the items in the list, including whether it was marked or not.","lastModifiedDate":"2023-01-15"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2023-01-15"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"            System.out.println(\"List empty!\");","lastModifiedDate":"2023-01-15"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"            return;","lastModifiedDate":"2023-01-15"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"Here\u0027s your list:\");","lastModifiedDate":"2023-01-15"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        for (int id \u003d 0; id \u003c this.tasks.size(); id++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"            this.printItem(id, true);","lastModifiedDate":"2023-01-15"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"    public void markItem(String response, boolean toMark) {","lastModifiedDate":"2023-01-15"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"         * Marks the specified item.","lastModifiedDate":"2023-01-15"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param response tries to parse this response.","lastModifiedDate":"2023-01-15"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param toMark whether to mark it or unmark it.","lastModifiedDate":"2023-01-15"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-15"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] splitted \u003d response.split(\" \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"        if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-15"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(\"Item Marking\", \"Haiya where your number? FAILURE.\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        String unparsedId \u003d splitted[1];","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"            int id \u003d Integer.parseInt(unparsedId)-1;","lastModifiedDate":"2023-01-15"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"            if (id \u003c this.tasks.size()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"                this.tasks.get(id).mark(toMark);","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"            } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"                throw new NotFoundException(\"List\", String.format(\"The maximum possible index is %d.\", this.tasks.size()), null);","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-15"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(\"Item Marking\", \"Haiya this not number. FAILURE.\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"mynameizzhafeez":111}},{"path":"src/main/java/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class NotFoundException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"    public NotFoundException(String source, String reason, Throwable err) {","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"        super(String.format(\"Haiya nothing here in the %s lah. \\n%s\", source, reason), err);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class Parser {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"    public Parser() {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void parseResponse(String response, TaskList taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param response the string response given by the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param taskList the task list that handles the tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        String firstWord \u003d (response + \" \").split(\" \", 2)[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"list\":","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"                taskList.listItems();","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"                taskList.deleteItem(response);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"                taskList.markItem(response, firstWord.equals(\"mark\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"            case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"                taskList.addItem(TaskType.valueOf(firstWord.toUpperCase()), response);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            default:","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"                System.out.println(\"HUH? What you say?.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    public static int parseInt(String s, String source) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"            return Integer.parseInt(s.strip())-1;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(source, \"Haiya this not number. FAILURE.\", null);","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    public static String[] handleMissingField(String content, String delimiter, String fieldName, String source) {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"         * Handles completely missing fields.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] splitted \u003d content.split(delimiter, 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(source,","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"                    String.format(\"Haiya where your %s? FAILURE.\", fieldName), null);","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        return splitted;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void handleEmptyField(String field, String fieldName, String source) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"         * The slashes are there but the field is empty.","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        if (field.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(source,","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"                    String.format(\"Haiya %s empty. FAILURE.\", fieldName), null);","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"mynameizzhafeez":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"    private boolean marked;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    private String content;","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"    public Task(String content) {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"        this.marked \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Task create(TaskType taskType, String content) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param taskType whether it is a Todo, Deadline or Event.","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param content what to put in the task.","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns the output Task object.","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] taskTypeAndContent \u003d Parser.handleMissingField(content, \" \",\"content\", \"Task Creation\");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        case TODO:","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"            return Todo.create(taskTypeAndContent[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"            return Deadline.create(taskTypeAndContent[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        case EVENT:","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"            return Event.create(taskTypeAndContent[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        default:","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            return null;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    public void mark(boolean isToMark) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param toMark whether to mark or unmark the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        this.marked \u003d isToMark;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(String.format(\"OK %smark for you already: \", isToMark ? \"\" : \"un\") + this);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.marked;","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.content;","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        String markedStatus \u003d this.isMarked() ? \"X\" : \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"[%s] %s\", markedStatus, this.getContent());","lastModifiedDate":"2023-01-15"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"mynameizzhafeez":53}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns whether the pad is empty or not.","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private void isInList(int id) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"         * Checks if the item with that id is in the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param id the id of the item in question.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        if (id \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new NotFoundException(\"List\",","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"                    String.format(\"Haiya we only got %d things lah.\", this.tasks.size()), null);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    public void printSize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"         * Prints size of the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(String.format(\"Now have %d items.\", this.tasks.size()));","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    public void addItem(TaskType taskType, String content) {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"         * Adds to the list if there is space.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param item the string to add to the list.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task \u003d Task.create(taskType, content);","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            System.out.println(\"FAILURE.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"OK I put in for you: \" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        this.printSize();","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public void deleteItem(String response) {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"         * Deletes the specified item.","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param response tries to parse this response.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] splitted \u003d Parser.handleMissingField(response, \" \", \"number\", \"Item Deletion\");","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        String rawId \u003d splitted[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        int id \u003d Parser.parseInt(rawId, \"Item Deletion\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isInList(id);","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"OK I take out for you: \" + this.tasks.get(id));","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks.remove(id);","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        this.printSize();","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public void printItem(int id, boolean withNumber) {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"         * Prints the item at this id.","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param id the index of the item to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param withNumber whether to add the numbering.","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        String numbering \u003d withNumber ? (id+1) + \". \" : \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(numbering + this.tasks.get(id));","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    public void listItems() {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"         * Lists the items in the list, including whether it was marked or not.","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"            System.out.println(\"List empty!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        System.out.println(\"Here\u0027s your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        for (int id \u003d 0; id \u003c this.tasks.size(); id++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"            this.printItem(id, true);","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    public void markItem(String response, boolean isToMark) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"         * Marks the specified item.","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param response tries to parse this response.","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param toMark whether to mark it or unmark it.","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] splitted \u003d Parser.handleMissingField(response, \" \", \"number\", \"Item Marking\");","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        String rawId \u003d splitted[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        int id \u003d Parser.parseInt(rawId, \"Item Marking\");","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isInList(id);","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks.get(id).mark(isToMark);","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"mynameizzhafeez":103}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"    EVENT,","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"    TODO;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"mynameizzhafeez":5}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"    public Todo(String content) {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"        super(content);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Todo create(String content) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"        /**","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"         * @param content what to place in this task.","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"         * @returns the output Todo object.","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"         */","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(content, \"content\", \"Todo Creation\");","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Todo(content);","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"todo eat","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mynameizzhafeez":1,"-":37}}]
