[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"checkstyle {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"checkstyle {","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mynameizzhafeez":26,"-":39}},{"path":"data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"T|0|buy chilli jam ","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"D|0|cook egg fried rice /by 2023-02-01 00:00","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"E|0|annoy Uncle Roger /from 2023-01-31 00:00 /to 2023-02-01 00:00","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"mynameizzhafeez":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"- [List all tasks](#list-all-tasks--list)","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"- [Mark a task](#mark-a-task--mark-index)","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"- [Unmark a task](#unmark-a-task--unmark-index)","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"- [Delete a task](#delete-a-task--delete-index)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"- [Find a task](#find-a-task--find-keywords)","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"- [Remind of tasks happening soon](#remind-of-tasks-happening-soon--remind)","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"- Add a task","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"  - [Add a todo item](#add-a-todo-item--todo-description)","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"  - [Add a deadline item](#add-a-deadline-item--deadline-description-by-deadline-datetime)","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"  - [Add an event item](#add-an-event-item--event-description-from-start-datetime-to-end-datetime)","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"- [End the chatbot](#end-the-chatbot--bye)","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"## Usage ","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"### List all tasks: `list`","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"Returns a list of all your current tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `list`","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger tell you what to do:","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"1. [T][ ] buy chilli jam","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"2. [D][ ] cook egg fried rice (by: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"3. [E][ ] annoy Uncle Roger (from: 31 Jan 2023 to: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot returns formatted information about the current tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"### Mark a task: `mark \u003cindex\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"Marks the task at the given index.","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `mark 2`","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger mark for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"[D][X] cook egg fried rice (by: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot marks the task at index 2, and this is notated by an [X].","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"### Unmark a task: `unmark \u003cindex\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"Unmarks the task at the given index.","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `unmark 2`","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger unmark for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"[D][ ] cook egg fried rice (by: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot unmarks the task at index 2, and this is notated by a reversion from [X] to [ ].","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"### Delete a task: `delete \u003cindex\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"Deletes the task at the given index.","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `delete 1`","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"Haiya so weak deleted:","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"[T][ ] buy chilli jam","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot deletes the task at index 1, and this task will no longer be in the list.","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"### Find a task: `find \u003ckeywords\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"Filters and returns a list of tasks that match the keywords.","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `find rice jam`","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger tell you what to do:","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"1. [T][ ] buy chilli jam","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"2. [D][ ] cook egg fried rice (by: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot filters the task list for those which contains the keywords \"rice\" or \"jam\".","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"### Remind of tasks happening soon: `remind`","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"Filters and returns a list of deadlines and events which are occurring within the next week.","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `remind`","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger tell you what to do:","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"1. [D][ ] cook egg fried rice (by: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"2. [E][ ] annoy Uncle Roger (from: 31 Jan 2023 to: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: Assuming the date this command was run was 31 Jan 2023, the chatbot returns the tasks which occur within one week of the date. ","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"### Add a todo item: `todo \u003cdescription\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"Creates a todo item with the given description.","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `todo buy chilli jam`","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger add for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"[T][ ] buy chilli jam","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot creates a new todo item with the description \"buy chilli jam\".","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"### Add a deadline item: `deadline \u003cdescription\u003e /by \u003cdeadline datetime\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"Creates a deadline item with the given description and end time.","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `deadline cook egg fried rice /by 2023-02-01 15:00`","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger add for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"[D][ ] cook egg fried rice (by: 01 Feb 2023 @ 15:00)","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot creates a new deadline item with description \"cook egg fried rice\" and deadline \"2023-02-01 15:00\" in \"YYYY-MM-dd HH:mm\" format.","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `deadline cook egg fried rice /by 2023-02-01`","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger add for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"[D][ ] cook egg fried rice (by: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: It is also acceptable to exclude the time when creating a deadline, as the chatbot will default it to midnight.","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"### Add an event item: `event \u003cdescription\u003e /from \u003cstart datetime\u003e /to \u003cend datetime\u003e`","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"Creates an event item with the given description, start and end times.","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `event annoy Uncle Roger /from 2023-01-31 12:00 /to 2023-02-01 15:00`","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger add for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"[E][ ] annoy Uncle Roger (from: 31 Jan 2023 @ 12:00 to: 01 Feb 2023 @ 15:00)","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot creates a new event item with description \"annoy Uncle Roger\", start date time \"2023-01-31 12:00\" and end date time \"2023-02-01 15:00\" in \"YYYY-MM-dd HH:mm\" format.","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `event annoy Uncle Roger /from 2023-01-31 12:00 /to 2023-02-01`","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"OK OK Uncle Roger add for you:","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"mynameizzhafeez"},"content":"[E][ ] annoy Uncle Roger (from: 31 Jan 2023 @ 12:00 to: 01 Feb 2023)","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: It is also acceptable to exclude the time when creating a deadline, as the chatbot will default it to midnight.","lastModifiedDate":"2023-02-13"},{"lineNumber":159,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"mynameizzhafeez"},"content":"### End the chatbot: `bye`","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"mynameizzhafeez"},"content":"Ends the program.","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `bye`","lastModifiedDate":"2023-02-13"},{"lineNumber":164,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":166,"author":{"gitId":"mynameizzhafeez"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"mynameizzhafeez"},"content":"Leave Uncle Roger a good review! PLEASE!","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":169,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"mynameizzhafeez"},"content":"Description of outcome: The chatbot greets farewell to the user.","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"mynameizzhafeez":143,"-":27}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import task.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Command for adding a task to a task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final char taskType;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String content;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructs an AddCommand object.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param commandType The type of task to create in the command.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param commandContent Content to be stored within the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public AddCommand(CommandType commandType, String commandContent) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        this.taskType \u003d commandType.toString().charAt(0);","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        this.content \u003d commandContent;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task \u003d Task.create(this.taskType, this.content);","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.say(taskList.addTask(task));","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":30}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.commandexception.UnknownCommandException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Command to be executed.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a new Command object based on the command given.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param commandWordContent The content of the user response.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return Command object that can be executed.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Command create(String[] commandWordContent) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        assert commandWordContent !\u003d null : \"Command should not be null.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        CommandType commandType;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"            commandType \u003d CommandType.valueOf(commandWordContent[0].toUpperCase());","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        String commandContent \u003d commandWordContent[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        switch (commandType) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        case BYE:","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        case LIST:","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        case DELETE:","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            return new DeleteCommand(commandContent);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        case MARK:","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            return new MarkCommand(commandType, commandContent);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        case TODO:","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        case EVENT:","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"            return new AddCommand(commandType, commandContent);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        case FIND:","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"            return new FindCommand(commandContent.strip().split(\" \"));","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        case REMIND:","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            return new RemindCommand();","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"     * Executes the given command and outputs to the ui.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param gui User Interface, which deals with inputs and outputs.","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param storage Storage module, which deals with caching the data of the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    public abstract void execute(TaskList taskList, Gui gui, Storage storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return whether the command is an exit command.","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":64}},{"path":"src/main/java/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * The types of commands available.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public enum CommandType {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    BYE,","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"    LIST,","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    DELETE,","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    MARK,","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    UNMARK,","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    TODO,","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    DEADLINE,","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    EVENT,","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    FIND,","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    REMIND","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mynameizzhafeez":17}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Command for deleting a task from the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final int index;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param commandContent Potentially contains the id of the task being deleted.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    public DeleteCommand(String commandContent) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        this.index \u003d Parser.parseInt(commandContent, \"Delete Item\") - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.say(taskList.deleteTask(this.index));","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":26}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.storageexception.SaveFileException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Command for ending the program.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.sayFarewell();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (SaveFileException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"            gui.showError(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":26}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":" * Command for finding matches to user inputs.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private final ArrayList\u003cString\u003e searchTerms;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for FindCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param searchTerms The terms to search.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    public FindCommand(String... searchTerms) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        this.searchTerms \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        Collections.addAll(this.searchTerms, searchTerms);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        Predicate\u003cTask\u003e taskPredicate \u003d task -\u003e this.searchTerms.stream()","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"                .anyMatch(searchTerm -\u003e task.getContent().contains(searchTerm));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.say(taskList.listItems(taskPredicate));","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mynameizzhafeez":33}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":" * Command for listing all tasks in a task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.say(taskList.listItems());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":15}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Command for marking a task in a task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final boolean isToMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final int index;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param commandType Whether to mark or unmark the task.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param commandContent Potentially contains the id of the task to be marked.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public MarkCommand(CommandType commandType, String commandContent) {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isToMark \u003d commandType \u003d\u003d CommandType.MARK;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        this.index \u003d Parser.parseInt(commandContent, \"Item Marking\") - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.say(taskList.markTask(this.index, this.isToMark));","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":29}},{"path":"src/main/java/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Reminder for upcoming deadlines.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.say(taskList.listItems(Task::isSoon));","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"mynameizzhafeez":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package duke;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import command.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import gui.Gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":" * Duke chatbot that will respond to users\u0027 commands.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Gui gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    public Duke(Gui gui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        this.storage \u003d new Storage(\"./data/taskList.txt\");","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        this.gui \u003d gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        gui.greet();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            this.storage.create();","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            gui.showError(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the response based on the user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param input The user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean getResponse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"            this.gui.echo(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            c.execute(this.taskList, this.gui, this.storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            return c.isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"            this.gui.showError(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"mynameizzhafeez":48,"-":1}},{"path":"src/main/java/dukeexception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling Duke-related problems.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param errorMessage Message to be displayed.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param err Throwable to be passed to parent constructor.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        super(errorMessage, err);","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":15}},{"path":"src/main/java/dukeexception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling incorrect date formats.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for InvalidDateException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"Haiya this not date. FAILURE!\", null);","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"mynameizzhafeez":13}},{"path":"src/main/java/dukeexception/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling invalid ids in task lists.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class NotFoundException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for NotFoundException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param source Where the exception is raised.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param reason Why the exception is raised.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param err Throwable to pass to parent constructor.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    public NotFoundException(String source, String reason, Throwable err) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        super(String.format(\"Haiya cannot find in %s. %s\", source, reason), err);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":16}},{"path":"src/main/java/dukeexception/commandexception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.commandexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception to handle an empty user response.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class EmptyCommandException extends UnknownCommandException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for EmptyCommandException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super();","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":13}},{"path":"src/main/java/dukeexception/commandexception/InputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.commandexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling incorrect input format for user commands.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"public class InputFormatException extends DukeException {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for InputFormatException.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param source Where the exception is raised.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param reason Why the exception is raised.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param err Throwable to pass to parent constructor.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    public InputFormatException(String source, String reason, Throwable err) {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        super(String.format(\"Haiya wrong format. You **** up at %s because %s.\", source, reason), err);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":18}},{"path":"src/main/java/dukeexception/commandexception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.commandexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling unknown commands written by the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for UnknownCommandException.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"HUH? What you say?\", null);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":15}},{"path":"src/main/java/dukeexception/storageexception/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.storageexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling a corrupted save file.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class CorruptedFileException extends StorageException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for CorruptedFileException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public CorruptedFileException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"File Corrupted. FAILURE!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":13}},{"path":"src/main/java/dukeexception/storageexception/CreateFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.storageexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling a failed file creation.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class CreateFileException extends StorageException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for CreateFileException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public CreateFileException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"Create file FAILURE!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":13}},{"path":"src/main/java/dukeexception/storageexception/LoadFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.storageexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling failed file load.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class LoadFileException extends StorageException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for LoadFileException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public LoadFileException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"Load file FAILURE!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":13}},{"path":"src/main/java/dukeexception/storageexception/SaveFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.storageexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling failed file save.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class SaveFileException extends StorageException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for SaveFileException.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public SaveFileException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super(\"Save file FAILURE!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":13}},{"path":"src/main/java/dukeexception/storageexception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package dukeexception.storageexception;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.DukeException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":" * Exception for handling storage-related problems.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for StorageException.","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param message Message to be displayed.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    public StorageException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        super(message, null);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":16}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        Rectangle clip \u003d new Rectangle(","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        clip.setArcWidth(90);","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        clip.setArcHeight(90);","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        displayPicture.setEffect(new DropShadow(20, Color.BLACK));","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    private void flip() {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        db.flip();","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        return db;","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":71}},{"path":"src/main/java/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" * Gui parallel of Ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class Gui {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String FAREWELL \u003d \"Bye Bye. Leave good review please! PLEAASEEE!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String GREETING \u003d \"Hallo Hallo niece and nephew! My name is Uncle Roger.\"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"What you want?\";","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private final VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private final TextField userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\"))","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    );","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"))","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    );","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * GUI constructor.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param dialogContainer VBox object.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param userInput TextField object.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public Gui(VBox dialogContainer, TextField userInput) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     * Echos whatever the user says.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param message Thing to say.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public void echo(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"                DialogBox.getUserDialog(message, userImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"     * Says something.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param message Thing to say.","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public void say(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] lines \u003d message.split(\"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        StringBuilder finalMessage \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        while (true) {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"            finalMessage.append(lines[i]).append(\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"            i++;","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"            if (i \u003d\u003d lines.length) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                        DialogBox.getDukeDialog(finalMessage.toString(), dukeImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                );","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                break;","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"            if (i % 4 \u003d\u003d 0) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"                        DialogBox.getDukeDialog(finalMessage.toString(), dukeImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"                );","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"                finalMessage \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"     * Greets the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"    public void greet() {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        say(GREETING);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"     * Says bye to the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    public void sayFarewell() {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        say(FAREWELL);","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"     * Shows the error message.","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param errorMessage Error message to be shown.","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"        say(errorMessage);","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":93}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":" * gui.Launcher for Duke GUI.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"public class Launcher {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            stage.show();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":28}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Timer;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     * Initializes the main window.","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     * Sets the duke object.","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setDuke() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        this.duke \u003d new Duke(new Gui(dialogContainer, userInput));","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"     * Timer adapted from: \u003ca href\u003d\"https://stackoverflow.com/a/21974490/\"\u003e...\u003c/a\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"            return;","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        boolean isExit \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        if (isExit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                    Platform.exit();","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"                    System.exit(0);","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"            }, 1000);","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":68}},{"path":"src/main/java/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.InvalidDateException;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":" * Parser for datetime objects.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"public class DateParser {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String PARSE_DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String PARSE_DATETIME_FORMAT \u003d PARSE_DATE_FORMAT + \" HH:mm\";","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String OUTPUT_DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String OUTPUT_DATETIME_FORMAT \u003d OUTPUT_DATE_FORMAT + \" @ HH:mm\";","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String STORAGE_DATETIME_FORMAT \u003d PARSE_DATETIME_FORMAT;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"     * Parses raw dates into the LocalDateTime format.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param rawDateString Date that needs to be parsed.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The datetime as a LocalDateTime object.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public static LocalDateTime parse(String rawDateString) {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        switch (rawDateString) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        case \"now\":","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            return LocalDateTime.now();","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        case \"today\":","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            return LocalDate.now().atTime(0, 0);","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        case \"tomorrow\":","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            return LocalDate.now().plusDays(1).atTime(0, 0);","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        case \"next week\":","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"            return LocalDate.now().plusDays(7).atTime(0, 0);","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            break;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"            if (rawDateString.strip().split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"                return LocalDate.parse(rawDateString).atTime(0, 0);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            return LocalDateTime.parse(rawDateString, DateTimeFormatter.ofPattern(PARSE_DATETIME_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     * Formats the datetime object for printing to System.out.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param datetime The datetime object to be formatted.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A String representing the datetime object.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    public static String formatDateToPrint(LocalDateTime datetime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        if (datetime.getHour() + datetime.getMinute() \u003d\u003d 0) {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"            return datetime.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(OUTPUT_DATETIME_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"     * Formats the datetime object for storing in the text file.","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"     * In particular, undoes the parse operation.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param datetime The datetime object to be formatted.","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A String representing the datetime object.","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public static String formatDateToStore(LocalDateTime datetime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        return datetime.format(DateTimeFormatter.ofPattern(STORAGE_DATETIME_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"mynameizzhafeez":69}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import command.Command;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.commandexception.EmptyCommandException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.commandexception.InputFormatException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":" * Parser for user commands.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class Parser {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"     * Parses the response given by the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param response Response given by the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A Command object best representing the user\u0027s input.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Command parse(String response) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        String strippedResponse \u003d response.strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        if (strippedResponse.equals(\"\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new EmptyCommandException();","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] commandWordContent \u003d (strippedResponse + \" \").split(\" \", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        return Command.create(commandWordContent);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"     * Tries to parse a string into an integer and throws an error otherwise.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param rawInt The string to convert into int.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param source Where this method is called, in order to throw a specified exception.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The int if it can be converted.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public static int parseInt(String rawInt, String source) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            return Integer.parseInt(rawInt.strip());","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(source, \"Haiya this not number. FAILURE.\", null);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"     * Handles a missing field, if any.","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content The content to be parsed.","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param delimiter The delimiter to split the string.","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param fieldName The field name associated with this operation.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param source Where this method is called, for throwing more specific exceptions.","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The splitted content, if applicable.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    public static String[] handleMissingField(String content, String delimiter, String fieldName, String source) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] splitted \u003d content.split(delimiter, 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        if (splitted.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(source,","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"                    String.format(\"where your %s? FAILURE.\", fieldName), null);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        return splitted;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"     * Handles fields that are there, but are empty.","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param field The field to be checked.","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param fieldName The name of the first being checked.","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param source Where this method is called, for the purposes of exception handling.","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public static void handleEmptyField(String field, String fieldName, String source) {","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        if (field.equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new InputFormatException(source,","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"                    String.format(\"Haiya %s empty. FAILURE.\", fieldName), null);","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"mynameizzhafeez":68}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.storageexception.CorruptedFileException;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.storageexception.CreateFileException;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.storageexception.LoadFileException;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.storageexception.SaveFileException;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import struct.Triple;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":" * Storage module for handling file saves and loads.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":" * Storage module for handling saves and loads.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"public class Storage {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a folder and a file, if not already created.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public void create() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            File folder \u003d new File(\"./data\");","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"            boolean folderCreationIsSuccessful \u003d folder.mkdir();","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            boolean fileIsCreated \u003d file.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new CreateFileException();","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * Saves the data within the task list into a file.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param taskList The task list to be saved.","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"            writer.write(taskList.tasksStorageString(\"\\n\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            writer.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"            System.out.println(\"OK saved for you.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new SaveFileException();","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"     * Loads the data from the text file.","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A list of taskType-markedStatus-content triples is returned.","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    public ArrayList\u003cTriple\u003cCharacter, Boolean, String\u003e\u003e load() {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"            ArrayList\u003cTriple\u003cCharacter, Boolean, String\u003e\u003e triples \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"                char taskType \u003d line.charAt(0);","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                boolean isMarked \u003d line.charAt(2) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"                String command \u003d line.substring(4);","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"                triples.add(new Triple\u003c\u003e(taskType, isMarked, command));","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"            return triples;","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new LoadFileException();","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"            boolean isDeleted \u003d file.delete();","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"            this.create();","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":83}},{"path":"src/main/java/struct/Triple.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package struct;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Triple struct for handling complex data.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" * @param \u003cA\u003e The type of the first value.","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":" * @param \u003cB\u003e The type of the second value.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" * @param \u003cC\u003e The type of the third value.","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"public final class Triple\u003cA, B, C\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    private final A a;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    private final B b;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final C c;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for Triple struct.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param a First value.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param b Second value.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param c Third value.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public Triple(A a, B b, C c) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        this.a \u003d a;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        this.b \u003d b;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        this.c \u003d c;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the first value.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The first value.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public A getFirst() {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.a;","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the second value.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The second value.","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    public B getSecond() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.b;","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the third value.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The third value.","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    public C getThird() {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.c;","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"mynameizzhafeez":49}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.DateParser;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Deadline object with a \u0027by\u0027 clause.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for the Deadline object.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content Content to be put in the object.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param by The deadline of the task as a String.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public Deadline(String content, String by) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        super(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        this.by \u003d DateParser.parse(by);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a new Deadline object.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content The content of the object.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A new deadline object.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Deadline create(String content) {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        String source \u003d \"Task.Deadline Creation\";","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] contentAndBy \u003d Parser.handleMissingField(content, \"/by\", \"by\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        String parsedContent \u003d contentAndBy[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        String by \u003d contentAndBy[1].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(parsedContent, \"content\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(by, \"by\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Deadline(parsedContent, by);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isSoon() {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.by.isBefore(LocalDateTime.now().plusDays(7)) \u0026\u0026 this.by.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"                \"[D]%s (by: %s)\",","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"                super.toString(),","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"                DateParser.formatDateToPrint(this.by));","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                \"D|%d|%s /by %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                this.isMarked() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                this.getContent(),","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                DateParser.formatDateToStore(this.by));","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":63}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.DateParser;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" * Event task with a \u0027from\u0027 and a \u0027to\u0027 clause.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content The content of the Event.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param from The start datetime of the Event, as a String.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param to The end datetime of the Event, as a String.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    public Event(String content, String from, String to) {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        super(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        this.from \u003d DateParser.parse(from);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        this.to \u003d DateParser.parse(to);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a new Event object.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content The content of the event.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A new Event object.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Event create(String content) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        String source \u003d \"Task.Event Creation\";","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] contentAndFrom \u003d Parser.handleMissingField(content, \"/from\", \"from\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        String[] fromAndTo \u003d Parser.handleMissingField(contentAndFrom[1], \"/to\", \"to\", source);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        String parsedContent \u003d contentAndFrom[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        String from \u003d fromAndTo[0].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        String to \u003d fromAndTo[1].strip();","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(parsedContent, \"content\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(from, \"from\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(to, \"to\", source);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Event(parsedContent, from, to);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isSoon() {","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.from.isBefore(LocalDateTime.now().plusDays(7)) \u0026\u0026 this.from.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"                \"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                super.toString(),","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                DateParser.formatDateToPrint(this.from),","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                DateParser.formatDateToPrint(this.to));","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"                \"E|%d|%s /from %s /to %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"                this.isMarked() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"                this.getContent(),","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                DateParser.formatDateToStore(this.from),","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"                DateParser.formatDateToStore(this.to));","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":72}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" * Task object encapsulating Todo, Deadline, and Event tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String content;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private boolean isHigh;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final ArrayList\u003cString\u003e tags;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content Content to be placed in the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public Task(String content) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isHigh \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a task object based on a taskType.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * If taskType is invalid, then return null.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param taskType Whether it is a Task.Todo, Task.Deadline or Task.Event.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content What to put in the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return Task object.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Task create(char taskType, String content) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        boolean isHigh \u003d content.contains(\"high\");","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        content \u003d content.replace(\" high\", \"\");","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"            task \u003d Todo.create(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"            break;","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            task \u003d Deadline.create(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            break;","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"            task \u003d Event.create(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"            break;","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        default:","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"            return null;","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        task.setPriorityLevel(isHigh);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        return task;","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"     * Marks or unmarks the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param isToMark Whether to mark or unmark the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public void mark(boolean isToMark) {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isMarked \u003d isToMark;","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns whether the task is marked.","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return Whether the task is marked.","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.isMarked;","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the contents of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The contents of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.content;","lastModifiedDate":"2023-01-15"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"     * Checks when the task will be important.","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return Whether the deadline or start of event is soon.","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isSoon() {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"     * Sets the priority level.","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param isHigh Whether to set to high priority.","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    private void setPriorityLevel(boolean isHigh) {","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isHigh \u003d isHigh;","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"     * Sets the tag for the task.","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param tag Name of the tag.","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"    private void addTag(String tag) {","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tags.add(tag);","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"        String markedStatus \u003d this.isMarked() ? \"X\" : \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"        String priorityStatus \u003d this.isHigh ? \"!!\" : \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"        String tagsAsString \u003d this.tags.stream().map(tag -\u003e \"#\" + tag).collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"[%s] %s%s %s\", markedStatus, this.getContent(), priorityStatus, tagsAsString);","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"     * Formats the task object for storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The String representing the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"mynameizzhafeez":115}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.NotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import struct.Triple;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":" * Task list to contain the tasks that the user has to complete.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructor for empty TaskList.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"     * Overloaded constructor for TaskList","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param triples Triple structs containing the task\u0027s type, mark status, and content.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    public TaskList(ArrayList\u003cTriple\u003cCharacter, Boolean, String\u003e\u003e triples) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        for (Triple\u003cCharacter, Boolean, String\u003e triple : triples) {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            Task task \u003d Task.create(triple.getFirst(), triple.getThird());","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"                task.mark(triple.getSecond());","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                this.tasks.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return Whether the task list is empty.","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     * Checks whether the item with that id is in the list.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param id The id of the potential item.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    private void isInList(int id) {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        if (id \u003e\u003d this.tasks.size() || id \u003c 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new NotFoundException(\"List\",","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"                    String.format(\"Only have %d things. FAILURE.\", this.tasks.size()), null);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"     * Prints the size of the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getSizeAsFormattedString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        int size \u003d this.tasks.size();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        if (size \u003e 5) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"            return String.format(\"Haiya now %d things to do... Why so many? Why so weak?\", size);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"Good, good. Now only have %d things to do.\", size);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"     * Adds a Task to the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        return \"OK OK Uncle Roger add for you:\\n\" + task + \"\\n\" + this.getSizeAsFormattedString();","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"     * Deletes the task from the list if the index exists.","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isInList(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        String finalString \u003d \"Haiya so weak delete task:\\n\" + this.tasks.get(index);","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"        return finalString;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"     * Filters items in the list.","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param taskPredicate A filter that returns a boolean.","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A filtered list of items.","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"    private List\u003cTask\u003e filterItems(Predicate\u003cTask\u003e taskPredicate) {","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.tasks.stream().filter(taskPredicate).collect(Collectors.toList());","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"     * Prints out all tasks in the list.","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"    public String listItems() {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"        return this.listItems((t) -\u003e true);","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"     * Prints out some items from the list.","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param taskPredicate A filter that returns a boolean.","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"    public String listItems(Predicate\u003cTask\u003e taskPredicate) {","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"            return \"Haiya list empty!\";","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"        String response \u003d \"OK OK Uncle Roger tell you what to do:\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.filterItems(taskPredicate);","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        response +\u003d IntStream.range(0, filteredTasks.size())","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\\n\", i + 1, filteredTasks.get(i)))","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"        return response;","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"     * Marks or unmarks the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param index The index of the task that needs to be marked.","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param isToMark Whether to mark or unmark the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"    public String markTask(int index, boolean isToMark) {","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        this.isInList(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"        task.mark(isToMark);","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"OK OK Uncle Roger %smark for you:\\n\", isToMark ? \"\" : \"un\") + task;","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the string used for storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param delimiter How to separate the different fields of a task.","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return The string representation of the task list in storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"    public String tasksStorageString(String delimiter) {","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        assert !delimiter.equals(\"\");","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"        StringBuilder finalString \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"            finalString.append(task.toStorageString());","lastModifiedDate":"2023-01-22"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"            finalString.append(delimiter);","lastModifiedDate":"2023-01-22"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"        return finalString.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"mynameizzhafeez":149}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import parser.Parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":" * Todo task without any datetime field.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    public Todo(String content) {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        super(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a new Todo object.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param content The content of the todo.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return A new Todo object.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Todo create(String content) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        Parser.handleEmptyField(content, \"content\", \"Task.Todo Creation\");","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Todo(content);","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"T|%d|%s\", this.isMarked() ? 1 : 0, this.getContent());","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"mynameizzhafeez":22}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.commandexception.EmptyCommandException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import dukeexception.commandexception.InputFormatException;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseInt_int_int() {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(5, Parser.parseInt(\"5\", \"ParserTest\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(-5, Parser.parseInt(\"-5\", \"ParserTest\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseInt_nonInt_throwException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        Exception exception \u003d assertThrows(InputFormatException.class, () -\u003e {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"            Parser.parseInt(\"a\", \"ParserTest\");","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        });","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d \"Haiya this not number. FAILURE.\";","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parse_empty_throwException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        Exception exception \u003d assertThrows(EmptyCommandException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d \"HUH? What you say?\";","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    public void handleMissingField_singleWord_throwException() {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        Exception exception \u003d assertThrows(InputFormatException.class, () -\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"            Parser.handleMissingField(\"eat\", \"/by\", \"by\", \"Event Creation\");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        });","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d \"Haiya wrong format.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mynameizzhafeez":54}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package task;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    public void create_invalidTaskType_nullReturned() {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNull(Task.create(\u0027W\u0027, \"Content\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    public void create_validTodo_todoReturned() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task \u003d Task.create(\u0027T\u0027, \"Content\");","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(task.getContent(), \"Content\");","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public void mark_validTarget_taskMarked() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        Task task \u003d Task.create(\u0027T\u0027, \"Content\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        task.mark(true);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(task.isMarked());","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        task.mark(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(task.isMarked());","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"mynameizzhafeez":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"todo eat","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"mynameizzhafeez":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"java -classpath ..\\bin seedu.duke.seedu.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mynameizzhafeez":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mynameizzhafeez":1,"-":37}}]
