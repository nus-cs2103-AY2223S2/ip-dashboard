[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"plugins {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"repositories {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"dependencies {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"test {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    testLogging {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"        showExceptions true","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"        showCauses true","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"        showStackTraces true","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"application {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"shadowJar {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"run{","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":41}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"@rem","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"echo.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"echo.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"goto fail","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"echo.","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"echo.","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"goto fail","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":":init","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"nerdyboy98"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"nerdyboy98"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"nerdyboy98"},"content":":win9xME_args","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"nerdyboy98"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"nerdyboy98"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"nerdyboy98"},"content":"set _SKIP\u003d2","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"nerdyboy98"},"content":":win9xME_args_slurp","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"nerdyboy98"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"nerdyboy98"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"nerdyboy98"},"content":":execute","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"nerdyboy98"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"nerdyboy98"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"nerdyboy98"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"nerdyboy98"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"nerdyboy98"},"content":":end","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"nerdyboy98"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"nerdyboy98"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"nerdyboy98"},"content":":fail","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"nerdyboy98"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"nerdyboy98"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"nerdyboy98"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"nerdyboy98"},"content":"exit /b 1","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"nerdyboy98"},"content":":mainEnd","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"nerdyboy98"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"nerdyboy98"},"content":":omega","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"        this.fileManager \u003d new FileManager(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList \u003d this.fileManager.getFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        this.parser \u003d  new Parser(this.fileManager, this.taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        String greetings \u003d \"Heyyo, Pandora at your service \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"        //Input objects","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        Scanner userInput \u003d new Scanner(System.in);;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"        String userMessage \u003d \"dummyInput\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        while (!userMessage.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"            userMessage \u003d userInput.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"            parser.parse(userMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"        new Duke(\"data\\\\pandora.txt\").run();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nerdyboy98":34,"-":3}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"public class FileManager {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    private String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    public FileManager(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"    public TaskList getFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"            FileInputStream fis \u003d new FileInputStream(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(this.ui.savedFileFound());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"            TaskList taskList \u003d new TaskList(toDoList);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"            return taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(this.ui.savedFileNotFound());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"            TaskList taskList \u003d new TaskList(toDoList);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"            return taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(this.ui.savedFileNotFound());","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"            TaskList taskList \u003d new TaskList(toDoList);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"            return taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    public void saveFile(ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"            oos.writeObject(toDoList);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"            oos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"Please create pandora.txt file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"nerdyboy98":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    public Parser(FileManager fileManager, TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    public void parse(String userMessage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        String [] parts \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"        if (parts[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"            this.fileManager.saveFile(this.taskList.getList());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"            System.out.print(\"  Cya~ Till next time!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"            this.taskList.list();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"                int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"                this.taskList.mark(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    Please specify which task to mark~  \u003e:(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"                int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"                this.taskList.unmark(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    Please specify which task to unmark~  \u003e:(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"                int taskNumber \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"                this.taskList.remove(taskNumber);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    Please specify which task to delete~ \u003e:(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"                Todo newToDo \u003d new Todo(parts[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"                this.taskList.add(newToDo);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    OOPS!!! The description of todo cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"                String[] deadlineParts \u003d parts[1].split(\" /\");","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"                String[] deadline \u003d deadlineParts[1].split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"                LocalDate byDate \u003d LocalDate.parse(deadline[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"                Deadline newDeadline \u003d new Deadline(deadlineParts[0], byDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"                this.taskList.add(newDeadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    OOPS!!! The description of deadline cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    Incorrect date format, try again~\");","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"nerdyboy98"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"nerdyboy98"},"content":"                String[] eventParts \u003d parts[1].split(\" /\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"nerdyboy98"},"content":"                String[] from \u003d eventParts[1].split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"nerdyboy98"},"content":"                String[] to \u003d eventParts[2].split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"nerdyboy98"},"content":"                LocalDate fromDate \u003d LocalDate.parse(from[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"nerdyboy98"},"content":"                LocalDate toDate \u003d LocalDate.parse(to[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"nerdyboy98"},"content":"                Event newEvent \u003d new Event(eventParts[0], fromDate, toDate);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"nerdyboy98"},"content":"                this.taskList.add(newEvent);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"nerdyboy98"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    OOPS!!! The description of event cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"nerdyboy98"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    Incorrect date format, please try again~\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"nerdyboy98"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":87}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    public String savedFileNotFound() {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"        return \"[Saved file not found, new List initialised~]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    public String savedFileFound() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"        return \"[Saved file found, saved List initialised~]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        String formattedByDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.taskType + \"][\" + super.status + \"] \"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"                + super.description","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"                + \" (BY: \" + formattedByDate","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        String formattedFromDate \u003d this.from.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        String formattedToDate \u003d this.to.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.taskType + \"][\" + super.status + \"] \"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"                + super.description","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"                + \" (FROM: \" + formattedFromDate","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"                + \" TO: \" + formattedToDate","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":27}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    protected String status;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        this.status \u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    private String toggleStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        if (this.isDone \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"            this.status \u003d toggleStatus();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        if (this.isDone \u003d\u003d true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"            this.status \u003d toggleStatus();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.status + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":36}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"     \" + newTask.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"    Now you have \" + this.taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    public void remove(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"            Task taskToRemove \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"     \" + taskToRemove.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"            this.taskList.remove(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    Now you have \" + this.taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    Incorrect selection made~  \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"    public void mark(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList.get(taskIndex).mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"     \" + this.taskList.get(taskIndex).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"    public void unmark(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList.get(taskIndex).unmark();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(\"     \" + this.taskList.get(taskIndex).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"    public void list() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"            int numbering \u003d i + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    \" + numbering + \".\" + taskList.get(i).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.taskType + \"][\" + super.status + \"] \" + super.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":14}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    //test setup","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    Task dummyTask1 \u003d new Task(\"task1\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    Task dummyTask2 \u003d new Task(\"task2\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        taskList.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        tl.mark(1);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[X] task1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(0).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        tl.mark(1);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"        tl.unmark(1);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[ ] task1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(0).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"    public void add() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[ ] task1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(0).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"    public void remove() {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask2);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[ ] task2\";","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(1).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nerdyboy98":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"todo","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"event","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"blah","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"todo borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"mark","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"delete","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"delete 1","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"bye","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nerdyboy98":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"if not exist C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin mkdir C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"javac  -cp C:\\users\\chewc\\Documents\\ip\\src\\main\\java -Xlint:none -d C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"java -classpath C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nerdyboy98":3,"-":18}},{"path":"data/pandora.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"nerdyboy98":0}}]
