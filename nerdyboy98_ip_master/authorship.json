[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"plugins {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"repositories {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"dependencies {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"test {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"    testLogging {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"        showExceptions true","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        showCauses true","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"        showStackTraces true","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"application {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"shadowJar {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"    archiveBaseName \u003d \"PandoraBot\"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"run{","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"nerdyboy98":62}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"# PandoraBot User Guide","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"### Basic features","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"- `todo`, `deadline` \u0026 `deadline` to add your desired task","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"- `delete` together with the task number removes the task you want to get rid of","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"- `mark` \u0026 `unmark` to mark and unmark tasks that you have completed","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"- `list` displaya all existing tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"### Special featues","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"- `sort` - sorts the existing task in alphabetical order.","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"- `find` - finds the tasks that contains the given keyword.","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"- `help` - displays the format of basic features.","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"## Commands \u0026 Format","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"\u003e### `todo` - Task reminder without deadlines","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"_Takes down task in a to-do-list form._","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"`todo borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"Description of the outcome.","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"`[T][ ] borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"\u003e### `deadline` - Task reminder with deadlines","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"_Takes down task together with a deadline date._","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"`deadline return book /by 2020-12-31`","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"Description of the outcome.","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"`[D][ ] return book (BY: 31 Dec 2020)`","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"\u003e### `event` - Task with start \u0026 end date","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"_Takes down task that spans a duration._","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"`event outdoor camp /from 2022-11-20 /to 2022-11-23`","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"Description of the outcome.","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"`[E][ ] outdoor camp (FROM: 20 Nov 2022 TO: 23 Nov 2022)`","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"\u003e### `mark` \u0026 `unmark` - Marks or unmarks the specified task with an \u0027X\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"_Helps you keep track of any completed or uncompleted task._","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":"`mark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"nerdyboy98"},"content":"`unmark 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"nerdyboy98"},"content":"`[T][X] borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"nerdyboy98"},"content":"`[T][ ] borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"nerdyboy98"},"content":"\u003e### `delete` - Removes the specified task","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"nerdyboy98"},"content":"_given the task number, deletes that specified task_","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"nerdyboy98"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"nerdyboy98"},"content":"`delete 1`","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"nerdyboy98"},"content":"Before:","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"nerdyboy98"},"content":"`1.[T][ ] borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"nerdyboy98"},"content":"`2.[D][ ] return book (BY: 31 Dec 2020)`","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"nerdyboy98"},"content":"`3.[E][ ] outdoor camp (FROM: 20 Nov 2022 TO: 23 Nov 2022)`","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"nerdyboy98"},"content":"After:","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"nerdyboy98"},"content":"`1)[D][ ] return book (BY: 31 Dec 2020)`","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"nerdyboy98"},"content":"`2)[E][ ] outdoor camp (FROM: 20 Nov 2022 TO: 23 Nov 2022)`","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"nerdyboy98"},"content":"\u003e### `sort` - Arrange tasks in alphabetical order","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"nerdyboy98"},"content":"_sorts based on task description in alphabetical order_","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"nerdyboy98"},"content":"Example of usage:","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"nerdyboy98"},"content":"`sort`","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"nerdyboy98"},"content":"Before:","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"nerdyboy98"},"content":"`1.[T][ ] borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"nerdyboy98"},"content":"`2.[D][ ] return book (BY: 31 Dec 2020)`","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"nerdyboy98"},"content":"`3.[E][ ] outdoor camp (FROM: 20 Nov 2022 TO: 23 Nov 2022)`","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"nerdyboy98"},"content":"After:","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"nerdyboy98"},"content":"`1.[T][ ] borrow book`","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"nerdyboy98"},"content":"`2.[E][ ] outdoor camp (FROM: 20 Nov 2022 TO: 23 Nov 2022)`","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"nerdyboy98"},"content":"`3.[D][ ] return book (BY: 31 Dec 2020)`","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"nerdyboy98"},"content":"### Features not explained above can be tried out without any alteration to the existing list.","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"nerdyboy98"},"content":"### So go on and try it out for yourself!","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"nerdyboy98":105,"-":19}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart3.html","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nerdyboy98":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wojak.jpg\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/monkaS.jpg\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"    public Duke() {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        this.fileManager \u003d new FileManager(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList \u003d this.fileManager.getFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"        this.parser \u003d new Parser(this.fileManager, this.taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"     * Returns void.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"     * Runs the Pandora bot","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"        String greetings \u003d \"Heyyo, Pandora at your service \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"        //System.out.println(greetings);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"        //Input objects","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"        Scanner userInput \u003d new Scanner(System.in);;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        String userMessage \u003d \"dummyInput\";","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"        while (!userMessage.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"            userMessage \u003d userInput.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(parser.parse(userMessage));","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"        new Duke(\"data\\\\pandora.txt\").run();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"        //this.parser.parse(userInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"        return this.parser.parse(userInput);","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"        //return \"lol\";","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nerdyboy98":63,"-":3}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"public class FileManager {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    private String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    public FileManager(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"     * Returns TaskList object containing the saved ArrayList file,","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"     * else return a new TaskList object with a new ArrayList.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"     * @return TaskList Object","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"    public TaskList getFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"            FileInputStream fis \u003d new FileInputStream(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"            //System.out.println(this.ui.savedFileFound());","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"            TaskList taskList \u003d new TaskList(toDoList);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"            return taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"            //System.out.println(this.ui.savedFileNotFound());","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"            TaskList taskList \u003d new TaskList(toDoList);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"            return taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"            //System.out.println(this.ui.savedFileNotFound());","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"            TaskList taskList \u003d new TaskList(toDoList);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"            return taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"     * Returns void.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"     * Takes in an ArrayList of Task and save it in the specified file path.","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"     * File type should be specified in the filepath.","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"     * @param toDoList","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"    public void saveFile(ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"            oos.writeObject(toDoList);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"            oos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"Please create pandora.txt file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"nerdyboy98":67}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart1.html","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nerdyboy98":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    private Duke duke \u003d new Duke(\"data\\\\pandora.txt\");","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nerdyboy98":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":" * Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/peepo.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/monkaS.jpg\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nerdyboy98":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    static final int TASK_INFO_INDEX \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    static final int USER_MESSAGE_SPLIT_COUNT \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    static final int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    static final int DATE_SPLIT_COUNT \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    static final int BY_INFO_INDEX \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    static final int TO_INFO_INDEX \u003d 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    static final int FROM_INFO_INDEX \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"    static final int DATE_INDEX \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    static final int OPERATION_NUMBER_INDEX \u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    public Parser(FileManager fileManager, TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"     * Returns void.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"     * The userMessage argument must be of a certain format depending on the task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"     * Examples showned below:","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"     * todo [Event description]","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"     * deadline [Event description] /by [Date in YYYY-MM-DD format]","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"     * event [Event description] /from [Date in YYYY-MM-DD format] /to [Date in YYYY-MM-DD format]","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"     * @param userMessage String input from the user","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    public String parse(String userMessage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"        String [] parts \u003d userMessage.split(\" \", USER_MESSAGE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"        if (parts[COMMAND_INDEX].equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"            return bye();","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"list\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"            return list();","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"mark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"            return mark(userMessage);","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"unmark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"            return unmark(userMessage);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"            return delete(userMessage);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"todo\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"            return todo(userMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"deadline\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"            return deadline(userMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"event\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"            return event(userMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"find\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"            return find(userMessage);","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"help\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"            return help();","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nerdyboy98"},"content":"        } else if (parts[COMMAND_INDEX].equals(\"sort\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":"            return sort();","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nerdyboy98"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"nerdyboy98"},"content":"            return \"I have no idea what are you talking about dude..\";","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nerdyboy98"},"content":"    private String bye() {","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"nerdyboy98"},"content":"        this.fileManager.saveFile(this.taskList.getList());","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nerdyboy98"},"content":"        return \"Cya boi\";","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"nerdyboy98"},"content":"    private String list() {","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"nerdyboy98"},"content":"        return this.taskList.list();","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nerdyboy98"},"content":"    private String sort() {","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"nerdyboy98"},"content":"        return this.taskList.sort();","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nerdyboy98"},"content":"    private String mark(String userMessage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", USER_MESSAGE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"nerdyboy98"},"content":"            int taskNumber \u003d Integer.parseInt(messageParts[OPERATION_NUMBER_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"nerdyboy98"},"content":"            assert taskNumber \u003c\u003d this.taskList.getList().size() : \"Invalid Selection\";","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.mark(taskNumber);","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"nerdyboy98"},"content":"            return \"Please specify which task to mark~  \u003e:(\";","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nerdyboy98"},"content":"    private String unmark(String userMessage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", USER_MESSAGE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nerdyboy98"},"content":"            int taskNumber \u003d Integer.parseInt(messageParts[OPERATION_NUMBER_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"nerdyboy98"},"content":"            assert taskNumber \u003c\u003d this.taskList.getList().size() : \"Invalid Selection\";","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.unmark(taskNumber);","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"nerdyboy98"},"content":"            return \"Please specify which task to unmark~  \u003e:(\";","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"nerdyboy98"},"content":"    private String delete(String userMessage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", USER_MESSAGE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"nerdyboy98"},"content":"            int taskNumber \u003d Integer.parseInt(messageParts[OPERATION_NUMBER_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"nerdyboy98"},"content":"            assert taskNumber \u003c\u003d this.taskList.getList().size() : \"Invalid Selection\";","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.remove(taskNumber);","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"nerdyboy98"},"content":"            return \"Hello?! Which task to delete?~  \u003e:(\";","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"nerdyboy98"},"content":"    private String find(String userMessage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"nerdyboy98"},"content":"            String keyword \u003d messageParts[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"nerdyboy98"},"content":"            assert keyword.isEmpty() \u003d\u003d false : \"No keyword input\";","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.find(keyword);","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"nerdyboy98"},"content":"            return \"Bruhh.. You gotta tell me what to search for :\u003c\";","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"nerdyboy98"},"content":"    private String todo(String userMessage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"nerdyboy98"},"content":"            Todo newToDo \u003d new Todo(messageParts[TASK_INFO_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.add(newToDo);","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"nerdyboy98"},"content":"            return \"Bruhh.. The description of todo cannot be empty.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":137,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"nerdyboy98"},"content":"    private String deadline(String userMessage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"nerdyboy98"},"content":"            String[] deadlineParts \u003d messageParts[TASK_INFO_INDEX].split(\" /\");","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"nerdyboy98"},"content":"            String[] deadline \u003d deadlineParts[BY_INFO_INDEX].split(\" \", DATE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"nerdyboy98"},"content":"            LocalDate byDate \u003d LocalDate.parse(deadline[DATE_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"nerdyboy98"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineParts[DESCRIPTION_INDEX], byDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.add(newDeadline);","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"nerdyboy98"},"content":"            return \"Bruhh.. The description of deadline cannot be empty.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"nerdyboy98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"nerdyboy98"},"content":"            return \"Incorrect date format dude.. try again~\";","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"nerdyboy98"},"content":"    private String event(String userMessage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"nerdyboy98"},"content":"        String [] messageParts \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"nerdyboy98"},"content":"            String[] eventParts \u003d messageParts[TASK_INFO_INDEX].split(\" /\");","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"nerdyboy98"},"content":"            String[] from \u003d eventParts[FROM_INFO_INDEX].split(\" \", DATE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"nerdyboy98"},"content":"            String[] to \u003d eventParts[TO_INFO_INDEX].split(\" \", DATE_SPLIT_COUNT);","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"nerdyboy98"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from[DATE_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"nerdyboy98"},"content":"            LocalDate toDate \u003d LocalDate.parse(to[DATE_INDEX]);","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"nerdyboy98"},"content":"            Event newEvent \u003d new Event(eventParts[DESCRIPTION_INDEX], fromDate, toDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"nerdyboy98"},"content":"            return this.taskList.add(newEvent);","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"nerdyboy98"},"content":"            return \"Bruhh.. The description of event cannot be empty.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"nerdyboy98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"nerdyboy98"},"content":"            return \"Incorrect date format dude.. try again~\\nAsk for \u0027help\u0027 if you have to~\";","lastModifiedDate":"2023-02-14"},{"lineNumber":169,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":172,"author":{"gitId":"nerdyboy98"},"content":"    private String help() {","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"nerdyboy98"},"content":"        String header \u003d \"These are the functions and format: \\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":174,"author":{"gitId":"nerdyboy98"},"content":"        String toDoFormat \u003d \"1) todo [Description]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":175,"author":{"gitId":"nerdyboy98"},"content":"        String deadlineFormat \u003d \"2) deadline [Description] /by [YYYY-MM-DD]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":176,"author":{"gitId":"nerdyboy98"},"content":"        String eventFormat \u003d \"3) event [Description] /from [YYYY-MM-DD] /to [YYYY-MM-DD]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":177,"author":{"gitId":"nerdyboy98"},"content":"        String markFormat \u003d \"4) mark [Task number]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":178,"author":{"gitId":"nerdyboy98"},"content":"        String unmarkFormat \u003d \"5) unmark [Task number]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":179,"author":{"gitId":"nerdyboy98"},"content":"        String deleteFormat \u003d \"6) delete [Task number]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":180,"author":{"gitId":"nerdyboy98"},"content":"        String findFormat \u003d \"7) find [Keyword]\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":181,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":182,"author":{"gitId":"nerdyboy98"},"content":"        return header + toDoFormat + deadlineFormat + eventFormat","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"nerdyboy98"},"content":"                + markFormat + unmarkFormat + deleteFormat + findFormat;","lastModifiedDate":"2023-02-14"},{"lineNumber":184,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":185,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":185}},{"path":"src/main/java/duke/SortAlphabetical.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"public class SortAlphabetical implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    public int compare(Task taskOne, Task taskTwo) {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"        return taskOne.getDescription().compareTo(taskTwo.getDescription());","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"nerdyboy98":11}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"     * Returns a String that tells the user save file is unavailable and a new List will be used","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"     * @return String","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public String savedFileNotFound() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        return \"[Saved file not found, new List initialised~]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"     * Returns a String that tells the user save file is available and existing List will be used","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"     * @return String","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    public String savedFileFound() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        return \"[Saved file found, saved List initialised~]\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":22}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    static final String DEADLINE_SYMBOL \u003d \"D\";","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"     * Returns String of the Deadline task type, status, description and date.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"     * TaskType will be \"D\" for Deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"     * Status will be either \"X\" or \" \" depending on mark or unmarked respectively.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"     * @return String in the format: [taskType][status] description /by DD-MMM-YYYY","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"        String formattedByDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + DEADLINE_SYMBOL + \"][\" + super.status + \"] \"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"                + super.description","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"                + \" (BY: \" + formattedByDate","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":31}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    static final String EVENT_SYMBOL \u003d \"E\";","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"     * Returns String of the Event task type, status, description from-date and to-date.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"     * TaskType will be \"E\" for Event.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"     * Status will be either \"X\" or \" \" depending on mark or unmarked respectively.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"     * @return String in the format: [taskType][status] description /from DD-MMM-YYYY /to DD-MMM-YYYY","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"        String formattedFromDate \u003d this.from.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        String formattedToDate \u003d this.to.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + EVENT_SYMBOL + \"][\" + super.status + \"] \"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"                + super.description","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"                + \" (FROM: \" + formattedFromDate","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"                + \" TO: \" + formattedToDate","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    protected String status;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        this.status \u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    private String toggleStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"     * Returns void.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"     * Marks the task with a \"X\" and changes the status of isDone to True","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        if (this.isDone \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"            this.status \u003d toggleStatus();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"     * Returns void.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"     * Marks the task with a \" \" and changes the status of isDone to False","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"        if (this.isDone \u003d\u003d true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"            this.status \u003d toggleStatus();","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.status + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        return this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":51}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import duke.SortAlphabetical;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    public String add(Task newTask) {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        String taskAdded \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"        String taskString \u003d newTask.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        String totalTask \u003d \"Now you have \" + Integer.toString(this.taskList.size()) + \" tasks in the list\";","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        return taskAdded + \"\\n\" + taskString + \"\\n\" + totalTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"     * Takes in the selection made by the user as \"taskNumber\" and","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"     * removes that task from the list.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"     * Argument must be the task number and not index of the task in the list.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"     * @param taskNumber","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"    public String remove(int taskNumber) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"            Task taskToRemove \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"            String taskRemoved \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"            String taskString \u003d taskToRemove.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"            this.taskList.remove(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"            String totalTask \u003d \"Now you have \" + Integer.toString(this.taskList.size()) + \" tasks in the list\";","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"            return taskRemoved + \"\\n\" + taskString + \"\\n\" + totalTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"    Incorrect selection made~  \u003e:(\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"            return \"Incorrect selection made~  \u003e:(\";","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"     * Takes in the selection made by the user as \"taskNumber\" and","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"     * marks that task from the list with an \"X\".","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"     * Argument must be the task number and not index of the task in the list.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"     * @param taskNumber","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"    public String mark(int taskNumber) {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList.get(taskIndex).mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"        String markMessage \u003d \"OK, I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"        String taskString \u003d this.taskList.get(taskIndex).toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"        return markMessage + \"\\n\" + taskString;","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"     * Takes in the selection made by the user as \"taskNumber\" and","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"     * marks that task from the list with an \" \".","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nerdyboy98"},"content":"     * @param taskNumber number label and not the index of the task in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nerdyboy98"},"content":"    public String unmark(int taskNumber) {","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"nerdyboy98"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nerdyboy98"},"content":"        this.taskList.get(taskIndex).unmark();","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nerdyboy98"},"content":"        String markMessage \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"nerdyboy98"},"content":"        String taskString \u003d this.taskList.get(taskIndex).toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"nerdyboy98"},"content":"        return markMessage + \"\\n\" + taskString;","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nerdyboy98"},"content":"     * Iterates through the list and prints every task description with a number label next to it.","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nerdyboy98"},"content":"    public String list() {","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"nerdyboy98"},"content":"        String listMessage \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"nerdyboy98"},"content":"        String listOfTask \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"nerdyboy98"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"nerdyboy98"},"content":"            int numbering \u003d i + 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"nerdyboy98"},"content":"            listOfTask +\u003d Integer.toString(numbering) + \".\" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"nerdyboy98"},"content":"        return listMessage + \"\\n\" + listOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"nerdyboy98"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"nerdyboy98"},"content":"        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"nerdyboy98"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"nerdyboy98"},"content":"            if (taskList.get(i).getDescription().contains(keyword) \u003d\u003d true) {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"nerdyboy98"},"content":"                searchResult.add(taskList.get(i));","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"nerdyboy98"},"content":"        if (!searchResult.isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"nerdyboy98"},"content":"            String findMessage \u003d \"According to [\" + keyword + \"], these are what I\u0027ve found:\";","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"nerdyboy98"},"content":"            String listOfResult \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"nerdyboy98"},"content":"            for (int j \u003d 0; j \u003c searchResult.size(); j++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nerdyboy98"},"content":"                int numbering \u003d j + 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"nerdyboy98"},"content":"                listOfResult +\u003d Integer.toString(numbering) + \".\" + searchResult.get(j).toString() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"nerdyboy98"},"content":"            return findMessage + \"\\n\" + listOfResult;","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"nerdyboy98"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"nerdyboy98"},"content":"            return \"None of the task(s) matched your keyword :o\";","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"nerdyboy98"},"content":"    public String sort() {","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"nerdyboy98"},"content":"        Collections.sort(this.taskList, new SortAlphabetical());","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"nerdyboy98"},"content":"        return list();","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"nerdyboy98"},"content":"     * Returns the Task using the index specified","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"nerdyboy98"},"content":"     * @param taskIndex index of the task in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"nerdyboy98"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"nerdyboy98"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"nerdyboy98"},"content":"     * Returns the list of task as an ArrayList","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"nerdyboy98"},"content":"     * @return ArrayList of Task","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"nerdyboy98"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"nerdyboy98"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nerdyboy98":130}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"    static final String TODO_SYMBOL \u003d \"T\";","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"     * Returns String of the Todo task type, status, and description.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"     * TaskType will be \"T\" for Todo.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"     * Status will be either \"X\" or \" \" depending on mark or unmarked respectively.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"     * @return String in the format: [taskType][status] description","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + TODO_SYMBOL + \"][\" + super.status + \"] \" + super.description;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nerdyboy98":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nerdyboy98":19}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    //test setup","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    Task dummyTask1 \u003d new Task(\"task1\");","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    Task dummyTask2 \u003d new Task(\"task2\");","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"    ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        taskList.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        tl.mark(1);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[X] task1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(0).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        tl.mark(1);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"        tl.unmark(1);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[ ] task1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(0).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"    public void add() {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[ ] task1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(0).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"    public void remove() {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"        TaskList tl \u003d new TaskList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask1);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"        tl.add(dummyTask2);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"        String expected \u003d \"[ ] task2\";","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"        String actual \u003d tl.getTask(1).getStatus();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nerdyboy98":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"todo","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"event","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"blah","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"todo borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"mark","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"delete","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"delete 1","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"bye","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nerdyboy98":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"if not exist C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin mkdir C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"javac  -cp C:\\users\\chewc\\Documents\\ip\\src\\main\\java -Xlint:none -d C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"java -classpath C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nerdyboy98":3,"-":18}},{"path":"data/pandora.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"nerdyboy98":0}}]
