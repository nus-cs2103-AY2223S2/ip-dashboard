[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"        String formattedByDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.taskType + \"][\" + super.status + \"] \"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"                + super.description","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"                + \" (BY: \" + formattedByDate","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"import java.sql.Array;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import java.io.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    /*public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    }*/","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        String greetings \u003d \"Heyyo, Pandora at your service \\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"        //Initial inputs","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"        Scanner userInput \u003d new Scanner(System.in);;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"        String userMessage;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        //To-do-list, fetch save file if available","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"        ArrayList\u003cTask\u003e toDoList;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"        FileManager fm \u003d new FileManager();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        toDoList \u003d fm.getFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"        System.out.println(greetings);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"            userMessage \u003d userInput.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"            String [] parts \u003d userMessage.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"            if (parts[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"                fm.saveFile(toDoList);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"                System.out.print(\"  Cya~ Till next time!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"nerdyboy98"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"nerdyboy98"},"content":"                for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"nerdyboy98"},"content":"                    int numbering \u003d i + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    \" + numbering + \".\" + toDoList.get(i).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"nerdyboy98"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"nerdyboy98"},"content":"                    int selection \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"nerdyboy98"},"content":"                    toDoList.get(selection).mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"     \" + toDoList.get(selection).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"nerdyboy98"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OOPS!!! Please specify which task to mark.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"nerdyboy98"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"nerdyboy98"},"content":"                    int selection \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"nerdyboy98"},"content":"                    toDoList.get(selection).unmark();","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"     \" + toDoList.get(selection).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"nerdyboy98"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OOPS!!! Please specify which task to unmark.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"nerdyboy98"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"nerdyboy98"},"content":"                    int selection \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"     \" + toDoList.get(selection).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"nerdyboy98"},"content":"                    toDoList.remove(selection);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Now you have \" + toDoList.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"nerdyboy98"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OOPS!!! Please specify which task to delete.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"todo\")){","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"nerdyboy98"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"nerdyboy98"},"content":"                    Todo newToDo \u003d new Todo(parts[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"nerdyboy98"},"content":"                    toDoList.add(newToDo);","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"     \" + newToDo.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Now you have \" + toDoList.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"nerdyboy98"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OOPS!!! The description of todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"nerdyboy98"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"nerdyboy98"},"content":"                    String[] deadlineParts \u003d parts[1].split(\" /\");","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"nerdyboy98"},"content":"                    String[] deadline \u003d deadlineParts[1].split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"nerdyboy98"},"content":"                    LocalDate byDate \u003d LocalDate.parse(deadline[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"nerdyboy98"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineParts[0], byDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"nerdyboy98"},"content":"                    toDoList.add(newDeadline);","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"     \" + newDeadline.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Now you have \" + toDoList.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"nerdyboy98"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OOPS!!! The description of deadline cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"nerdyboy98"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Incorrect date format, try again~\");","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"nerdyboy98"},"content":"            } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"nerdyboy98"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"nerdyboy98"},"content":"                    String[] eventParts \u003d parts[1].split(\" /\");","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"nerdyboy98"},"content":"                    String[] from \u003d eventParts[1].split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"nerdyboy98"},"content":"                    String[] to \u003d eventParts[2].split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"nerdyboy98"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(from[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"nerdyboy98"},"content":"                    LocalDate toDate \u003d LocalDate.parse(to[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"nerdyboy98"},"content":"                    Event newEvent \u003d new Event(eventParts[0], fromDate, toDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"nerdyboy98"},"content":"                    toDoList.add(newEvent);","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"     \" + newEvent.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Now you have \" + toDoList.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"nerdyboy98"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    OOPS!!! The description of event cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"nerdyboy98"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"nerdyboy98"},"content":"                    System.out.println(\"    Incorrect date format, please try again~\");","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"nerdyboy98"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"nerdyboy98"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"nerdyboy98"},"content":"                System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"nerdyboy98"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nerdyboy98":113,"-":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        String formattedFromDate \u003d this.from.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"        String formattedToDate \u003d this.to.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.taskType + \"][\" + super.status + \"] \"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"                + super.description","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"                + \" (FROM: \" + formattedFromDate","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"                + \" TO: \" + formattedToDate","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"                + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":25}},{"path":"src/main/java/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"public class FileManager {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"    public ArrayList\u003cTask\u003e getFile() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"            FileInputStream fis \u003d new FileInputStream(\"data\\\\pandora.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"[Saved file loaded~]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"            return toDoList;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"[No saved file available, new To-Do-List created~]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"            return toDoList;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"[No saved file available, new To-Do-List created~]\");","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"            ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"            return toDoList;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"    public void saveFile(ArrayList\u003cTask\u003e toDoList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"            FileOutputStream fos \u003d new FileOutputStream(\"data\\\\pandora.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"            oos.writeObject(toDoList);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"            oos.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"nerdyboy98"},"content":"            System.out.println(\"Please create pandora.txt file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"nerdyboy98":38}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"    protected String status;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"        this.status \u003d \" \";","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"    public String toggleStatus() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"nerdyboy98"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"    public void mark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"nerdyboy98"},"content":"        if (this.isDone \u003d\u003d false) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"nerdyboy98"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"nerdyboy98"},"content":"            this.status \u003d toggleStatus();","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"nerdyboy98"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"nerdyboy98"},"content":"        if (this.isDone \u003d\u003d true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"nerdyboy98"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"nerdyboy98"},"content":"            this.status \u003d toggleStatus();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"nerdyboy98"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"nerdyboy98"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.status + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"        return \"[\" + this.taskType + \"][\" + super.status + \"] \" + super.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"nerdyboy98":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nerdyboy98"},"content":"todo","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"nerdyboy98"},"content":"event","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"nerdyboy98"},"content":"deadline","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"blah","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"nerdyboy98"},"content":"todo borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"nerdyboy98"},"content":"deadline return book /by sunday","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"nerdyboy98"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"nerdyboy98"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"nerdyboy98"},"content":"mark","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"nerdyboy98"},"content":"delete","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"nerdyboy98"},"content":"delete 1","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"nerdyboy98"},"content":"list","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"nerdyboy98"},"content":"bye","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nerdyboy98":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nerdyboy98"},"content":"if not exist C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin mkdir C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nerdyboy98"},"content":"javac  -cp C:\\users\\chewc\\Documents\\ip\\src\\main\\java -Xlint:none -d C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nerdyboy98"},"content":"java -classpath C:\\users\\chewc\\Documents\\ip\\src\\main\\java\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nerdyboy98":3,"-":18}},{"path":"data/pandora.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"nerdyboy98":0}}]
