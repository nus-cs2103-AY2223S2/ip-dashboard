[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"T | 0 | eat","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"nevinlim":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"    public Deadline(String description, LocalDate by) throws DukeException{","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        return this.by;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        String dateFormat \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + dateFormat + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        String dateFormat \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, dateFormat);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-09"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String greeting \u003d \"____________________________________________________________\\n\" + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + \"____________________________________________________________\";","lastModifiedDate":"2023-01-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String goodbye \u003d \"____________________________________________________________\\n\" + \"Bye. Hope to see you again soon!\\n\" + \"____________________________________________________________\";","lastModifiedDate":"2023-01-09"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        File dataFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"            if(!dataFile.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"                dataFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"            throw new DukeException(\"Unable to create file.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-09"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        boolean active \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-09"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        String command \u003d sc.next();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            readFile(dataFile);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            System.out.println(de.getMessage() + \"\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        while(active) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            try{","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                switch (command) {","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                    case \"bye\":","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        active \u003d false;","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        System.out.println(goodbye);","lastModifiedDate":"2023-01-09"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"                        for (Task task : tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                            if (task !\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                                System.out.println(tasks.indexOf(task)+ \".\" + task);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                            }","lastModifiedDate":"2023-01-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2023-01-09"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"                        String deadlineInst \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                        String[] deadlineArr \u003d deadlineInst.split(\"/by\");","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                        addTask(new Deadline(deadlineArr[0].trim(), LocalDate.parse(deadlineArr[1].trim())));","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"                    case \"todo\":","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"                        addTask(new Todo(sc.nextLine().trim()));","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"                    case \"event\":","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                        String eventInst \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                        String[] eventArr \u003d eventInst.split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                        addTask(new Event(eventArr[0].trim(), LocalDate.parse(eventArr[1].substring(5).trim()), LocalDate.parse(eventArr[2].substring(3).trim())));","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                    case \"mark\": {","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                        int num \u003d sc.nextInt();","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                        markTask(num);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"                    case \"unmark\": {","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"                        int num \u003d sc.nextInt();","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"                        unmarkTask(num);","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"                    case \"delete\": {","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                        int num \u003d sc.nextInt();","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                        deleteTask(num);","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"                    default:","lastModifiedDate":"2023-01-15"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"                        throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"nevinlim"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"nevinlim"},"content":"                printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"nevinlim"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":"                printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"            writeFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"nevinlim"},"content":"            command \u003d sc.next();","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"        sc.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"nevinlim"},"content":"    public static void addTask(Task input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"nevinlim"},"content":"        tasks.add(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"\\t\" + input.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"    public static void deleteTask(int input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"        tasks.remove(input - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"\\t\" + tasks.get(input));","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"nevinlim"},"content":"    public static void markTask(int input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"nevinlim"},"content":"        Task task \u003d tasks.get(input - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"nevinlim"},"content":"        task.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"nevinlim"},"content":"    public static void unmarkTask(int input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"nevinlim"},"content":"        Task task \u003d tasks.get(input - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"nevinlim"},"content":"        task.markUndone();","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"nevinlim"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"nevinlim"},"content":"    public static void printLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"nevinlim"},"content":"    private static void writeFile() throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"nevinlim"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"nevinlim"},"content":"            FileWriter file \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"nevinlim"},"content":"            StringBuilder strings \u003d new StringBuilder();","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"nevinlim"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"nevinlim"},"content":"                strings.append(task.toFileString());","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"nevinlim"},"content":"            file.write(String.valueOf(strings));","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"nevinlim"},"content":"            file.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"nevinlim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"nevinlim"},"content":"            throw new DukeException(\"An IOException occurred.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"nevinlim"},"content":"    public static void readFile(File f) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"nevinlim"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"nevinlim"},"content":"            Scanner scan \u003d new Scanner(f);","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"nevinlim"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"nevinlim"},"content":"                String[] task \u003d scan.nextLine().split(\" \\\\|\");","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"nevinlim"},"content":"                switch (task[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"nevinlim"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"nevinlim"},"content":"                        Task todo \u003d new Todo(task[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"nevinlim"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":"                            todo.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"nevinlim"},"content":"                        addTask(todo);","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-15"},{"lineNumber":153,"author":{"gitId":"nevinlim"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"nevinlim"},"content":"                        Task deadline \u003d new Deadline(task[2], LocalDate.parse(task[3]));","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"nevinlim"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"nevinlim"},"content":"                            deadline.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"nevinlim"},"content":"                        addTask(deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"nevinlim"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"nevinlim"},"content":"                        Task event \u003d new Event(task[2], LocalDate.parse(task[3]), LocalDate.parse(task[4]));","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"nevinlim"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"nevinlim"},"content":"                            event.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"nevinlim"},"content":"                        addTask(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-09"},{"lineNumber":169,"author":{"gitId":"nevinlim"},"content":"            scan.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":170,"author":{"gitId":"nevinlim"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"nevinlim"},"content":"            throw new DukeException(\"File does not exist\");","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nevinlim":159,"-":15}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"import java.util.*;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"        super(error);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    public Event(String description, LocalDate from, LocalDate to) throws DukeException{","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        return this.from;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        return this.to;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        String fromDateFormat \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        String toDateFormat \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + fromDateFormat + \"to: \" + toDateFormat + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        String fromDateFormat \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        String toDateFormat \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isDone ? 1 : 0, description, fromDateFormat, toDateFormat);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":37}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"        return description;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"nevinlim":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"    public Todo(String description) throws DukeException{","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public String toFileString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"deadline read /by sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"event code /from now /to later","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"nevinlim":3}}]
