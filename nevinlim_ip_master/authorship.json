[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"3. After that, locate the `src/main/java/duke/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nevinlim":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    mainClassName \u003d \"duke.main.Duke\"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nevinlim":16,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"T | 0 | run","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nevinlim":1}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    private final Task task;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public void execute(Tasklist tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        tasklist.addTask(this.task);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        storage.update(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        ui.printAddTaskMessage(this.task, tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    private boolean exitCondition \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public abstract void execute(Tasklist taskList, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public void switchExitCondition() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        this.exitCondition \u003d !(this.exitCondition);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        return this.exitCondition;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":18}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    private final int taskNum;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public void execute(Tasklist tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        Task task \u003d tasklist.getTasks().get(this.taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        tasklist.deleteTask(this.taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        storage.update(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        ui.printDeleteTaskMessage(task, tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":21}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    public void execute(Tasklist taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"        super.switchExitCondition();","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":11}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    public void execute(Tasklist tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"        ui.printTasks(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":11}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    private final int taskNum;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public void execute(Tasklist tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        tasklist.markDone(this.taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        storage.update(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        ui.printMarkTaskMessage(tasklist.getTasks().get(this.taskNum - 1));","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":19}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    private final int taskNum;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public void execute(Tasklist tasklist, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        tasklist.markUndone(this.taskNum - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        storage.update(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        ui.printUnmarkTaskMessage(tasklist.getTasks().get(this.taskNum - 1));","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":19}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    private Tasklist tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public Duke(String path) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"            storage \u003d new Storage(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"            tasks \u003d new Tasklist(storage.load());","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"            ui.printIOException(ie);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"            System.exit(0);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"            ui.printDukeException(de);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"            tasks \u003d new Tasklist();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        while(!isExit) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"                String stringCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                Command command \u003d Parser.parseCommand(stringCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                ui.printDukeException(de);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"            } catch (IOException ie) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                ui.printIOException(ie);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-09"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        ui.printBye();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-09"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nevinlim":41,"-":6}},{"path":"src/main/java/duke/main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.*;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"        super(error);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":9}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public static Command parseCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        String[] splits \u003d fullCommand.split(\" \", 2 );","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        switch (splits[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"            case (\"list\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"                if (splits.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"                if (splits[1].isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                return new AddCommand(new Todo(splits[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            case (\"event\"): {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"                if (splits.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"                if (splits[1].isBlank() ) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                if (!fullCommand.contains(\" /from\") || !fullCommand.contains(\" /to\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please use format: event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\");","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"                    String[] secondsplits \u003d splits[1].split(\"/from\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                    String[] thirdsplits \u003d secondsplits[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                    if (secondsplits[0].isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                    return new AddCommand(new Event(secondsplits[0].trim(), LocalDateTime.parse(thirdsplits[0].trim(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")), LocalDateTime.parse(thirdsplits[1].trim(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid date time format. Please use DD/MM/YYYY HHMM format\");","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"            case (\"deadline\"): {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"                if (splits.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                if (splits[1].isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"                if (!fullCommand.contains(\" /by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please use format: deadline \u003cdescription\u003e /by \u003cdatetime\u003e\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                try {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                    String[] secondsplits \u003d splits[1].split(\"/by\");","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                    if (secondsplits[0].isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                    return new AddCommand(new Deadline(secondsplits[0].trim(), LocalDateTime.parse(secondsplits[1].trim(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"))));","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"                    throw new DukeException(\"☹ OOPS!!! Invalid date time format. Please use \u003cDD/MM/YYYY HHMM\u003e format\");","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"                return new MarkCommand(Integer.parseInt(splits[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"            case(\"unmark\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"                return new UnmarkCommand(Integer.parseInt(splits[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                return new DeleteCommand(Integer.parseInt(splits[1]));","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                throw new DukeException(\"☹ OOPS!!! Unknown command received. Please enter valid command\");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":80}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    private final File file;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public Storage(String filepath) throws DukeException, IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        String[] splits \u003d filepath.split(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        File dir \u003d new File(splits[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"            if (!dir.mkdir()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"                throw new DukeException(\"Error while creating ./data folder.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        File dataFile \u003d new File(filepath);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"            if (!dataFile.createNewFile()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                throw new DukeException(\"Error while creating duke.txt file.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        this.file \u003d dataFile;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    public void update(Tasklist tasklist) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        StringBuilder strings \u003d new StringBuilder();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        for (Task curr : tasklist.getTasks()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"            if (curr instanceof Todo) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                strings.append(\"T \")","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                        .append(\"| \")","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"                        .append(\"| \")","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                        .append(curr.getDescription())","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"            } else if (curr instanceof Deadline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                strings.append(\"D \")","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                        .append(\"| \")","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                        .append(\"| \")","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                        .append(curr.getDescription())","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"                        .append(\" | \")","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"                        .append(((Deadline) curr).getBy())","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"            } else if (curr instanceof Event) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                strings.append(\"E \")","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                        .append(\"| \")","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"                        .append(curr.isDone() ? \"1 \" : \"0 \")","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"                        .append(\"| \")","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"                        .append(curr.getDescription())","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"                        .append(\" | \")","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                        .append(((Event) curr).getFrom())","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                        .append(\" | \")","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                        .append(((Event) curr).getTo())","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"        fw.write(strings.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"        fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            Scanner scan \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"                String[] task \u003d scan.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"                switch (task[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                        Task todo \u003d new Todo(task[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                            todo.markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"                        tasks.add(todo);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"nevinlim"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"nevinlim"},"content":"                        Task deadline \u003d new Deadline(task[2], LocalDateTime.parse(task[3]));","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"nevinlim"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":"                            deadline.markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"                        Task event \u003d new Event(task[2], LocalDateTime.parse(task[3]), LocalDateTime.parse(task[4]));","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":"                        if (task[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"nevinlim"},"content":"                            event.markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"                        tasks.add(event);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":"                        break;","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"                    default:","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"                        throw new DukeException(\"Data from file does not exist, creating new task list\");","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"        return tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":101}},{"path":"src/main/java/duke/main/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"public class Tasklist {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    public Tasklist() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public Tasklist(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    public void markDone(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        tasks.get(taskNum).markDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    public void markUndone(int taskNum) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        tasks.get(taskNum).markUndone();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":30}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.main.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.main.Tasklist;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public void printBye() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public void printTaskNum(Tasklist tasklist) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Now you have \" + tasklist.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    public  void printAddTaskMessage(Task task, Tasklist tasklist) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"        printTaskNum(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    public  void printDeleteTaskMessage(Task task, Tasklist tasklist) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\\n\" + task);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"        printTaskNum(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    public void printTasks(Tasklist tasklist) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"            System.out.println(i + \". \" + tasks.get(i - 1).toString() );","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"    public  void printMarkTaskMessage(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"Nice! This task is marked as done:\\n\" + task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"    public  void printUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"    public  void printLine() {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"    public void printDukeException(DukeException de) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"        System.out.println(de.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"    public void printIOException(IOException ie) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        System.out.println(\" ☹ OOPS!!! IOException occured\");","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"        this.sc.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nevinlim":79}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public Deadline(String description, LocalDateTime by) throws DateTimeParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        return this.by;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        String dateFormat \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateFormat + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) throws DateTimeParseException {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        return this.from;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        return this.to;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        String fromDateFormat \u003d this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        String toDateFormat \u003d this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDateFormat + \" to: \" + toDateFormat + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"    private final String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        return description;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"nevinlim":35}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":14}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.main;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"class ParserTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    void parserTest() throws DukeException  {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"list\") instanceof ListCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"mark 2\") instanceof MarkCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"todo todo\") instanceof AddCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"deadline deadline /by 25/07/2023 1500\") instanceof AddCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        assertTrue(Parser.parseCommand(\"event event /from 26/01/2023 1600 /to 02/02/2023 1200\") instanceof AddCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nevinlim":25}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"class DeadlineTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    void deadlineTest(){","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"        Deadline test \u003d new Deadline(\"deadline\", LocalDateTime.parse(\"2023-03-03T20:20:00\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"        assertEquals(\"[D][ ] deadline (by: Mar 03 2023 20:20)\", test.toString(), \"toString() method works\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"        test.markDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        assertEquals(\"[D][X] deadline (by: Mar 03 2023 20:20)\", test.toString(), \"markDone() method works\");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nevinlim":19}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"class TodoTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    void todoTest(){","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"        Todo test \u003d new Todo(\"test\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        assertEquals(\"[T][ ] test\", test.toString(), \"toString() method works\");","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"        test.markDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        assertEquals(\"[T][X] test\", test.toString(), \"markDone() method works\");","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nevinlim":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"deadline read /by sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"event code /from now /to later","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"nevinlim":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nevinlim":1,"-":20}}]
