[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"    protected String by;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    private static final String greeting \u003d \"____________________________________________________________\\n\" + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + \"____________________________________________________________\";","lastModifiedDate":"2023-01-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    private static final String goodbye \u003d \"____________________________________________________________\\n\" + \"Bye. Hope to see you again soon!\\n\" + \"____________________________________________________________\";","lastModifiedDate":"2023-01-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static boolean active \u003d true;","lastModifiedDate":"2023-01-09"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-09"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"        while(active) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-09"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"            switch (command) {","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                    active \u003d false;","lastModifiedDate":"2023-01-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                    System.out.println(goodbye);","lastModifiedDate":"2023-01-09"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"                case \"list\":","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-09"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"                        if (tasks.get(i) !\u003d null) {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"                            System.out.println(i + 1 + \".\" + tasks.get(i).toString());","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2023-01-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2023-01-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-09"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"                    try {","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"                        String rest \u003d input.substring(command.length());","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                        if (rest.equals(\"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"                            throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                                    \" ☹ OOPS!!! The description or time/date of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"                                    \"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                        String[] arr \u003d rest.split(\"/\");","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                        Deadline item \u003d new Deadline(arr[0], arr[1].substring(3));","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"                        tasks.add(item);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(\"____________________________________________________________\\n Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                                + \"   \" + item + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                                + \"\\n____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                    try {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"                        String rest \u003d input.substring(command.length());","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"                        if (rest.equals(\"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"                            throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                                    \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                                    \"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"                        String[] arr \u003d rest.split(\"/\");","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"                        Todo item \u003d new Todo(arr[0]);","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"                        tasks.add(item);","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(\"____________________________________________________________\\n Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                                + \"   \" + item + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                                + \"\\n____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                case \"event\":","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"                    try {","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"                        String rest \u003d input.substring(command.length());","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"                        if (rest.equals(\"\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"                            throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"                                    \" ☹ OOPS!!! The description or time/date of an event cannot be empty.\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"                                    \"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"                        String[] arr \u003d rest.split(\"/\");","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                        Event item \u003d new Event(arr[0], arr[1].substring(5), arr[2].substring(3));","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                        tasks.add(item);","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(\"____________________________________________________________\\n Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                                + \"   \" + item + \"\\n Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"                                + \"\\n____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"nevinlim"},"content":"                case \"mark\": {","lastModifiedDate":"2023-01-15"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":"                    int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-15"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"                    tasks.get(num - 1).markDone();","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"nevinlim"},"content":"                            \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":"                            \"   \" + tasks.get(num - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"                            \"____________________________________________________________\");","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":91,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":92,"author":{"gitId":"nevinlim"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-01-15"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"                    int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-15"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":"                    tasks.get(num - 1).markUndone();","lastModifiedDate":"2023-01-15"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"                            \"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"                            \"   \" + tasks.get(num - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-01-15"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"                            \"____________________________________________________________\");","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"                case \"delete\": {","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"nevinlim"},"content":"                    int num \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"nevinlim"},"content":"                    System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"nevinlim"},"content":"                            \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"nevinlim"},"content":"                            \"   \" + tasks.get(num - 1).toString() + \"\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"nevinlim"},"content":"                            \"Now you have \" + (tasks.size()-1) + \" tasks in the list.\\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"nevinlim"},"content":"                            \"____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"nevinlim"},"content":"                    tasks.remove(num - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"                default:","lastModifiedDate":"2023-01-15"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"                    try {","lastModifiedDate":"2023-01-16"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":"                        throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"nevinlim"},"content":"                                \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"nevinlim"},"content":"                                \"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":116,"author":{"gitId":"nevinlim"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"nevinlim"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"nevinlim"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":119,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-01-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nevinlim":103,"-":20}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"import java.util.*;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"        super(error);","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"    protected String from;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"    protected String to;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"public class Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"    protected String description;","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"nevinlim":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"nevinlim":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"deadline read /by sunday","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"event code /from now /to later","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"nevinlim":3}}]
