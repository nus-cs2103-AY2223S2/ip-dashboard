[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"import formatters.Format;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import formatters.Response;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import task.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" * A bot with an UwU personality to help users keep track","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" * of tasks such as events, deadlines and to-dos","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"     * Runs the bot and reads in user input in a loop, parses it and responds accordingly","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"     * @param args program args","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        System.out.println(\"Hewwo! I\u0027m UwU_TaskMaster! How c-can I hewp you?!?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        TaskManager taskManager \u003d new TaskManager(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        Parser parser \u003d new Parser(taskManager);","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        String input;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        while (true) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"            if (input.contains(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"                System.out.println(Format.formatResponse(Response.BYE_BYE.toString()));","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            String output \u003d parser.processInput(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"            System.out.println(Format.formatResponse(output));","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        scanner.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicleejy":39,"-":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import formatters.Response;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import task.Event;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"public class Parser {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    public Parser(TaskManager taskManager) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"     * This method is used to parse user input and obtain an integer representing the user\u0027s selection of an item from the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"     * @param input the raw input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     * @return an integer representing the user\u0027s selection of an item from the task list","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the input provided by the user could not be parsed into an integer","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public int getSelection(String input) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        String[] segments \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        int result;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"            result \u003d Integer.parseInt(segments[1]) - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"     * This method is used to parse user input and obtain the bot keyword provided by the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * @return a string representing the bot keyword provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"    public String getAction(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        String[] segments \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        return segments[0];","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"     * This method is used to create an event by parsing user input and creating a new Event object.","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response to the event creation outcome (either success or failure)","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    public String createEvent(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e parsedDetails;","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"            parsedDetails \u003d Event.parse(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeRuntimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        Event event \u003d new Event(parsedDetails.get(\"details\"), parsedDetails.get(\"from\"), parsedDetails.get(\"to\"));","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        taskManager.addTask(event);","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        output \u003d  Response.EVENT_ADDED + \"\\n\" + taskManager.displayTasks(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"     * This method is used to create an event by parsing user input and creating a new Deadline object.","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response to the deadline creation outcome (either success or failure)","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"    public String createDeadline(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e parsedDetails;","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"            parsedDetails \u003d Deadline.parse(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeRuntimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        Deadline deadline \u003d new Deadline(parsedDetails.get(\"details\"), parsedDetails.get(\"deadline\"));","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        taskManager.addTask(deadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.DEADLINE_ADDED + \"\\n\" + taskManager.displayTasks(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"     * This method is used to create an event by parsing user input and creating a new ToDo object.","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response to the to-do creation outcome (either success or failure)","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"    public String createToDo(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e parsedDetails;","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"            parsedDetails \u003d ToDo.parse(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeRuntimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"        ToDo todo \u003d new ToDo(parsedDetails.get(\"details\"));","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"        taskManager.addTask(todo);","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.TODO_ADDED + \"\\n\" + taskManager.displayTasks(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"     * This method executes a bot action to mark a task as completed or not based on user input.","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"     * @param isCompleted a boolean indicating whether the task should be marked as completed or not completed","lastModifiedDate":"2023-01-22"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response of the task marking, such as success or failure","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"    public String markTaskEvent(boolean isCompleted, String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"            int selectionIndex \u003d getSelection(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"            if (isCompleted) {","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"                taskManager.markTaskComplete(selectionIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"            } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"                taskManager.markTaskIncomplete(selectionIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-01-21"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"            output \u003d  Response.COMPLETED_TASK + \"\\n\" + taskManager.displayTasks(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"nicleejy"},"content":"            return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"        output \u003d  Response.INCOMPLETE_TASK + \"\\n\" + taskManager.displayTasks(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"nicleejy"},"content":"     * This method executes a bot action to delete a task based on user input.","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response of the task deletion, such as success or failure","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"nicleejy"},"content":"    public String deleteTaskEvent(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":144,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"nicleejy"},"content":"            int selectionIndex \u003d getSelection(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"nicleejy"},"content":"            taskManager.deleteTask(selectionIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.TASK_DELETED + \"\\n\" + taskManager.displayTasks(false);","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":153,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":154,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":155,"author":{"gitId":"nicleejy"},"content":"     * This method processes user input and delegates the corresponding actions by executing specific bot actions.","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response of the user input processing","lastModifiedDate":"2023-01-22"},{"lineNumber":159,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":160,"author":{"gitId":"nicleejy"},"content":"    public String processInput(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":161,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":162,"author":{"gitId":"nicleejy"},"content":"        String action \u003d getAction(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":163,"author":{"gitId":"nicleejy"},"content":"        String output \u003d Response.DEFAULT.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":164,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":165,"author":{"gitId":"nicleejy"},"content":"        switch (action) {","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"nicleejy"},"content":"            case \"list\":","lastModifiedDate":"2023-01-21"},{"lineNumber":167,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":168,"author":{"gitId":"nicleejy"},"content":"                output \u003d taskManager.displayTasks(true);","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":171,"author":{"gitId":"nicleejy"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":172,"author":{"gitId":"nicleejy"},"content":"                output \u003d markTaskEvent(true, input);","lastModifiedDate":"2023-01-21"},{"lineNumber":173,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":174,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"nicleejy"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":176,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":177,"author":{"gitId":"nicleejy"},"content":"                output \u003d markTaskEvent(false, input);","lastModifiedDate":"2023-01-21"},{"lineNumber":178,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":179,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":180,"author":{"gitId":"nicleejy"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-21"},{"lineNumber":181,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":182,"author":{"gitId":"nicleejy"},"content":"                output \u003d deleteTaskEvent(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":183,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":184,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":185,"author":{"gitId":"nicleejy"},"content":"            case \"event\":","lastModifiedDate":"2023-01-21"},{"lineNumber":186,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":187,"author":{"gitId":"nicleejy"},"content":"                output \u003d createEvent(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":189,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":190,"author":{"gitId":"nicleejy"},"content":"            case \"to-do\":","lastModifiedDate":"2023-01-21"},{"lineNumber":191,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"                output \u003d createToDo(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":193,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":194,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":195,"author":{"gitId":"nicleejy"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-21"},{"lineNumber":196,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":197,"author":{"gitId":"nicleejy"},"content":"                output \u003d createDeadline(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":198,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":199,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-21"},{"lineNumber":201,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":202,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":203,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"nicleejy":203}},{"path":"src/main/java/data/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package data;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import formatters.Response;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import task.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" * Storage medium to manage tasks created by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    public TaskManager(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     * Gets the list of the users tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     * Prints out the users tasks","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     * Calls the toString() method of each task type and formats the lists of tasks","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * by printing to the console line by line","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     * @param showMessage description of the parameter","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    public String displayTasks(boolean showMessage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"            return Response.NO_TASK.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        if (showMessage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"            response.append(\"Heww are your tasks UwU!\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"            Task task \u003d this.taskList.get(i);","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"            String lineItem \u003d (i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"            response.append(lineItem);","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        return response.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"     * Used to mark a task as complete.","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"     * @param index the index of the task to mark as complete","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the task is not found","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    public void markTaskComplete(int index) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        Task taskToMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"            taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.TASK_NOT_FOUND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        taskToMark.changeStatus(true);","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"     * Used to mark a task incomplete.","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"     * @param index the index of the task to mark as complete","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the task is not found","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"    public void markTaskIncomplete(int index) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        Task taskToMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"            taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.TASK_NOT_FOUND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        taskToMark.changeStatus(false);","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"     * This method is used to add a task from the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"     * @param newTask A Task object","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"     * This method is used to delete a task from the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the task is not found","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"    public void deleteTask(int index) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"            this.taskList.remove(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.TASK_NOT_FOUND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"nicleejy":125}},{"path":"src/main/java/errors/DukeInsufficientArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package errors;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Exception class for indicating when a user provides insufficient details to a bot command.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"public class DukeInsufficientArgumentException extends DukeRuntimeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"    public DukeInsufficientArgumentException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":12}},{"path":"src/main/java/errors/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package errors;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Exception class for indicating when a user provides an invalid bot command.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public class DukeInvalidCommandException extends DukeRuntimeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":11}},{"path":"src/main/java/errors/DukeRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package errors;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Exception class for indicating when a user provides an invalid Duke chatbot command.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public class DukeRuntimeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public DukeRuntimeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":12}},{"path":"src/main/java/formatters/Format.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package formatters;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Formats the default responses for UwU_TaskMaster","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"public class Format {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    public static String getCompletionDisplay(boolean isCompleted) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"        String completionDisplay;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"            completionDisplay \u003d \"[X]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"            completionDisplay \u003d \"[ ]\";","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        return completionDisplay;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    public static String formatResponse(String output) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"        return \"\\nUwU_TaskMaster ＵｗＵ: \" + output;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":25}},{"path":"src/main/java/formatters/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package formatters;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Various responses of UwU_TaskMaster","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public enum Response {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"    INVALID_COMMAND {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"            return \"Ohh nyoo I cannyot ^w^ undewstand *cries* what you mean, c-can you twy again?\";","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    MISSING_DEADLINE_DETAILS {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"            return \"Oh nyoo did you fowget t-to name or add a date t-to this deadline?!? *blushes*\";","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    MISSING_EVENT_DETAILS {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"            return \"Oh nyoo did you fowget t-to name or add a /from or /to t-to this event?!? *blushes*\";","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    MISSING_TASK_NAME {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"            return \"You didnt teww me the name of youw t-task UwU\";","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    COMPLETED_TASK {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"            return \"Wowww c-congwatuwations on compweting youw task!!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    INCOMPLETE_TASK {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"            return \"omg nyoooooo why you have nyot compwete youw t-task :(\";","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"    NO_TASK {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"            return \"Wooks wike *screams* you do not have any OwO tasks!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"    EVENT_ADDED {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"            return \"Y-Y-Youw e-eevent has been successfuwwy added!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    DEADLINE_ADDED {","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"            return \"Y-Y-Youw d-deadline has been successfuwwy added!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"    TODO_ADDED {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"            return \"Y-Y-Youw t-to-do has been successfuwwy added!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"    TASK_NOT_FOUND {","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"            return \"I can\u0027t find youw t-task oh nyooo!\";","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"    TASK_DELETED {","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"            return \"Okay your t-task is deweted!\";","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"    BYE_BYE {","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"            return \"Bye byee!!! UwU\";","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"    DEFAULT {","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"            return \"I don\u0027t understand! Type in a c-c-command and ill hewp *sweats* you out!\";","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":111}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInsufficientArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import formatters.Format;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import formatters.Response;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" * A Task with a deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private final String deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    public Deadline(String details, String deadline) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * Prints out a formatted string containing the specific deadline details","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        return (\"DEADLINE: \" + super.getDetails() +","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"                \" (By \" + deadline +\")\" + Format.getCompletionDisplay(super.isCompleted()));","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * Returns parsed information specific to a \"deadline\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"     * Keys: \"details\" (the name of the deadline), \"deadline\" (the date of the deadline)","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"     * Throws a DukeInsufficientArgumentException if the input is unable to be parsed correctly","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"     * @param input A deadline user command","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInsufficientArgumentException if the user did not include any details with the \"deadline\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInvalidCommandException If the deadline details are out of order","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"     * @return A hashmap with keys \"details\" and \"deadline\"","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"    public static HashMap\u003cString, String\u003e parse(String input) throws DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e segments \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e detailsSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e deadlineSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        int detailsIndex \u003d segments.indexOf(\"deadline\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"        int deadlineIndex \u003d segments.indexOf(\"/by\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        if (segments.size() \u003c\u003d 1 || detailsIndex \u003d\u003d 0 || deadlineIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_DEADLINE_DETAILS.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"            detailsSublist \u003d segments.subList(detailsIndex, deadlineIndex - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"            deadlineSublist \u003d segments.subList(deadlineIndex, segments.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"        if (detailsSublist.isEmpty() || deadlineSublist.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_DEADLINE_DETAILS.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"        String details \u003d String.join(\" \", detailsSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        String deadline \u003d String.join(\" \", deadlineSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        result.put(\"details\", details);","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        result.put(\"deadline\", deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":82}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInsufficientArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import formatters.Format;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import formatters.Response;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":" * A Task with added start and end details","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    private final String start;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    private final String end;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    public Event(String details, String start, String end) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     * Prints out a formatted string containing the specific event details","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        return (\"EVENT: \" + super.getDetails() + \" (From \" + start +\" to \" + end + \")\" +","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"                Format.getCompletionDisplay(super.isCompleted()));","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     * Returns parsed information specific to an \"event\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * Keys: \"details\" (the name of the event), \"from\" (event start date), \"to\" (event end date)","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     * Throws a DukeInsufficientArgumentException if the input is unable to be parsed correctly","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"     * @param input An event user command","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInsufficientArgumentException if the user did not include any details with the \"event\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInvalidCommandException If the event details are out of order","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"     * @return A hashmap with keys \"details\", \"from\" and \"to\"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    public static HashMap\u003cString, String\u003e parse(String input) throws DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e segments \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e detailsSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e fromSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e toSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        int detailsIndex \u003d segments.indexOf(\"event\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        int fromIndex \u003d segments.indexOf(\"/from\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        int toIndex \u003d segments.indexOf(\"/to\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        if (segments.size() \u003c\u003d 1 || detailsIndex \u003d\u003d 0 || fromIndex \u003d\u003d 0 || toIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_EVENT_DETAILS.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"            detailsSublist \u003d segments.subList(detailsIndex, fromIndex - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"            fromSublist \u003d segments.subList(fromIndex, toIndex - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"            toSublist \u003d segments.subList(toIndex, segments.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        if (detailsSublist.isEmpty() || fromSublist.isEmpty() || toSublist.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_EVENT_DETAILS.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        String details \u003d String.join(\" \", detailsSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"        String from \u003d String.join(\" \", fromSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        String to \u003d String.join(\" \", toSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        result.put(\"details\", details);","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        result.put(\"from\", from);","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        result.put(\"to\", to);","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":85}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"    private final String details;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public Task(String details) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"        return details;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        return isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    public void changeStatus(boolean hasCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"        if (hasCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"            isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nicleejy":27}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInsufficientArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import formatters.Format;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import formatters.Response;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":" * A generic Task-like event without any additional details","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    public ToDo(String details) {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        return (\"TO-DO: \" + super.getDetails() + Format.getCompletionDisplay(super.isCompleted()));","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * Returns parsed information specific to a \"to-do\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * Keys: \"details\" (the name of the to-do)","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     * Throws a DukeInsufficientArgumentException if the input is unable to be parsed correctly","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"     * @param input A to-do user command","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInsufficientArgumentException if the user did not include any details with the \"to-do\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInvalidCommandException If the to-do details are out of order","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     * @return A hashmap with key \"details\"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    public static HashMap\u003cString, String\u003e parse(String input) throws DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e segments \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e detailsSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        int detailsIndex \u003d segments.indexOf(\"to-do\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        if (segments.size() \u003c\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_TASK_NAME.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"            detailsSublist \u003d segments.subList(detailsIndex, segments.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"        if (detailsSublist.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_TASK_NAME.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        String details \u003d String.join(\" \", detailsSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"        result.put(\"details\", details);","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":67}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"to-do borrow books from library","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"to-do","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"deadline do the dishes /by next morning","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"deadline do the dishes","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"event meet Alex for lunch /from 1pm /to 3pm","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"event meet Alex for lunch /from 1pm","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"event meet Alex for lunch","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"event","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"unmark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"unmark","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":21}}]
