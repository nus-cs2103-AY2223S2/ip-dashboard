[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicleejy":7,"-":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import data.TaskFileReaderWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import ui.Format;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" * A bot with an UwU personality to help users keep track","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" * of tasks such as events, deadlines and to-dos","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"     * Runs the bot and reads in user input in a loop, parses it and responds accordingly","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"     * @param args program args","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        System.out.println(\"Hewwo! I\u0027m UwU_TaskMaster! How c-can I hewp you?!?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        TaskFileReaderWriter taskReaderWriter \u003d new TaskFileReaderWriter();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        TaskManager taskManager \u003d taskReaderWriter.loadDataFromFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        if (!taskReaderWriter.createTaskFile()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"            System.out.println(\"Error creating data file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"            return;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        Parser parser \u003d new Parser(taskManager);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        String input;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        while (true) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"            if (input.contains(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"                if (!taskReaderWriter.updateTaskFile(taskManager)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"                    System.out.println(\"Error updating data file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"                    return;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"                System.out.println(Format.formatResponse(Response.BYE_BYE.toString()));","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"            String output \u003d parser.processInput(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"            System.out.println(Format.formatResponse(output));","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        scanner.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicleejy":54,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        Application.launch(UWUTaskmaster.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nicleejy":11}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import task.Event;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import ui.Format;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import utils.Utility;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" * Responsible for the high-level parsing of user inputs and delegating relevant actions","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"public class Parser {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    public Parser(TaskManager taskManager) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"     * This method is used to parse user input and obtain an integer representing the","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"     * user\u0027s selection of an item from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * @param input the raw input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     * @return an integer representing the user\u0027s selection of an item from the task list","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the input provided by the user could not be parsed into an integer","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    public int getSelection(String input) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        String[] segments \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        int result;","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            result \u003d Integer.parseInt(segments[1]) - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"     * This method is used to parse user input and obtain the user\u0027s search query","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"     * @param input the raw input string provided by the user","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"     * @return a String representing the user\u0027s query of a task","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the input provided by the user could not be parsed","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"    public String getSearchKeyword(String input) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        String[] segments \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        String result;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"            result \u003d segments[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"        } catch (ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"     * This method is used to parse user input and obtain the bot keyword provided by the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"     * @return a string representing the bot keyword provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"    public String getAction(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"        String[] segments \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        return segments[0];","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"     * This method is used to create an event by parsing user input and creating a new Event object.","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response to the event creation outcome (either success or failure)","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"    public String createEvent(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        String details;","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        LocalDateTime startDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e parsedDetails;","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"            parsedDetails \u003d Event.parse(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"            details \u003d parsedDetails.get(\"details\");","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"            startDate \u003d Utility.parseDateTime(parsedDetails.get(\"from\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"            endDate \u003d Utility.parseDateTime(parsedDetails.get(\"to\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeRuntimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        Event event \u003d new Event(details, startDate, endDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"        taskManager.addTask(event);","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.EVENT_ADDED + \"\\n\" + Format.displayTasks(false, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"     * This method is used to create an event by parsing user input and creating a new Deadline object.","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response to the deadline creation outcome (either success or failure)","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"    public String createDeadline(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"        String details;","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"        LocalDateTime deadlineDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e parsedDetails;","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"            parsedDetails \u003d Deadline.parse(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"            details \u003d parsedDetails.get(\"details\");","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"            deadlineDate \u003d Utility.parseDateTime(parsedDetails.get(\"deadline\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeRuntimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"        Deadline deadline \u003d new Deadline(details, deadlineDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"        taskManager.addTask(deadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.DEADLINE_ADDED + \"\\n\" + Format.displayTasks(false, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"     * This method is used to create an event by parsing user input and creating a new to-do object.","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response to the to-do creation outcome (either success or failure)","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"    public String createToDo(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":134,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e parsedDetails;","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"nicleejy"},"content":"            parsedDetails \u003d ToDo.parse(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeRuntimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"nicleejy"},"content":"        ToDo todo \u003d new ToDo(parsedDetails.get(\"details\"));","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"nicleejy"},"content":"        taskManager.addTask(todo);","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.TODO_ADDED + \"\\n\" + Format.displayTasks(false, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":144,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":147,"author":{"gitId":"nicleejy"},"content":"     * This method executes a bot action to mark a task as completed or not based on user input.","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"nicleejy"},"content":"     * @param isCompleted a boolean indicating whether the task should be marked as completed or not completed","lastModifiedDate":"2023-01-22"},{"lineNumber":150,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response of the task marking, such as success or failure","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":153,"author":{"gitId":"nicleejy"},"content":"    public String markTaskEvent(boolean isCompleted, String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":154,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":155,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":156,"author":{"gitId":"nicleejy"},"content":"            int selectionIndex \u003d getSelection(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":157,"author":{"gitId":"nicleejy"},"content":"            if (isCompleted) {","lastModifiedDate":"2023-01-21"},{"lineNumber":158,"author":{"gitId":"nicleejy"},"content":"                taskManager.markTaskComplete(selectionIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":159,"author":{"gitId":"nicleejy"},"content":"            } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":160,"author":{"gitId":"nicleejy"},"content":"                taskManager.markTaskIncomplete(selectionIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":161,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":162,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":163,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":164,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":165,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"nicleejy"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-01-21"},{"lineNumber":167,"author":{"gitId":"nicleejy"},"content":"            output \u003d Response.COMPLETED_TASK + \"\\n\" + Format.displayTasks(false, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"nicleejy"},"content":"            return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.INCOMPLETE_TASK + \"\\n\" + Format.displayTasks(false, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":173,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":174,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"nicleejy"},"content":"     * This method executes a bot action to delete a task based on user input.","lastModifiedDate":"2023-01-22"},{"lineNumber":176,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":177,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":178,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response of the task deletion, such as success or failure","lastModifiedDate":"2023-01-22"},{"lineNumber":179,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":180,"author":{"gitId":"nicleejy"},"content":"    public String deleteTaskEvent(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":181,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-22"},{"lineNumber":182,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":183,"author":{"gitId":"nicleejy"},"content":"            int selectionIndex \u003d getSelection(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":184,"author":{"gitId":"nicleejy"},"content":"            taskManager.deleteTask(selectionIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":185,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":186,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-21"},{"lineNumber":187,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"        output \u003d Response.TASK_DELETED + \"\\n\" + Format.displayTasks(false, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-22"},{"lineNumber":190,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":191,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"nicleejy"},"content":"     * Gets a preview of filtered tasks matching an input string.","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string to search for a task event","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"nicleejy"},"content":"     * @return bot response including a string representation of the filtered tasks that matched the input,","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"nicleejy"},"content":"     *         or an error message if the input is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"nicleejy"},"content":"    public String findTaskEvent(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"        String keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":202,"author":{"gitId":"nicleejy"},"content":"            keyword \u003d getSearchKeyword(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":203,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":204,"author":{"gitId":"nicleejy"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":205,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":206,"author":{"gitId":"nicleejy"},"content":"        TaskManager taskView \u003d taskManager.filterTasks(keyword);","lastModifiedDate":"2023-01-28"},{"lineNumber":207,"author":{"gitId":"nicleejy"},"content":"        return Format.displayFilteredTasks(taskView);","lastModifiedDate":"2023-01-28"},{"lineNumber":208,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":209,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":210,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":211,"author":{"gitId":"nicleejy"},"content":"     * This method processes user input and delegates the corresponding actions by executing specific bot actions.","lastModifiedDate":"2023-01-22"},{"lineNumber":212,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":213,"author":{"gitId":"nicleejy"},"content":"     * @param input the input string provided by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":214,"author":{"gitId":"nicleejy"},"content":"     * @return a string indicating the bot response of the user input processing","lastModifiedDate":"2023-01-22"},{"lineNumber":215,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":216,"author":{"gitId":"nicleejy"},"content":"    public String processInput(String input) {","lastModifiedDate":"2023-01-21"},{"lineNumber":217,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":218,"author":{"gitId":"nicleejy"},"content":"        String action \u003d getAction(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":219,"author":{"gitId":"nicleejy"},"content":"        String output;","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":221,"author":{"gitId":"nicleejy"},"content":"        switch (action) {","lastModifiedDate":"2023-01-21"},{"lineNumber":222,"author":{"gitId":"nicleejy"},"content":"        case \"list\":","lastModifiedDate":"2023-01-21"},{"lineNumber":223,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":224,"author":{"gitId":"nicleejy"},"content":"            output \u003d Format.displayTasks(true, taskManager);","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":226,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":227,"author":{"gitId":"nicleejy"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":228,"author":{"gitId":"nicleejy"},"content":"            output \u003d markTaskEvent(true, input);","lastModifiedDate":"2023-01-21"},{"lineNumber":229,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":230,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":231,"author":{"gitId":"nicleejy"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":232,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":233,"author":{"gitId":"nicleejy"},"content":"            output \u003d markTaskEvent(false, input);","lastModifiedDate":"2023-01-21"},{"lineNumber":234,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":235,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":236,"author":{"gitId":"nicleejy"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-21"},{"lineNumber":237,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":238,"author":{"gitId":"nicleejy"},"content":"            output \u003d deleteTaskEvent(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":239,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":240,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":241,"author":{"gitId":"nicleejy"},"content":"        case \"event\":","lastModifiedDate":"2023-01-21"},{"lineNumber":242,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":243,"author":{"gitId":"nicleejy"},"content":"            output \u003d createEvent(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":244,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":245,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":246,"author":{"gitId":"nicleejy"},"content":"        case \"to-do\":","lastModifiedDate":"2023-01-21"},{"lineNumber":247,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":248,"author":{"gitId":"nicleejy"},"content":"            output \u003d createToDo(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":249,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":250,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":251,"author":{"gitId":"nicleejy"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-21"},{"lineNumber":252,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":253,"author":{"gitId":"nicleejy"},"content":"            output \u003d createDeadline(input);","lastModifiedDate":"2023-01-21"},{"lineNumber":254,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":255,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":256,"author":{"gitId":"nicleejy"},"content":"        case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":257,"author":{"gitId":"nicleejy"},"content":"            output \u003d findTaskEvent(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":258,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":259,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":260,"author":{"gitId":"nicleejy"},"content":"        default:","lastModifiedDate":"2023-01-28"},{"lineNumber":261,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":262,"author":{"gitId":"nicleejy"},"content":"            output \u003d Response.DEFAULT.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":263,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":264,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":265,"author":{"gitId":"nicleejy"},"content":"        return output;","lastModifiedDate":"2023-01-21"},{"lineNumber":266,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":267,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":268,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"nicleejy":268}},{"path":"src/main/java/UWUTaskmaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import data.TaskFileReaderWriter;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import ui.FXChatPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"import static javafx.application.Platform.exit;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"public class UWUTaskmaster extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private final TaskFileReaderWriter taskReaderWriter;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    private final Parser parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    private final FXChatPane chatPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    public UWUTaskmaster() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        this.taskReaderWriter \u003d new TaskFileReaderWriter();","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        this.taskManager \u003d taskReaderWriter.loadDataFromFile();","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        if (!taskReaderWriter.createTaskFile()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"            System.out.println(\"Error creating data file\");","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        this.parser \u003d new Parser(taskManager);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/profile.jpg\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        Image taskMasterImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/uwu.jpg\")));","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        this.chatPane \u003d FXChatPane.createChatPane(userImage, taskMasterImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        System.out.println(\"created chat pane\");","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        stage.setTitle(\"UwU_TaskMaster\");","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        stage.setMinHeight(600);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        stage.setMinWidth(400);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        userInput.setPrefWidth(325);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        sendButton.setPrefWidth(55);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        AnchorPane.setTopAnchor(chatPane, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"        mainLayout.getChildren().addAll(chatPane, userInput, sendButton);","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"        mainLayout.setPrefSize(385, 535);","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"        if (input.contains(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"            if (!taskReaderWriter.updateTaskFile(taskManager)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"                System.out.println(\"Error updating data file\");","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"            exit();","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"            return;","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"        String botResponse \u003d parser.processInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"        chatPane.addChatToChatPane(input, botResponse);","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nicleejy":103}},{"path":"src/main/java/data/TaskFileReaderWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package data;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"import utils.Utility;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":" * The TaskFileReaderWriter class provides methods for reading and writing tasks to and from a file.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":" * It includes methods for loading tasks from a file and updating a task file with tasks from a","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":" * TaskManager object, and creating a new task file.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"public class TaskFileReaderWriter {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    private static final String DIRECTORY_NAME \u003d \"userData\";","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    private static final String FILE_NAME \u003d \"test.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    public TaskFileReaderWriter() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * Creates a new task storage .txt file in the user\u0027s drive in a specified directory and file name.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * @return boolean value indicating the success of the file creation.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    public boolean createTaskFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        File taskFile \u003d new File(DIRECTORY_NAME + File.separator + FILE_NAME);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"            boolean isMkdirSuccess \u003d taskFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"            if (!isMkdirSuccess) {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"                return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"            boolean isNewFileSuccess \u003d taskFile.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"     * Converts a string representation of a task from storage file","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"     * on the user\u0027s drive into a {@link Task} object.","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"     * @param taskString The string representation of the task in the format of","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"     *                   \"category|isCompleted|details|(deadline/start) (end)\"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"     * @return The created Task object","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"    public Task readTaskString(String taskString) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        String[] taskArr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        String category \u003d taskArr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        boolean isCompleted \u003d Boolean.parseBoolean(taskArr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        String details \u003d taskArr[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        switch (category) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        case \"Deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"            String deadline \u003d taskArr[3];","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"            LocalDateTime deadlineDate \u003d Utility.convertStringToDateTime(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"            newTask \u003d new Deadline(details, deadlineDate, isCompleted);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        case \"Event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"            String start \u003d taskArr[3];","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"            String end \u003d taskArr[4];","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"            LocalDateTime startDate \u003d Utility.convertStringToDateTime(start);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"            LocalDateTime endDate \u003d Utility.convertStringToDateTime(end);","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"            newTask \u003d new Event(details, startDate, endDate, isCompleted);","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"        case \"To-Do\":","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"            newTask \u003d new ToDo(details, isCompleted);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"        default:","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"        return newTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"     * Updates the file on the user\u0027s drive with the tasks in a given {@link TaskManager} object.","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"     * @param taskManager The TaskManager object containing the tasks to be written to the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"     * @return boolean value indicating the success of the file update operation.","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"    public boolean updateTaskFile(TaskManager taskManager) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"        File taskFile \u003d new File(DIRECTORY_NAME + File.separator + FILE_NAME);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"        String details \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"        boolean isCompleted;","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(taskFile)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"            for (Task task : taskManager.getTasks()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"                    Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"                    details \u003d deadlineTask.getDetails();","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"                    String deadline \u003d deadlineTask.getDeadline();","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"                    isCompleted \u003d deadlineTask.isCompleted();","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"                    taskString \u003d \"Deadline|\" + isCompleted + \"|\" + details + \"|\" + deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"                    Event eventTask \u003d (Event) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"                    details \u003d eventTask.getDetails();","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"                    String start \u003d eventTask.getStart();","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"                    String end \u003d eventTask.getEnd();","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"                    isCompleted \u003d eventTask.isCompleted();","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"                    taskString \u003d \"Event|\" + isCompleted + \"|\" + details + \"|\" + start + \"|\" + end;","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"                } else if (task instanceof ToDo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"                    ToDo toDoTask \u003d (ToDo) task;","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"                    details \u003d toDoTask.getDetails();","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"                    isCompleted \u003d toDoTask.isCompleted();","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"                    taskString \u003d \"To-Do|\" + isCompleted + \"|\" + details;","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"nicleejy"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"                fileWriter.write(taskString + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"nicleejy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"nicleejy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"nicleejy"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"nicleejy"},"content":"      * Reads data from a file and creates a new TaskManager object.","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"nicleejy"},"content":"      * @return A TaskManager object initialised with the tasks read from the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"nicleejy"},"content":"      */","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"nicleejy"},"content":"    public TaskManager loadDataFromFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"nicleejy"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"nicleejy"},"content":"            Scanner scanner \u003d new Scanner(new File(DIRECTORY_NAME + File.separator + FILE_NAME));","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"nicleejy"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"nicleejy"},"content":"                String taskString \u003d scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"nicleejy"},"content":"                if (!taskString.isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"nicleejy"},"content":"                    Task task \u003d readTaskString(taskString);","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"nicleejy"},"content":"                    taskManager.addTask(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"nicleejy"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"nicleejy"},"content":"            scanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"nicleejy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"nicleejy"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"nicleejy"},"content":"        return taskManager;","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"nicleejy":163}},{"path":"src/main/java/data/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package data;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import task.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" * Storage medium to manage tasks created by the user","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    public TaskManager() {}","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"     * Gets the list of the users tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"     * Used to mark a task as complete.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * @param index the index of the task to mark as complete","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the task is not found","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"    public void markTaskComplete(int index) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        Task taskToMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"            taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.TASK_NOT_FOUND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        taskToMark.changeStatus(true);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"     * Used to mark a task incomplete.","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"     * @param index the index of the task to mark as complete","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the task is not found","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    public void markTaskIncomplete(int index) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        Task taskToMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"            taskToMark \u003d this.taskList.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.TASK_NOT_FOUND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        taskToMark.changeStatus(false);","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"     * This method is used to add a task from the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"     * @param newTask A Task object","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"     * This method is used to delete a task from the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"     * @throws DukeInvalidCommandException if the task is not found","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"    public void deleteTask(int index) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"            this.taskList.remove(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.TASK_NOT_FOUND.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"     * Filters tasks in the main TaskManager based on the provided keyword by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"     * @param keyword The keyword to filter the tasks by.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"     * @return A new TaskManager object containing only the tasks that contain","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"     *     the keyword as a substring their details.","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"    public TaskManager filterTasks(String keyword) {","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"        TaskManager taskView \u003d new TaskManager();","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"            String details \u003d task.getDetails();","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"            if (details.contains(keyword)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"                taskView.addTask(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"        return taskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"nicleejy":102}},{"path":"src/main/java/errors/DukeInsufficientArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package errors;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Exception class for indicating when a user provides insufficient details to a bot command.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public class DukeInsufficientArgumentException extends DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public DukeInsufficientArgumentException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":11}},{"path":"src/main/java/errors/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package errors;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Exception class for indicating when a user provides an invalid bot command.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public class DukeInvalidCommandException extends DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":11}},{"path":"src/main/java/errors/DukeRuntimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package errors;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Exception class for indicating when a user provides an invalid Duke chatbot command.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public class DukeRuntimeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    public DukeRuntimeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":12}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInsufficientArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import ui.Format;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"import utils.Utility;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":" * A Task with a deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"     * Creates a new Deadline object with the given details and deadline time.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the task associated with the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     * @param deadline the LocalDateTime object representing the deadline of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    public Deadline(String details, LocalDateTime deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"     * Creates a new Deadline object with the given details and deadline time.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the task associated with the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * @param deadline the LocalDateTime object representing the deadline of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     * @param isCompleted a boolean indicating whether the task has been completed","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    public Deadline(String details, LocalDateTime deadline, boolean isCompleted) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        super.changeStatus(isCompleted);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"     * Prints out a formatted string containing the specific deadline details","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        return (\"DEADLINE: \" + super.getDetails()","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"                + \" (By \" + Utility.getDateTimeString(deadline) + \")\"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"                + Format.getCompletionDisplay(super.isCompleted()));","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"     * Returns the value of the private field \u0027deadline\u0027 for storage as a String.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"     * @return The current value of \u0027deadline\u0027 formatted as a String.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        return Utility.convertDateTimeToString(this.deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"     * Returns parsed information specific to a \"deadline\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"     * Keys: \"details\" (the name of the deadline), \"deadline\" (the date of the deadline)","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"     * Throws a DukeInsufficientArgumentException if the input is unable to be parsed correctly","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"     * @param input A deadline user command","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"     * @return A hashmap with keys \"details\" and \"deadline\"","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInsufficientArgumentException if the user did not include any details with the \"deadline\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInvalidCommandException If the deadline details are out of order","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"    public static HashMap\u003cString, String\u003e parse(String input) throws DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e segments \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e detailsSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e deadlineSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"        int detailsIndex \u003d segments.indexOf(\"deadline\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"        int deadlineIndex \u003d segments.indexOf(\"/by\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"        if (segments.size() \u003c\u003d 1 || detailsIndex \u003d\u003d 0 || deadlineIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_DEADLINE_DETAILS.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"            detailsSublist \u003d segments.subList(detailsIndex, deadlineIndex - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"            deadlineSublist \u003d segments.subList(deadlineIndex, segments.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"        if (detailsSublist.isEmpty() || deadlineSublist.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_DEADLINE_DETAILS.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"        String details \u003d String.join(\" \", detailsSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"        String deadline \u003d String.join(\" \", deadlineSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"        result.put(\"details\", details);","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"        result.put(\"deadline\", deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":112}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInsufficientArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import ui.Format;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"import utils.Utility;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":" * A Task with added start and end details","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     * Creates a new Event object with the given details and start/end time.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the event","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"     * @param start the LocalDateTime object representing the start of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     * @param end the LocalDateTime object representing the end of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    public Event(String details, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     * Creates a new Event object with the given details and start/end time.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the event","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     * @param start the LocalDateTime object representing the start of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"     * @param end the LocalDateTime object representing the end of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"     * @param isCompleted a boolean indicating whether the event has been completed","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    public Event(String details, LocalDateTime start, LocalDateTime end, boolean isCompleted) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"        super.changeStatus(isCompleted);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"     * Returns the value of the private field \u0027start\u0027 representing the event start date as string for storage","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"     * @return The current value of \u0027start\u0027 formatted as a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    public String getStart() {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        return Utility.convertDateTimeToString(this.start);","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"     * Returns the value of the private field \u0027end\u0027 representing the event end date as string for storage","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"     * @return The current value of \u0027end\u0027 formatted as a string.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        return Utility.convertDateTimeToString(this.end);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"     * Prints out a formatted string containing the specific event details","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        return (\"EVENT: \" + super.getDetails() + \" (From \" + Utility.getDateTimeString(start)","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"                + \" to \" + Utility.getDateTimeString(end) + \")\"","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"                + Format.getCompletionDisplay(super.isCompleted()));","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"     * Returns parsed information specific to an \"event\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"     * Keys: \"details\" (the name of the event), \"from\" (event start date), \"to\" (event end date)","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"     * Throws a DukeInsufficientArgumentException if the input is unable to be parsed correctly","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"     * @param input An event user command","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"     * @return A hashmap with keys \"details\", \"from\" and \"to\"","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInsufficientArgumentException if the user did not include any details with the \"event\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInvalidCommandException If the event details are out of order","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"    public static HashMap\u003cString, String\u003e parse(String input) throws DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e segments \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e detailsSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e fromSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e toSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"        int detailsIndex \u003d segments.indexOf(\"event\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"        int fromIndex \u003d segments.indexOf(\"/from\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"        int toIndex \u003d segments.indexOf(\"/to\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"        if (segments.size() \u003c\u003d 1 || detailsIndex \u003d\u003d 0 || fromIndex \u003d\u003d 0 || toIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_EVENT_DETAILS.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"            detailsSublist \u003d segments.subList(detailsIndex, fromIndex - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"            fromSublist \u003d segments.subList(fromIndex, toIndex - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"            toSublist \u003d segments.subList(toIndex, segments.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"        if (detailsSublist.isEmpty() || fromSublist.isEmpty() || toSublist.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_EVENT_DETAILS.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"        String details \u003d String.join(\" \", detailsSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"        String from \u003d String.join(\" \", fromSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"        String to \u003d String.join(\" \", toSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"        result.put(\"details\", details);","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"        result.put(\"from\", from);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"        result.put(\"to\", to);","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":129}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * A Task object representing a task","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"    private final String details;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    private boolean isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"     * Creates a new Task parent object with the given details","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the task","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    public Task(String details) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     * Returns the value of the private field \u0027details\u0027 representing the details of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     * @return The current value of \u0027details\u0027.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    public String getDetails() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        return details;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     * Returns the value of the private field \u0027isCompleted\u0027 representing the completion status of the task,","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * true if the task is completed, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     * @return The current value of \u0027isCompleted\u0027.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        return isCompleted;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     * Changes the completion status of the task.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"     * @param hasCompleted The new completion status of the task,","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"     *                      true if the task is completed, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"    public void changeStatus(boolean hasCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        if (hasCompleted) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"            isCompleted \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nicleejy":53}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInsufficientArgumentException;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import errors.DukeRuntimeException;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import ui.Format;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" * A generic Task-like event without any additional details","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"     * Creates a new To-Do object with the given details","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the task","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public ToDo(String details) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * Creates a new To-Do object with the given details","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * @param details a string describing the task","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     * @param isCompleted a boolean indicating whether the to-do has been completed","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    public ToDo(String details, boolean isCompleted) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        super(details);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        super.changeStatus(isCompleted);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        return (\"TO-DO: \" + super.getDetails() + Format.getCompletionDisplay(super.isCompleted()));","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"     * Returns parsed information specific to a \"to-do\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"     * Keys: \"details\" (the name of the to-do)","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"     * Throws a DukeInsufficientArgumentException if the input is unable to be parsed correctly","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"     * @param input A to-do user command","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"     * @return A hashmap with key \"details\"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInsufficientArgumentException if the user did not include any details with the \"to-do\" command","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"     * @exception DukeInvalidCommandException If the to-do details are out of order","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"    public static HashMap\u003cString, String\u003e parse(String input) throws DukeRuntimeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e segments \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        List\u003cString\u003e detailsSublist;","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        int detailsIndex \u003d segments.indexOf(\"to-do\") + 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        if (segments.size() \u003c\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_TASK_NAME.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"            detailsSublist \u003d segments.subList(detailsIndex, segments.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.INVALID_COMMAND.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        if (detailsSublist.isEmpty()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInsufficientArgumentException(Response.MISSING_TASK_NAME.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        String details \u003d String.join(\" \", detailsSublist);","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        HashMap\u003cString, String\u003e result \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        result.put(\"details\", details);","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        return result;","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":83}},{"path":"src/main/java/ui/FXChatPane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"public class FXChatPane extends ScrollPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"    VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    Image userImage;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    Image taskMasterImage;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    public FXChatPane(Image userImage, Image taskMasterImage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"            this.setVvalue(1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"        dialogContainer.setMinHeight(535);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        this.userImage \u003d userImage;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        this.taskMasterImage \u003d taskMasterImage;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        this.setContent(dialogContainer);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        this.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        this.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        this.setVvalue(1);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        this.setFitToWidth(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        this.setPrefSize(385, 535);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        dialogContainer.setStyle(\"-fx-background-color: #2E4057\");","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    public static FXChatPane createChatPane(Image userImage, Image taskMasterImage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        return new FXChatPane(userImage, taskMasterImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    public void addChatToChatPane(String userText, String taskMasterText) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        FXDialogBox userDialog \u003d FXDialogBox.getUserDialog(userText, userImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"                userDialog","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        FXDialogBox taskMasterDialog \u003d FXDialogBox.getTaskMasterDialog(taskMasterText, taskMasterImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        Timeline timeline \u003d new Timeline(new KeyFrame(Duration.millis(700),","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"                event -\u003e dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"                taskMasterDialog)));","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        timeline.play();","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nicleejy":54}},{"path":"src/main/java/ui/FXDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"public class FXDialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    public FXDialogBox(Label label, ImageView imageView) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        imageView.setFitWidth(50);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"        imageView.setFitHeight(50);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        this.setPadding(new Insets(10, 15, 10, 15));","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        this.setSpacing(20);","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        this.getChildren().addAll(label, imageView);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        this.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    public static FXDialogBox getUserDialog(String label, Image image) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        ImageView croppedImage \u003d createCroppedImage(image);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        Label styledLabel \u003d createStyledLabel(label, true);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        return new FXDialogBox(styledLabel, croppedImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    public static FXDialogBox getTaskMasterDialog(String label, Image image) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        ImageView croppedImage \u003d createCroppedImage(image);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        Label styledLabel \u003d createStyledLabel(label, false);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        var dialogBox \u003d new FXDialogBox(styledLabel, croppedImage);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        return dialogBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    private static ImageView createCroppedImage(Image image) {","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"        Circle circleCrop \u003d new Circle(25, 25, 25);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        ImageView imageView \u003d new ImageView(image);","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        imageView.setClip(circleCrop);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        return imageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"    private static Label createStyledLabel(String label, boolean isUser) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        Label styledLabel \u003d new Label(label);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"        String bubbleColor \u003d \"#62929E\";","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        String textColor \u003d \"#FFFFFF\";","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        if (isUser) {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"            bubbleColor \u003d \"#FCF7FF\";","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"            textColor \u003d \"#000000\";","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        styledLabel.setWrapText(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        styledLabel.setStyle(\"\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"                \"-fx-font-size: 13px;\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"                \"-fx-padding: 10 20 10 20;\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"                \"-fx-background-color: \" + bubbleColor + \";\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"                \"-fx-background-radius: 10;\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"                \"-fx-text-fill: \" + textColor + \" ;\");","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        return styledLabel;","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nicleejy":73}},{"path":"src/main/java/ui/Format.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" * Formats the default responses for UwU_TaskMaster","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"public class Format {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    public static String getCompletionDisplay(boolean isCompleted) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"        String completionDisplay;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"            completionDisplay \u003d \"[X]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"            completionDisplay \u003d \"[ ]\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        return completionDisplay;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public static String formatResponse(String output) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        return \"\\nUwU_TaskMaster ＵｗＵ: \" + output;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     * Prints out the users tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * Calls the toString() method of each task type and formats the lists of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     * by printing to the console line by line","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"     * @param showMessage description of the parameter","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"     * @param taskManager instance of a taskManager","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    public static String displayTasks(boolean showMessage, TaskManager taskManager) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"            return Response.NO_TASK.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        if (showMessage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"            response.append(\"Heww are your tasks UwU!\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"            String lineItem \u003d (i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"            response.append(lineItem);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        return response.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"     * Prints out the tasks matching a user\u0027s keywords as part of \"find\" feature","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"     * Calls the toString() method of each task type and formats the lists of tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"     * by printing to the console line by line","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"     * @param taskManager instance of a taskManager","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"    public static String displayFilteredTasks(TaskManager taskManager) {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskManager.getTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"            return Response.NO_MATCHING_TASKS.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        String message \u003d \"I found \" + taskList.size() + \" matching tasks in your list UwU!\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        response.append(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"            String lineItem \u003d (i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"            response.append(lineItem);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        return response.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"nicleejy":86}},{"path":"src/main/java/ui/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":" * Various responses of UwU_TaskMaster","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"public enum Response {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"    INVALID_COMMAND {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"            return \"Ohh nyoo I cannyot ^w^ undewstand *cries* what you mean, c-can you twy again?\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    MISSING_DEADLINE_DETAILS {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"            return \"Oh nyoo did you fowget t-to name or add a date t-to this deadline?!? *blushes*\";","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    MISSING_EVENT_DETAILS {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"            return \"Oh nyoo did you fowget t-to name or add a /from or /to t-to this event?!? *blushes*\";","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    MISSING_TASK_NAME {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"            return \"You didnt teww me the name of youw t-task UwU\";","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    COMPLETED_TASK {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            return \"Wowww c-congwatuwations on compweting youw task!!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"    INCOMPLETE_TASK {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"            return \"omg nyoooooo why you have nyot compwete youw t-task :(\";","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"    NO_TASK {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"            return \"Wooks wike you do not have any tasks! *screams* OwO\";","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    EVENT_ADDED {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"            return \"Y-Y-Youw e-eevent has been successfuwwy added!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"    DEADLINE_ADDED {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"            return \"Y-Y-Youw d-deadline has been successfuwwy added!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"    TODO_ADDED {","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"            return \"Y-Y-Youw t-to-do has been successfuwwy added!\";","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"    TASK_NOT_FOUND {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"            return \"I can\u0027t find youw t-task oh nyooo!\";","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    TASK_DELETED {","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"            return \"Okay your t-task is deweted!\";","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"    BYE_BYE {","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"            return \"Bye byee!!! UwU\";","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"    DATE_FORMAT_INCORRECT {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"            return \"I can\u0027t wead your d-date!! Can you give i-it t-to me in the format of \u002731/12/2023 1730\u0027?\";","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"    NO_MATCHING_TASKS {","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"            return \"ahh I can\u0027t find any tasks matching that keyword! Perhaps twy again?\";","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"    },","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"    DEFAULT {","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"        public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"            return \"I don\u0027t understand! Type in a c-c-command and ill hewp *sweats* you out!\";","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":119}},{"path":"src/main/java/utils/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package utils;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":" * Utility class which contains functions for utility purposes, such as conversion of date and times","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"public class Utility {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    // For user","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"     * Converts a user input string of format \"d/M/yyyy HHmm\" to a LocalDateTime object.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     * @param dateTimeString a string representation of the date and time in format \"d/M/yyyy HHmm\"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     * @return a LocalDateTime object representing the date and time specified in the input string","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeInvalidCommandException {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"            .withResolverStyle(ResolverStyle.LENIENT);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"            dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"            throw new DukeInvalidCommandException(Response.DATE_FORMAT_INCORRECT.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        return dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     * Takes a LocalDateTime object as input and converts it to a string","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * in the format \"MMM dd yyyy h:mma\" (e.g. Jan 01 2023 12:00AM)","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"     * @param dateTime the LocalDateTime object to be converted","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"     * @return a string representation of the LocalDateTime object in the specified format for displaying to the user","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    public static String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"    // For read-write operations","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"     * Converts a string read from the task file of format \"d/M/yyyy HHmm\" to a LocalDateTime object.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"     * @param dateTimeString a string representation of the date and time in format \"d/M/yyyy HHmm\"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"     * @return a LocalDateTime object representing the date and time specified in the input string","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    public static LocalDateTime convertStringToDateTime(String dateTimeString) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"            .withResolverStyle(ResolverStyle.LENIENT);","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"        return dateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"     * Takes a LocalDateTime object as input and converts it to a string","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"     * in the format \"MMM dd yyyy h:mma\" (e.g. Jan 01 2023 12:00AM)","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"     * @param dateTime the LocalDateTime object to be converted","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"     * @return a string representation of the LocalDateTime object for writing to the task file","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"    public static String convertDateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"nicleejy":79}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import data.TaskManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import errors.DukeInvalidCommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import ui.Response;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    public void getSelectionTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"        // Valid input","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        Parser parser \u003d new Parser(new TaskManager());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        int expected \u003d 2;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"            int result \u003d parser.getSelection(\"select 3\");","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"            assertEquals(expected, result);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"            fail();","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        // invalid integer format","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        String expectedStr \u003d Response.INVALID_COMMAND.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"            int result \u003d parser.getSelection(\"select three\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"            fail();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"            assertEquals(expectedStr, e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        // invalid input (out of bounds)","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        expectedStr \u003d Response.INVALID_COMMAND.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            int result \u003d parser.getSelection(\"3\");","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"            fail();","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        } catch (DukeInvalidCommandException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"            assertEquals(expectedStr, e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"    public void testCreateEvent() {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        Parser parser \u003d new Parser(taskManager);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        // valid input","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        String input \u003d \"event meeting with Alice /from 23/1/2023 1800 /to 30/2/2024 1645\";","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        String expectedOutput \u003d Response.EVENT_ADDED","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"                + \"\\n1. EVENT: meeting with Alice (From Jan 23 2023 6:00PM to Mar 01 2024 4:45PM)[ ]\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        String actualOutput \u003d parser.createEvent(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"        // missing details","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        input \u003d \"event meeting with Alice /from 30/2/2024\";","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        expectedOutput \u003d Response.MISSING_EVENT_DETAILS.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        actualOutput \u003d parser.createEvent(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        // invalid date format","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"        input \u003d \"event meeting with John /from 23/1/202 1800 /to 30/02/2024 45\";","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"        expectedOutput \u003d Response.DATE_FORMAT_INCORRECT.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        actualOutput \u003d parser.createEvent(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"        // swapped /from and /to","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"        input \u003d \"event meeting with Peter /to 23/1/2023 1800 /from 30/2/2024 1645\";","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        expectedOutput \u003d Response.INVALID_COMMAND.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        actualOutput \u003d parser.createEvent(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nicleejy":76}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nicleejy":8}},{"path":"src/test/java/ui/FormatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"public class FormatTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"    public void getCompletionDisplayTest() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"        String completedDisplay \u003d Format.getCompletionDisplay(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"        String notCompletedDisplay \u003d Format.getCompletionDisplay(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"        // Test if the method returns \"[X]\" for completed tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"        assertEquals(\"[X]\", completedDisplay);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        // Test if the method returns \"[ ]\" for incomplete tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        assertEquals(\"[ ]\", notCompletedDisplay);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nicleejy":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"to-do borrow books from library","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"to-do","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"deadline do the dishes /by next morning","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"deadline do the dishes","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"event meet Alex for lunch /from 1pm /to 3pm","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"event meet Alex for lunch /from 1pm","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"event meet Alex for lunch","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"event","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"unmark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"unmark","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"nicleejy":21}},{"path":"userData/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"Deadline|false|eat food|23/12/2023 1200","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"Deadline|false|do the dishes|21/01/2023 2300","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nicleejy":2}}]
