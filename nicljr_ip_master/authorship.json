[{"path":"DukeData/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"T|0|borrow book","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"nicljr":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public Duke() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"            storage.loadTasks(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    public void run() {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"        ui.printGreet();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        boolean ongoing \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        while (ongoing) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"                String fullCommand \u003d ui.getCommand();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"                Command c \u003d Parser.stringToCommand(fullCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"                c.execute(ui, storage, taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"                ongoing \u003d c.isExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"                storage.saveTasks(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicljr":41,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"    };","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nicljr":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public static DateTimeFormatter strFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    public static DateTimeFormatter ldtFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     * Formats a String to a Integer value.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     * @param  index the index of the task the user wants to fetch.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"     * @return an Integer.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    public static Integer stringToInt(String index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        return Integer.parseInt(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     * Converts the user input from a String to a Command class","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"     * to carry out the necessary actions.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     * @param  command the users input.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * @return Command to carry out the necessary actions.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    public static Command stringToCommand(String command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"            return new MarkCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"            return new UnmarkCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"            return new ListCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"            return new AddCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"            return new ExitCommand(\"bye\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        } else  {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"            return new ErrorCommand(\"error\");","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * Formats the Date and Time given for a Deadline task by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"     * @param  deadline date and time given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"     * @return the Date and Time in an array.","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    public static String[] deadlineSplit(String deadline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"        return deadline.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"     * Formats the Date and Time given for a Eventtask by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"     * @param  event date and time given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"     * @return the Date and Time in an array.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"    public static String[] eventSplit(String event) {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"        return event.split(\" \", 6);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"     * Parses the Date and Time to LocalDateTime.","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"     * @param  duration Date and Time given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"     * @return localDateTime object.","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"    public static LocalDateTime stringToDateTime(String duration) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(duration, strFormatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"        return localDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"     * Parses the LocalDateTime to Date and Time to Strings by following","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"     * a certain format: MMM dd yyyy HHmm.","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"     * @param  localDateTime localDateTime recorded in the necessary task.","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"     * @return Strings of Date and Time for the various tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"    public static String dateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"        return localDateTime.format(ldtFormatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"     * Parses the LocalDateTime to Date and Time to Strings by following","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"     * a certain format: \"yyyy-MM-dd HHmm\". This is the format we will be","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"     * saving the tasks in our Storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"     * @param  localDateTime localDateTime recorded in the necessary task.","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"     * @return Strings of Date and Time for the various tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"    public static String dateTimeSaving(LocalDateTime localDateTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"        return localDateTime.format(strFormatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":102}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public static String path \u003d \"DukeData/tasks.txt\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public static String dirPath \u003d \"DukeData\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * Creates Storage for Duke to load tasks from previous run","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     * and save tasks in the current run.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public Storage() {}","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     * Saves the task into a separate file after each update from the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     * @param taskList the current tasklist.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"            for (Task tasks: taskList.tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"                input +\u003d (tasks.saveString() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"            fw.write(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Loads all the task from the previous run.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     * Tasks are all saved in a separate file.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     * @param taskList the current tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * @throws IOException catch for Input and Output inconsistencies.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    public void loadTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        File folder \u003d new File(dirPath);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"            String ref \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"            String[] text \u003d ref.split(\"\\\\|\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"            Task curr \u003d new Task(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"            switch (text[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"                case (\"T\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"                    curr \u003d new ToDos(text[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"                case (\"D\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"                    curr \u003d new Deadline(text[2], text[3]);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"                case (\"E\"):","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"                    curr \u003d new Events(text[2], text[3], text[4]);","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"                default:","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"                    System.out.println(\"Error while Loading up the file\");","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"            if (!curr.emptyTask()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"                if (text[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"                    curr.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"                taskList.add(curr);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"        sc.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":93}},{"path":"src/main/java/duke/TaskAssigner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"public class TaskAssigner {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public static ArrayList\u003cString\u003e task_t \u003d new ArrayList\u003c\u003e(List.of(\"todo\", \"event\", \"deadline\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"     * Creates a Task Assigner for Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * Responsible for creating either Deadline task, ToDo task or","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     * Event task depending on the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public TaskAssigner() {}","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     * Creates either Deadline task, ToDo task or","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"     * Event task depending on the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * @throws DukeException catch inconsistencies and error in the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    public Task assignTask(String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        String[] seq \u003d command.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"        String keyWord \u003d seq[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        if (!task_t.contains(keyWord)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        if (seq.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but the description of a task cannot\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"                    \" be empty \\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        if (keyWord.equals(\"todo\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"            return this.assignToDo(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        } else if (keyWord.equals(\"event\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"            return this.assignEvent(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"            return this.assignDeadline(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"     * Creates a ToDo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"     * @return a ToDo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    public Task assignToDo(String command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        return new ToDos(command.substring(5));","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     * Creates a Deadline task","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"     * @return a Deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"     * @throws DukeException if Date and Time formatting is incorrect","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"    public Task assignDeadline(String command) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"        String[] timestampsAsString \u003d command.split(\"/by \");","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        if (timestampsAsString.length !\u003d 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Deadline Format! deadline {desc} /by yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"            int dateIndex \u003d command.indexOf(\"/by \") + 4;","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"            String deadline \u003d command.substring(dateIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"            System.out.println(deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"            String updatedDeadline \u003d TimeChecker.updateTime(deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"            String d_desc \u003d command.substring(9, dateIndex - 4);","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"            return new Deadline(d_desc, updatedDeadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Deadline Format! deadline {desc} /by yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"     * Creates a Event task","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"     * @return a Event task.","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"     * @throws DukeException if Date and Time formatting is incorrect","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"    public Task assignEvent(String command) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"        String[] timestampsAsString \u003d command.split(\"/from | /to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"        if (timestampsAsString.length !\u003d 3) {","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Event Format! Follow:\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"                    \"event {desc} /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"            int startIndex \u003d command.indexOf(\"/from\") + 6;","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"            int endIndex \u003d command.indexOf(\"/to\") + 4;","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"            String startDate \u003d TimeChecker.updateTime(command.substring(startIndex, endIndex - 5));","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"            String endDate \u003d TimeChecker.updateTime(command.substring(endIndex));","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"            String e_desc \u003d command.substring(6, startIndex - 6);","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"            return new Events(e_desc, startDate, endDate);","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Event Format! Follow:\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"                    \"event {desc} /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":115}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    protected List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    protected int num_tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"     * Creates a new TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        num_tasks \u003d 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     * @return the number of tasks in your TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    public Integer getNumTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"        return num_tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     * Fetches the specific task and mark it as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"     * @param task_index the index of the specific task in the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"     * @return the marked task.","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    public Task markTask(int task_index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        if (task_index \u003e num_tasks || task_index \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"There is no such task available\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        Task ref \u003d this.tasks.get(task_index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        ref.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        return ref;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     * Fetches the specific task and unmark it.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * @param task_index the index of the specific task in the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * @return the unmarked task.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    public Task unmarkTask(int task_index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        if (task_index \u003e num_tasks || task_index \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"There is no such task available\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        Task ref \u003d this.tasks.get(task_index - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        ref.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        return ref;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     * @param task a new task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        num_tasks++;","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"     * Deletes a task to the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"     * @param index the index of the specific task in the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"     * @return deleted task.","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"        if (index \u003e num_tasks || index \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"There is no such task available\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"        Task removed \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"        num_tasks--;","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        return removed;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"     * Prints all the tasks in the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"    public void printTasks() throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"        if (num_tasks \u003d\u003d 0) {","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"You currently have no tasks mate!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"        for (int i \u003d 0; i \u003c num_tasks; i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"            Task ref \u003d tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"            System.out.println((i + 1) + \".\" + ref.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":100}},{"path":"src/main/java/duke/TimeChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class TimeChecker {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public static String DEFAULT_TIME \u003d \"2359\";","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"     * Updates the Date and Time given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     * @param timeline Date and Time given by Users.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * @return Updated Date and Time.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public static String updateTime(String timeline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        String[] split \u003d timeline.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        if (split.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"            return timeline;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"            return timeline + \" \" + DEFAULT_TIME;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nicljr":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"    public static String GREET_MSG \u003d \"Hello! I am Duke Nice To Meet You\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public static String BYE_MSG \u003d \"Bye! Hope to See You Again!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public static String ADD_MSG \u003d \"Got it fam! I\u0027ve added this task:\\n \";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * Creates a Ui class for Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     * Fetches the next commands given by users.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     * @return Command given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"     * Displays the various error messages to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"     * @param e_message DukeException\u0027s error messages.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"    public void showError(String e_message) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        System.out.println(e_message);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"     * Greets the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    public void printGreet() {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        System.out.println(GREET_MSG);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"    public void printBye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"        System.out.println(BYE_MSG);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     * Displays all the tasks in his TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"     * @param taskList his current TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"            taskList.printTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"            this.showError(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been completed by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"     * @param markedTask task that is to be marked by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"    public void printMarkTask(Task markedTask) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"        System.out.println(\"Nice! I have marked this task as Done:\\n\" + markedTask.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been added by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"     * Prints the total number of tasks in his TaskList after adding the recent task.","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"     * @param num_tasks number of total tasks after addition.","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"     * @param to_add the task that\u0027s to be added .","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"    public void printAddTask(Task to_add, Integer num_tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"        System.out.println(ADD_MSG + to_add.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"        System.out.println(\"You currently have \" + num_tasks + \" tasks in this list!\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been unmarked by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"     * @param unmarkedTask the task thats been unmarked by user.","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"    public void printUnmarkTask(Task unmarkedTask) {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"        System.out.println(\"Ok! I have marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"                unmarkedTask.toString() + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been deleted by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"     * @param removedTask the tasks that\u0027s removed.","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"     * @param num_tasks number of total tasks after deletion.","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"    public void printDeleteTask(Task removedTask, Integer num_tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"        System.out.println(\"Noted!I have deleted the task for you:\\n \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"                removedTask.toString() + \"\\nyou currently have \" + num_tasks +","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"                \" tasks in this list!\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":111}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.TaskAssigner;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    protected TaskAssigner taskAssigner;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public AddCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        this.taskAssigner \u003d new TaskAssigner();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        Task to_add \u003d taskAssigner.assignTask(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        taskList.add(to_add);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        ui.printAddTask(to_add, taskList.getNumTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    protected String textCmd;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    public Command(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"        this.textCmd \u003d textCmd;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {}","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        return isExit;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    public DeleteCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        Task removedTask \u003d taskList.deleteTask(","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"                Parser.stringToInt(textCmd.substring(7)));","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        ui.printDeleteTask(removedTask, taskList.getNumTasks());","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":21}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public ErrorCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        throw new DukeException(\"I have no idea whats that command mate!\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":17}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public ExitCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        ui.printBye();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":19}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public ListCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        ui.showList(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":16}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    public MarkCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        Task markedTask \u003d taskList.markTask(Parser.stringToInt(textCmd.substring(5)));","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        ui.printMarkTask(markedTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":20}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    public UnmarkCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        Task unmarkedTask \u003d taskList.unmarkTask(Parser.stringToInt(textCmd.substring(7)));","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        ui.printUnmarkTask(unmarkedTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":21}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    static protected String DEFAULT_TIME \u003d \"2359\";","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    protected LocalDateTime dateBy;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        this.dateBy \u003d Parser.stringToDateTime(by);","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        return super.getStatusIcon();","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeToString(dateBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        return super.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    public String parseBySaving() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(dateBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"     * Produces a String that adheres to our Storage formatting","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"     * holding all the relevant information.","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     * @return the String of the specific task for saving","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        return String.format(\"D|%s|%s|%s\", super.saveString(), super.description, this.parseBySaving());","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     * All the Information of the Deadline task","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the Deadline task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getBy());","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":55}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    static protected String DEFAULT_TIME \u003d \"2359\";","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public Events(String description, String startDate, String endDate) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        this.startDate \u003d Parser.stringToDateTime(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        this.endDate \u003d Parser.stringToDateTime(endDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeToString(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeToString(endDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        return super.getStatusIcon();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        return super.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    public String parseStartSaving() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    public String parseEndSaving() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     * Produces a String that adheres to our Storage formatting","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * holding all the relevant information.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     * @return the String of the specific task for saving","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        return String.format(\"E|%s|%s|%s|%s\", super.saveString(), super.description,","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"                this.parseStartSaving(), this.parseEndSaving());","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"     * All the Information of the Event task","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the Event task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.getStart(), this.getEnd());","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":67}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"     * The building block for the 3 other tasks: Deadline, ToDos and Event.","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"     * @param  description description of the user\u0027s task.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * Completion Status of the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     * @return a String that indicates whether the task is done.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * Description of the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     * @return a String that details the task","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        return this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     * Check if the task is null","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     * @return boolean to check if its a null task","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    public boolean emptyTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"        } else return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * Mark the task as Done.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    public void mark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     * Unmark the task, indicating it is not done.","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"     * Status of its completion status","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     * @return Status of its completion status but in binary format for saving in Storage","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"            return \"1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"            return \"0\";","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"     * All the Information of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":84}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        return super.getStatusIcon();","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * Produces a String that adheres to our Storage formatting","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     * holding all the relevant information.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * @return the String of the specific task for saving","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"        return String.format(\"T|%s|%s\", super.saveString(), super.description);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     * All the Information of the ToDos task","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the ToDos task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":35}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public void testFetchingDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2022-12-12 2330\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 12 2022 2330)\", deadline.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void testMarking(){","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2022-12-12 2330\");","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        deadline.mark();","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[D][X] return book (by: Dec 12 2022 2330)\", deadline.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"nicljr":21}},{"path":"src/test/java/seedu/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public void testFetchingDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        ToDos toDoTask \u003d new ToDos(\"return book\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[T][ ] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void testMarking(){","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        ToDos toDoTask \u003d new ToDos(\"return book\");","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        toDoTask.mark();","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[T][X] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"nicljr":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"todo borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"bye","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nicljr":3}}]
