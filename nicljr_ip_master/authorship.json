[{"path":"DukeData/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"T|1|borrow book|2023-02-12 2230","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"D|0|return book |2022-02-14 2359|2023-02-12 2235","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"E|0|complete work |2022-12-12 2359|2022-12-12 2359|2023-02-12 2236","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"nicljr":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"checkstyle {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nicljr":20,"-":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nicljr":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public Duke() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"            storage.loadTasks(taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        new Duke();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        return ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        return isExit;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"    public void exitDuke() {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"            Command c \u003d Parser.stringToCommand(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"            String toReturn \u003d c.execute(ui, storage, taskList);","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"            if (c.isExit()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"                this.exitDuke();","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"            return toReturn;","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nicljr":54,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"    };","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nicljr":7}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class Launcher {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nicljr":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nicljr":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(this.duke.getUi().printGreet(),","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"                dukeImage));","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        if (duke.getIsExit()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nicljr":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter strFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter ldtFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * Formats a String to a Integer value.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"     * @param  index the index of the task the user wants to fetch.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * @return an Integer.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    public static Integer stringToInt(String index) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        return Integer.parseInt(index);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"     * Converts the user input from a String to a Command class","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     * to carry out the necessary actions.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * @param  command the users input.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     * @return Command to carry out the necessary actions.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    public static Command stringToCommand(String command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"        if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"            return new MarkCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"            return new UnmarkCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"            return new ListCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"            return new AddCommand(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"            return new ExitCommand(\"bye\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"            return new FindCommand(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        } else if (command.equals(\"statistics\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"            return new StatisticsCommand(\"statistics\");","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"            return new ErrorCommand(\"error\");","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"     * Parses the Date and Time to LocalDateTime.","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     * @param  duration Date and Time given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"     * @return localDateTime object.","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    public static LocalDateTime stringToDateTime(String duration) {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.parse(duration, strFormatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"        return localDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     * Parses the LocalDateTime to Date and Time to Strings by following","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"     * a certain format: MMM dd yyyy HHmm.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"     * @param  localDateTime localDateTime recorded in the necessary task.","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"     * @return Strings of Date and Time for the various tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"    public static String dateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        return localDateTime.format(ldtFormatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"     * Parses the LocalDateTime to Date and Time to Strings by following","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"     * a certain format: \"yyyy-MM-dd HHmm\". This is the format we will be","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     * saving the tasks in our Storage.","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"     * @param  localDateTime localDateTime recorded in the necessary task.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"     * @return Strings of Date and Time for the various tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"    public static String dateTimeSaving(LocalDateTime localDateTime) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        return localDateTime.format(strFormatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":87}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.io.File;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    private static String path \u003d \"DukeData/tasks.txt\";","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    private static String dirPath \u003d \"DukeData\";","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * Creates Storage for Duke to load tasks from previous run","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     * and save tasks in the current run.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public Storage() {}","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     * Saves the task into a separate file after each update from the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     * @param taskList the current tasklist.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"            String input \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"            for (Task tasks: taskList.tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"                input +\u003d (tasks.saveString() + \"\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"            fw.write(input);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Loads all the task from the previous run.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     * Tasks are all saved in a separate file.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     * Asserts that the file must exist when you are loading tasks in.","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * @param taskList the current tasklist","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * @throws IOException catch for Input and Output inconsistencies.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    public void loadTasks(TaskList taskList) throws IOException, DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        File folder \u003d new File(dirPath);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"            folder.mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"        assert file.exists() : \"File to save tasks does not exist!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"            String ref \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"            String[] text \u003d ref.split(\"\\\\|\");","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"            Task curr \u003d new Task(\"\");","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"            switch (text[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"            case \"T\":","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"                curr \u003d new ToDos(text[2], text[3]);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"            case \"D\":","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"                curr \u003d new Deadline(text[2], text[3], text[4]);","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"            case \"E\":","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"                curr \u003d new Events(text[2], text[3], text[4], text[5]);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"                System.out.println(\"Error while Loading up the file\");","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"            if (!curr.emptyTask()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"                if (text[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"                    curr.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"                taskList.add(curr);","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"        sc.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":96}},{"path":"src/main/java/duke/TaskAssigner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"public class TaskAssigner {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    private static Integer TODO_DESCRIPTION_INDEX \u003d 5;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    private static Integer DEADLINE_DESCRIPTION_INDEX \u003d 9;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    private static Integer DEADLINE_MAX_SIZE \u003d 2;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    private static Integer LENGTH_OF_BY \u003d 4;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    private static Integer EVENT_DESCRIPTION_INDEX \u003d 6;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    private static Integer EVENT_MAX_SIZE \u003d 3;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    private static Integer LENGTH_OF_FROM \u003d 6;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    private static Integer LENGTH_OF_TO \u003d 4;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    private static Integer LENGTH_OF_EVENT_END_TIME \u003d 5;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    private static ArrayList\u003cString\u003e taskTypes \u003d new ArrayList\u003c\u003e(List.of(\"todo\", \"event\", \"deadline\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     * Creates a Task Assigner for Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * Responsible for creating either Deadline task, ToDo task or","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     * Event task depending on the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    public TaskAssigner() {}","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"     * Creates either Deadline task, ToDo task or","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"     * Event task depending on the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     * @throws DukeException catch inconsistencies and error in the user\u0027s input.","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    public Task assignTask(String command) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        String[] seq \u003d command.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        String keyWord \u003d seq[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"        if (!taskTypes.contains(keyWord)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        if (seq.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but the description of a task cannot\"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"                    + \" be empty \\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        if (keyWord.equals(\"todo\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"            return this.assignToDo(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        } else if (keyWord.equals(\"event\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"            return this.assignEvent(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"            return this.assignDeadline(command);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     * Creates a ToDo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"     * @return a ToDo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"    public Task assignToDo(String command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"        return new ToDos(command.substring(TODO_DESCRIPTION_INDEX));","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"     * Creates a Deadline task","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"     * @return a Deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     * @throws DukeException if Date and Time formatting is incorrect","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"    public Task assignDeadline(String command) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"        String[] timestampsAsString \u003d command.split(\"/by \");","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"        if (timestampsAsString.length !\u003d DEADLINE_MAX_SIZE) {","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Deadline Format! deadline {desc} /by yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"            int dateIndex \u003d command.indexOf(\"/by \") + LENGTH_OF_BY;","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"            String deadline \u003d command.substring(dateIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"            String updatedDeadline \u003d TimeChecker.updateTime(deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"            String deadlineDescription \u003d command.substring(DEADLINE_DESCRIPTION_INDEX, dateIndex - LENGTH_OF_BY);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"            return new Deadline(deadlineDescription, updatedDeadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Deadline Format! deadline {desc} /by yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"     * Creates a Event task","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"     * @param command the user\u0027s command.","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"     * @return a Event task.","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"     * @throws DukeException if Date and Time formatting is incorrect","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"    public Task assignEvent(String command) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"        String[] timestampsAsString \u003d command.split(\"/from | /to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"        if (timestampsAsString.length !\u003d EVENT_MAX_SIZE) {","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Event Format! Follow:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"                    + \"event {desc} /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"            int startIndex \u003d command.indexOf(\"/from\") + LENGTH_OF_FROM;","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"            int endIndex \u003d command.indexOf(\"/to\") + LENGTH_OF_TO;","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"            String startDate \u003d TimeChecker.updateTime(command.substring(startIndex, endIndex - LENGTH_OF_EVENT_END_TIME));","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"nicljr"},"content":"            String endDate \u003d TimeChecker.updateTime(command.substring(endIndex));","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"nicljr"},"content":"            String eventDescription \u003d command.substring(EVENT_DESCRIPTION_INDEX, startIndex - LENGTH_OF_FROM);","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"nicljr"},"content":"            return new Events(eventDescription, startDate, endDate);","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"nicljr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Improper Event Format! Follow:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"nicljr"},"content":"                    + \"event {desc} /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    protected List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    protected int numTasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     * Creates a new TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        numTasks \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"     * @return the number of tasks in your TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    public Integer getNumTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        return numTasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     * Fetches the specific task and mark it as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"     * @param taskIndex the index of the specific task in the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"     * @return the marked task.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"    public Task markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        if (taskIndex \u003e numTasks || taskIndex \u003c 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"There is no such task available\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        Task ref \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        ref.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        return ref;","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     * Fetches the specific task and unmark it.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * @param taskIndex the index of the specific task in the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     * @return the unmarked task.","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    public Task unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        if (taskIndex \u003e numTasks || taskIndex \u003c 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"There is no such task available\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        Task ref \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        ref.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"        return ref;","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     * @param task a new task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"        numTasks++;","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"     * Deletes a task to the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"     * @param index the index of the specific task in the list.","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"     * @return deleted task.","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"        if (index \u003e numTasks || index \u003c 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"There is no such task available\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"        Task removed \u003d tasks.remove(index - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        numTasks--;","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"        return removed;","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"     * Prints all the tasks in the TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"    public String printTasks() throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"You currently have no tasks mate!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"        for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"            Task ref \u003d tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"            String taskToPrint \u003d String.format(\"%d.%s\\n\", (i + 1) , ref.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"            sb.append(taskToPrint);","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"    public ArrayList\u003cInteger\u003e checkStatistics() {","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"        ArrayList\u003cInteger\u003e statistics \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"        int totalUrgentTasks \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"        int pastWeekCompletedTasks \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"        int addedWithinWeek \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(7);","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"nicljr"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"nicljr"},"content":"            if (task.checkUrgent()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"nicljr"},"content":"                totalUrgentTasks++;","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"nicljr"},"content":"            if (task.completedWithinWeek()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"nicljr"},"content":"                pastWeekCompletedTasks++;","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"nicljr"},"content":"            if (task.addedWithinWeek()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"nicljr"},"content":"                addedWithinWeek++;","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"nicljr"},"content":"        statistics.add(totalUrgentTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"nicljr"},"content":"        statistics.add(addedWithinWeek);","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"nicljr"},"content":"        statistics.add(pastWeekCompletedTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"nicljr"},"content":"        return statistics;","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"nicljr"},"content":"    public ArrayList\u003cTask\u003e getTasksByKeyWord(String keyWord) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"nicljr"},"content":"        ArrayList\u003cTask\u003e allFoundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"nicljr"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"nicljr"},"content":"            if (task.containsKeyWord(keyWord)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"nicljr"},"content":"                allFoundTasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"nicljr"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"nicljr"},"content":"        if (allFoundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(String.format(\"Unable to find any Tasks that contain this Keyword: %s\\n\", keyWord));","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"nicljr"},"content":"            return allFoundTasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":149}},{"path":"src/main/java/duke/TimeChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"public class TimeChecker {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"    private static String DEFAULT_TIME \u003d \"2359\";","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"     * Updates the Date and Time given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"     * @param timeline Date and Time given by Users.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     * @return Updated Date and Time.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public static String updateTime(String timeline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        String[] split \u003d timeline.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        if (split.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"            return timeline;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"            return timeline + \" \" + DEFAULT_TIME;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nicljr":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    @SuppressWarnings(\"checkstyle:VisibilityModifier\")","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    private static String GREET_MSG \u003d \"Hello! I am Duke Nice To Meet You\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    @SuppressWarnings(\"checkstyle:VisibilityModifier\")","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private static String BYE_MSG \u003d \"Bye! Hope to See You Again!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    @SuppressWarnings(\"checkstyle:VisibilityModifier\")","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    private static String ADD_MSG \u003d \"Got it fam! I\u0027ve added this task:\\n \";","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    private static Integer PRODUCTIVITY_CHECK \u003d 5;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    private static String PRODUCTIVITY_MSG \u003d \"You got to be more Productive!\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     * Creates a Ui class for Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * Fetches the next commands given by users.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     * @return Command given by the users.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    public String getCommand() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     * Displays the various error messages to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     * @param errorMessage DukeException\u0027s error messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        return errorMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     * Greets the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"     * @return","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    public String printGreet() {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        return GREET_MSG;","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     * Says goodbye to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"    public String printBye() {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        return BYE_MSG;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"     * Displays all the tasks in his TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     * @param taskList his current TaskList.","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"    public String showList(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"            return taskList.printTasks();","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"            return this.showError(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been completed by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     * @param markedTask task that is to be marked by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"    public String printMarkTask(Task markedTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"        return \"Nice! I have marked this task as Done:\\n\" + markedTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been added by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"     * Prints the total number of tasks in his TaskList after adding the recent task.","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"     * @param numTasks number of total tasks after addition.","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"     * @param addedTask the task that\u0027s to be added .","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"    public String printAddTask(Task addedTask, Integer numTasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"        return ADD_MSG + addedTask.toString() + \"\\nYou currently have \" + numTasks + \" tasks in this list!\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been unmarked by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"     * @param unmarkedTask the task thats been unmarked by user.","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"    public String printUnmarkTask(Task unmarkedTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"        return \"Ok! I have marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"               + unmarkedTask.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"     * Prints the task that\u0027s been deleted by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"     * @param removedTask the tasks that\u0027s removed.","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"     * @param numTasks number of total tasks after deletion.","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"    public String printDeleteTask(Task removedTask, Integer numTasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"        return \"Noted!I have deleted the task for you:\\n \"","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"                + removedTask.toString() + \"\\nyou currently have \" + numTasks","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"nicljr"},"content":"                 + \" tasks in this list!\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":118,"author":{"gitId":"nicljr"},"content":"    public String printTaskByKeyWord(TaskList taskList, String keyWord) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"nicljr"},"content":"        ArrayList\u003cTask\u003e allFoundTasks \u003d taskList.getTasksByKeyWord(keyWord);","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"nicljr"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":121,"author":{"gitId":"nicljr"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"nicljr"},"content":"        for (Task task : allFoundTasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"nicljr"},"content":"            sb.append(String.format(\"%d.%s\\n\", index, task.toString()));","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"nicljr"},"content":"            index++;","lastModifiedDate":"2023-02-04"},{"lineNumber":125,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"nicljr"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":128,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"nicljr"},"content":"    public String printStatistics(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"nicljr"},"content":"        ArrayList\u003cInteger\u003e statistics \u003d taskList.checkStatistics();","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"nicljr"},"content":"        int urgentTasks \u003d statistics.get(0);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"nicljr"},"content":"        int addedTasks \u003d statistics.get(1);","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"nicljr"},"content":"        int completedTasks \u003d statistics.get(2);","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"nicljr"},"content":"        StringBuilder message \u003d new StringBuilder(String.format(\"You have %d Urgent Tasks\\n\", urgentTasks));","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"nicljr"},"content":"        if (urgentTasks \u003e\u003d PRODUCTIVITY_CHECK) {","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"nicljr"},"content":"            message.append(PRODUCTIVITY_MSG);","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"nicljr"},"content":"        String secondMessage \u003d String.format(\"You have added %d Tasks within this week!\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"nicljr"},"content":"                        + \"You have completed %d tasks within this week! Good Job!\",","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"nicljr"},"content":"                addedTasks, completedTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"nicljr"},"content":"        message.append(secondMessage);","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"nicljr"},"content":"        return message.toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":146}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskAssigner;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    protected TaskAssigner taskAssigner;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public AddCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        this.taskAssigner \u003d new TaskAssigner();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        Task addedTask \u003d taskAssigner.assignTask(textCmd);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        taskList.add(addedTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        return ui.printAddTask(addedTask, taskList.getNumTasks());","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    protected String textCmd;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    public Command(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"        this.textCmd \u003d textCmd;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    public abstract String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        return isExit;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private static Integer START_INDEX_OF_DESCRIPTION \u003d 7;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public DeleteCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        Task removedTask \u003d taskList.deleteTask(","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"                Parser.stringToInt(textCmd.substring(START_INDEX_OF_DESCRIPTION)));","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        return ui.printDeleteTask(removedTask, taskList.getNumTasks());","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":23}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public ErrorCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        throw new DukeException(\"I have no idea whats that command mate!\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":17}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public ExitCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        return ui.printBye();","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    private static Integer START_INDEX_OF_DESCRIPTION \u003d 5;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public FindCommand(String textCmd) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"     * Produces a String for the GUI to read from.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"     * The String is the list of Tasks that contain that specific given keyword","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     * @param ui User Interface of Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     * @param storage storage of Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     * @param taskList task list containing all the tasks Duke is tracking.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"     * @return the String of all the tasks that contains the keyword.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        String[] commandSplit \u003d textCmd.split(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        String typeOfCommand \u003d commandSplit[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        if (!typeOfCommand.equals(\"find\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"The Formatting of your Find Command Task is incorrect!\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"                    + \"Please follow this format: find {keyword}\");","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        if (commandSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"The keyword for your Find Command cannot be blank!\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"                    + \"Please follow this format: find {keyword}\");","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        String keyWord \u003d textCmd.substring(START_INDEX_OF_DESCRIPTION);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        return ui.printTaskByKeyWord(taskList, keyWord);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"nicljr":44}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    public ListCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        return ui.showList(taskList);","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":16}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private static Integer START_INDEX_OF_DESCRIPTION \u003d 5;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public MarkCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        Task markedTask \u003d taskList.markTask(Parser.stringToInt(textCmd.substring(START_INDEX_OF_DESCRIPTION)));","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        return ui.printMarkTask(markedTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":23}},{"path":"src/main/java/duke/command/StatisticsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class StatisticsCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public StatisticsCommand(String textCmd) {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        return ui.printStatistics(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"nicljr":18}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private static Integer START_INDEX_OF_DESCRIPTION \u003d 7;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public UnmarkCommand(String textCmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        super(textCmd);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public String execute(Ui ui, Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        Task unmarkedTask \u003d taskList.unmarkTask(Parser.stringToInt(textCmd.substring(START_INDEX_OF_DESCRIPTION)));","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        return ui.printUnmarkTask(unmarkedTask);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nicljr":23}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    static private String DEFAULT_TIME \u003d \"2359\";","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    static private Integer DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    protected LocalDateTime dateBy;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    private LocalDateTime completionDate \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    private LocalDateTime addedDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        this.dateBy \u003d Parser.stringToDateTime(by);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    public Deadline(String description, String by, String addedDate) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"        this.dateBy \u003d Parser.stringToDateTime(by);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d Parser.stringToDateTime(addedDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        return super.getStatusIcon();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeToString(dateBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        return super.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    public String parseBySaving() {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(dateBy);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    public String parseAddSaving() {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(addedDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * Marks the task as Done and set the Completion Date","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    public void mark() {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        super.mark();","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        completionDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"     * Unmarks the task and reset the Completion Date to null","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"        super.unmark();","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"        completionDate \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"    public boolean checkUrgent() {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"            LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"            LocalDateTime softDeadLine \u003d currentDateTime.plusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"            return (dateBy.isBefore(softDeadLine) || dateBy.isAfter(currentDateTime));","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     * Returns if the current task is completed within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean of the current task, whether is completed within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"    public boolean completedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"            return this.completionDate.isAfter(pastWeek)","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"                    \u0026\u0026 this.completionDate.isBefore(currentDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"     * Returns if the current task is added within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean of the current task, whether is added within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"    public boolean addedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"        return this.addedDate.isAfter(pastWeek)","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 this.addedDate.isBefore(currentDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"     * Produces a String that adheres to our Storage formatting","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"     * holding all the relevant information.","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"     * @return the String of the specific task for saving","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"nicljr"},"content":"        return String.format(\"D|%s|%s|%s|%s\", super.saveString(), super.description,","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"nicljr"},"content":"                this.parseBySaving(), this.parseAddSaving());","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"nicljr"},"content":"     * All the Information of the Deadline task","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the Deadline task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"nicljr"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.getBy());","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":130}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    static private String DEFAULT_TIME \u003d \"2359\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    static private Integer DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    private LocalDateTime completionDate \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    private LocalDateTime addedDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public Events(String description, String startDate, String endDate) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        this.startDate \u003d Parser.stringToDateTime(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        this.endDate \u003d Parser.stringToDateTime(endDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"        if (this.endDate.isBefore(this.startDate)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Event is Invalid! Your Start Date is after your EndDate!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    public Events(String description, String startDate, String endDate, String addedDate) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        this.startDate \u003d Parser.stringToDateTime(startDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        this.endDate \u003d Parser.stringToDateTime(endDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d Parser.stringToDateTime(addedDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        if (this.endDate.isBefore(this.startDate)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"            throw new DukeException(\"Event is Invalid! Your Start Date is after your EndDate!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeToString(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeToString(endDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        return super.getStatusIcon();","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        return super.getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"    public String parseStartSaving() {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"    public String parseEndSaving() {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(startDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"    public String parseAddSaving() {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(addedDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"     * Marks the task as Done and set the Completion Date","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"    public void mark() {","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"        super.mark();","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"        completionDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"     * Unmarks the task and reset the Completion Date to null","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"        super.unmark();","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"        completionDate \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"    public boolean checkUrgent() {","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"            LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"            LocalDateTime softDeadLine \u003d currentDateTime.plusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"            return (endDate.isBefore(softDeadLine) || endDate.isAfter(currentDateTime));","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"     * Returns if the current task is completed within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean of the current task, whether is completed within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"    public boolean completedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"            return this.completionDate.isAfter(pastWeek)","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"                    \u0026\u0026 this.completionDate.isBefore(currentDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"nicljr"},"content":"     * Returns if the current task is added within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean of the current task, whether is added within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"nicljr"},"content":"    public boolean addedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"nicljr"},"content":"        return this.addedDate.isAfter(pastWeek)","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 this.addedDate.isBefore(currentDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"nicljr"},"content":"     * Produces a String that adheres to our Storage formatting","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"nicljr"},"content":"     * holding all the relevant information.","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"nicljr"},"content":"     * @return the String of the specific task for saving","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"nicljr"},"content":"        return String.format(\"E|%s|%s|%s|%s|%s\", super.saveString(), super.description,","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"nicljr"},"content":"                this.parseStartSaving(), this.parseEndSaving(), this.parseAddSaving());","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"nicljr"},"content":"     * Returns a String with all the Event Task Information.","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the Event task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"nicljr"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.getStart(), this.getEnd());","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":149}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"     * Constructs a Task class with the basic information.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"     * Basic Information includes Description and Completion Status.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     * @param  description description of the user\u0027s task.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     * Returns a String of the Completion Status of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"     * @return a String that indicates whether the task is done.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        return isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"     * Returns a boolean to see if the Task is urgent.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean that indicates whether the task is Urgent.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    public boolean checkUrgent() {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Returns Description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     * @return a String that details the task","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        return this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"     * Check if the task is null","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     * @return boolean to check if its a null task","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"    public boolean emptyTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"            return true;","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"     * Mark the task as Done.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"    public void mark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"     * Unmark the task, indicating it is not done.","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"    public boolean completedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"    public boolean addedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"    public boolean containsKeyWord(String keyWord) {","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"        return this.getDescription().contains(keyWord);","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"     * Returns the Completion Status of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"     * @return Status of its completion status but in binary format for saving in Storage","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"            return \"1\";","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"            return \"0\";","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"nicljr"},"content":"     * All the Information of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"nicljr"},"content":"        return String.format(\"%s %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":114}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    private static Integer DAYS_IN_A_WEEK \u003d 7;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    private LocalDateTime completionDate \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    private LocalDateTime addedDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public ToDos(String description, String addedDate) {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        super(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        this.addedDate \u003d Parser.stringToDateTime(addedDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"        return super.getStatusIcon();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    public String parseAddSaving() {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        return Parser.dateTimeSaving(addedDate);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"     * Produces a String that adheres to our Storage formatting","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"     * holding all the relevant information.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"     * @return the String of the specific task for saving","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    public String saveString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        return String.format(\"T|%s|%s|%s\", super.saveString(), super.description,","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"                this.parseAddSaving());","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Marks the task as Done and set the Completion Date","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"    public void mark() {","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        super.mark();","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        completionDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"     * Unmarks the task and reset the Completion Date to null","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        super.unmark();","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        completionDate \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"     * Returns if the current task is completed within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean of the current task, whether is completed within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    public boolean completedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"            return this.completionDate.isAfter(pastWeek)","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"                    \u0026\u0026 this.completionDate.isBefore(currentDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"     * Returns if the current task is added within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"     * @return a Boolean of the current task, whether is added within the past week.","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"    public boolean addedWithinWeek() {","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"        LocalDateTime pastWeek \u003d currentDateTime.minusDays(DAYS_IN_A_WEEK);","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"        return this.addedDate.isAfter(pastWeek)","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 this.addedDate.isBefore(currentDateTime);","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"     * All the Information of the ToDos task","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"nicljr"},"content":"     * @return a String of all the information of the ToDos task to be printed by the Ui","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"nicljr":102}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nicljr":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"nicljr":19}},{"path":"src/test/java/seedu/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public void testFetchingDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2022-12-12 2330\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 12 2022 2330)\", deadline.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void testMarking(){","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2022-12-12 2330\");","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        deadline.mark();","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[D][X] return book (by: Dec 12 2022 2330)\", deadline.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"nicljr":21}},{"path":"src/test/java/seedu/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    public void testFetchingDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"        ToDos toDoTask \u003d new ToDos(\"return book\");","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[T][ ] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"    public void testMarking(){","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"        ToDos toDoTask \u003d new ToDos(\"return book\");","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"        toDoTask.mark();","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        assertEquals(\"[T][X] return book\", toDoTask.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"nicljr":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"todo borrow book","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"bye","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"nicljr":3}}]
