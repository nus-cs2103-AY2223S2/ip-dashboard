[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"// deadline is a type of task that takes in an additional string","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"// as its deadline","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"    private String deadlineTiming;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"    public Deadline(String description, String deadlineTiming) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"        this.deadlineTiming \u003d deadlineTiming;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"        return \"[D]\"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"                + super.toString() + \"(by: \" + deadlineTiming + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"niekis":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"        Fideline fiBot \u003d new Fideline();","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"        fiBot.start();","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"niekis":2,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"    private String startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"    private String endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + startTime","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"                + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"niekis":17}},{"path":"src/main/java/Fideline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"public class Fideline {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"    public TaskManager taskManager;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"    Fideline() {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"        // init TaskManager to manage all tasks from user","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"    public static void botSays(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"        String line \u003d \"_________________________________________________________________\";","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"        System.out.println(line + \"\\n\" + message + \"\\n\" + line);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"    // prints greeting message","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"    public void greeting() {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"        botSays(\"hello! I\u0027m fideline,\\nwhat do you want today?\");","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"    // prints farewell message","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"    public void farewell() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"        botSays(\"get out of my sight!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"    // prints add task message, is called when task is just added. Announces","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"    // the addition of the latest task","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"    public void addTaskMessage() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"        int taskCount \u003d this.taskManager.getTaskCount();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"        botSays(\"ok! i\u0027ve added to your list:\\n  \"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"                + this.taskManager.getTaskString(taskCount)","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"                + \"\\nwow! there \" + (taskCount \u003d\u003d 1 ? \"is \" : \"are \") + taskCount","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"                + (taskCount \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list now! :0\");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"    // starts running Fideline bot. Terminate with \"bye\"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"    public void start() {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"        // init Scanner to view user response","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        // print greeting message","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"        greeting();","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"        // running boolean checks if bot is still running","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"        while(running) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"            InputParser parsedInput;","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"                parsedInput \u003d new InputParser(userInput); // parses input","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"            } catch (InputError ie) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"                parsedInput \u003d new InputParser(ie);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"            switch (parsedInput.getCommandType()) {// execute command based on user input","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"                case BYE: // bye command stops the bot","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"                    running \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"                    farewell();","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"                case LIST: // list command shows current list","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"                    String listMessage \u003d this.taskManager.listTasks();","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"                    if (listMessage.equals(\"\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"                        botSays(\"eh are you stupid?\\nyour list is currently empty!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"                    } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"                        botSays(\"here! your list:\" + listMessage);","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"                case TODO: // adds todo task to list","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"                    this.taskManager.addTodo(parsedInput.getArguments()[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"                    addTaskMessage(); // notifies user that list has been updated","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"                case DEADLINE: // adds deadline task to list","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"                    this.taskManager.addDeadline(parsedInput.getArguments()[0],","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"                            parsedInput.getArguments()[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"                    addTaskMessage(); // notifies user that list has been updated","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"                case EVENT: // adds event task to list","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"                    this.taskManager.addEvent(parsedInput.getArguments()[0],","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"                            parsedInput.getArguments()[1], parsedInput.getArguments()[2]);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"                    addTaskMessage(); // notifies user that list has been updated","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"                case MARK: // marks given task as done","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"                    int taskNumMark \u003d Integer.valueOf(parsedInput.getArguments()[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"                    if (taskManager.checkTask(taskNumMark)) { // check if index given is valid","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"                        this.taskManager.markTask(taskNumMark); // marks the valid task","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"                        botSays(\"nice work! i\u0027ve taken note!:\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"                                + this.taskManager.getTaskString(taskNumMark)); // success message (marked)","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"                    } else { // unable to mark, task at given index does not exist","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"                        botSays(\"uh hello?? can you check properly?\\n \"","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"                                + \"task does not exist bro\"); // failure to mark message","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"                case UNMARK: // registers given task as not done","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"                    int taskNumUnmark \u003d Integer.valueOf(parsedInput.getArguments()[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"                    if (taskManager.checkTask(taskNumUnmark)) { // check if index given is valid","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"                        this.taskManager.unmarkTask(taskNumUnmark); // unmarks the valid task","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"                        botSays(\"uhh okay... i\u0027ve unmarked your task:\\n\"","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"                                + this.taskManager.getTaskString(taskNumUnmark)); // success message (unmarked)","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"                    } else { // unable to unmark, task at given index does not exist","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"                        botSays(\"uh hello?? can you check properly?\\n \"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"                                + \"task does not exist bro\"); // failure to unmark message","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"                case DELETE: // removes a given task from the list","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"                    int taskNumDelete \u003d Integer.valueOf(parsedInput.getArguments()[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"                    if (this.taskManager.checkTask(taskNumDelete)) { // checks if index given is valid","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"                        String deletedTaskString \u003d this.taskManager.getTaskString(taskNumDelete);","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"                        this.taskManager.deleteTask(taskNumDelete); // deletes the valid task","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"                        int taskCount \u003d this.taskManager.getTaskCount();","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"                        botSays(\"okay i\u0027ve deleted this task:\\n  \"","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"                                + deletedTaskString","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"niekis"},"content":"                                + \"\\nnow there \" + (taskCount \u003d\u003d 1 ? \"is \" : \"are \") + taskCount","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"niekis"},"content":"                                + (taskCount \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list now!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"niekis"},"content":"                    } else { // unable to delete, task at given index does not exist","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"niekis"},"content":"                        botSays(\"uh hello?? can you check properly?\\n \"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"niekis"},"content":"                                + \"task does not exist bro\"); // failure to delete message","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"niekis"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"niekis"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"niekis"},"content":"                case ERROR: // alerts user of error in their input","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"niekis"},"content":"                    botSays(\"hold up! \" + parsedInput.getArguments()[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"niekis":121}},{"path":"src/main/java/InputError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"public class InputError extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"    public InputError (String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"niekis":5}},{"path":"src/main/java/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"public class InputParser {","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"    private final static String[] possibleCommandsArr \u003d {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"            \"bye\", \"list\", \"todo\", \"deadline\", \"event\", \"mark\", \"unmark\"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"    };","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"    public enum CommandType {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"        BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, ERROR;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"    private CommandType command;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"    private String[] inputArguments;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"    InputParser(InputError ie) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"        this.command \u003d CommandType.ERROR;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"        String[] tempArr \u003d {ie.getMessage()};","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"        this.inputArguments \u003d tempArr;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"    InputParser(String userInput) throws InputError {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"        ArrayList\u003cString\u003e possibleCommandsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"        possibleCommandsList.addAll(Arrays.asList(this.possibleCommandsArr));","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"        if (!userInput.contains(\" \")) { // handling simple commands (one word)","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"                this.command \u003d CommandType.BYE;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"                this.command \u003d CommandType.LIST;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"            } else if (possibleCommandsList.contains(userInput)) { // no args for valid command","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"this command cannot have an empty description!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"            } else { // unknown command","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"i don\u0027t understand this command!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"            // below handles commands with arguments","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"            this.command \u003d CommandType.TODO;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"            this.inputArguments \u003d new String[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"            this.inputArguments[0] \u003d userInput.substring(5, userInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"        } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"            this.command \u003d CommandType.DEADLINE;","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"            this.inputArguments \u003d new String[2];","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"            String argString \u003d userInput.substring(9,userInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"            if (argString.contains(\" /by \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"                this.inputArguments \u003d argString.split(\" /by \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"command should follow the format:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"                        \"deadline *description* /by *timing*\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"        } else if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"            this.command \u003d CommandType.EVENT;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"            this.inputArguments \u003d new String[3];","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"            String argString \u003d userInput.substring(6, userInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"            if (argString.contains(\" /from \") \u0026\u0026 argString.contains(\" /to \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"                String[] tempArr \u003d argString.split(\" /from \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"                String[] tempArr2 \u003d tempArr[1].split(\" /to \");","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"                this.inputArguments[0] \u003d tempArr[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"                this.inputArguments[1] \u003d tempArr2[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"                this.inputArguments[2] \u003d tempArr2[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"command should follow the format:\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"                        \"event *description* /from *start time* /to *end time*\");","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"        } else if (userInput.startsWith(\"mark \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"            this.command \u003d CommandType.MARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"                Integer.valueOf(userInput.substring(5, userInput.length()));","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"                this.inputArguments \u003d new String[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"                this.inputArguments[0] \u003d userInput.substring(5, userInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"your argument has to be an integer! (e.g: mark 2)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        } else if (userInput.startsWith(\"unmark \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"            this.command \u003d CommandType.UNMARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"                Integer.valueOf(userInput.substring(7, userInput.length()));","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"                this.inputArguments \u003d new String[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"                this.inputArguments[0] \u003d userInput.substring(7, userInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"your argument has to be an integer! (e.g: unmark 2)\");","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        } else if (userInput.startsWith(\"delete \")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"            this.command \u003d CommandType.DELETE;","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"                Integer.valueOf(userInput.substring(7, userInput.length()));","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"                this.inputArguments \u003d new String[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"                this.inputArguments[0] \u003d userInput.substring(7, userInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"                throw new InputError(\"your argument has to be an integer! (e.g: delete 2\");","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"    public String[] getArguments() {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"        return this.inputArguments;","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"        return this.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"niekis":105}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"    private String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"    // returns String representation of task","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"    // 2 commands to change isDone status of task","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"    public void mark() { this.isDone \u003d true; }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"    public void unmark() {this.isDone \u003d false; }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"niekis":20}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"    TaskManager() {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"        // init list to store tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"    public void addTodo(String taskName) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"        Todo newTodo \u003d new Todo(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"        this.taskList.add(newTodo);","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"    public void addDeadline(String taskName, String deadlineTiming) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"        Deadline newDeadline \u003d new Deadline(taskName, deadlineTiming);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"        this.taskList.add(newDeadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"    public void addEvent(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"        Event newEvent \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"        this.taskList.add(newEvent);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"    // checks if task exists at given index","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"    public boolean checkTask(int taskNumber) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"        return taskNumber \u003c\u003d taskList.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"    // get the name of the task at a given index","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"    public String getTaskString(int taskNumber) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"        return this.taskList.get(taskNumber - 1).toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"    // changes Task at given index to marked.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"    public void markTask(int taskNumber) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"        taskList.get(taskNumber - 1).mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"    // changes Task at given index to unmarked.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"    public void unmarkTask(int taskNumber) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"        taskList.get(taskNumber - 1).unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"    // delete Task at given index.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"        taskList.remove(taskNumber - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"    // formats and returns the list of tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"    public String listTasks() {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"        String listMessage \u003d \"\";    // returns empty string if no tasks","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"        if (taskList.size() !\u003d 0) { // formats and adds each task to list","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"                listMessage +\u003d \"\\n\" + i + \". \"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"                        + getTaskString(i);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"    return listMessage;","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"niekis":65}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"// Todo is a simple type of task with no additional details","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"niekis":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"todo borrow book","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"list","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"mark 2","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"mark 3","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"unmark 2","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"list","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"bye","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"niekis":9}}]
