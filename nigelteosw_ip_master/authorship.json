[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"This is a change made for Merging-PRs","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nigelteosw":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"dependencies {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    archiveBaseName \u003d \"CorkyNotes\"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"checkstyle {","lastModifiedDate":"2023-04-15"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nigelteosw":30,"-":32}},{"path":"data/memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"T|false|see the sun","lastModifiedDate":"2023-04-16"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"A|true|watch football|Nov 24 2023, 1400","lastModifiedDate":"2023-04-16"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"D|false|homework due|Jun 26 2023, 2359","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"E|false|birthday|Dec 11 2023, 0000|Dec 11 2023, 2359","lastModifiedDate":"2023-04-16"}],"authorContributionMap":{"nigelteosw":4}},{"path":"demo/src/main/java/com/example/demo/HelloApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package com.example.demo;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"public class HelloApplication extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(HelloApplication.class.getResource(\"hello-view.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"        Scene scene \u003d new Scene(fxmlLoader.load(), 320, 240);","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"        stage.setTitle(\"Hello!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"        stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        launch();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":23}},{"path":"demo/src/main/java/com/example/demo/HelloController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package com.example.demo;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public class HelloController {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"    private Label welcomeText;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    protected void onHelloButtonClick() {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"        welcomeText.setText(\"Welcome to JavaFX Application!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":14}},{"path":"demo/src/main/java/module-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"module com.example.demo {","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"    requires javafx.controls;","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"    requires javafx.fxml;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"    opens com.example.demo to javafx.fxml;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    exports com.example.demo;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":8}},{"path":"demo/src/main/resources/com/example/demo/hello-view.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"\u003cVBox alignment\u003d\"CENTER\" spacing\u003d\"20.0\" xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"      fx:controller\u003d\"com.example.demo.HelloController\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    \u003cLabel fx:id\u003d\"welcomeText\"/\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    \u003cButton text\u003d\"Hello!\" onAction\u003d\"#onHelloButtonClick\"/\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":16}},{"path":"demo/target/classes/com/example/demo/hello-view.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"\u003cVBox alignment\u003d\"CENTER\" spacing\u003d\"20.0\" xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"      fx:controller\u003d\"com.example.demo.HelloController\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\"/\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    \u003cLabel fx:id\u003d\"welcomeText\"/\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    \u003cButton text\u003d\"Hello!\" onAction\u003d\"#onHelloButtonClick\"/\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"Welcome to CorkyNotes! CorkyNotes is a desktop app for managing your tasks, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CorkyNotes can get your task management done faster than traditional GUI apps. Enjoy!","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"![Screenshot](Ui.png)","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"## Features","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"### Create different tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"CorkyNotes supports 4 different types of tasks:","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"- Todos","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"- Deadlines","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"- Events","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"- DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"1. Todos","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"Todos are tasks with a description and completion status.","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"1. Deadlines","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"Deadlines are tasks with a description, due date, and completion status.","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"1. Events","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"Events are tasks with a description, from date, to date, and completion status.","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"1. DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"DoAfter are tasks with a description, after date, and completion status.","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"### View your tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"Forgot what you added? Corky tracks them for you. You can even mark and delete task as and when they are completed.","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"### Add todo: `todo`","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"Adds a todo to the list of tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"Command format:","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"`todo [description]`","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"`todo see the sunrise`","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"[T][ ] see the sunrise","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"### Add deadline: `deadline`","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"Adds a deadline to the list of tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"Command format:","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"`deadline [description] /by [due_date]`","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"💡 Ensure `due_date` is `[dd-MM-yyyy] [HHmm]` ","lastModifiedDate":"2023-04-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"`deadline do the dishes /by 24-11-2023 1200`","lastModifiedDate":"2023-04-16"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"[D][ ] do the dishes (by: Nov 24 2023, 1200)","lastModifiedDate":"2023-04-16"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"### Add event: `event`","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"Adds an event to the list of tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"Command format:","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"nigelteosw"},"content":"`event [description] /from [start_date] /to [end date]`","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"💡 Ensure `start_date` and `end_date` are `[dd-MM-yyyy] [HHmm]` ","lastModifiedDate":"2023-04-16"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"nigelteosw"},"content":"`event watch football /from 24-11-2023 1200 /to 24-11-2023 1400`","lastModifiedDate":"2023-04-16"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"nigelteosw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"nigelteosw"},"content":"[E][ ] watch football (from: Nov 24 2023, 1400 to Nov 24 2023, 1400)","lastModifiedDate":"2023-04-16"},{"lineNumber":97,"author":{"gitId":"nigelteosw"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"### Add DoAfter Task: `doafter`","lastModifiedDate":"2023-04-16"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"Adds an doafter task to the list of tasks.","lastModifiedDate":"2023-04-16"},{"lineNumber":102,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"nigelteosw"},"content":"Command format:","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"`doafter [description] /after [after_date]`","lastModifiedDate":"2023-04-16"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"💡 Ensure `after_date` is `[dd-MM-yyyy] [HHmm]` ","lastModifiedDate":"2023-04-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"nigelteosw"},"content":"`doafter watch football /after 24-11-2023 1400`","lastModifiedDate":"2023-04-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"nigelteosw"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"nigelteosw"},"content":"[A][ ] watch football (after: Nov 24 2023, 1400)","lastModifiedDate":"2023-04-16"},{"lineNumber":118,"author":{"gitId":"nigelteosw"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"nigelteosw"},"content":"### Mark Task as Done: `mark`","lastModifiedDate":"2023-04-16"},{"lineNumber":122,"author":{"gitId":"nigelteosw"},"content":"Marks the task as completed.","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"nigelteosw"},"content":"Format: `mark [index]`","lastModifiedDate":"2023-04-16"},{"lineNumber":125,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"nigelteosw"},"content":"💡 Ensure index is within `{1, 2, ... list_size}`","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"nigelteosw"},"content":"`mark 2` marks the second task in the list as done.","lastModifiedDate":"2023-04-16"},{"lineNumber":131,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"nigelteosw"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"nigelteosw"},"content":"[D][X] do the dishes (by: Nov 24 2023, 1200)","lastModifiedDate":"2023-04-16"},{"lineNumber":137,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-04-16"},{"lineNumber":138,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":139,"author":{"gitId":"nigelteosw"},"content":"### Undo Mark Task as Undone: `unmark`","lastModifiedDate":"2023-04-16"},{"lineNumber":140,"author":{"gitId":"nigelteosw"},"content":"Unmarks the task as not completed.","lastModifiedDate":"2023-04-16"},{"lineNumber":141,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":142,"author":{"gitId":"nigelteosw"},"content":"Format: `unmark [index]`","lastModifiedDate":"2023-04-16"},{"lineNumber":143,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":144,"author":{"gitId":"nigelteosw"},"content":"💡 Ensure index is within `{1, 2, ... list_size}`","lastModifiedDate":"2023-04-16"},{"lineNumber":145,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":146,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-04-16"},{"lineNumber":147,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":148,"author":{"gitId":"nigelteosw"},"content":"`unmark 2` unmarks the second task in the list as not done.","lastModifiedDate":"2023-04-16"},{"lineNumber":149,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":150,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-04-16"},{"lineNumber":151,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":152,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-04-16"},{"lineNumber":153,"author":{"gitId":"nigelteosw"},"content":"Noted. I\u0027ve marked this task as undone:","lastModifiedDate":"2023-04-16"},{"lineNumber":154,"author":{"gitId":"nigelteosw"},"content":"[D][ ] do the dishes (by: Nov 24 2023, 1200)","lastModifiedDate":"2023-04-16"},{"lineNumber":155,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"nigelteosw"},"content":"### Find Tasks: `find`","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"nigelteosw"},"content":"Lists all tasks that match the keyword.","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"nigelteosw"},"content":"Command format:","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"nigelteosw"},"content":"`find [keyword]`","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"nigelteosw"},"content":"`find dishes` lists all tasks that contain dishes.","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"nigelteosw"},"content":"### Help Command: `help`","lastModifiedDate":"2023-04-16"},{"lineNumber":170,"author":{"gitId":"nigelteosw"},"content":"Lists all commands and their usage.","lastModifiedDate":"2023-04-16"},{"lineNumber":171,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":172,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-04-16"},{"lineNumber":173,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":174,"author":{"gitId":"nigelteosw"},"content":"`help`","lastModifiedDate":"2023-04-16"},{"lineNumber":175,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":176,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-04-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-04-16"},{"lineNumber":179,"author":{"gitId":"nigelteosw"},"content":"Here are the commands you can use:","lastModifiedDate":"2023-04-16"},{"lineNumber":180,"author":{"gitId":"nigelteosw"},"content":"1. todo \u003ctask name\u003e - adds a todo task","lastModifiedDate":"2023-04-16"},{"lineNumber":181,"author":{"gitId":"nigelteosw"},"content":"2. deadline \u003ctask name\u003e /by \u003cdeadline\u003e - adds a deadline task","lastModifiedDate":"2023-04-16"},{"lineNumber":182,"author":{"gitId":"nigelteosw"},"content":"3. event \u003ctask name\u003e /at \u003cstart time\u003e to \u003cend time\u003e - adds an event task  ","lastModifiedDate":"2023-04-16"},{"lineNumber":183,"author":{"gitId":"nigelteosw"},"content":"4. doafter \u003ctask name\u003e /after \u003ctask number\u003e - adds a doafter task","lastModifiedDate":"2023-04-16"},{"lineNumber":184,"author":{"gitId":"nigelteosw"},"content":"5. list - lists all tasks","lastModifiedDate":"2023-04-16"},{"lineNumber":185,"author":{"gitId":"nigelteosw"},"content":"6. done \u003ctask number\u003e - marks a task as done","lastModifiedDate":"2023-04-16"},{"lineNumber":186,"author":{"gitId":"nigelteosw"},"content":"7. delete \u003ctask number\u003e - deletes a task","lastModifiedDate":"2023-04-16"},{"lineNumber":187,"author":{"gitId":"nigelteosw"},"content":"8. help - shows this help message","lastModifiedDate":"2023-04-16"},{"lineNumber":188,"author":{"gitId":"nigelteosw"},"content":"9. find \u003ckeyword\u003e - finds tasks with the keyword","lastModifiedDate":"2023-04-16"},{"lineNumber":189,"author":{"gitId":"nigelteosw"},"content":"10. bye - exits the program","lastModifiedDate":"2023-04-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-04-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"nigelteosw"},"content":"### List tasks: `list`","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"nigelteosw"},"content":"Lists all tasks that have been added.","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"nigelteosw"},"content":"Sample task list:","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"nigelteosw"},"content":"1. [T][ ] see the sunrise","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"nigelteosw"},"content":"2. [D][X] do the dishes (by: Nov 24 2023, 12:00 PM)","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"nigelteosw"},"content":"3. [E][ ] watch football (from: Nov 24 2023, 12:00 PM to Nov 24 2023, 2:00 PM)","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"nigelteosw"},"content":"4. [P][ ] watch football (from: Nov 24 2023, 12:00 PM to Nov 24 2023, 2:00 PM)","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"nigelteosw"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"nigelteosw"},"content":"### Exit the program: `bye`","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"nigelteosw"},"content":"Exits the program and closes the GUI window.","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"nigelteosw"},"content":"Example of usage:","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"nigelteosw"},"content":"`bye`","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"nigelteosw"},"content":"Expected outcome:","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"nigelteosw"},"content":"GUI closes","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"nigelteosw":185,"-":28}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public class Launcher {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    private Duke dukeApp \u003d new Duke();","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dukeApp);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"import duke.DialogBox;","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    private Duke dukeApp;","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/corky.jpg\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        dukeApp \u003d d;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        String initializeMessage \u003d dukeApp.initialize();","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"                DialogBox.getDukeDialog(new Label(initializeMessage), new ImageView(dukeImage))","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        );","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"        String response \u003d dukeApp.getResponse(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"                DialogBox.getDukeDialog(new Label(response), new ImageView(dukeImage))","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":56}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    @FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for DialogBox.","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     * @param dialog The dialog to be displayed.","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * @param displayPicture The image to be displayed.","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    public DialogBox(Label dialog, ImageView displayPicture) {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"        this.dialog \u003d dialog;","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"        this.displayPicture \u003d displayPicture;","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        final Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        dialog.setPadding(new Insets(5, 10, 0, 10));","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        this.setPadding(new Insets(10));","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"        this.getChildren().addAll(dialog, displayPicture);","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"     * Returns a dialog box with the user\u0027s input.","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"     * @param text The user\u0027s input.","lastModifiedDate":"2023-04-16"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"     * @param img The user\u0027s image.","lastModifiedDate":"2023-04-16"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"     * @return A dialog box with the user\u0027s input.","lastModifiedDate":"2023-04-16"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"    public static DialogBox getUserDialog(Label text, ImageView img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"     * Returns a dialog box with Duke\u0027s response.","lastModifiedDate":"2023-04-16"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"     * @param text Duke\u0027s response.","lastModifiedDate":"2023-04-16"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2023-04-16"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"     * @return A dialog box with Duke\u0027s response.","lastModifiedDate":"2023-04-16"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"    public static DialogBox getDukeDialog(Label text, ImageView img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":83}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.ByeCommand;","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.Command;","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import logic.parser.Parser;","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import storage.Storage;","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Duke Application","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"public class Duke {","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    private static final String FILEPATH \u003d \"data\";","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    private static final String FILENAME \u003d \"memory.txt\";","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    public Duke() {","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * Initializes the Duke Application","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     * @return","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    public String initialize() {","lastModifiedDate":"2023-04-16"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-04-16"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"        this.storage \u003d new Storage(FILEPATH, FILENAME);","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"            response +\u003d this.storage.initializeStorage();","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"            this.storage.load(this.taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"            return Response.getWelcome();","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        response +\u003d Response.getWelcome();","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        return response;","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the input","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     * @param input","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     * @return","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"            Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2023-04-16"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"            String response \u003d cmd.execute(taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"            this.storage.save(taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"            if (cmd instanceof ByeCommand) {","lastModifiedDate":"2023-04-16"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"                System.exit(0);","lastModifiedDate":"2023-04-16"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"            return response;","lastModifiedDate":"2023-04-15"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"            return Response.returnChatError(e);","lastModifiedDate":"2023-04-16"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nigelteosw":68,"-":1}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * Represents the UI","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"@Deprecated","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    public Ui() {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     * Prints Logo of Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    public String showLogo() {","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"        System.out.println(\"\\nHello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"        return (logo + \"\\nHello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"        System.out.println(\"-----------------------------------------\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    public String showBye() {","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nigelteosw":33}},{"path":"src/main/java/exceptions/DateTimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package exceptions;","lastModifiedDate":"2023-04-16"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * Exception thrown when the user inputs an invalid date or time.","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public class DateTimeParseException extends DukeException {","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    public DateTimeParseException(String errorMessage) {","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"        super(errorMessage);","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-16"}],"authorContributionMap":{"nigelteosw":10}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package exceptions;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * DukeException exception which is an extension of Exception","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"        super(\"Sorry, Duke has run into an Error: \" + errorMessage);","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"nigelteosw":10}},{"path":"src/main/java/exceptions/IllegalIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package exceptions;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * Exception thrown when the user inputs an invalid date or time.","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public class IllegalIndexException extends DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    public IllegalIndexException() {","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"        super(\"Index is out of bounds!\");","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":10}},{"path":"src/main/java/logic/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Bye Command","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for ByeCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"        super();","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Bye Command","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Bye Command","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"        setExit();","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"        return Response.getExitResponse();","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":28}},{"path":"src/main/java/logic/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":" * Abstract class representing a command.","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"public abstract class Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    public abstract String execute(TaskList taskList);","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     * @return","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"        return this.isExit;","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     * Sets the isExit flag to true.","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    public void setExit() {","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":28}},{"path":"src/main/java/logic/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import logic.parser.Parser;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Deadline;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Deadline Command","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    static final String DEADLINE_DATETIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    static final String DEADLINE_STORAGE_FORMAT \u003d \"MMM dd yyyy, HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for DeadlineCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    public DeadlineCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Deadline Command","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"        if (command.length \u003d\u003d 0) {","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        String unparsedDatetime \u003d Parser.splitArray(command, \"/by\").get(1);","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        if (!Parser.isValidDatetime(unparsedDatetime, DEADLINE_DATETIME_FORMAT)) {","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(DEADLINE_DATETIME_FORMAT);","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * Parses the Deadline Command","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     * @param unparsedDatetime The unparsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     * @return The parsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    public static LocalDateTime parseDeadlineDatetime(String unparsedDatetime) {","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        return LocalDateTime.parse(unparsedDatetime, DateTimeFormatter.ofPattern(DEADLINE_DATETIME_FORMAT));","lastModifiedDate":"2023-04-16"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"     * Parses the Deadline Command","lastModifiedDate":"2023-04-16"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"     * @param storageDatetime The unparsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"     * @return The parsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"    public static LocalDateTime parseDeadlineStorage(String storageDatetime) {","lastModifiedDate":"2023-04-16"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"        return LocalDateTime.parse(storageDatetime, DateTimeFormatter.ofPattern(DEADLINE_STORAGE_FORMAT));","lastModifiedDate":"2023-04-16"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Deadline Command","lastModifiedDate":"2023-04-16"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Deadline Command","lastModifiedDate":"2023-04-16"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"        String description \u003d Parser.splitArray(this.command, \"/by\").get(0);","lastModifiedDate":"2023-04-15"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"        String unparsedDatetime \u003d Parser.splitArray(this.command, \"/by\").get(1);","lastModifiedDate":"2023-04-15"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"        assert !unparsedDatetime.equals(\"\") : \"Parsing error occured in Deadline: datetime\";","lastModifiedDate":"2023-04-16"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"        LocalDateTime by \u003d parseDeadlineDatetime(unparsedDatetime);","lastModifiedDate":"2023-04-15"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-04-15"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"        taskList.add(newDeadline);","lastModifiedDate":"2023-04-15"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"        return Response.getAddTaskResponse(newDeadline, taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":82}},{"path":"src/main/java/logic/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import logic.parser.Parser;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Delete Command","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    public DeleteCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Delete Command","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        if (command.length \u003d\u003d 0) {","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Delete Command","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Delete Command","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        String strIndex \u003d Parser.splitArray(this.command, \" \").get(0);","lastModifiedDate":"2023-04-15"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        Task task \u003d taskList.delete(index);","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"        return Response.getDeleteTaskResponse(task, taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":49}},{"path":"src/main/java/logic/commands/DoAfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import logic.parser.Parser;","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.DoAfter;","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":" * Class representing the DoAfter Command","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"public class DoAfterCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    static final String DO_AFTER_DATETIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    static final String DO_AFTER_STORAGE_FORMAT \u003d \"MMM dd yyyy, HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for DoAfterCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    public DoAfterCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * Validates the DoAfter Command","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"        if (command.length \u003d\u003d 0) {","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(\"The description of a doafter cannot be empty.\");","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        String unparsedDatetime \u003d Parser.splitArray(command, \"/after\").get(1);","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        if (!Parser.isValidDatetime(unparsedDatetime, DO_AFTER_DATETIME_FORMAT)) {","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(DO_AFTER_DATETIME_FORMAT);","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"     * Parses the DoAfter Command","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * @param unparsedDatetime The unparsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     * @return The parsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    public static LocalDateTime parseDoAfterDatetime(String unparsedDatetime) {","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        return LocalDateTime.parse(unparsedDatetime, DateTimeFormatter.ofPattern(DO_AFTER_DATETIME_FORMAT));","lastModifiedDate":"2023-04-16"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"     * Parses the DoAfter Command","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"     * @param storageDatetime The unparsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"     * @return The parsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"    public static LocalDateTime parseDoAfterStorage(String storageDatetime) {","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"        return LocalDateTime.parse(storageDatetime, DateTimeFormatter.ofPattern(DO_AFTER_STORAGE_FORMAT));","lastModifiedDate":"2023-04-16"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"     * Executes the DoAfter Command","lastModifiedDate":"2023-04-16"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the user","lastModifiedDate":"2023-04-16"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"        String description \u003d Parser.splitArray(this.command, \"/after\").get(0);","lastModifiedDate":"2023-04-15"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"        String unparsedDatetime \u003d Parser.splitArray(this.command, \"/after\").get(1);","lastModifiedDate":"2023-04-15"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"        assert !unparsedDatetime.equals(\"\") : \"Parsing error occured in DoAfter: datetime\";","lastModifiedDate":"2023-04-16"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"        LocalDateTime after \u003d parseDoAfterDatetime(unparsedDatetime);","lastModifiedDate":"2023-04-15"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"        DoAfter newDoAfter \u003d new DoAfter(description, after);","lastModifiedDate":"2023-04-15"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"        taskList.add(newDoAfter);","lastModifiedDate":"2023-04-15"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"        return Response.getAddTaskResponse(newDoAfter, taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":81}},{"path":"src/main/java/logic/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import logic.parser.Parser;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Event;","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Event Command","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    static final String EVENT_DATETIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    static final String EVENT_STORAGE_FORMAT \u003d \"MMM dd yyyy, HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    static final String EVENT_INPUT_FORMAT \u003d \"dd-MM-yyyy HHmm - dd-MM-yyyy HHmm\";","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for EventCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    public EventCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Event Command","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"     * Parses the Event Command","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"     * @param unparsedDatetime The unparsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"     * @return The parsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"    public static LocalDateTime parseEventDatetime(String unparsedDatetime) {","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        return LocalDateTime.parse(unparsedDatetime, DateTimeFormatter.ofPattern(EVENT_DATETIME_FORMAT));","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     * Parses the Event Command","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     * @param storageDatetime The unparsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     * @return The parsed datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"    public static LocalDateTime parseEventStorage(String storageDatetime) {","lastModifiedDate":"2023-04-16"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"        return LocalDateTime.parse(storageDatetime, DateTimeFormatter.ofPattern(EVENT_STORAGE_FORMAT));","lastModifiedDate":"2023-04-16"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Event Command","lastModifiedDate":"2023-04-16"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Event Command","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"        String description \u003d Parser.splitArray(this.command, \"/from\").get(0);","lastModifiedDate":"2023-04-15"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"        String unparsedDatetime \u003d Parser.splitArray(this.command, \"/from\").get(1);","lastModifiedDate":"2023-04-16"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"        System.out.println(unparsedDatetime);","lastModifiedDate":"2023-04-16"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"        String fromTime \u003d unparsedDatetime.split(\"/to\", 2)[0].trim();","lastModifiedDate":"2023-04-16"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"        String toTime \u003d unparsedDatetime.split(\"/to\", 2)[1].trim();","lastModifiedDate":"2023-04-16"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"        LocalDateTime from \u003d parseEventDatetime(fromTime);","lastModifiedDate":"2023-04-16"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"        LocalDateTime to \u003d parseEventDatetime(toTime);","lastModifiedDate":"2023-04-16"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2023-04-16"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"        taskList.add(newEvent);","lastModifiedDate":"2023-04-15"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"        return Response.getAddTaskResponse(newEvent, taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":81}},{"path":"src/main/java/logic/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Find Command","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for FindCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    public FindCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Find Command","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Find Command","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Find Command","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        String combinedString \u003d String.join(\" \", this.command);","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        TaskList resTaskList \u003d new TaskList();","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"            String taskDesc \u003d taskList.get(i).getTaskDesc();","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"            if (taskDesc.contains(combinedString)) {","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"                resTaskList.add(taskList.get(i));","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        return Response.getFindTaskResponse(resTaskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":48}},{"path":"src/main/java/logic/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-16"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Help Command","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for HelpCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"        return Response.getHelpResponse();","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-16"}],"authorContributionMap":{"nigelteosw":18}},{"path":"src/main/java/logic/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":" * Class representing an Invalid Command","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for InvalidCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"        return Response.getInvalidCommandResponse();","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":18}},{"path":"src/main/java/logic/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":" * Class representing the List Command","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for ListCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"        return Response.getListResponse(taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":18}},{"path":"src/main/java/logic/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import exceptions.IllegalIndexException;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Mark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for MarkCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     * @param command","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    public MarkCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Mark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"        if (command.length \u003c 1) {","lastModifiedDate":"2023-04-15"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(\"Missing index!\");","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"            int index \u003d Integer.parseInt(command[0]) - 1;","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"                throw new IllegalIndexException();","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Mark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Mark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"        int index \u003d Integer.parseInt(command[0]) - 1;","lastModifiedDate":"2023-04-15"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"        taskList.markAsDone(index);","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"        return Response.getMarkTaskResponse(taskList.get(index));","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":54}},{"path":"src/main/java/logic/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Todo;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Todo Command","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for TodoCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    public TodoCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Todo Command","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"        if (command.length \u003d\u003d 0) {","lastModifiedDate":"2023-04-15"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Todo Command","lastModifiedDate":"2023-04-16"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Todo Command","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        String combinedString \u003d String.join(\" \", this.command);","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        Todo newTodo \u003d new Todo(combinedString);","lastModifiedDate":"2023-04-15"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        taskList.add(newTodo);","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"        return Response.getAddTaskResponse(newTodo, taskList);","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":48}},{"path":"src/main/java/logic/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.commands;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import exceptions.IllegalIndexException;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Unmark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    private String[] command;","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for UnmarkCommand","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * @param command","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    public UnmarkCommand(String[] command) {","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * Validates the Unmark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     * @param command The command to be validated","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    public static void validate(String[] command) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"        assert command.length \u003e 0 : \"Command should not be empty\";","lastModifiedDate":"2023-04-15"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        if (command.length \u003c 1) {","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(\"Missing index!\");","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"            int index \u003d Integer.parseInt(command[0]) - 1;","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"                throw new IllegalIndexException();","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"     * Executes the Unmark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Unmark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        int index \u003d Integer.parseInt(command[0]) - 1;","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        taskList.markAsUndone(index);","lastModifiedDate":"2023-04-15"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"        return Response.getUnmarkTaskResponse(taskList.get(index));","lastModifiedDate":"2023-04-16"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":57}},{"path":"src/main/java/logic/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.parser;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import java.util.List;","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.Command;","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.ByeCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.DeadlineCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.DeleteCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.DoAfterCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.EventCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.FindCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.HelpCommand;","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.InvalidCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.ListCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.MarkCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.TodoCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.UnmarkCommand;","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":" * Class that parses the inputs given by the user","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"public class Parser {","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     * Parses the input given by the user","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * @param input The input given by the user","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     * @return The Command to be executed","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        String commandType \u003d command[0];","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        String[] args \u003d Arrays.copyOfRange(command, 1, command.length);","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        // make commandType uppercase","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        commandType \u003d commandType.toUpperCase();","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        switch (commandType) {","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        case \"TODO\":","lastModifiedDate":"2023-04-15"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"            TodoCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"            return new TodoCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"            DeadlineCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"            return new DeadlineCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"        case \"EVENT\":","lastModifiedDate":"2023-04-15"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"            EventCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"            return new EventCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        case \"DOAFTER\":","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"            DoAfterCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"            return new DoAfterCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"        case \"MARK\":","lastModifiedDate":"2023-04-15"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"            MarkCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"            return new MarkCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"        case \"UNMARK\":","lastModifiedDate":"2023-04-15"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"            UnmarkCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"            return new UnmarkCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"        case \"DELETE\":","lastModifiedDate":"2023-04-15"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"        case \"FIND\":","lastModifiedDate":"2023-04-15"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"            FindCommand.validate(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"            return new FindCommand(args);","lastModifiedDate":"2023-04-15"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"        case \"HELP\":","lastModifiedDate":"2023-04-16"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-04-16"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"        case \"LIST\":","lastModifiedDate":"2023-04-15"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"            return new ListCommand();","lastModifiedDate":"2023-04-15"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"        case \"BYE\":","lastModifiedDate":"2023-04-15"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-04-15"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"        default:","lastModifiedDate":"2023-04-15"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-04-15"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"     * Splits the array into two parts","lastModifiedDate":"2023-04-16"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"     * @param array     The array to be split","lastModifiedDate":"2023-04-16"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"     * @param delimiter The delimiter to split the array","lastModifiedDate":"2023-04-16"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"     * @return The split array","lastModifiedDate":"2023-04-16"},{"lineNumber":84,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"    public static List\u003cString\u003e splitArray(String[] array, String delimiter) {","lastModifiedDate":"2023-04-15"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-04-15"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"        List\u003cString\u003e res \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-04-15"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"        for (String str : array) {","lastModifiedDate":"2023-04-15"},{"lineNumber":90,"author":{"gitId":"nigelteosw"},"content":"            if (str.equalsIgnoreCase(delimiter)) {","lastModifiedDate":"2023-04-15"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"                res.add(sb.toString().trim());","lastModifiedDate":"2023-04-15"},{"lineNumber":92,"author":{"gitId":"nigelteosw"},"content":"                sb \u003d new StringBuilder();","lastModifiedDate":"2023-04-15"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"            } else {","lastModifiedDate":"2023-04-15"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"                sb.append(str);","lastModifiedDate":"2023-04-15"},{"lineNumber":95,"author":{"gitId":"nigelteosw"},"content":"                sb.append(\" \");","lastModifiedDate":"2023-04-15"},{"lineNumber":96,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-04-15"},{"lineNumber":97,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"        res.add(sb.toString().trim());","lastModifiedDate":"2023-04-15"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"        return res;","lastModifiedDate":"2023-04-15"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":102,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":103,"author":{"gitId":"nigelteosw"},"content":"     * Checks if the string is a valid datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":104,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"     * @param str    The string to be checked","lastModifiedDate":"2023-04-16"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"     * @param format The format of the datetime","lastModifiedDate":"2023-04-16"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"     * @return True if the string is a valid datetime, false otherwise","lastModifiedDate":"2023-04-16"},{"lineNumber":108,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":109,"author":{"gitId":"nigelteosw"},"content":"    public static boolean isValidDatetime(String str, String format) {","lastModifiedDate":"2023-04-16"},{"lineNumber":110,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-04-16"},{"lineNumber":111,"author":{"gitId":"nigelteosw"},"content":"            DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2023-04-16"},{"lineNumber":112,"author":{"gitId":"nigelteosw"},"content":"            dtf.parse(str);","lastModifiedDate":"2023-04-16"},{"lineNumber":113,"author":{"gitId":"nigelteosw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-16"},{"lineNumber":114,"author":{"gitId":"nigelteosw"},"content":"            return false;","lastModifiedDate":"2023-04-16"},{"lineNumber":115,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":116,"author":{"gitId":"nigelteosw"},"content":"        return true;","lastModifiedDate":"2023-04-16"},{"lineNumber":117,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":118,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":118}},{"path":"src/main/java/logic/response/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package logic.response;","lastModifiedDate":"2023-04-16"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":" * Class representing the Response","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"public class Response {","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Add Command","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     * @param task     The Task to be added","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Add Command","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    public static String getAddTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"                + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Delete Command","lastModifiedDate":"2023-04-16"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     * @param task     The Task to be deleted","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Delete Command","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"    public static String getDeleteTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \"","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"                + taskList.size()","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Mark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     * @param task The Task to be marked","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Mark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"    public static String getMarkTaskResponse(Task task) {","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Unmark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * @param task The Task to be unmarked","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Unmark Command","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    public static String getUnmarkTaskResponse(Task task) {","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        return \"Noted. I\u0027ve marked this task as undone:\\n\" + task;","lastModifiedDate":"2023-04-16"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Empty Command","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Empty Command","lastModifiedDate":"2023-04-16"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"    public static String getEmptyCommandResponse() {","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"        return \"Please enter a command.\";","lastModifiedDate":"2023-04-16"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Empty List Command","lastModifiedDate":"2023-04-16"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Empty List Command","lastModifiedDate":"2023-04-16"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"    public static String getEmptyListResponse() {","lastModifiedDate":"2023-04-16"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"        return \"There are no tasks in your list.\";","lastModifiedDate":"2023-04-16"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the List Command","lastModifiedDate":"2023-04-16"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the List Command","lastModifiedDate":"2023-04-16"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"    public static String getListResponse(TaskList taskList) {","lastModifiedDate":"2023-04-16"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-04-16"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"            response +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":84,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"        return response;","lastModifiedDate":"2023-04-16"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Exit Command","lastModifiedDate":"2023-04-16"},{"lineNumber":90,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Exit Command","lastModifiedDate":"2023-04-16"},{"lineNumber":92,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"    public static String getExitResponse() {","lastModifiedDate":"2023-04-16"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-04-16"},{"lineNumber":95,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":96,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":97,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Find Command","lastModifiedDate":"2023-04-16"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"     * @param taskList The TaskList to be modified","lastModifiedDate":"2023-04-16"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Find Command","lastModifiedDate":"2023-04-16"},{"lineNumber":102,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":103,"author":{"gitId":"nigelteosw"},"content":"    public static String getFindTaskResponse(TaskList taskList) {","lastModifiedDate":"2023-04-16"},{"lineNumber":104,"author":{"gitId":"nigelteosw"},"content":"        String response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-04-16"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"            response +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":108,"author":{"gitId":"nigelteosw"},"content":"        return response;","lastModifiedDate":"2023-04-16"},{"lineNumber":109,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":110,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":111,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":112,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Invalid Command","lastModifiedDate":"2023-04-16"},{"lineNumber":113,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":114,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Invalid Command","lastModifiedDate":"2023-04-16"},{"lineNumber":115,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":116,"author":{"gitId":"nigelteosw"},"content":"    public static String getInvalidCommandResponse() {","lastModifiedDate":"2023-04-16"},{"lineNumber":117,"author":{"gitId":"nigelteosw"},"content":"        return \"I\u0027m sorry, but the command you entered is invalid :-(\";","lastModifiedDate":"2023-04-16"},{"lineNumber":118,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":119,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":120,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":121,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Invalid Index","lastModifiedDate":"2023-04-16"},{"lineNumber":122,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":123,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Invalid Index","lastModifiedDate":"2023-04-16"},{"lineNumber":124,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":125,"author":{"gitId":"nigelteosw"},"content":"    public static String getInvalidIndexResponse() {","lastModifiedDate":"2023-04-16"},{"lineNumber":126,"author":{"gitId":"nigelteosw"},"content":"        return \"Please enter a valid index.\";","lastModifiedDate":"2023-04-16"},{"lineNumber":127,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":128,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":129,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":130,"author":{"gitId":"nigelteosw"},"content":"     * Returns the response to the Invalid Task Type","lastModifiedDate":"2023-04-16"},{"lineNumber":131,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":132,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the Invalid Task Type","lastModifiedDate":"2023-04-16"},{"lineNumber":133,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":134,"author":{"gitId":"nigelteosw"},"content":"    public static String returnChatError(Exception e) {","lastModifiedDate":"2023-04-16"},{"lineNumber":135,"author":{"gitId":"nigelteosw"},"content":"        return \"Error: \" + e.getMessage() + \"/n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":136,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":137,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":138,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":139,"author":{"gitId":"nigelteosw"},"content":"     * Get Welcome Message","lastModifiedDate":"2023-04-16"},{"lineNumber":140,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":141,"author":{"gitId":"nigelteosw"},"content":"     * @return Welcome Message","lastModifiedDate":"2023-04-16"},{"lineNumber":142,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":143,"author":{"gitId":"nigelteosw"},"content":"    public static String getWelcome() {","lastModifiedDate":"2023-04-16"},{"lineNumber":144,"author":{"gitId":"nigelteosw"},"content":"        return \"Hello! I\u0027m Corky!\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":145,"author":{"gitId":"nigelteosw"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-04-16"},{"lineNumber":146,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":147,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":148,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":149,"author":{"gitId":"nigelteosw"},"content":"     * Returns that the storage directory is created","lastModifiedDate":"2023-04-16"},{"lineNumber":150,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":151,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the storage directory creation","lastModifiedDate":"2023-04-16"},{"lineNumber":152,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":153,"author":{"gitId":"nigelteosw"},"content":"    public static String returnChatCreateNewDirectory(String storageDirname) {","lastModifiedDate":"2023-04-16"},{"lineNumber":154,"author":{"gitId":"nigelteosw"},"content":"        return \"Creating new directory: \"","lastModifiedDate":"2023-04-16"},{"lineNumber":155,"author":{"gitId":"nigelteosw"},"content":"                + storageDirname + \"/n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":156,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":157,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":158,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":159,"author":{"gitId":"nigelteosw"},"content":"     * Returns that the storage file is created","lastModifiedDate":"2023-04-16"},{"lineNumber":160,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":161,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the storage file creation","lastModifiedDate":"2023-04-16"},{"lineNumber":162,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":163,"author":{"gitId":"nigelteosw"},"content":"    public static String returnChatCreateNewStorage(String storageName) {","lastModifiedDate":"2023-04-16"},{"lineNumber":164,"author":{"gitId":"nigelteosw"},"content":"        return \"Creating new storage: \"","lastModifiedDate":"2023-04-16"},{"lineNumber":165,"author":{"gitId":"nigelteosw"},"content":"                + storageName + \"/n\";","lastModifiedDate":"2023-04-16"},{"lineNumber":166,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":167,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":168,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":169,"author":{"gitId":"nigelteosw"},"content":"     * Returns help message","lastModifiedDate":"2023-04-16"},{"lineNumber":170,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":171,"author":{"gitId":"nigelteosw"},"content":"     * @return The help message","lastModifiedDate":"2023-04-16"},{"lineNumber":172,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":173,"author":{"gitId":"nigelteosw"},"content":"    public static String getHelpResponse() {","lastModifiedDate":"2023-04-16"},{"lineNumber":174,"author":{"gitId":"nigelteosw"},"content":"        return \"Here are the commands you can use:\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":175,"author":{"gitId":"nigelteosw"},"content":"                + \"1. todo \u003ctask name\u003e - adds a todo task\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":176,"author":{"gitId":"nigelteosw"},"content":"                + \"2. deadline \u003ctask name\u003e /by \u003cdeadline\u003e - adds a deadline task\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":177,"author":{"gitId":"nigelteosw"},"content":"                + \"3. event \u003ctask name\u003e /at \u003cstart time\u003e to \u003cend time\u003e - adds an event task\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":178,"author":{"gitId":"nigelteosw"},"content":"                + \"4. doafter \u003ctask name\u003e /after \u003ctask number\u003e - adds a doafter task\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":179,"author":{"gitId":"nigelteosw"},"content":"                + \"5. list - lists all tasks\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":180,"author":{"gitId":"nigelteosw"},"content":"                + \"6. done \u003ctask number\u003e - marks a task as done\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":181,"author":{"gitId":"nigelteosw"},"content":"                + \"7. delete \u003ctask number\u003e - deletes a task\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":182,"author":{"gitId":"nigelteosw"},"content":"                + \"8. help - shows this help message\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":183,"author":{"gitId":"nigelteosw"},"content":"                + \"9. find \u003ckeyword\u003e - finds tasks with the keyword\\n\"","lastModifiedDate":"2023-04-16"},{"lineNumber":184,"author":{"gitId":"nigelteosw"},"content":"                + \"10. bye - exits the program\";","lastModifiedDate":"2023-04-16"},{"lineNumber":185,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":186,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":187,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":188,"author":{"gitId":"nigelteosw"},"content":"     * Returns that the storage file is created","lastModifiedDate":"2023-04-16"},{"lineNumber":189,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":190,"author":{"gitId":"nigelteosw"},"content":"     * @return The response to the storage file creation","lastModifiedDate":"2023-04-16"},{"lineNumber":191,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":192,"author":{"gitId":"nigelteosw"},"content":"    public static String createFileMessage(String fileName) {","lastModifiedDate":"2023-04-16"},{"lineNumber":193,"author":{"gitId":"nigelteosw"},"content":"        return \"Creating new file: \" + fileName + System.lineSeparator();","lastModifiedDate":"2023-04-16"},{"lineNumber":194,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":195,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-16"}],"authorContributionMap":{"nigelteosw":195}},{"path":"src/main/java/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package model;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":" * Representation of the list containing tasks","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"public class TaskList {","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for the TaskList class","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * @param tasks","lastModifiedDate":"2023-04-15"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    public TaskList() {","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"     * Returns the size of the list","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"     * @return int","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    public int size() {","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"        return this.list.size();","lastModifiedDate":"2023-04-15"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * Returns the task at the specified index","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     * @param index","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     * @return Task","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"     * Adds a task to the list","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"     * @param task","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-04-15"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"        this.list.add(task);","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * Deletes a task from the list","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     * @param index","lastModifiedDate":"2023-04-15"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     * @return Task","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    public Task delete(int index) {","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        Task removedTask \u003d this.list.get(index);","lastModifiedDate":"2023-04-15"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-04-15"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"        return removedTask;","lastModifiedDate":"2023-04-15"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"     * Marks a task as done","lastModifiedDate":"2023-04-15"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"     * @param index","lastModifiedDate":"2023-04-15"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2023-04-15"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"        this.list.get(index).setIsComplete(true);","lastModifiedDate":"2023-04-15"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"     * Marks a task as undone","lastModifiedDate":"2023-04-15"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"     * @param index","lastModifiedDate":"2023-04-15"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"    public void markAsUndone(int index) {","lastModifiedDate":"2023-04-15"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"        this.list.get(index).setIsComplete(false);","lastModifiedDate":"2023-04-15"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"     * Returns true if the list is empty","lastModifiedDate":"2023-04-15"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-04-15"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"        return this.list.isEmpty();","lastModifiedDate":"2023-04-15"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":82}},{"path":"src/main/java/model/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package model.tasks;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" * Class representing a Deadline task","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    protected DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\");","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    private final String icon \u003d \"[D]\";","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     * @param by The deadline of the Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"     * @param by The deadline of the Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * @param status The status of the Deadline","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    public Deadline(String description, LocalDateTime by, Boolean status) {","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"        setIsComplete(status);","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     * Returns the string representation of the Deadline to be saved","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"    public String savedAs() {","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        String formattedTime \u003d this.by.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"D|%s|%s|%s\", getIsComplete(), getTaskDesc(), formattedTime);","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"     * Returns a string representation of this Deadline task","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    public String toString() {","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        String formattedTime \u003d this.by.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"%s%s (by: %s)\", this.icon, super.toString(), formattedTime);","lastModifiedDate":"2023-04-15"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":56}},{"path":"src/main/java/model/tasks/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package model.tasks;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" * Class representing a DoAfter task","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"public class DoAfter extends Task {","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    protected DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\");","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    private final String icon \u003d \"[A]\";","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     * @param by The deadline of the DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    public DoAfter(String description, LocalDateTime by) {","lastModifiedDate":"2023-04-15"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"     * @param by The deadline of the DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * @param status The status of the DoAfter","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    public DoAfter(String description, LocalDateTime by, Boolean status) {","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"        setIsComplete(status);","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     * Returns the string representation of the DoAfter to be saved","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"    public String savedAs() {","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"        String formattedTime \u003d this.by.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"A|%s|%s|%s\", getIsComplete(), getTaskDesc(), formattedTime);","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"     * Returns a string representation of this DoAfter task","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"    public String toString() {","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"        String formattedTime \u003d this.by.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"%s%s (after: %s)\", this.icon, super.toString(), formattedTime);","lastModifiedDate":"2023-04-15"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":56}},{"path":"src/main/java/model/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package model.tasks;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":" * Representation of the Event task","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"public class Event extends Task {","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    protected DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HHmm\");","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    private final String icon \u003d \"[E]\";","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Event","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"     * @param from The start time of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"     * @param to The end time of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Event","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     * @param from The start time of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * @param to The end time of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     * @param status The status of the Event","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, Boolean status) {","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"        setIsComplete(status);","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"     * Returns the string representation of the Event to be saved","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"    public String savedAs() {","lastModifiedDate":"2023-04-15"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"        String formattedTimeFrom \u003d this.from.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"        String formattedTimeTo \u003d this.to.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"E|%s|%s|%s|%s\", getIsComplete(), getTaskDesc(), formattedTimeFrom, formattedTimeTo);","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"     * Returns a string representation of this Event task","lastModifiedDate":"2023-04-16"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-15"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"    public String toString() {","lastModifiedDate":"2023-04-15"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"        String formattedTimeFrom \u003d this.from.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"        String formattedTimeTo \u003d this.to.format(timeFormat.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-04-15"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"%s%s (from: %s to: %s)\", this.icon, super.toString(), formattedTimeFrom, formattedTimeTo);","lastModifiedDate":"2023-04-15"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":63}},{"path":"src/main/java/model/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package model.tasks;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * Class of task","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public abstract class Task {","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    private final String description;","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"    private Boolean isComplete \u003d false;","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for the Task Class","lastModifiedDate":"2023-04-15"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     * @param description name of the class","lastModifiedDate":"2023-04-15"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"     * @param c type of the task","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    public Task(String description) {","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-04-15"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"     * Returns the description of the task","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"    public String getTaskDesc() {","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"        return this.description;","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * Returns the status of the task","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     * @return Boolean","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"    public Boolean getIsComplete() {","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"        return this.isComplete;","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"     * Sets the status of the task","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     * @param status The status of the task","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    public void setIsComplete(Boolean status) {","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"        this.isComplete \u003d status;","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"     * Returns the string representation of the task to be saved","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    public abstract String savedAs();","lastModifiedDate":"2023-04-15"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"     * Returns a string representation of this task","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"    public String toString() {","lastModifiedDate":"2023-04-15"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"[%s] %s\", (this.isComplete ? \"X\" : \"  \"), this.description);","lastModifiedDate":"2023-04-15"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":58}},{"path":"src/main/java/model/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package model.tasks;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-04-15"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":" * Represents a Todo task","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"    private final String icon \u003d \"[T]\";","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Todo","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the Todo","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-04-15"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Todo","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"     * @param description The description of the Todo","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"     * @param status The status of the Todo","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"    public Todo(String description, Boolean status) {","lastModifiedDate":"2023-04-15"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"        super(description);","lastModifiedDate":"2023-04-15"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"        setIsComplete(status);","lastModifiedDate":"2023-04-15"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"     * Returns the string representation of the Todo to be saved","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"    public String savedAs() {","lastModifiedDate":"2023-04-15"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"        return String.format(\"T|%s|%s\", getIsComplete(), getTaskDesc());","lastModifiedDate":"2023-04-15"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-15"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"     * Returns a string representation of this To-Do task","lastModifiedDate":"2023-04-15"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"     * @return String","lastModifiedDate":"2023-04-15"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-15"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"    @Override","lastModifiedDate":"2023-04-15"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    public String toString() {","lastModifiedDate":"2023-04-15"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"        return this.icon + super.toString();","lastModifiedDate":"2023-04-15"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-15"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-15"}],"authorContributionMap":{"nigelteosw":44}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package storage;","lastModifiedDate":"2023-04-15"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.DeadlineCommand;","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.DoAfterCommand;","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"import logic.commands.EventCommand;","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"import logic.response.Response;","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"import model.TaskList;","lastModifiedDate":"2023-04-15"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Deadline;","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.DoAfter;","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Event;","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-15"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Todo;","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":" * Class that manages the CRUD of the tasks","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"nigelteosw"},"content":"    private final String fileName;","lastModifiedDate":"2023-04-16"},{"lineNumber":28,"author":{"gitId":"nigelteosw"},"content":"    private final String filePath;","lastModifiedDate":"2023-04-16"},{"lineNumber":29,"author":{"gitId":"nigelteosw"},"content":"    private final String completeFilePath;","lastModifiedDate":"2023-04-16"},{"lineNumber":30,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nigelteosw"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-04-16"},{"lineNumber":33,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":34,"author":{"gitId":"nigelteosw"},"content":"     * @param storageName    Name of storage file. Should be a .txt file.","lastModifiedDate":"2023-04-16"},{"lineNumber":35,"author":{"gitId":"nigelteosw"},"content":"     * @param storageDirName Name of directory storing the storage file.","lastModifiedDate":"2023-04-16"},{"lineNumber":36,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nigelteosw"},"content":"    public Storage(String filePath, String fileName) {","lastModifiedDate":"2023-04-16"},{"lineNumber":38,"author":{"gitId":"nigelteosw"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-04-16"},{"lineNumber":39,"author":{"gitId":"nigelteosw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-16"},{"lineNumber":40,"author":{"gitId":"nigelteosw"},"content":"        this.completeFilePath \u003d String.format(\"%s%s%s\", this.filePath, File.separator, this.fileName);","lastModifiedDate":"2023-04-16"},{"lineNumber":41,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":43,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-04-16"},{"lineNumber":44,"author":{"gitId":"nigelteosw"},"content":"     * Attempts to create a directory and/or storage file if it does not exist.","lastModifiedDate":"2023-04-16"},{"lineNumber":45,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":46,"author":{"gitId":"nigelteosw"},"content":"     * @throws IOException Thrown when an error creating the storage file occurs.","lastModifiedDate":"2023-04-16"},{"lineNumber":47,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-04-16"},{"lineNumber":48,"author":{"gitId":"nigelteosw"},"content":"    public String initializeStorage() throws IOException {","lastModifiedDate":"2023-04-16"},{"lineNumber":49,"author":{"gitId":"nigelteosw"},"content":"        Path completeFilePath \u003d Paths.get(this.completeFilePath);","lastModifiedDate":"2023-04-16"},{"lineNumber":50,"author":{"gitId":"nigelteosw"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-04-16"},{"lineNumber":51,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":52,"author":{"gitId":"nigelteosw"},"content":"        if (!Files.exists(completeFilePath)) {","lastModifiedDate":"2023-04-16"},{"lineNumber":53,"author":{"gitId":"nigelteosw"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-04-16"},{"lineNumber":54,"author":{"gitId":"nigelteosw"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-04-16"},{"lineNumber":55,"author":{"gitId":"nigelteosw"},"content":"                f.mkdir();","lastModifiedDate":"2023-04-16"},{"lineNumber":56,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-04-16"},{"lineNumber":57,"author":{"gitId":"nigelteosw"},"content":"            f \u003d new File(this.completeFilePath);","lastModifiedDate":"2023-04-16"},{"lineNumber":58,"author":{"gitId":"nigelteosw"},"content":"            f.createNewFile();","lastModifiedDate":"2023-04-16"},{"lineNumber":59,"author":{"gitId":"nigelteosw"},"content":"            res \u003d Response.createFileMessage(this.fileName);","lastModifiedDate":"2023-04-16"},{"lineNumber":60,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"nigelteosw"},"content":"        return res;","lastModifiedDate":"2023-04-16"},{"lineNumber":62,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"nigelteosw"},"content":"     * Reads data from the database and inserts it into an ArarayList to be returned","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":67,"author":{"gitId":"nigelteosw"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"nigelteosw"},"content":"    public void load(TaskList taskList) throws IOException {","lastModifiedDate":"2023-04-16"},{"lineNumber":70,"author":{"gitId":"nigelteosw"},"content":"        File f \u003d new File(this.completeFilePath);","lastModifiedDate":"2023-04-16"},{"lineNumber":71,"author":{"gitId":"nigelteosw"},"content":"        try (Scanner s \u003d new Scanner(f)) {","lastModifiedDate":"2023-04-16"},{"lineNumber":72,"author":{"gitId":"nigelteosw"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"nigelteosw"},"content":"                String[] taskString \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-04-16"},{"lineNumber":74,"author":{"gitId":"nigelteosw"},"content":"                switch (taskString[0]) {","lastModifiedDate":"2023-04-16"},{"lineNumber":75,"author":{"gitId":"nigelteosw"},"content":"                case \"T\": {","lastModifiedDate":"2023-04-16"},{"lineNumber":76,"author":{"gitId":"nigelteosw"},"content":"                    taskList.add(new Todo(taskString[2], Boolean.parseBoolean(taskString[1])));","lastModifiedDate":"2023-04-16"},{"lineNumber":77,"author":{"gitId":"nigelteosw"},"content":"                    break;","lastModifiedDate":"2023-04-16"},{"lineNumber":78,"author":{"gitId":"nigelteosw"},"content":"                }","lastModifiedDate":"2023-04-16"},{"lineNumber":79,"author":{"gitId":"nigelteosw"},"content":"                case \"D\": {","lastModifiedDate":"2023-04-16"},{"lineNumber":80,"author":{"gitId":"nigelteosw"},"content":"                    taskList.add(new Deadline(taskString[2],","lastModifiedDate":"2023-04-16"},{"lineNumber":81,"author":{"gitId":"nigelteosw"},"content":"                            DeadlineCommand.parseDeadlineStorage(taskString[3]),","lastModifiedDate":"2023-04-16"},{"lineNumber":82,"author":{"gitId":"nigelteosw"},"content":"                            Boolean.parseBoolean(taskString[1])));","lastModifiedDate":"2023-04-16"},{"lineNumber":83,"author":{"gitId":"nigelteosw"},"content":"                    break;","lastModifiedDate":"2023-04-16"},{"lineNumber":84,"author":{"gitId":"nigelteosw"},"content":"                }","lastModifiedDate":"2023-04-16"},{"lineNumber":85,"author":{"gitId":"nigelteosw"},"content":"                case \"E\": {","lastModifiedDate":"2023-04-16"},{"lineNumber":86,"author":{"gitId":"nigelteosw"},"content":"                    taskList.add(new Event(taskString[2],","lastModifiedDate":"2023-04-16"},{"lineNumber":87,"author":{"gitId":"nigelteosw"},"content":"                            EventCommand.parseEventStorage(taskString[3]),","lastModifiedDate":"2023-04-16"},{"lineNumber":88,"author":{"gitId":"nigelteosw"},"content":"                            EventCommand.parseEventStorage(taskString[4]),","lastModifiedDate":"2023-04-16"},{"lineNumber":89,"author":{"gitId":"nigelteosw"},"content":"                            Boolean.parseBoolean(taskString[1])));","lastModifiedDate":"2023-04-16"},{"lineNumber":90,"author":{"gitId":"nigelteosw"},"content":"                    break;","lastModifiedDate":"2023-04-16"},{"lineNumber":91,"author":{"gitId":"nigelteosw"},"content":"                }","lastModifiedDate":"2023-04-16"},{"lineNumber":92,"author":{"gitId":"nigelteosw"},"content":"                case \"A\": {","lastModifiedDate":"2023-04-16"},{"lineNumber":93,"author":{"gitId":"nigelteosw"},"content":"                    taskList.add(new DoAfter(taskString[2],","lastModifiedDate":"2023-04-16"},{"lineNumber":94,"author":{"gitId":"nigelteosw"},"content":"                            DoAfterCommand.parseDoAfterStorage(taskString[3]),","lastModifiedDate":"2023-04-16"},{"lineNumber":95,"author":{"gitId":"nigelteosw"},"content":"                            Boolean.parseBoolean(taskString[1])));","lastModifiedDate":"2023-04-16"},{"lineNumber":96,"author":{"gitId":"nigelteosw"},"content":"                    break;","lastModifiedDate":"2023-04-16"},{"lineNumber":97,"author":{"gitId":"nigelteosw"},"content":"                }","lastModifiedDate":"2023-04-16"},{"lineNumber":98,"author":{"gitId":"nigelteosw"},"content":"                default:","lastModifiedDate":"2023-04-16"},{"lineNumber":99,"author":{"gitId":"nigelteosw"},"content":"                    throw new IOException();","lastModifiedDate":"2023-04-16"},{"lineNumber":100,"author":{"gitId":"nigelteosw"},"content":"                }","lastModifiedDate":"2023-04-16"},{"lineNumber":101,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"nigelteosw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-16"},{"lineNumber":103,"author":{"gitId":"nigelteosw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-16"},{"lineNumber":104,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-16"},{"lineNumber":105,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"nigelteosw"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"nigelteosw"},"content":"     * Saves data in the ArrayList to the databasse","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"nigelteosw"},"content":"     *","lastModifiedDate":"2023-04-16"},{"lineNumber":110,"author":{"gitId":"nigelteosw"},"content":"     * @param list","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"nigelteosw"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"nigelteosw"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"nigelteosw"},"content":"    public void save(TaskList list) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"nigelteosw"},"content":"        try {","lastModifiedDate":"2023-04-15"},{"lineNumber":115,"author":{"gitId":"nigelteosw"},"content":"            FileWriter fw \u003d new FileWriter(this.completeFilePath);","lastModifiedDate":"2023-04-16"},{"lineNumber":116,"author":{"gitId":"nigelteosw"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-04-15"},{"lineNumber":117,"author":{"gitId":"nigelteosw"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2023-04-15"},{"lineNumber":118,"author":{"gitId":"nigelteosw"},"content":"                String taskString \u003d task.savedAs();","lastModifiedDate":"2023-04-15"},{"lineNumber":119,"author":{"gitId":"nigelteosw"},"content":"                fw.write(taskString + System.lineSeparator());","lastModifiedDate":"2023-04-15"},{"lineNumber":120,"author":{"gitId":"nigelteosw"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"nigelteosw"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"nigelteosw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-15"},{"lineNumber":123,"author":{"gitId":"nigelteosw"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-15"},{"lineNumber":124,"author":{"gitId":"nigelteosw"},"content":"        }","lastModifiedDate":"2023-04-15"},{"lineNumber":125,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nigelteosw":126}},{"path":"src/main/resources/View/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":16}},{"path":"src/main/resources/View/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"      \u003cHBox layoutY\u003d\"557.6666870117188\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"              \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" /\u003e","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"nigelteosw":24}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package duke;","lastModifiedDate":"2023-04-16"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Deadline;","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    public void testToString1() {","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-04-16"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(\"24-11-2023 1200\", formatter);","lastModifiedDate":"2023-04-16"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"        Task deadline \u003d new Deadline(\"See the sunrise\", date, false);","lastModifiedDate":"2023-04-16"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"        String result \u003d deadline.toString();","lastModifiedDate":"2023-04-16"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"        assertEquals(\"[D][  ] See the sunrise (by: Nov 24 2023, 1200)\", result);","lastModifiedDate":"2023-04-16"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-16"}],"authorContributionMap":{"nigelteosw":22}},{"path":"src/test/java/duke/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package duke;","lastModifiedDate":"2023-04-16"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-16"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-16"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Todo;","lastModifiedDate":"2023-04-16"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-16"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-16"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"public class MarkTest {","lastModifiedDate":"2023-04-16"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-04-16"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    public void testMark1() {","lastModifiedDate":"2023-04-16"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"        Task todo \u003d new Todo(\"See the sunrise\", true);","lastModifiedDate":"2023-04-16"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2023-04-16"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"        assertEquals(\"[T][X] See the sunrise\", result);","lastModifiedDate":"2023-04-16"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-04-16"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-04-16"}],"authorContributionMap":{"nigelteosw":16}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":5,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Task;","lastModifiedDate":"2023-04-15"},{"lineNumber":6,"author":{"gitId":"nigelteosw"},"content":"import model.tasks.Todo;","lastModifiedDate":"2023-04-15"},{"lineNumber":7,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-04-15"},{"lineNumber":8,"author":{"gitId":"nigelteosw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"nigelteosw"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"nigelteosw"},"content":"    public void testToString1() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"nigelteosw"},"content":"        Task todo \u003d new Todo(\"See the sunrise\", false);","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nigelteosw"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"nigelteosw"},"content":"        assertEquals(\"[T][  ] See the sunrise\", result);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"nigelteosw"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"nigelteosw"},"content":"    public void testToString2() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"nigelteosw"},"content":"        Task todo \u003d new Todo(\"See the sunrise\", true);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nigelteosw"},"content":"        String result \u003d todo.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"nigelteosw"},"content":"        assertEquals(\"[T][X] See the sunrise\", result);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"nigelteosw"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"nigelteosw"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"nigelteosw"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"nigelteosw":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nigelteosw"},"content":"todo read book","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"nigelteosw"},"content":"todo climb with tClimb","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"nigelteosw"},"content":"deadline do revision /by Friday","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"nigelteosw"},"content":"mark 1","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"nigelteosw":4}}]
