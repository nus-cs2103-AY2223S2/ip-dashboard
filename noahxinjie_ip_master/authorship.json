[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"noahxinjie":1,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Represents an instance of the Duke program.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"     * Constructor for an instance of Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     * Contains a Ui for interacting with user,","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"     * Storage for saving and retrieving tasks from a file,","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * and Tasklist for storing the tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * Catches any errors thrown when the program is running.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     * @param filePath","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"            tasks \u003d new TaskList(storage.retrieveTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"     * Dictates program flow for Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"     * Catches any errors thrown when parsing user inputs.","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"noahxinjie":57,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":" * Represents errors thrown when user input","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":" * does not fit the intended use case.","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"noahxinjie":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":" * Encapsulates the parsing of user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * Parses the user input to obtain the intended Command.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * @param input read from System.in by the Ui","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     * @return the corresponding Command","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * @throws NumberFormatException","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    public static Command parse(String input) throws DukeException, NumberFormatException {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        String command \u003d inputs[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        switch (command) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"            if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(\"Please input the numbering of the task you want to \" + command + \" as well!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"                String number \u003d inputs[1]; // might throw Number Format Exception here","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"                int num \u003d Integer.parseInt(number);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"                if (command.equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"                    return new MarkCommand(true, num - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"                    return new MarkCommand(false, num - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"                    return new DeleteCommand(num - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"        case \"find\":","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"            if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(\"Please indicate the keyword you want to search with!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"noahxinjie"},"content":"                String keyword \u003d inputs[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"noahxinjie"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"noahxinjie"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"noahxinjie"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"noahxinjie"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"noahxinjie"},"content":"            String taskType \u003d inputs[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"noahxinjie"},"content":"            if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(\"Oops!! The description of a \" + taskType + \" cannot be empty!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"noahxinjie"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"noahxinjie"},"content":"                String rest \u003d inputs[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"noahxinjie"},"content":"                Task task;","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"noahxinjie"},"content":"                if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"noahxinjie"},"content":"                    task \u003d new Todo(rest);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"noahxinjie"},"content":"                } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"noahxinjie"},"content":"                    String[] addon \u003d rest.split(\" /\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"noahxinjie"},"content":"                    String description \u003d addon[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"noahxinjie"},"content":"                    if (addon.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"noahxinjie"},"content":"                        throw new DukeException(\"Oops!! I do not have enough information to create a deadline task!\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"noahxinjie"},"content":"                                \"You might be missing a date or the task description.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"noahxinjie"},"content":"                    } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"noahxinjie"},"content":"                        String byString \u003d addon[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"noahxinjie"},"content":"                        String[] byPart \u003d byString.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"noahxinjie"},"content":"                        String by \u003d byPart[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"noahxinjie"},"content":"                        task \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"noahxinjie"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"noahxinjie"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"noahxinjie"},"content":"                    // event","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"noahxinjie"},"content":"                    String[] addon \u003d rest.split(\" /\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"noahxinjie"},"content":"                    String description \u003d addon[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"noahxinjie"},"content":"                    if (addon.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"noahxinjie"},"content":"                        throw new DukeException(\"Oops!! I do not have enough information to create a event task!\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"noahxinjie"},"content":"                                \"Please ensure you have indicated the duration using /from and /to!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"noahxinjie"},"content":"                    } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"noahxinjie"},"content":"                        String fromString \u003d addon[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"noahxinjie"},"content":"                        String[] fromPart \u003d fromString.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"noahxinjie"},"content":"                        String from \u003d fromPart[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"noahxinjie"},"content":"                        String toString \u003d addon[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"noahxinjie"},"content":"                        String[] toPart \u003d toString.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"noahxinjie"},"content":"                        String to \u003d toPart[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"noahxinjie"},"content":"                        task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"noahxinjie"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"noahxinjie"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"noahxinjie"},"content":"                return new AddCommand(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"noahxinjie"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Sorry I don\u0027t understand this command! :(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":110}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":" * Represents the file to store tasks the user has inputted.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     * Creates a storage file at the intended file path.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * @param filePath","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * Saves user-inputted tasks into a file.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"            textToAdd.append(task).append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        fw.write(String.valueOf(textToAdd));","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"     * Retrieves tasks previously saved in a file for the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"     * @return ArrayList of Tasks that were saved previously","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"    public ArrayList\u003cTask\u003e retrieveTasks() throws IOException, DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"        Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"noahxinjie"},"content":"            String[] inputs \u003d line.split(\"]\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"noahxinjie"},"content":"            String taskType \u003d inputs[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"noahxinjie"},"content":"            String status \u003d inputs[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"noahxinjie"},"content":"            boolean isDone \u003d status.equals(\"[X\");","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"noahxinjie"},"content":"            String rest \u003d inputs[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"noahxinjie"},"content":"            if (taskType.equals(\"[T\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"noahxinjie"},"content":"                // then it is a Todo","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"noahxinjie"},"content":"                Task t \u003d new Todo(rest.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"noahxinjie"},"content":"                if (isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"noahxinjie"},"content":"                    t.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"noahxinjie"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"noahxinjie"},"content":"                tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"noahxinjie"},"content":"            } else if (taskType.equals(\"[D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"noahxinjie"},"content":"                // then it is a Deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"noahxinjie"},"content":"                String[] restStrings \u003d rest.split(\"by:\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"noahxinjie"},"content":"                String description \u003d restStrings[0].replaceAll(\"\\\\(\", \"\").trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"noahxinjie"},"content":"                String by \u003d restStrings[1].replaceAll(\"\\\\)\", \"\").trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"noahxinjie"},"content":"                Task t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"noahxinjie"},"content":"                if (isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"noahxinjie"},"content":"                    t.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"noahxinjie"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"noahxinjie"},"content":"                tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"noahxinjie"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"noahxinjie"},"content":"                // then it is an Event","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"noahxinjie"},"content":"                String[] restStrings \u003d rest.split(\"from:\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"noahxinjie"},"content":"                String description \u003d restStrings[0].replaceAll(\"\\\\(\", \"\").trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"noahxinjie"},"content":"                String[] duration \u003d restStrings[1].split(\"to:\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"noahxinjie"},"content":"                String from \u003d duration[0].trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"noahxinjie"},"content":"                String to \u003d duration[1].replaceAll(\"\\\\)\", \"\").trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"noahxinjie"},"content":"                Task t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"noahxinjie"},"content":"                if (isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"noahxinjie"},"content":"                    t.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"noahxinjie"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"noahxinjie"},"content":"                tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"noahxinjie"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":98}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Encapsulates the list of tasks user has inputted.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"     * Prints out all the tasks in the list by numbering them in order.","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"     * @return printed tasks for the list command to show to user","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"    public String print() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"            msg.append(String.format(\"%d. \" + tasks.get(i) + \"\\n\", i + 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"        return String.valueOf(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":52}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":" * Encapsulates the interaction between user and program.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        System.out.println(\"Hello! I\u0027m Chiwa, your personal chatbot (◔◡◔✿)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"     * Reads the command entered by the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"     * @return the input to be parsed.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    public void showMessageWithoutNewline(String msg) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        System.out.print(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":35}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to add Todo, Deadline and Event tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    private Task t;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    public AddCommand(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        this.t \u003d t;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * Adds task to tasks and save them in the storage file.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"        tasks.add(this.t);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        ui.showMessage(\"Ok, I\u0027ve added this task: \");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        ui.showMessage(t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        String msg \u003d String.format(\"You now have %d task(s) in your list!\", tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        ui.showMessage(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    public Command() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":18}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to delete an existing task.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * Deletes the intended task from tasks and","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * updates the storage file accordingly.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not comply with intended uses.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"            String errorMessage \u003d String.format(\"Task %d does not exist!\", taskIndex + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"            Task task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessage(\"Ok, I\u0027ve deleted the following task for you:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessage(task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"            tasks.remove(this.taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"            String msg \u003d String.format(\"You now have %d task(s) in your list!\", tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessage(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":46}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to exit the program.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     * Heeds user goodbye via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        ui.showMessage(\"Bye~ Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to find tasks based on a keyword.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    private final String keyword;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * Searches through tasks to find tasks that contain given keyword.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * Outputs matching tasks to user via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"            boolean hasKeyword \u003d t.toString().contains(this.keyword);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"            if (hasKeyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        if (matchingTasks.size() \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessage(\"I\u0027ve found the following matching task(s) in your list!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessageWithoutNewline(matchingTasks.print());","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessage(\"Oh no, I couldn\u0027t find any matching tasks! :(\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"noahxinjie":43}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to list out all tasks in task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     * Prints out the tasks in the list to the user via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        ui.showMessageWithoutNewline(tasks.print());","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to mark a task as done","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" * or unmark it as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    private final boolean isMark;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    public MarkCommand(boolean toMarkorUnmark, int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"        this.isMark \u003d toMarkorUnmark;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * Updates the chosen task in tasks to be marked or unmarked","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * and updates the storage file accordingly.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read.","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not comply with intended uses.","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"            String errorMessage \u003d String.format(\"Task %d does not exist!\", taskIndex + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"            Task t \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"            if (isMark) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"                t.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"                ui.showMessage(\"Congratulations for completing the task ^^ I\u0027ve marked it as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"                t.unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"                ui.showMessage(\"Ok, I\u0027ve unmarked the task for you:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"            ui.showMessage(t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":52}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Please input the date for deadlines in yyyy-mm-dd format!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"noahxinjie":27}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"    protected String from;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"    protected String to;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"noahxinjie":17}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    ","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    public void mark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"noahxinjie":28}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"noahxinjie":12}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"            Deadline t \u003d new Deadline(\"submit assignment\", \"2023-05-09\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"[D][ ] submit assignment (by: May 9 2023)\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"Please input the date for deadlines in yyyy-mm-dd format!\", e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    public void testToStringWithError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"            Deadline t \u003d new Deadline(\"submit assignment\", \"9 May 2023\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"[D][ ] submit assignment (by: May 9 2023)\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"Please input the date for deadlines in yyyy-mm-dd format!\", e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        Event t \u003d new Event(\"test\", \"2pm\", \"9pm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        assertEquals(\"[E][ ] test (from: 2pm to: 9pm)\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        Todo t \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        assertEquals(\"[T][ ] test\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    public void testMark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        Todo t \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"        t.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        assertEquals(\"[T][X] test\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"todo Learn Norwegian","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"deadline assignment 1 /by Sun 2359","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"event CNY meetup with friends /from 2pm /to 9pm","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"mark 3","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"unmark 3","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"list","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"noahxinjie":7}}]
