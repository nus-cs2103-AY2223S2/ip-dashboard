[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"noahxinjie":21,"-":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    private TextFlow dialog;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        Text dialogText \u003d new Text(text);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"        Font font \u003d Font.font(\"Consolas\", 12);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"        dialogText.setFont(font);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"        dialog.getChildren().add(dialogText);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"noahxinjie"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"noahxinjie"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"noahxinjie"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"noahxinjie"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"noahxinjie"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"noahxinjie":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Represents an instance of the Duke program.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"     * Constructor for an instance of Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     * Contains a Ui for interacting with user,","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"     * Storage for saving and retrieving tasks from a file,","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * and Tasklist for storing the tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * Catches any errors thrown when the program is running.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    public Duke() {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"            tasks \u003d new TaskList(storage.retrieveTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"            ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"     * Dictates program flow for Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"     * Catches any errors thrown when parsing user inputs.","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"                ui.showError(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"noahxinjie"},"content":"            return response;","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"noahxinjie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"noahxinjie"},"content":"            return ui.showError(e);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"noahxinjie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"noahxinjie"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"noahxinjie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"noahxinjie"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"noahxinjie":67,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":" * Represents errors thrown when user input","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":" * does not fit the intended use case.","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"noahxinjie":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"noahxinjie":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"            stage.setTitle(\"Jizo\");","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"            stage.getIcons().add(new Image(\"/images/jizoicon.jpg\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"noahxinjie":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eggy.jpg\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jizo.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * Initialises the container for dialogue between user and Duke.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        String greeting \u003d \"Hello! I\u0027m Kasa Jesus.\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        greeting +\u003d \"I see you need help, fellow eggy. What do you need to do?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"noahxinjie":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"import duke.command.PriorityCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":" * Encapsulates the parsing of user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * Parses user inputs to create a corresponding task.","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * @param inputs from the user input","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * @return Task that user wants to add","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not follow expected format","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    private static Task parseTaskCommands(String[] inputs) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        String taskType \u003d inputs[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"        if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Oops!! The description of a \" + taskType + \" cannot be empty!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        String rest \u003d inputs[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        Task task;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"            task \u003d new Todo(rest);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"            String[] addon \u003d rest.split(\" /\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"            String description \u003d addon[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"            if (addon.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(\"Oops!! I do not have enough information to create a deadline task!\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"                        + \"You might be missing a date or the task description.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"            String byString \u003d addon[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"            String[] byPart \u003d byString.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"            boolean isProperSyntax \u003d byPart[0].equals(\"by\");","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"            if (!isProperSyntax) {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"                String errorMessage \u003d \"Hmm it seem like you are trying to add an deadline here,\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"                        \" but I don\u0027t quite understand what you\u0027re trying to say! \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"                errorMessage +\u003d \"The proper syntax is: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"                errorMessage +\u003d \"deadline abc /by yyyy-mm-dd\";","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"noahxinjie"},"content":"            String by \u003d byPart[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"noahxinjie"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"noahxinjie"},"content":"            // event","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"noahxinjie"},"content":"            String[] addon \u003d rest.split(\" /\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"noahxinjie"},"content":"            String description \u003d addon[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"noahxinjie"},"content":"            if (addon.length \u003c\u003d 2) {","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(\"Oops!! I do not have enough information to create a event task!\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"noahxinjie"},"content":"                        + \"Please ensure you have indicated the duration using /from and /to!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"noahxinjie"},"content":"            String fromString \u003d addon[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"noahxinjie"},"content":"            String[] fromPart \u003d fromString.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"noahxinjie"},"content":"            String toString \u003d addon[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"noahxinjie"},"content":"            String[] toPart \u003d toString.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"noahxinjie"},"content":"            boolean isProperSyntax \u003d fromPart[0].equals(\"from\") \u0026\u0026 toPart[0].equals(\"to\");","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"noahxinjie"},"content":"            if (!isProperSyntax) {","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"noahxinjie"},"content":"                String errorMessage \u003d \"Hmm it seem like you are trying to add an event here,\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"noahxinjie"},"content":"                        \" but I don\u0027t quite understand what you\u0027re trying to say! \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"noahxinjie"},"content":"                errorMessage +\u003d \"The proper syntax is: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"noahxinjie"},"content":"                errorMessage +\u003d \"event abc /from date1 /to date2\";","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"noahxinjie"},"content":"                throw new DukeException(errorMessage);","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"noahxinjie"},"content":"            String from \u003d fromPart[1];","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"noahxinjie"},"content":"            String to \u003d toPart[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"noahxinjie"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"noahxinjie"},"content":"        return task;","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"noahxinjie"},"content":"     * Parses user inputs to create a Mark or Delete command.","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"noahxinjie"},"content":"     * @param inputs from the user input","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"noahxinjie"},"content":"     * @param command to create and execute","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"noahxinjie"},"content":"     * @return a Mark or Delete Command","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not follow expected format","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"noahxinjie"},"content":"    private static Command parseMarkAndDeleteCommands(String[] inputs, String command) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"noahxinjie"},"content":"        if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Please input the numbering of the task you want to \" + command + \" as well!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"noahxinjie"},"content":"        String number \u003d inputs[1]; // might throw Number Format Exception here","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"noahxinjie"},"content":"        int num \u003d Integer.parseInt(number);","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"noahxinjie"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"noahxinjie"},"content":"            return new MarkCommand(true, num - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"noahxinjie"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"noahxinjie"},"content":"            return new MarkCommand(false, num - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"noahxinjie"},"content":"            return new DeleteCommand(num - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"noahxinjie"},"content":"     * Parses user inputs to create a Find Command.","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"noahxinjie"},"content":"     * @param inputs from the user input","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"noahxinjie"},"content":"     * @return a Find Command with user-given keyword","lastModifiedDate":"2023-02-10"},{"lineNumber":120,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not follow expected format","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"noahxinjie"},"content":"    private static Command parseFindCommands(String[] inputs) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":123,"author":{"gitId":"noahxinjie"},"content":"        if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Please indicate the keyword you want to search with!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":126,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"noahxinjie"},"content":"        String keyword \u003d inputs[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"noahxinjie"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"noahxinjie"},"content":"     * Parses user inputs to create a Priority command.","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"noahxinjie"},"content":"     * @param inputs from the user input","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"noahxinjie"},"content":"     * @param command to create and execute","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"noahxinjie"},"content":"     * @return a Priority Command","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not follow expected format","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"noahxinjie"},"content":"    private static Command parsePriorityCommands(String[] inputs, String command) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"noahxinjie"},"content":"        if (inputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Please input the numbering of the task \" +","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"noahxinjie"},"content":"                    \"you want to update priority for as well!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"noahxinjie"},"content":"        String number \u003d inputs[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"noahxinjie"},"content":"        int num \u003d Integer.parseInt(number);","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"noahxinjie"},"content":"        switch(command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"noahxinjie"},"content":"        case \"low\":","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"noahxinjie"},"content":"            return new PriorityCommand(num - 1, Priority.LOW);","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"noahxinjie"},"content":"        case \"medium\":","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"noahxinjie"},"content":"            return new PriorityCommand(num - 1, Priority.MEDIUM);","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"noahxinjie"},"content":"        case \"high\":","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"noahxinjie"},"content":"            return new PriorityCommand(num - 1, Priority.HIGH);","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"noahxinjie"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"noahxinjie"},"content":"            return null;","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"noahxinjie"},"content":"     * Parses the user input to obtain the intended Command.","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"noahxinjie"},"content":"     * @param input read from System.in by the Ui","lastModifiedDate":"2023-02-10"},{"lineNumber":163,"author":{"gitId":"noahxinjie"},"content":"     * @return the corresponding Command","lastModifiedDate":"2023-02-10"},{"lineNumber":164,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not follow expected format.","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"noahxinjie"},"content":"     * @throws NumberFormatException whe user does input an integer for task number.","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"noahxinjie"},"content":"    public static Command parse(String input) throws DukeException, NumberFormatException {","lastModifiedDate":"2023-02-10"},{"lineNumber":168,"author":{"gitId":"noahxinjie"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":169,"author":{"gitId":"noahxinjie"},"content":"        assert inputs.length \u003e 0 : \"No command detected when parsing.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":170,"author":{"gitId":"noahxinjie"},"content":"        String command \u003d inputs[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":172,"author":{"gitId":"noahxinjie"},"content":"        switch (command) {","lastModifiedDate":"2023-02-10"},{"lineNumber":173,"author":{"gitId":"noahxinjie"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"noahxinjie"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-10"},{"lineNumber":175,"author":{"gitId":"noahxinjie"},"content":"        case \"list\":","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"noahxinjie"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":178,"author":{"gitId":"noahxinjie"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-10"},{"lineNumber":179,"author":{"gitId":"noahxinjie"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"noahxinjie"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"noahxinjie"},"content":"            return parseMarkAndDeleteCommands(inputs, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":183,"author":{"gitId":"noahxinjie"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"noahxinjie"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"noahxinjie"},"content":"        case \"event\":","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"noahxinjie"},"content":"            Task task \u003d parseTaskCommands(inputs);","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"noahxinjie"},"content":"            return new AddCommand(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":188,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":189,"author":{"gitId":"noahxinjie"},"content":"        case \"find\":","lastModifiedDate":"2023-02-10"},{"lineNumber":190,"author":{"gitId":"noahxinjie"},"content":"            return parseFindCommands(inputs);","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"noahxinjie"},"content":"        case \"low\":","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"noahxinjie"},"content":"        case \"medium\":","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"noahxinjie"},"content":"        case \"high\":","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"noahxinjie"},"content":"            return parsePriorityCommands(inputs, command);","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":197,"author":{"gitId":"noahxinjie"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Sorry I don\u0027t understand this command! :(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":201}},{"path":"src/main/java/duke/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"public enum Priority {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"        LOW, MEDIUM, HIGH;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"        @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"        public String toString() {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"            String result;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"            switch (this) {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"            case LOW:","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"                result \u003d \"priority: LOW\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"            case MEDIUM:","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"                result \u003d \"priority: MEDIUM\";","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"            case HIGH:","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"                result \u003d \"priority: HIGH\";","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"            default:","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"                result \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"            return result;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"noahxinjie":25}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":" * Represents the file to store tasks the user has inputted.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     * Creates a storage file at the intended file path.","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    public Storage() {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * Saves user-inputted tasks into a file.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks to be saved","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException if file cannot be accessed","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        FileWriter fw \u003d new FileWriter(DEFAULT_FILEPATH);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"            textToAdd.append(task).append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        fw.write(String.valueOf(textToAdd));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"     * Retrieves a Todo task from a line in the storage file.","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"     * @return a Todo task previously saved in the file.","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException if file cannot be read","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException if user input cannot be understood","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"    private Task retrieveTodo(String taskDescriptor, boolean isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"        Task task \u003d new Todo(taskDescriptor.trim());","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"            task.mark();","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"        return task;","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"noahxinjie"},"content":"     * Retrieves a Deadline task from a line in the storage file.","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"noahxinjie"},"content":"     * @return a Deadline task previously saved in the file.","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException if file cannot be read","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException if user input cannot be understood","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"noahxinjie"},"content":"    private Task retrieveDeadline(String taskDescriptor, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"noahxinjie"},"content":"        String[] restStrings \u003d taskDescriptor.split(\"by:\", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"noahxinjie"},"content":"        assert restStrings.length \u003d\u003d 2 : \"Not enough arguments to create deadline task.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"noahxinjie"},"content":"        String description \u003d restStrings[0].replaceAll(\"\\\\(\", \"\").trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"noahxinjie"},"content":"        String by \u003d restStrings[1].replaceAll(\"\\\\)\", \"\").trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"noahxinjie"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"noahxinjie"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"noahxinjie"},"content":"            task.mark();","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"noahxinjie"},"content":"        return task;","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"noahxinjie"},"content":"     * Retrieves a Event task from a line in the storage file.","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"noahxinjie"},"content":"     * @return a Event task previously saved in the file.","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException if file cannot be read","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException if user input cannot be understood","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"noahxinjie"},"content":"    private Task retrieveEvent(String taskDescriptor, boolean isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"noahxinjie"},"content":"        String[] restStrings \u003d taskDescriptor.split(\"from:\", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"noahxinjie"},"content":"        assert restStrings.length \u003d\u003d 2 : \"Not enough arguments to create event task.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"noahxinjie"},"content":"        String description \u003d restStrings[0].replaceAll(\"\\\\(\", \"\").trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"noahxinjie"},"content":"        String[] duration \u003d restStrings[1].split(\"to:\", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"noahxinjie"},"content":"        String from \u003d duration[0].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"noahxinjie"},"content":"        String to \u003d duration[1].replaceAll(\"\\\\)\", \"\").trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"noahxinjie"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"noahxinjie"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"noahxinjie"},"content":"            task.mark();","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"noahxinjie"},"content":"        return task;","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"noahxinjie"},"content":"     * Retrieves tasks previously saved in a file for the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"noahxinjie"},"content":"     * @return ArrayList of Tasks that were saved previously","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException if file cannot be read.","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException if user input cannot be understood.","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"noahxinjie"},"content":"    public ArrayList\u003cTask\u003e retrieveTasks() throws IOException, DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"noahxinjie"},"content":"        File f \u003d new File(DEFAULT_FILEPATH);","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"noahxinjie"},"content":"        f.getParentFile().mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"noahxinjie"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"noahxinjie"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"noahxinjie"},"content":"        Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"noahxinjie"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"noahxinjie"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"noahxinjie"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"noahxinjie"},"content":"            String[] inputs \u003d line.split(\"]\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"noahxinjie"},"content":"            assert inputs.length \u003d\u003d 3 : \"Too few arguments; likely storage of tasks in file was not done correctly.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"noahxinjie"},"content":"            String taskType \u003d inputs[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"noahxinjie"},"content":"            String status \u003d inputs[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"noahxinjie"},"content":"            boolean isDone \u003d status.equals(\"[X\");","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"noahxinjie"},"content":"            String rest \u003d inputs[2];","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"noahxinjie"},"content":"            Task task;","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"noahxinjie"},"content":"            if (taskType.equals(\"[T\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"noahxinjie"},"content":"                task \u003d retrieveTodo(rest, isDone);","lastModifiedDate":"2023-02-10"},{"lineNumber":124,"author":{"gitId":"noahxinjie"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":125,"author":{"gitId":"noahxinjie"},"content":"            } else if (taskType.equals(\"[D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"noahxinjie"},"content":"                task \u003d retrieveDeadline(rest, isDone);","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"noahxinjie"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"noahxinjie"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"noahxinjie"},"content":"                task \u003d retrieveEvent(rest, isDone);","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"noahxinjie"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"noahxinjie"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":135}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Encapsulates the list of tasks user has inputted.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        assert index \u003c this.tasks.size() : \"Index out of bounds. Unable to delete task.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"        assert index \u003c this.tasks.size() : \"Index out of bounds. Unable to retrieve task.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"     * Prints out all the tasks in the list by numbering them in order.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"     * @return printed tasks for the list command to show to user","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"    public String print() {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"            msg.append(String.format(\"%d. \" + tasks.get(i) + \"\\n\", i + 1));","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"        return String.valueOf(msg);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":55}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":" * Encapsulates the interaction between user and program.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"     * Reads the command entered by the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"     * @return the input to be parsed","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    public String showError(Exception e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"        return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":22}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to add Todo, Deadline and Event tasks.","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    private Task task;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * Adds task to tasks and save them in the storage file.","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        String msg \u003d \"Ok, time to add this task! Its priority will be medium by default: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d task.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d String.format(\"You now have %d task(s) in your list! \\n\", tasks.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"        return msg;","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":41}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":" * Represents a command.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" * Can be implemented by classes representing","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" * various types of commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    public Command() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to delete an existing task.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * Deletes the intended task from tasks and","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * updates the storage file accordingly.","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not comply with intended uses","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"            String errorMessage \u003d String.format(\"Task %d does not exist!\", taskIndex + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"        Task task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        String msg \u003d \"Pew pew! This task is gone now: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d task.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"        tasks.remove(this.taskIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d String.format(\"You now have %d task(s) in your list! \\n\", tasks.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"        return msg;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":49}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to exit the program.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     * Heeds user goodbye via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        return \"Goodbye! Pray to me and you shall hear from me again~\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to find tasks based on a keyword.","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    private final String keyword;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * Searches through tasks to find tasks that contain given keyword.","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * Outputs matching tasks to user via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"            boolean hasKeyword \u003d task.toString().contains(this.keyword);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"            if (hasKeyword) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        if (matchingTasks.size() \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"            String msg \u003d \"I sense something... \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"            msg +\u003d \"Eureka! I\u0027ve found the following matching task(s): \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"            msg +\u003d matchingTasks.print();","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"            msg +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"            return msg;","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"            return \"Oh no, I couldn\u0027t find any matching tasks! :( \\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"noahxinjie":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to list out all tasks in task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        super();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"     * Prints out the tasks in the list to the user via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        if (tasks.size() \u003c\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"            return \"Seems like you don\u0027t have any tasks yet eggy~\";","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"        String reply \u003d \"Hoho, here are your current tasks so far: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        reply +\u003d tasks.print();","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"        return reply;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to mark a task as done","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" * or unmark it as not done.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"    private final boolean isMark;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    public MarkCommand(boolean toMarkorUnmark, int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"        this.isMark \u003d toMarkorUnmark;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"     * Updates the chosen task in tasks to be marked or unmarked","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * and updates the storage file accordingly.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not comply with intended uses","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"            String errorMessage \u003d String.format(\"Task %d does not exist!\", taskIndex + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"        String msg;","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"        if (isMark) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"            task.mark();","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"            msg \u003d \"Ok, I\u0027ve marked this as done eggy~: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"            task.unmark();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"            msg \u003d \"Ok, I\u0027ve unmarked this for you~: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"noahxinjie"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d task.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"noahxinjie"},"content":"        return msg;","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":57}},{"path":"src/main/java/duke/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"import duke.Priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":" * Represents the command to modify the priority level","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":" * of an existing task.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"    private final Priority priorityLevel;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    public PriorityCommand(int taskIndex, Priority priorityLevel) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"        this.priorityLevel \u003d priorityLevel;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"     * Modifies the priority of the intended task from tasks and","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"     * updates the storage file accordingly.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"     * Informs user of successful execution of command via the ui.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"     * @param tasks TaskList that contains all the current tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"     * @param ui Ui that communicates with the user","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"     * @param storage Storage that backups the saving of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"     * @return string reply to be shown to user after executing this command","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"     * @throws IOException when storage file cannot be read","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"     * @throws DukeException when user input does not comply with intended uses","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"noahxinjie"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"noahxinjie"},"content":"        if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"noahxinjie"},"content":"            String errorMessage \u003d String.format(\"Task %d does not exist!\", taskIndex + 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"noahxinjie"},"content":"        Task task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"noahxinjie"},"content":"        task.setPriority(this.priorityLevel);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"noahxinjie"},"content":"        String msg \u003d \"Ok, I\u0027ve updated the priority of the following task: \\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d task.toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"noahxinjie"},"content":"        msg +\u003d \"\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"noahxinjie"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"noahxinjie"},"content":"        return msg;","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"noahxinjie":51}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"            throw new DukeException(\"Please input the date for deadlines in yyyy-mm-dd format!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \") \\n\" + this.priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"noahxinjie":27}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"    protected String from;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"    protected String to;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \") \\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"                + this.priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"noahxinjie":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import duke.Priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    protected Priority priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"        // priority is set to medium by default","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        this.priority \u003d priority.MEDIUM;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"    public void mark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"    public void setPriority(Priority priorityLevel) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        this.priority \u003d priorityLevel;","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"noahxinjie":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        return \"[T]\" + super.toString() + \"\\n\" + this.priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"noahxinjie":12}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"         minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"        \u003cTextFlow fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"                  style\u003d\"-fx-border-color: #000000; -fx-border-radius: 10; -fx-border-width: 0.5;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"                  -fx-background-color: #E0CCFF; -fx-background-radius: 10;\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"noahxinjie":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"            prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #FFFFFF;\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"CENTER\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"                   prefWidth\u003d\"321.0\" promptText\u003d\"type command here\" style\u003d\"-fx-background-color: #D8E5EA;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"                   -fx-background-radius: 10;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #57F565; -fx-background-radius: 10;\"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"                text\u003d\"SEND\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"            \u003cFont name\u003d\"Consolas Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"noahxinjie"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"noahxinjie"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"noahxinjie"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"noahxinjie"},"content":"                      style\u003d\"-fx-background-color: #FFFFFF;\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"noahxinjie"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"noahxinjie"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"noahxinjie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"noahxinjie"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"noahxinjie":36}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"            Deadline t \u003d new Deadline(\"submit assignment\", \"2023-05-09\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"[D][ ] submit assignment (by: May 9 2023)\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"Please input the date for deadlines in yyyy-mm-dd format!\", e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"    public void testToStringWithError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"noahxinjie"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"noahxinjie"},"content":"            Deadline t \u003d new Deadline(\"submit assignment\", \"9 May 2023\");","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"[D][ ] submit assignment (by: May 9 2023)\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"noahxinjie"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"noahxinjie"},"content":"            assertEquals(\"Please input the date for deadlines in yyyy-mm-dd format!\", e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"noahxinjie"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":28}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        Event t \u003d new Event(\"test\", \"2pm\", \"9pm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        assertEquals(\"[E][ ] test (from: 2pm to: 9pm)\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"noahxinjie"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"noahxinjie"},"content":"        Todo t \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"noahxinjie"},"content":"        assertEquals(\"[T][ ] test\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"noahxinjie"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"noahxinjie"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"noahxinjie"},"content":"    public void testMark() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"noahxinjie"},"content":"        Todo t \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"noahxinjie"},"content":"        t.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"noahxinjie"},"content":"        assertEquals(\"[T][X] test\", t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"noahxinjie"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"noahxinjie"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"noahxinjie":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"noahxinjie"},"content":"todo Learn Norwegian","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"noahxinjie"},"content":"deadline assignment 1 /by Sun 2359","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"noahxinjie"},"content":"event CNY meetup with friends /from 2pm /to 9pm","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"noahxinjie"},"content":"mark 3","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"noahxinjie"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"noahxinjie"},"content":"unmark 3","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"noahxinjie"},"content":"list","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"noahxinjie":7}}]
