{"authorDailyContributionsMap":{"nus-jeff":[{"date":"2023-01-18","commitResults":[{"hash":"8e426f7c92de7dcc2120cca41643671de02aa9ce","messageTitle":"Added greeting, echoing of input and goodbye message.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"38a74c9ff88e87c0374eec3008c0c823b44b9a0d","messageTitle":"added todo list function, modified gitignore to remove extra text","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":3}}}]},{"date":"2023-01-19","commitResults":[{"hash":"7fa6656ada70ec741c26b20c1f441e40325ccb55","messageTitle":"added Task class, implemented mark/unmark function","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":25}}},{"hash":"a225da27a2edfeb43a250e46a762955440dee911","messageTitle":"added ToDoTask, DeadlineTask, EventTask","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":10}}},{"hash":"e61accb306d13e1cc1b4a5a0b66c65aa83ff30e5","messageTitle":"Edit test cases, to test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"java":{"insertions":0,"deletions":1},"bat":{"insertions":1,"deletions":1}}},{"hash":"56ae68676754a16b3b976f8c460b09c57930e344","messageTitle":"Refactor code to use ArrayList, update test case expected output","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":4},"java":{"insertions":54,"deletions":61},"bat":{"insertions":1,"deletions":1}}},{"hash":"7c165d1244a640896659b465250726374f54c700","messageTitle":"Add delete function to Duke, update test case for it","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":14,"deletions":0}}}]},{"date":"2023-01-22","commitResults":[{"hash":"c4d99a4fa05cf6d54839c1029fffdb08010e6ea7","messageTitle":"Add DukeException, refactor code for error handling, numbersFormatException to be handled in future","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":20,"deletions":0},"java":{"insertions":58,"deletions":21}}}]},{"date":"2023-01-27","commitResults":[{"hash":"b3cfe5967137750d6d2e23b1d131267081c07001","messageTitle":"Add file save ability to ToDoList, file path to fix","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":24}}}]},{"date":"2023-01-29","commitResults":[{"hash":"5f85ece3dfde67517ef4dda0e0be5d54b04ecca6","messageTitle":"fix file path issue with ToDoList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":5}}},{"hash":"976d85c50a80bf3606dda66b36e8161feb1dddd5","messageTitle":"Add date formatting for deadline \u0026 event case","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":5}}},{"hash":"83196bb943122effb49c700a5dfd676e9fd1d211","messageTitle":"Change location of save file to project file as root rather than user home","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"f9c8ec63e273d929483c53f6f69fbfebff26525e","messageTitle":"Remove println statement from debugging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"a2e8a17059ff5170ed9884e3e278d47a579dc3c6","messageTitle":"Add missing abstract save method in Task, add getToDoCount in ToDoList ~","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"9badf7fba853a922d7df35849c856b566316a380","messageTitle":"Fix errors in saving and loading of ToDoList, test case update with new input","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":14},"java":{"insertions":41,"deletions":11}}}]},{"date":"2023-01-30","commitResults":[{"hash":"88cd7074752b49c0a77a5bd267ef6ec8fc90c27f","messageTitle":"Add Storage class to deal with loading and saving or ToDoList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":92}}}]},{"date":"2023-01-31","commitResults":[{"hash":"e4a4cec1f517a5a81b91dddf1e01b2e8b7e0c06d","messageTitle":"Add UI class to deal with displays","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":43}}},{"hash":"a7bec797945c4530648ca1a4bb539794a5e7c44b","messageTitle":"Add Parser class to deal with inputs","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":71}}},{"hash":"cba9d38673d7f275cb8d9e4f9ac106d8cec58234","messageTitle":"Create packages and organize the different classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":24},"bat":{"insertions":2,"deletions":2},"md":{"insertions":2,"deletions":2}}}]},{"date":"2023-02-01","commitResults":[{"hash":"af85e3dfc14c04ec5a2f9d7c0157c64e6ce19f95","messageTitle":"Add JUnit test case for Parser class and ToDoList class","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":116,"deletions":0}}},{"hash":"03468fe3a449238bd6f08edf9cc2b22c8e7272dd","messageTitle":"Fix wrong UI output due to package refactor, update EXPECTED.TXT to correctly match","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":6,"deletions":6}}},{"hash":"9f8bb5372d6d8b652f5755a429bd0d16867f35e9","messageTitle":"Add find function to ToDoList, test case now includes find function","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":22,"deletions":0}}},{"hash":"6fc8c95a4a076de050c8bf5c5834d907939f0565","messageTitle":"Refactor getTask method in ToDoList to prevent access to index 0 Task, getTask now throws IndexDukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":3}}},{"hash":"8ef2740fb4e12c7a1f2fec56ef7dac7eaadaec48","messageTitle":"Refactor Storage class to allow storing of any type of path, path stored in storage are now with reference to user home directory","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"java":{"insertions":142,"deletions":14}}},{"hash":"c5898835c5ac69534344fc20f5c266b8034548c9","messageTitle":"Modify listMsg method in UI class to take in a ToDoList instead of its String representation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":13}}},{"hash":"54a715da13609c0115207d48d0dabe678543bede","messageTitle":"Add javadoc header comments to public classes and methods in src/main/java/duke","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}}]},{"date":"2023-02-02","commitResults":[{"hash":"2d879321b5165df4025a28675614f26a9cce9142","messageTitle":"Refactor code to meet conding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":139}}},{"hash":"6186bbac27053d436381d90e2e0ad5aae42da376","messageTitle":"Refactor code to meet conding standards","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":10}}}]},{"date":"2023-02-07","commitResults":[{"hash":"2f52c90eea7d0663c0d762ea86627d1e443e60dd","messageTitle":"Add template JavaFX based on tutorial","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":46,"deletions":0},"java":{"insertions":182,"deletions":1}}}]},{"date":"2023-02-08","commitResults":[{"hash":"3fe6e0bbc415af3940987f2f37f8e4775cd3dff4","messageTitle":"Add GUI for Duke, refactor code for GUI, update test cases","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":174,"deletions":189}}},{"hash":"b0996891e5b90e7fd805837d4401f4aaf30b0126","messageTitle":"Fix error in test cases","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":4}}},{"hash":"d1b0c5239d0b1df805f373935ecfeb3dd338e1a8","messageTitle":"Add java assertions to code, add IntParseDukeException class","messageBody":"Some parts of the code relies on the programmer entering\nthe correct input argument in order for the code to not\nexhibit any unwanted behaviour.\n\nLet\u0027s use java assertion to check for such unwanted\nbehaviours caused by the programmer\u0027s wrong input.\n\nExceptions may also be thrown while trying to parse\na string input that is not an integer for the mark,\nunmark and delete command in Duke.\n\nLet\u0027s handle this exception by creating an\nIntParseDukeException that gets throwns when such\nan error occurs.\n","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":6}}}]},{"date":"2023-02-09","commitResults":[{"hash":"6cd6f86c22e5bf70b2a016d2d8117d36ec6716ed","messageTitle":"Add reminder to Duke and LoadDukeException class.","messageBody":"Users have to manually look at their to do list in\nDuke in order to find any tasks that is about to happen.\n\nLet\u0027s create a reminder that appears everytime Duke starts\nup to remind users that the given task is about to happen.\n\nThe number of days to the task to be compared to is set at\n10 days. The ability to change this day will be implemented\nin the future.\n\nA new DukeException class, LoadDukeException has also been\ncreated to deal with errors arising from loading the file\nfrom the given path to Duke.\n\nCode has been refactored to make the reminder function work\nand to throw and catch LoadDukeException.\n","tags":["BCD-Extension","A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":186,"deletions":32}}}]},{"date":"2023-02-10","commitResults":[{"hash":"42e0cd6ea9b52fdfb0276e95bb2835e67bdddda6","messageTitle":"Improve code quality for EventTask and DeadlineTask class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"c4388547bc78a54871912f524f0e9abc222b8cb3","messageTitle":"Improve code quality","messageBody":"Certain parts of the code are of low quality\nsuch as the existance of arrow-head style\ncode and empty catch blocks.\n\nLet\u0027s improve the quality of code by refactoring\nit. Changes include but are not limited to:\n+ extracting parts of code to another method\n+ comments to explain empty catch blocks\n","fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":66}}}]},{"date":"2023-02-15","commitResults":[{"hash":"17b810df77674bd804e2fca07af73d7a5cd165f9","messageTitle":"Touch up code based on SE Bot suggestion","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":11,"deletions":11}}}]}]},"authorFileTypeContributionMap":{"nus-jeff":{"java":1268,"md":2,"fxml":46,"sh":0,"bat":2,"gradle":16,"txt":32}},"authorContributionVariance":{"nus-jeff":19594.896},"authorDisplayNameMap":{"nus-jeff":"CS2103T-T12-4 JEFF.. LEE"}}
