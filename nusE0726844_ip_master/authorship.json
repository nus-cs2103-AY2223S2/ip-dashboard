[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"nusE0726844":20}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"T |   | Read book","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"D |   | Return book | 2024-01-01","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"E |   | Book fair | 2024-01-01 - 2024-02-01","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nusE0726844":3}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"T |   | Read book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"D |   | Return book | 2024-01-01","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"E |   | Book fair | 2024-01-01 - 2024-02-01","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * Generates a Duke object","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    public static final String DEFAULT_FILEPATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * Generates a Duke object.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * Stores saved data in default filepath.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public Duke() {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        storage \u003d new Storage(DEFAULT_FILEPATH);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     * Generates a Duke object.","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     * Stores saved data in specified filepath.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     * @param filePath Location of saved data.","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    public Duke(String... filePath) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        if (filePath.length \u003e 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"            storage \u003d new Storage(filePath[0]);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     * Executes Duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"     * Creates and run Duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nusE0726844":83,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":" * Handles exceptions specific to Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"     * Holds the error message of the exception","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"     * @param errorMessage Error message of the exception","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    protected enum COMMAND {BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND}","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     * Generates command from user command input","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand User command input","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If the input from the user is not a valid command","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"            String[] input \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            COMMAND cmd \u003d COMMAND.valueOf(input[0].toUpperCase());","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            switch (cmd) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            case BYE:","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            case LIST:","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                return new ListCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"            case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                return new AddCommand(Todo.generate(fullCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                return new AddCommand(Deadline.generate(fullCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"            case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                return new AddCommand(Event.generate(fullCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            case MARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"                return new MarkCommand(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"                return new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"            case DELETE:","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"                return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            case FIND:","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"                return new FindCommand(fullCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":52}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    protected Path directory;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    protected Path filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     * Initialises the location where save data will be stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * @param filePath Filepath where the save data is stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        this.directory \u003d Paths.get(root);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        this.filePath \u003d Paths.get(root, filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        int index \u003d filePath.lastIndexOf(\"/\") - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        if (index \u003e 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            this.directory \u003d Paths.get(root,","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                    filePath.substring(0, index + 1));","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * Checks the directories and filepath of the storage location.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     * If directory does not exist, create the necessary directories.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     * If file does not exist, create the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while checking the location of saved data","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    private void checkStorage() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            // Checks if directory exist, if not create directory","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            if (!Files.exists(directory)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            // Checks if filepath exist, if not create directory","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Failed to check storage due to I/O interrupt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"     * Saves the changes made to the list of task in the hard disk","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while saving data","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"            // Convert list of tasks to save data","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            for (Task task: tasks.getTasks()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"                output.append(task.save())","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"            // Saves list of tasks in hard disk","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"            checkStorage();","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"            Files.write(filePath,","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"                    output.toString()","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"                            .getBytes());","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Failed to save data due to I/O interrupt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"     * Returns the data stored in the hard disk","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"     * @return List of tasks as string","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while loading data","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"            // Gets save data from hard disk","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"            checkStorage();","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"            String[] saveData \u003d Files.readAllLines(filePath)","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"                    .toArray(new String[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"            // Load list of tasks from save data","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"            for (String line: saveData) {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"                String[] data \u003d line.split(\" \\\\| \", 3);","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"                String type \u003d data[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"                boolean isDone \u003d data[1].equals(\"X\");","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"                switch (data[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"                case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"                    tasks.add(Todo.load(data[2], isDone));","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"                case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"                    tasks.add(Deadline.load(data[2], isDone));","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"                case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"                    tasks.add(Event.load(data[2], isDone));","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"            return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Loading failed due to I/O interrupt\");","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * Contains the task list","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Has operations to man tasks in the list","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public TaskList(TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        this.tasks \u003d tasks.getTasks();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public int size() {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * Gets the task at the specified index","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * @return Task at specified index","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index is not in the list of task\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * Adds specified task to list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     * @param task duke.task.Task to be added","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     * Removes specified task from list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of task to be removed","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index of task to be removed is not in the list of task\");","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"     * Marks specified task from list of tasks as done","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of specified task","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"    public Task mark(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            task.mark();","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"            return task;","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index of task to be marked is not in the list of task\");","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     * Changes the status of specified task from list of tasks back to not done","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of specified task","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"    public Task unmark(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"            task.unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"            return task;","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index of task to be unmarked is not in the list of task\");","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     * Shows the list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"    public Task[] toArray() {","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        return tasks.toArray(new Task[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":104}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    protected Scanner sc;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * Creates a user interface that interacts with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public Ui() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     * Reads the command input by the user","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * @return The full command input by the user","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * Shows the divider line (\"_______\")","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(\" \".repeat(4)","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                + \"_\".repeat(60));","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * Shows the specified message","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     * @param message Message to be shown","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public void echo(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        String indent \u003d \" \".repeat(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(indent","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                + message.replace(\"\\n\",","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                \"\\n\" + indent));","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     * Shows Duke\u0027s logo and greets the user","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        // Shows logo of Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(\"Hello from\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        // Shows user greeting","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        echo(\"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"     * Shows farewell message","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    public void showFarewell() {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"     * Shows the specified task\u0027s details","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"     * @param task Task to be shown","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    public void showTask(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        echo(\"  \" + task.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"     * Shows the number of tasks stored in list","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"    public void showTaskCount(TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        echo(\"Now you have \"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"                + tasks.size()","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"     * Shows the list of task","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"    public void showTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"            echo(\"There is no task in your list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"            return;","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"            message.append(\"\\n\")","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"                    .append(i + 1)","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"                    .append(\".\")","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"                    .append(tasks.get(i));","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"        echo(message.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"     * Shows the list of tasks that contains the specified keyword","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"     * @param keyword Keyword","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"    public void showFind(TaskList tasks, String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"        StringBuilder message \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"        for (Task task: tasks.getTasks()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"            if (task.getDescription()","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"                    .toUpperCase()","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"                    .contains(keyword","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"                            .toUpperCase())) {","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"                message.append(\"\\n\")","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"                        .append(i + 1)","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"                        .append(\".\")","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"                        .append(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"                i++;","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"        if (i \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"            message \u003d new StringBuilder(\"There is no matching task in your list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        echo(message.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"    // Error messages for exceptions specific to Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"     * Shows the error message of the encountered exception","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"nusE0726844"},"content":"        echo(\"☹ OOPS!!! \" + errorMessage + \" :-(\");","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"nusE0726844"},"content":"     * Shows the error message of the exception encountered when loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"nusE0726844"},"content":"     * from save data","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"nusE0726844"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"nusE0726844"},"content":"        showError(\"There was an error while loading from save file\");","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":162}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Handles the adding task to list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Stores the task to add to list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param task Task to be added to list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * Adds task to list","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     * Saves changes made to list in the hard disk","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while saving data","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        ui.echo(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        ui.showTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        ui.showTaskCount(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Handles the various commands available in Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * Executes actions specified by command","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    /** Specifies Duke should not exit */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Handles the deletion of task from list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Stores the index of the task to be deleted","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of the task to be deleted","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * Stores the index of the task to be deleted","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand The user\u0027s input command","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input from user does not contain a valid index","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    public DeleteCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            index \u003d Integer.parseInt(fullCommand","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                    .split(\"delete\")[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                    .trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index given is not an integer\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"An index for a task was not given\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * Removes task from list","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * Saves changes made to list in the hard disk","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while saving data","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d tasks.delete(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        ui.echo(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        ui.showTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        ui.showTaskCount(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":61}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * Handles exiting the program","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     * Exits Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        ui.showFarewell();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    /** Specifies that Duke should exit */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Handles the finding tasks that contains the keyword from the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    protected final String keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * Stores the specified keyword","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand User\u0027s input command","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If a keyword is not specified","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    public FindCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"            this.keyword \u003d fullCommand.trim()","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"                    .substring(5)","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"                    .trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"A keyword was not given\");","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * Shows the list of tasks that contains the specified keyword","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        ui.showFind(tasks, keyword);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":41}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Handles the showing the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * Shows the details of tasks from list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":24}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Handles the marking task as done","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Stores the index of the task to be marked as completed","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of the task to be marked as completed","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * Stores the index of the task to be marked as completed","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand The user\u0027s input command","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input from user does not contain a valid index","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    public MarkCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            index \u003d Integer.parseInt(fullCommand","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                    .split(\"mark\")[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                    .trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index given is not an integer\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"An index for a task was not given\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * Marks task as done","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * Saves changes made to list in the hard disk","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while saving data","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d tasks.mark(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        ui.echo(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        ui.showTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":60}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Handles the changing the status of task to not done","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Stores the index of the task to be marked as not done","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of the task to be marked as not done","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * Stores the index of the task to be marked as not done","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand The user\u0027s input command","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input from user does not contain a valid index","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    public UnmarkCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            index \u003d Integer.parseInt(fullCommand","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                    .split(\"unmark\")[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                    .trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Index given is not an integer\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"An index for a task was not given\");","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * Changes completion status of task to not done","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * Saves changes made to list in the hard disk","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while saving data","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d tasks.unmark(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        ui.echo(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        ui.showTask(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":60}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Contains information of a deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Contains description and deadline of the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * Creates a deadline object","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * @param by Deadline time of the deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If specified by deadline could not be parsed to datetime","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"duke.task.Deadline could not be parsed to datetime\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     * Creates a deadline object","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * @param by Deadline time of the deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Completion status of task","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If specified by deadline could not be parsed to datetime","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public Deadline(String description, String by, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * Generate a Deadline object from user\u0027s command input","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * @param input The user\u0027s command input","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If the input from the user is missing some fields","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    public static Deadline generate(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        // Cleans input and checks for description and deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"            input \u003d input.trim()","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"                    .substring(9)","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"                    .trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Deadline missing description and deadline\");","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"            int index \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"                throw new DukeException(\"Deadline missing deadline\");","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"                throw new DukeException(\"Deadline missing description\");","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"            // Generates duke.task.Deadline task","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d input.substring(0, index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            String by \u003d input.substring(index + 4);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Deadline missing deadline\");","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     * Generate a Deadline object from saved data","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     * @param input The saved data of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data of the deadline task is missing some fields","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"    public static Deadline load(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            // Cleans input and checks if fields are empty","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"            input \u003d input.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"            if (input.equals(\"\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"                throw new DukeException(\"Deadline missing description and deadline\");","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"            // Checks for separator","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"            int index \u003d input.lastIndexOf(\"|\");","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"                throw new DukeException(\"Deadline missing deadline\");","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"            } else if (index \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"                throw new DukeException(\"Deadline missing description\");","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"            // Generates duke.task.Deadline task","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d input.substring(0, index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"            String by \u003d input.substring(index + 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"            return new Deadline(description, by, isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Deadline missing deadline\");","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"     * Returns type of task, completion status, description, and deadline of","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"     * the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"     * @return Type of task, completion status, description, and deadline of","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"     * the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"                + \" (by: \" + by.format(DateTimeFormatter","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"                        .ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"                + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"     * @inherit","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"     * Returns the Deadline task\u0027s saved data in string format","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"    public String save() {","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"        return \"D | \" + getStatusIcon()","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"                + \" | \" + description","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"                + \" | \" + by;","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":137}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Contains information of an event","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Contains description and duration of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * Creates an event object","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * @param description The description of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @param from Starting time of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     * @param to Ending time of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If specified from and to timings could not be parsed to datetime","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Starting time could not be parsed to datetime\");","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Ending time could not be parsed to datetime\");","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     * Creates a Event object","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * @param from duke.task.Deadline time of the deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * @param to duke.task.Deadline time of the deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Completion status of task","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If specified from and to timings could not be parsed to datetime","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    public Event(String description, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Starting time could not be parsed to datetime\");","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Ending time could not be parsed to datetime\");","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"     * Generate a Event object from user\u0027s command input","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"     * @param input The user\u0027s command input","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If the input from the user is missing some fields","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    public static Event generate(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        // Cleans input and checks for description and duration","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            input \u003d input.trim()","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"                    .substring(6)","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                    .trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Event missing description and event duration\");","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"        // Generates duke.task.Event task","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"            String[] data \u003d input.split(\" /from | /to \");","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"            return new Event(data[0], data[1], data[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Event missing fields\");","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"     * Generate a Event object from saved data","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"     * @param input The saved data of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data of the event task is missing some fields","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    public static Event load(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"            String[] data \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"            String[] time \u003d data[1].split(\" - \");","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"            return new Event(data[0], time[0], time[1], isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"Event missing fields\");","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"     * Returns type of task, completion status, description, and duration of","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"     * the event","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"     * @return Type of task, completion status, description, and duration of","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"     * the event","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"                + \" (from: \" + from","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"                        .format(DateTimeFormatter","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"                                .ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"                + \" to: \" + to","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"                        .format(DateTimeFormatter","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"                                .ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"                + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"     * @inherit","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"     * Returns the Event task\u0027s saved data in string format","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"    public String save() {","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"        return \"E | \" + getStatusIcon()","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"                + \" | \" + description","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"                + \" | \" + from","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"                + \" - \" + to;","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":135}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":" * Contains information of a task","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":" * Contains description and completion status of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"public class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    protected String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     * Generates new task from description","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of new task","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * Generates new task from description","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     * Allows completion status to be specified","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of new task","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Completion status of new task","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        return description;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     * Changes completion status to done","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public void mark() {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * Changes completion status to not done","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     * Returns the task\u0027s saved data in string format","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     * @return The task\u0027s saved data in string format","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    public String save() {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        return \"  | \" +  getStatusIcon()","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"                + \" | \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"     * Returns the task\u0027s details","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"     * @return Task\u0027s details","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        return \"[\" + getStatusIcon() + \"] \"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"                + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":" * Contains information of a todo","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":" * Contains description of the todo","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     * Creates a todo object","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * Creates a todo object","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of the todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Completion status of the todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * Generate a todo object from user\u0027s command input","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     * @param input The user\u0027s command input","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data of the todo task is missing some fields","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public static Todo generate(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        // Cleans input and checks for description","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d input.trim()","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"                    .substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"            return new Todo(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"duke.task.Todo missing description\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * Generate a todo object from saved data","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     * @param input The saved data of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone The completion status of the task","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data of the todo task is missing some fields","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    public static Todo load(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        // Cleans input and checks for description","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"            throw new DukeException(\"duke.task.Todo missing description\");","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        return new Todo(input, isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"     * Returns type of task, completion status, description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"     * @return Type of task, completion status, description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"     * @inherit","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"     * Returns the ToDo task\u0027s saved data in string format","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    public String save() {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        return \"T | \" + getStatusIcon()","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"                + \" | \" + description;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":83}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":9}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":35}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DialogBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":11}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    public void getDescription() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getDescription","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        String deadline \u003d \"2024-01-01\";","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        Deadline task \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"                description);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public void getStatusIcon() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getStatusIcon","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        String deadline \u003d \"2024-01-01\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        Deadline task \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":35}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"public class EventTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    public void getDescription() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getDescription","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        String from \u003d \"2024-01-01\";","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        String to \u003d \"2024-02-01\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"                description);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public void getStatusIcon() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getStatusIcon","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        String from \u003d \"2024-01-01\";","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        String to \u003d \"2024-02-01\";","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        Event task \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":37}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    public void getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getDescription","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"                description);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getStatusIcon","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":32}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    public void getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getDescription","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"                description);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getStatusIcon","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                \" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"todo read book","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"deadline return book /by 2024-02-01","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"event return book /from 2024-01-01 /to 2024-02-01","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"mark 0","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"javac -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"nusE0726844":2}}]
