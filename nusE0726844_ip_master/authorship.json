[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    mainClassName \u003d \"duke.ui.Launcher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"nusE0726844":21}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"T |   | Read book","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"D |   | Return book | 2024-01-01","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"E |   | Book fair | 2024-01-01 - 2024-02-01","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"nusE0726844":3}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"T |   | Read book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"D |   | Return book | 2024-01-01","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"E |   | Book fair | 2024-01-01 | 2024-02-01","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"nusE0726844":3}},{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"  |   | Hello World","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * Duke task management","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    public static final String DEFAULT_FILEPATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private Storage storage \u003d new Storage(DEFAULT_FILEPATH);","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * Generates a Duke object.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * Stores saved data in specified filepath.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * @param filepath Filepath of storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public Duke(String... filepath) {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        if (filepath.length \u003e 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            assert filepath.length \u003d\u003d 1 : \"More than 1 filepath provided\";","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            storage \u003d new Storage(filepath[0]);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"            storage.setLoadError(true);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            assert tasks.size() \u003d\u003d 0 : \"TaskList started with undefined task\";","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * Creates and run Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * Executes Duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        if (storage.isLoadError()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            ui.echo(ui.getLoadingErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"                assert fullCommand !\u003d null : \"User\u0027s command is null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"                String response \u003d c.getResponse();","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                assert response !\u003d null : \"Response is null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"                ui.echo(response);","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"                ui.showError(DukeException","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                        .getError()","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"                        .getMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"            } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    public String getWelcome() {","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"    public String getLoadErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        if (storage.isLoadError()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"            return ui.getLoadingErrorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        return null;","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"            String response \u003d c.getResponse();","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"            assert response !\u003d null : \"Response is null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"            return response;","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"            return DukeException","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"                    .getError()","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"                    .getMessage();","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nusE0726844":109,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":" * Handles exceptions specific to Duke","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"     * Holds the error message of the exception","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"     * @param errorMessage Error message of the exception","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getError() {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"There was an unknown error\");","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorParse() {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorStorage(String type) {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"Failed to \" + type + \" data due to I/O interrupt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskType() {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"Task is of the wrong type\");","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskIndexOutOfBounds(String type) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"Index of task to be \" + type + \" is not in the TaskList\");","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskLoadMissingField() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"Saved data is missing some fields\");","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskMissingField(String type) {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        if (type.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            return new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(type + \" task is missing some fields.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskTimeFormat(String task, String time) {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"The \" + time + \" of \" + task + \" task must be in the format \u003cYYYY-MM-DD\u003e.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskDuplicate() {","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"Task is already in the TaskList\");","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskNumberFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"Index given is not an integer\");","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskArrayIndexOutOfBounds() {","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"An index for a task was not given\");","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    public static DukeException getErrorTaskMissingKeyword() {","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        return new DukeException(\"A keyword was not given\");","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":67}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    protected enum CommandType { BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND }","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     * Generates command from user command input","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand User command input","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If the input from the user is not a valid command","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            CommandType cmd \u003d CommandType.valueOf(fullCommand","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"                    .trim()","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                    .split(\" \", 2)[0]","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                    .toUpperCase());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"            switch (cmd) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"            case BYE:","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"            case LIST:","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"                return new ListCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"            case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"                return new AddCommand(Todo.generate(fullCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"                return new AddCommand(Deadline.generate(fullCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"                return new AddCommand(Event.generate(fullCommand));","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"            case MARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                return new MarkCommand(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                return new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"            case DELETE:","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"                return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"            case FIND:","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"                return new FindCommand(fullCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                throw DukeException.getErrorParse();","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorParse();","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":61}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    protected Path directory;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    protected Path filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    protected boolean isLoadError \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * Initialises the location where save data will be stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @param filePath Filepath where the save data is stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        this.directory \u003d Paths.get(root);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        this.filePath \u003d Paths.get(root, filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        int index \u003d filePath.lastIndexOf(\"/\") + 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        if (index \u003e 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"            this.directory \u003d Paths.get(root,","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                    filePath.substring(0, index));","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    public boolean isLoadError() {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        return isLoadError;","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public void setLoadError(boolean isLoadError) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        this.isLoadError \u003d isLoadError;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * Checks the directories and filepath of the storage location.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     * If directory does not exist, create the necessary directories.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * If file does not exist, create the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while checking the location of saved data","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    private void checkStorage() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            // Checks if directory exist, if not create directory","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"            if (!Files.exists(directory)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"            // Checks if filepath exist, if not create directory","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorStorage(\"check\");","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"     * Saves the changes made to the list of task in the hard disk","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while saving data","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            checkStorage();","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"            String[] saveData \u003d tasks.toSaveData();","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"            Files.write(filePath, String","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"                    .join(\"\\n\", saveData)","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"                    .getBytes());","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorStorage(\"save\");","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"     * Returns the data stored in the hard disk.","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"     * @return Array tasks\u0027 save data.","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If encountering an I/O interrupt while loading data.","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"    public String[] load() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"            checkStorage();","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"            return Files.readAllLines(filePath)","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"                    .toArray(new String[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorStorage(\"load\");","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":101}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Deals with adding tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Save changes made to list in the hard disk.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final Task task;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Adds specified task to TaskList.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param task Task to be added to TaskList.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        // Check for duplicate","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        for (Task task: tasks.getTasks()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            if (task.equals(this.task)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"                throw DukeException.getErrorTaskDuplicate();","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        setResponse(ui.getAddMessage() + \"\\n  \"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                + ui.getTasksCountMessage(tasks.size()));","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Deals with executing command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public String getResponse() {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        return response;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    protected void setResponse(String response) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        this.response \u003d response;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /** Checks if Duke should exit. */","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        return isExit;","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    /** Sets program to exit. */","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":43}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Deals with removing tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Save changes made to list in the hard disk.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Removes specified task to TaskList.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand The user\u0027s input command.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input from user does not contain a valid index.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public DeleteCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            index \u003d Integer.parseInt(fullCommand","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"                    .split(\"delete\")[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                    .trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskNumberFormat();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskArrayIndexOutOfBounds();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d tasks.delete(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        setResponse(ui.getDeleteMessage() + \"\\n  \"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                + ui.getTasksCountMessage(tasks.size()));","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":51}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Deals with exiting Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        exit();","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        setResponse(ui.getFarewellMessage());","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Deals with finding tasks that contains the keyword.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     * Finds tasks that contains the keyword.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand User\u0027s input command.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If a keyword is not specified.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public FindCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"            this.keyword \u003d fullCommand.trim()","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"                    .substring(5)","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"                    .trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskMissingKeyword();","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        StringBuilder response \u003d new StringBuilder(ui.getFindMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        for (Task task: tasks.find(keyword)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            response.append(\"\\n\")","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                    .append(count + 1)","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                    .append(\".\")","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                    .append(task);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            count++;","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        setResponse(count \u003d\u003d 0","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"                ? \"There is no such task in your list.\"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                : response.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":56}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Deals with showing all tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        StringBuilder response \u003d new StringBuilder(ui.getListMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        for (Task task: tasks.getTasks()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            response.append(\"\\n\")","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                    .append(count + 1)","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                    .append(\".\")","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"                    .append(task);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            count++;","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        setResponse(count \u003d\u003d 0","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                ? \"There is no task in your list.\"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"                : response.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":39}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Deals with changing task status to done.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Save changes made to list in the hard disk.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Changes task status to done.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand The user\u0027s input command.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input from user does not contain a valid index.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public MarkCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            index \u003d Integer.parseInt(fullCommand","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"                    .split(\"mark\")[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                    .trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskNumberFormat();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskArrayIndexOutOfBounds();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d tasks.mark(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        setResponse(ui.getMarkMessage()","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                + \"\\n  \" + task);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":50}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" * Deals with changing task status to not done.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Save changes made to list in the hard disk.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final int index;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Changes task status to not done.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param fullCommand The user\u0027s input command","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input from user does not contain a valid index","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public UnmarkCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            index \u003d Integer.parseInt(fullCommand","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"                    .split(\"unmark\")[1]","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                    .trim());","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskNumberFormat();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskArrayIndexOutOfBounds();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * Executes command input by user.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * @param ui Handles user interaction.","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * @param storage Handles saving and loading tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException if encountering an exception specific to Duke.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d tasks.unmark(index);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        setResponse(ui.getUnmarkMessage()","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                + \"\\n  \" + task);","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":50}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"/** Deals with deadline tasks. */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDate by;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * Generates a new deadline task.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * @param by Deadline of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public Deadline(String description, String by, boolean... isDone) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        super(description.trim(), isDone.length \u003e 0 \u0026\u0026 isDone[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            this.by \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskTimeFormat(\"a deadline\", \"deadline\");","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public String getTimeFormat(LocalDate time) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        return time.format(DateTimeFormatter","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                .ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        return by.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * Returns task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     * @return Task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    public String toSaveData(String delimiter) {","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        return \"D\" + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                + getStatusIcon()","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"                + getDescription()","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"                + by;","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     * Loads task from given saved data.","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     * @param data Saved data of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"     * @return New deadline task.","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public static Deadline load(String data, String delimiter) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d data.split(delimiter, 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            String taskType \u003d fields[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"            boolean status \u003d fields[1].equals(\"X\");","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            String[] taskFields \u003d fields[2].split(delimiter, 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d taskFields[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"            String by \u003d taskFields[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            assert taskType.equals(\"D\") : \"Task is of the wrong type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"            return new Deadline(description, by, status);","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskLoadMissingField();","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     * Generates new deadline task from given user input.","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     * @return New deadline task.","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"    public static Deadline generate(String input) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"            String[] taskFields \u003d fields[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d taskFields[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"            String by \u003d taskFields[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"            assert (fields[0].trim()","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"                    .equalsIgnoreCase(\"deadline\"))","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"                    : \"The given input is of the wrong task type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskMissingField(\"Deadline\");","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"     * Compares this task to the specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"     * @param task The task to compare this task against.","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"     * @return true if the given task is equivalent to this task, false otherwise.","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameClass \u003d task.getClass().equals(getClass());","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"        if (!isSameClass) {","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameDeadline \u003d ((Deadline) task).by.equals(by);","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"        return super.equals(task) \u0026\u0026 isSameDeadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"     * Returns the task\u0027s details in string format.","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"     * @return Task\u0027s details.","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"                + \" (by: \" + getTimeFormat(by) + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":131}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.awt.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/** Deals with event tasks. */","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDate from;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDate to;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     * Generates a new event task.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of event.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @param from Start time of event.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * @param to End time of event.","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Status of event.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public Event(String description, String from, String to, boolean... isDone) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        super(description, isDone.length \u003e 0 \u0026\u0026 isDone[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskTimeFormat(\"an event\", \"start time\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskTimeFormat(\"an event\", \"end time\");","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    public String getTimeFormat(LocalDate time) {","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        return time.format(DateTimeFormatter","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"                .ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        return from.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        return to.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     * Returns task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     * @return Task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    public String toSaveData(String delimiter) {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        return \"E\" + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"                + getStatusIcon()","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"                + getDescription()","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"                + from","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                + to;","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"     * Loads task from given saved data.","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"     * @param data Saved data of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"     * @return New task.","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    public static Event load(String data, String delimiter) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d data.split(delimiter, 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"            String taskType \u003d fields[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"            boolean status \u003d fields[1].equals(\"X\");","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"            String[] taskFields \u003d fields[2].split(delimiter, 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d taskFields[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"            String from \u003d taskFields[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"            String to \u003d taskFields[2].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"            assert taskType.equals(\"E\") : \"Task is of the wrong type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            return new Event(description, from, to, status);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskLoadMissingField();","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"     * Generates new event task from given user input.","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     * @return New event task.","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"    public static Event generate(String input) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"            String[] taskFields \u003d fields[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d taskFields[0].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"            String from \u003d taskFields[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"            String to \u003d taskFields[2].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"            assert (fields[0].trim()","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"                    .equalsIgnoreCase(\"event\"))","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"                    : \"The given input is of the wrong task type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskMissingField(\"Event\");","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"    // event test /from 2023-02-01 /to 2023-03-01","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"     * Compares this task to the specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"     * @param task The task to compare this task against.","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"     * @return true if the given task is equivalent to this task, false otherwise.","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameClass \u003d task.getClass().equals(getClass());","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"        if (!isSameClass) {","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameStartTime \u003d ((Event) task).from.isEqual(from);","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameEndTime \u003d ((Event) task).to.isEqual(to);","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"        return super.equals(task)","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 isSameStartTime","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 isSameEndTime;","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"     * Returns the task\u0027s details in string format.","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"     * @return Task\u0027s details.","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"                + \" (from: \" + getTimeFormat(from)","lastModifiedDate":"2023-02-14"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"                + \" to: \" + getTimeFormat(to) + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":151}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/** Deals with tasks. */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"public class Task {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"    private final String description;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"     * Generates a new task.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public Task(String description, boolean... isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d isDone.length \u003e 0 \u0026\u0026 isDone[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        return description;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    /** Changes status to done. */","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public void mark() {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        assert !isDone : \"Task was already done\";","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    /** Changes status to not done. */","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        assert isDone : \"Task was not done\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     * Returns task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * @return Task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public String toSaveData(String delimiter) {","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        return \" \" + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                + getStatusIcon()","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"                + description;","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     * Loads task from given saved data.","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     * @param data Saved data of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"     * @return New task.","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    public static Task load(String data, String delimiter) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d data.split(delimiter, 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"            String taskType \u003d fields[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            boolean status \u003d fields[1].equals(\"X\");","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d fields[2];","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"            assert taskType.equals(\" \") : \"Task is of the wrong type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"            return new Task(description, status);","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskLoadMissingField();","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"     * Compares this task to the specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"     * @param task The task to compare this task against.","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     * @return true if the given task is equivalent to this task, false otherwise.","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameDescription \u003d task.description.equals(description);","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameStatus \u003d task.isDone \u003d\u003d isDone;","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        return isSameDescription \u0026\u0026 isSameStatus;","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"     * Returns the task\u0027s details in string format.","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"     * @return Task\u0027s details.","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"        return \"[\" + getStatusIcon() + \"] \"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"                + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":100}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Deals with tasks in list.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     * Generates a list of task from specified data.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public TaskList(String... data) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"            for (String saveData : data) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"                tasks.add(load(saveData));","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        return tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public int size() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * Converts list of tasks to save data.","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * @return Array of task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public String[] toSaveData() {","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        return tasks.stream()","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"                .map(task -\u003e task.toSaveData(delimiter))","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     * Generates new task from specified save data.","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     * @param saveData The task\u0027s save data.","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     * @return Generated task.","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If the specified save data has missing or invalid values","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public Task load(String saveData) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        String delimiter \u003d \" \\\\| \";","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        switch (saveData.charAt(0)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        case \u0027 \u0027:","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"            return Task.load(saveData, delimiter);","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"            return Todo.load(saveData, delimiter);","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"            return Deadline.load(saveData, delimiter);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            return Event.load(saveData, delimiter);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        default:","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskType();","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"     * Adds specified task to list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"     * @param task duke.task.Task to be added.","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        assert task !\u003d null : \"Task given is null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     * Removes specified task from list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     * @return The removed task.","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"    public Task delete(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"            assert index \u003e 0 : \"Index given is less than 1\";","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskIndexOutOfBounds(\"removed\");","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     * Finds tasks with description containing the specified keyword.","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"     * @param keyword Index of specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"        return tasks.stream()","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"                .filter(task -\u003e task.getDescription()","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"                        .toUpperCase()","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"                        .contains(keyword.toUpperCase()))","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"     * Marks specified task from list of tasks as done.","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"     * @return The mark task.","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"    public Task mark(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"            assert index \u003e 0 : \"Index given is less than 1\";","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"            task.mark();","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"            return task;","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskIndexOutOfBounds(\"marked\");","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"     * Changes the status of specified task from list of tasks back to not done.","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"     * @param index Index of specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"     * @return The unmarked task.","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If given index is not in the list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"    public Task unmark(int index) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"            assert index \u003e 0 : \"Index given is less than 1\";","lastModifiedDate":"2023-02-08"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"            task.unmark();","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"            return task;","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskIndexOutOfBounds(\"unmarked\");","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"nusE0726844":147}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/** Deals with todo tasks. */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"     * Generates a new todo task.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     * @param isDone Status of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    public Todo(String description, boolean... isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        super(description, isDone.length \u003e 0 \u0026\u0026 isDone[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * Returns task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @return Task in saved data format.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public String toSaveData(String delimiter) {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        return \"T\" + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"                + getStatusIcon()","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                + getDescription();","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     * Loads task from given saved data.","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * @param data Saved data of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     * @param delimiter String separating fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     * @return New todo task.","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If saved data is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public static Todo load(String data, String delimiter) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d data.split(delimiter, 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            String taskType \u003d fields[0];","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            boolean status \u003d fields[1].equals(\"X\");","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d fields[2];","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            assert taskType.equals(\"T\") : \"Task is of the wrong type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            return new Todo(description, status);","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskLoadMissingField();","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     * Generates new todo task from given user input.","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"     * @return New todo task.","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"     * @throws DukeException If input is missing some fields.","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    public static Todo generate(String input) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"            String[] fields \u003d input.trim()","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"                    .split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            String description \u003d fields[1].trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            assert (fields[0].trim()","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                    .equalsIgnoreCase(\"todo\"))","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                    : \"The given input is of the wrong task type\";","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            return new Todo(description);","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"            throw DukeException.getErrorTaskMissingField(\"todo\");","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"     * Compares this task to the specified task.","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     * @param task The task to compare this task against.","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"     * @return true if the given task is equivalent to this task, false otherwise.","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        boolean isSameClass \u003d task.getClass().equals(getClass());","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        if (!isSameClass) {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        return super.equals(task);","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"     * Returns the task\u0027s details in string format.","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"     * @return Task\u0027s details.","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"nusE0726844":102}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                    .class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        dialog.setStyle(\"-fx-padding:0 10 0 10\");","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        Color color \u003d Color.rgb(0, 106, 255);","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        CornerRadii round \u003d new CornerRadii(10);","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        BackgroundFill background \u003d new BackgroundFill(color, round, Insets.EMPTY);","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.dialog.setBackground(new Background(background));","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        return dialogBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        Color color \u003d Color.LIGHTGREY;","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        CornerRadii round \u003d new CornerRadii(10);","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        BackgroundFill background \u003d new BackgroundFill(color, round, Insets.EMPTY);","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.dialog.setBackground(new Background(background));","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        return dialogBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.flip();","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        Color color \u003d Color.ORANGE;","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"        CornerRadii round \u003d new CornerRadii(10);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        BackgroundFill background \u003d new BackgroundFill(color, round, Insets.EMPTY);","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        dialogBox.dialog.setBackground(new Background(background));","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        return dialogBox;","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":95}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":" * Creates a gui for Duke","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":12}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private final Image dukeLogo \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"            .getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"            stage.setTitle(\"Jamie Task Manager\");","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            stage.getIcons().add(dukeLogo);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":39}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    private final Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            .getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    private final Image dukeImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            .getResourceAsStream(\"/images/DaJamie.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * Initializes the gui for Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     * Displays the welcome message on startup.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        Color color \u003d Color.LIGHTGOLDENRODYELLOW;","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        CornerRadii round \u003d new CornerRadii(10);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        BackgroundFill background \u003d new BackgroundFill(color, round, Insets.EMPTY);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        dialogContainer.setBackground(new Background(background));","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getWelcome(), dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        String loadErrorMessage \u003d duke.getLoadErrorMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        if (loadErrorMessage !\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(loadErrorMessage, dukeImage));","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        DialogBox userDialogBox \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        dialogContainer.getChildren().add(userDialogBox);","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        DialogBox dukeDialogBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            dukeDialogBox \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"            dukeDialogBox \u003d DialogBox.getErrorDialog(e.getMessage(), dukeImage);","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        dialogContainer.getChildren().add(dukeDialogBox);","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":80}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"public class Ui {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    protected Scanner sc;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     * Creates a user interface that interacts with the user.","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public Ui() {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * Returns Duke logo","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @return Duke logo","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public String getLogoMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        return \"Hello from\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        return \"Hello! I\u0027m Jamie\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                + \"A personality of the Duke project.\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public String getFarewellMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public String getAddMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        return \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public String getDeleteMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        return \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public String getFindMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        return \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    public String getListMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        return \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    public String getMarkMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        return \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public String getUnmarkMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public String getTasksCountMessage(int i) {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        return \"Now you have \" + i + \" tasks in the list.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public String getLoadingErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        return \"There was an error while loading from save file\";","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"     * Reads the command input by the user","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"     * @return The full command input by the user","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"     * Shows the divider line (\"_______\")","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(\" \".repeat(4)","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"                + \"_\".repeat(60));","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"     * Shows the specified message","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"     * @param message Message to be shown","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"    public void echo(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        String indent \u003d \" \".repeat(5);","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(indent","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"                + message.replace(\"\\n\",","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"                \"\\n\" + indent));","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"     * Shows Duke\u0027s logo and greets the user","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"        // Shows logo of Duke","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(getLogoMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"        // Shows user greeting","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"        showLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"        echo(getWelcomeMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"        showLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"    // Error messages for exceptions specific to Duke.","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"     * Shows the error message of the encountered exception","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"        echo(\"OOPS!!! \" + errorMessage + \" :-(\");","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"nusE0726844":118}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"nusE0726844":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    public void getWelcome() {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Duke#getWelcome","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Jamie 😃\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"                + \"A personality of the Duke project.\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(duke.getWelcome(),","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"                welcomeMessage);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public void getLoadErrorMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Duke#getLoadErrorMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        String loadErrorMessage \u003d \"There was an error while loading from save file\";","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        String loadError \u003d duke.getLoadErrorMessage();","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        if (loadError !\u003d null) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"            assertEquals(loadError,","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                    loadErrorMessage);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":36}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"public class StorageTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    public void isLoadError() {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Storage#isLoadError","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(storage.isLoadError());","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public void setLoadError() {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Storage#setLoadError","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        storage.setLoadError(true);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(storage.isLoadError());","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":29}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private final Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    private final Command command \u003d new AddCommand(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), description);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"                \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                        + \"  [ ] Hello World\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                        + \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":72}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private final Command command;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public DeleteCommandTest() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        command \u003d new DeleteCommand(\"delete 1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for DeleteCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for DeleteCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), description);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for DeleteCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for DeleteCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for DeleteCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(new Task(description));","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"                        + \"  [ ] Hello World\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"                        + \"Now you have 0 tasks in the list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":78}},{"path":"src/test/java/duke/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final Command command \u003d new ExitCommand();","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), description);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for ExitCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":68}},{"path":"src/test/java/duke/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final Command command;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public FindCommandTest() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        command \u003d new FindCommand(\"find Hello World\");","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(response);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for FindCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        // test 1 setup","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"                \"There is no such task in your list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        // test 2 setup","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(new Task(\"Hello World\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"                \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"                        + \"1.[ ] Hello World\");","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":82}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final Command command \u003d new ListCommand();","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(response);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for ListCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        // test 1 setup","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"                \"There is no task in your list.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        // test 2 setup","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(new Task(\"Hello World\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"                \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"                        + \"1.[ ] Hello World\");","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":78}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private final Command command;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public MarkCommandTest() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        command \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), description);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for MarkCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(new Task(description));","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"                        + \"  [X] Hello World\");","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":77}},{"path":"src/test/java/duke/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.command;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private final Command command;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public UnmarkCommandTest() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        command \u003d new UnmarkCommand(\"unmark 1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    public void getResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#getResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        String response \u003d \"Command has not yet been executed\";","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), response);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public void setResponse() {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#setResponse","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        command.setResponse(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(), description);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public void isExit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#isExit","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    public void exit() {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for AddCommand#exit","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        command.exit();","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for UnmarkCommand#execute","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        Storage storage \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        task.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(command.getResponse(),","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"                        + \"  [ ] Hello World\");","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":79}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    private final String deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final Deadline task;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    public DeadlineTest() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        deadline \u003d \"2024-01-01\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        task \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public void getDeadline() {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Deadline#getDeadline","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDeadline(),","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public void toSaveData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Deadline#toSaveData","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        String saveData \u003d \"D\"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + description","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.toSaveData(delimiter),","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"                saveData);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public void generate() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Deadline#generate","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        Deadline task \u003d Deadline.generate(\"deadline \" + description","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                + \" /by \" + deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"                this.task.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                this.task.getStatusIcon());","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDeadline(),","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"                this.task.getDeadline());","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":59}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"public class EventTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    private final String startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final String endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private final Event task;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public EventTest() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        startTime \u003d \"2024-01-01\";","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        endTime \u003d \"2024-02-01\";","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public void getStartTime() {","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Event#getStartTime","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStartTime(),","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"                startTime);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public void getEndTime() {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Event#getEndTime","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getEndTime(),","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"                endTime);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public void toSaveData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Event#toSaveData","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        String saveData \u003d \"E\"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + description","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + startTime","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.toSaveData(delimiter),","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"                saveData);","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    public void generate() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Event#generate","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        Event task \u003d Event.generate(\"event \" + description","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"                + \" /from \" + startTime","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"                + \" /to \" + endTime);","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                this.task.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"                this.task.getStatusIcon());","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStartTime(),","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                this.task.getStartTime());","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getEndTime(),","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"                this.task.getEndTime());","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":74}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    private final String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public void getTasks() {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#getTasks","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.getTasks(),","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"                new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public void size() {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#size","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.size(), 0);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public void add() {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#add","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.getTasks().get(0), task);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public void delete() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#delete","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.delete(1), task);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    public void find() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#find","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        String newDescription \u003d description.substring(description.length() / 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.find(description).size(), 0);","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.find(description).size(), 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.find(newDescription).size(), 1);","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"    public void mark() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#mark","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.mark(1),","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"                tasks.getTasks().get(0));","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    public void unmark() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for TaskList#unmark","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        tasks.mark(1);","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(tasks.unmark(1),","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"                tasks.getTasks().get(0));","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":91}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    private final String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    private final Task task \u003d new Task(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    public void getDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getDescription","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"                description);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public void getStatusIcon() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#getStatusIcon","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        String statusIcon \u003d \" \";","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"                statusIcon);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public void mark() {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#mark","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        String statusIcon \u003d \"X\";","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        task.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"                statusIcon);","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        task.unmark();","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#unmark","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        String statusIcon \u003d \" \";","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        task.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        task.unmark();","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                statusIcon);","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    public void toSaveData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Task#toSaveData","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        String saveData \u003d \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"                + \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"                + delimiter","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                + description;","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.toSaveData(delimiter),","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                saveData);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":72}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    private final String description \u003d \"Hello World\";","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    private final Todo task \u003d new Todo(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    public void toSaveData() {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Todo#toSaveData","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        String saveData \u003d \"T\"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + \" \"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"                + delimiter + description;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.toSaveData(delimiter),","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"                saveData);","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    public void generate() throws DukeException {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Todo#generate","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        Todo task \u003d Todo.generate(\"todo \" + description);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getDescription(),","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                this.task.getDescription());","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(task.getStatusIcon(),","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                this.task.getStatusIcon());","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"nusE0726844":38}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package duke.ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"public class UiTest {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    public void getLogoMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getLogoMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Hello from\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getLogoMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public void getWelcomeMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getWelcomeMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Hello! I\u0027m Jamie 😃\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                + \"A personality of the Duke project.\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getWelcomeMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public void getFarewellMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getFarewellMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getFarewellMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    public void getAddMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getAddMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getAddMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public void getDeleteMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getDeleteMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getDeleteMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"    public void getFindMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getFindMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getFindMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"    public void getListMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getListMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getListMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    public void getMarkMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getMarkMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getMarkMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"    public void getUnmarkMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getUnmarkMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getUnmarkMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"    public void getTasksCountMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getTasksCountMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"Now you have 0 tasks in the list.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getTasksCountMessage(0),","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"    public void getLoadingErrorMessage() {","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"        // A unit test for Ui#getLoadingErrorMessage","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"        // test setup","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"        String message \u003d \"There was an error while loading from save file\";","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"        // automatically verify the response","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(ui.getLoadingErrorMessage(),","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"                message);","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"nusE0726844":138}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"todo read book","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"deadline return book /by 2024-02-01","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"event return book /from 2024-01-01 /to 2024-02-01","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"mark 0","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"delete 1","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"javac -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"nusE0726844":2}}]
