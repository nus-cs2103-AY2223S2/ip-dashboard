[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"    public static String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    public enum Input { bye, list, mark, unmark, delete, todo, deadline, event };","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        System.out.println(LINE + \" Hello! I\u0027m Duke\\n What can I do for you?\\n\" + LINE);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        boolean flag_continue \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        while (flag_continue) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            String[] input \u003d sc.nextLine().trim().split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            StringBuilder output \u003d new StringBuilder(LINE);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"                Input op;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"                    op \u003d Input.valueOf(input[0]);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                } catch(IllegalArgumentException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                switch(op) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"                    case bye:","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"                        flag_continue \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"                        output.append(\" Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"                    case list:","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"                        if(tasks.size() \u003d\u003d 0) { throw new DukeException(\"You have 0 tasks in the list\\n\"); }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"                        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"                            output.append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                    case mark:","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"                        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"                            int n \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"                            Task task \u003d tasks.get(n);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"                            task.mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                            tasks.set(n, task);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"Nice! I\u0027ve marked this task as done:\\n  \").append(task).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"                        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be marked cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"                        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be marked must be in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"                        } catch(NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be marked must be an integer.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"                    case unmark:","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"                            int n \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"                            Task task \u003d tasks.get(n);","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                            task.unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                            tasks.set(n, task);","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"OK, I\u0027ve marked this task as not done yet:\\n  \").append(task).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"                        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be unmarked cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"                        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be unmarked must be in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"                        } catch(NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be unmarked must be an integer.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"                    case delete:","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"                        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"                            int n \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"                            Task task \u003d tasks.get(n);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"                            tasks.remove(n);","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"Noted. I\u0027ve removed this task:\\n  \").append(task).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"                        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be deleted cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"                        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be deleted must be in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"                        } catch(NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The index to be deleted must be an integer.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"                    case todo:","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"                        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"                            input[1] \u003d input[1].trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"                            if(input[1].equals(\"\")) { throw new ArrayIndexOutOfBoundsException(); }","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"                            Task task \u003d new Todo(input[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"                            output.append(task).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"                        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"                    case deadline:","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"                        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"                            String[] cmd \u003d input[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"                            if(cmd[0].trim().equals(\"\")) { throw new DukeException(\"The description of a deadline cannot be empty.\"); }","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"                            if(cmd[1].trim().equals(\"\")) { throw new DukeException(\"The deadline of a deadline cannot be empty.\"); }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"                            Task task \u003d new Deadline(cmd[0], cmd[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"                            output.append(task).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"                        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"                            if(input.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"                                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"                            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"                                throw new DukeException(\"A deadline must have a deadline.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"                            }","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"                    case event:","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"                        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"                            String[] cmd \u003d input[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"                            String[] time \u003d cmd[1].split(\" /to \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"                            Task task \u003d new Event(cmd[0], time[0], time[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"                            output.append(task).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"                            output.append(\"Now you have \").append(tasks.size()).append(\" tasks in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"                            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"                        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"                            if(input.length \u003d\u003d 1) { throw new DukeException(\"The description of an event cannot be empty.\"); }","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"                            String[] cmd \u003d input[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"                            if(cmd.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"                                throw new DukeException(\"An event must have a duration.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"                            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"                                throw new DukeException(\"An invalid duration was given.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"                            }","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"                output.append(LINE);","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"                System.out.println(output);","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nusE0726844":145,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"    public static String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"    public static String OOPS \u003d \"☹ OOPS!!! \";","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"    public DukeException(String errMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"        super(LINE + OOPS + errMessage + \"\\n\" + LINE);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \")\" + \" (to: \" + to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"        /* Retrieves the Status of the task","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"        *  [X] for marked as completed","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        *  [ ] for not yet completed */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    } /* Marks the task as completed */","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    }  /* Removes the completed marks from the task */","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        /* Returns the status icon and the description of the task */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"list\\n","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"todo task 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"mark","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"mark","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"unmark","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"unmark","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"deadline task 2","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"deadline  /by Monday","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"deadline   /by Monday","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"deadline task 2 /by","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"deadline task 2 /by","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"deadline task 2 /by Monday","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"event task 3","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"event task 3 /from","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"event task 3 /from Tuesday","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"event task 3 /from Tuesday /to","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"event task 3 /from Tuesday /to Wednesday","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"nusE0726844":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"java -classpath ..\\bin Duke Task Todo Deadline Event DukeException \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"nusE0726844":1}}]
