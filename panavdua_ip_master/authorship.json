[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.7.1\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    mainClassName \u003d \"panav.Panav\"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"    archiveBaseName \u003d \"panav\"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"-":39,"panavdua":24}},{"path":"src/main/java/panav/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"panavdua":61}},{"path":"src/main/java/panav/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"public class Launcher {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"panavdua":14}},{"path":"src/main/java/panav/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    private Panav duke \u003d new Panav(\"C:\\\\Users\\\\panav\\\\OneDrive\\\\Desktop\\\\CS2103T\\\\ip\\\\src\\\\main\\\\java\\\\data\\\\panav.txt\");","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"            stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"panavdua":31}},{"path":"src/main/java/panav/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"    private Panav duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"    private final Image userImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"            .getResourceAsStream(\"/images/stick.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    private final Image dukeImage \u003d new Image(this.getClass()","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"            .getResourceAsStream(\"/images/panav.jpeg\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"    public void setDuke(Panav d) {","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"        System.out.println(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"        //System.out.println(response);","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"panavdua":58}},{"path":"src/main/java/panav/Panav.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"import panav.command.Command;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"import panav.command.ExitCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"import panav.command.ListCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"import panav.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"import panav.parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":" * The class where Panav starts. It contains the main() and all functionality starts here.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"public class Panav {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"    private String filePath \u003d \"C:\\\\Users\\\\panav\\\\OneDrive\\\\Desktop\\\\CS2103T\\\\ip\\\\src\\\\main\\\\java\\\\data\\\\panav.txt\";","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise the various classes in program.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"     * @param filePath the path of the file to be read from.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"    public Panav(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"        } catch (DukeException | FileNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"    public Panav() {}","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"    /*","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"        //Requirements for Panav","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"panavdua"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"panavdua"},"content":"        } catch (DukeException | FileNotFoundException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"panavdua"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"panavdua"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"panavdua"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"panavdua"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"panavdua"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"panavdua"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"panavdua"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"panavdua"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"panavdua"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"panavdua"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"panavdua"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"panavdua"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"panavdua"},"content":"        stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"panavdua"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"panavdua"},"content":"        stage.setTitle(\"Panav\");","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"panavdua"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"panavdua"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"panavdua"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"panavdua"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"panavdua"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"panavdua"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"panavdua"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"panavdua"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"panavdua"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"panavdua"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"panavdua"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"panavdua"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"panavdua"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"panavdua"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"panavdua"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"panavdua"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"panavdua"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"panavdua"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"panavdua"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"panavdua"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"panavdua"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"panavdua"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"panavdua"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"panavdua"},"content":"        });","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"panavdua"},"content":"        Label welcome \u003d new Label(ui.showWelcome());","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"panavdua"},"content":"        dialogContainer.getChildren().addAll(new DialogBox(welcome, new ImageView(panav), true));","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"panavdua"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"panavdua"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"panavdua"},"content":"        if (isExit) {","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"panavdua"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"panavdua"},"content":"    } */","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"panavdua"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"panavdua"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"panavdua"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"panavdua"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"panavdua"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"panavdua"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"panavdua"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"panavdua"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-07"},{"lineNumber":157,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":158,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"panavdua"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-07"},{"lineNumber":161,"author":{"gitId":"panavdua"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"panavdua"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":164,"author":{"gitId":"panavdua"},"content":"    /*","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"panavdua"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"panavdua"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-07"},{"lineNumber":167,"author":{"gitId":"panavdua"},"content":"        Label panavText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-07"},{"lineNumber":168,"author":{"gitId":"panavdua"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"panavdua"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-02-07"},{"lineNumber":170,"author":{"gitId":"panavdua"},"content":"                DialogBox.getPanavDialog(panavText, new ImageView(panav))","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"panavdua"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":172,"author":{"gitId":"panavdua"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":173,"author":{"gitId":"panavdua"},"content":"    } */","lastModifiedDate":"2023-02-10"},{"lineNumber":174,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":175,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"panavdua"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-07"},{"lineNumber":177,"author":{"gitId":"panavdua"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-07"},{"lineNumber":178,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":179,"author":{"gitId":"panavdua"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"panavdua"},"content":"            //System.out.println(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":182,"author":{"gitId":"panavdua"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":183,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"panavdua"},"content":"            String res \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-07"},{"lineNumber":185,"author":{"gitId":"panavdua"},"content":"            if (c.toString().compareTo(ListCommand.COMMAND_WORD) !\u003d 0","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"panavdua"},"content":"                    || c.toString().compareTo(ExitCommand.COMMAND_WORD) !\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"panavdua"},"content":"                storage.write(tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":188,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"panavdua"},"content":"            if (input.compareTo(\"bye\") \u003d\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":190,"author":{"gitId":"panavdua"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":192,"author":{"gitId":"panavdua"},"content":"            return res;","lastModifiedDate":"2023-02-07"},{"lineNumber":193,"author":{"gitId":"panavdua"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":194,"author":{"gitId":"panavdua"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":195,"author":{"gitId":"panavdua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":196,"author":{"gitId":"panavdua"},"content":"            return \"IO\";","lastModifiedDate":"2023-02-10"},{"lineNumber":197,"author":{"gitId":"panavdua"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":198,"author":{"gitId":"panavdua"},"content":"            return \"null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":199,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":203,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":204,"author":{"gitId":"panavdua"},"content":"     * The method which is called as soon as Panav is loaded up. Controls the flow of the","lastModifiedDate":"2023-02-07"},{"lineNumber":205,"author":{"gitId":"panavdua"},"content":"     * program and runs till user types \u0027bye\u0027.","lastModifiedDate":"2023-02-07"},{"lineNumber":206,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":207,"author":{"gitId":"panavdua"},"content":"//    public void run() {","lastModifiedDate":"2023-02-07"},{"lineNumber":208,"author":{"gitId":"panavdua"},"content":"//        ui.showWelcome();","lastModifiedDate":"2023-02-07"},{"lineNumber":209,"author":{"gitId":"panavdua"},"content":"//        boolean isExit \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":210,"author":{"gitId":"panavdua"},"content":"//        while (!isExit) {","lastModifiedDate":"2023-02-07"},{"lineNumber":211,"author":{"gitId":"panavdua"},"content":"//            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":212,"author":{"gitId":"panavdua"},"content":"//                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-07"},{"lineNumber":213,"author":{"gitId":"panavdua"},"content":"//                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-02-07"},{"lineNumber":214,"author":{"gitId":"panavdua"},"content":"//                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-07"},{"lineNumber":215,"author":{"gitId":"panavdua"},"content":"//                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-07"},{"lineNumber":216,"author":{"gitId":"panavdua"},"content":"//                if (c.toString().compareTo(ListCommand.COMMAND_WORD) !\u003d 0","lastModifiedDate":"2023-02-07"},{"lineNumber":217,"author":{"gitId":"panavdua"},"content":"//                        || c.toString().compareTo(ExitCommand.COMMAND_WORD) !\u003d 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":218,"author":{"gitId":"panavdua"},"content":"//                    storage.write(tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":219,"author":{"gitId":"panavdua"},"content":"//                }","lastModifiedDate":"2023-02-07"},{"lineNumber":220,"author":{"gitId":"panavdua"},"content":"//                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-07"},{"lineNumber":221,"author":{"gitId":"panavdua"},"content":"//            } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":222,"author":{"gitId":"panavdua"},"content":"//                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":223,"author":{"gitId":"panavdua"},"content":"//            } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":224,"author":{"gitId":"panavdua"},"content":"//                throw new RuntimeException(e);","lastModifiedDate":"2023-02-07"},{"lineNumber":225,"author":{"gitId":"panavdua"},"content":"//            } catch (NullPointerException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":226,"author":{"gitId":"panavdua"},"content":"//                continue;","lastModifiedDate":"2023-02-07"},{"lineNumber":227,"author":{"gitId":"panavdua"},"content":"//            } finally {","lastModifiedDate":"2023-02-07"},{"lineNumber":228,"author":{"gitId":"panavdua"},"content":"//                ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":229,"author":{"gitId":"panavdua"},"content":"//            }","lastModifiedDate":"2023-02-07"},{"lineNumber":230,"author":{"gitId":"panavdua"},"content":"//        }","lastModifiedDate":"2023-02-07"},{"lineNumber":231,"author":{"gitId":"panavdua"},"content":"//    }","lastModifiedDate":"2023-02-07"},{"lineNumber":232,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":233,"author":{"gitId":"panavdua"},"content":"    /*","lastModifiedDate":"2023-02-07"},{"lineNumber":234,"author":{"gitId":"panavdua"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"panavdua"},"content":"        new Panav(\"C:\\\\Users\\\\panav\\\\OneDrive\\\\Desktop\\\\CS2103T\\\\ip\\\\src\\\\main\\\\java\\\\data\\\\panav.txt\").run();","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"panavdua"},"content":"    } */","lastModifiedDate":"2023-02-07"},{"lineNumber":237,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":238}},{"path":"src/main/java/panav/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":" * Abstract class to encapsulate a command.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    private String commandName;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"     * Abstract method to denote behaviour of each command when called.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"     * @throws DukeException to catch any possible exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"     * Method to check if the command is \u0027bye\u0027 or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"     * @return default value is false, unless it is \u0027bye\u0027 command","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":31}},{"path":"src/main/java/panav/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import panav.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import panav.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027deadline\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    private String deadlineMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    private String deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"     * @param deadlineMessage","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"     * @param deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    public DeadlineCommand(String deadlineMessage, String deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"        this.deadlineMessage \u003d deadlineMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027deadline\u0027 command when called to execute. Formats the","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"     * date and adds the new Deadline task to list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"        deadline \u003d formatDate(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"        Task curr \u003d new Deadline(deadlineMessage, deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"        tasks.addTask(curr);","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"        return ui.showAddTaskMessage(tasks, curr);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"     * Formats the date according to \u0027MMM dd yyyy\u0027 if it\u0027s given in the correct format of","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"     * \u0027yyyy-mm-dd\u0027, otherwise it just returns the string.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"     * @param dateString the string to be formatted.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"     * @return either the formatted date or the original string itself.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"    public static String formatDate(String dateString) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"        LocalDate d \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"        String result \u003d dateString;","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"            d \u003d LocalDate.parse(dateString);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"            result \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"            return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"        return result;","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"        return DeadlineCommand.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":74}},{"path":"src/main/java/panav/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.exception.InvalidNumberException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027delete\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027delete\u0027 command when called to execute. It reads from user","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"     * input the task index and removes that task from the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"            int deleteIndex \u003d readNumber(fullCommand, tasks.getLength());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"            Task removed \u003d tasks.removeTask(deleteIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"//            ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"//            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"//            System.out.println(removed);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"//            System.out.println(\"Now you have \" + tasks.getLength() + \" tasks in the list.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"//            ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"            String text \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"            text +\u003d removed.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"            text +\u003d \"Now you have \" + tasks.getLength() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"            return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"     * Returns the index number for commands which manipulate the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"     * @param command The command which is manipulating list.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"     * @param len The number of elements in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"     * @return Index number in command.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"     * @throws InvalidNumberException If the index doesn\u0027t exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"    public static int readNumber(String command, int len) throws InvalidNumberException {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"        int number \u003d Integer.parseInt(String.valueOf(command.charAt(command.length() - 1)));","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"        if (number \u003e len || number \u003c 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"            throw new InvalidNumberException(\"Oops!! There is no such index number in your list\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"            return number;","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"        return DeleteCommand.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":69}},{"path":"src/main/java/panav/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.exception.InvalidNumberException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027mark\u0027 or \u0027unmark\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    private boolean isMark;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    private boolean flag;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"     * @param fullCommand","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"     * @param isMark","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    public EditCommand(String fullCommand, boolean isMark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"        this.isMark \u003d isMark;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"        this.flag \u003d isMark;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    public final String COMMAND_WORD \u003d isMark ? \"mark\" : \"unmark\";","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027mark\u0027 or \u0027unmark\u0027 command when called to execute. Reads from the user","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"     * input the task index, and either marks or unmarks the task in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"        //ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"            int num \u003d readNumber(fullCommand, tasks.getLength());","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"            if (isMark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"                text \u003d tasks.markTask(num - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"                text \u003d tasks.unmarkTask(num - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"        //ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"     * Returns the index number for commands which manipulate the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"     * @param command The command which is manipulating list.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"     * @param len The number of elements in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"     * @return Index number in command.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"     * @throws InvalidNumberException If the index doesn\u0027t exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"    public static int readNumber(String command, int len) throws InvalidNumberException {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"        int number \u003d Integer.parseInt(String.valueOf(command.charAt(command.length() - 1)));","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"        if (number \u003e len || number \u003c 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"            throw new InvalidNumberException(\"Oops!! There is no such index number in your list\");","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"            return number;","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"panavdua"},"content":"        return this.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":79}},{"path":"src/main/java/panav/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027event\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    private String eventMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    private String from;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"    private String to;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"     * @param eventMessage","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     * @param from","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"     * @param to","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"    public EventCommand(String eventMessage, String from, String to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"        this.eventMessage \u003d eventMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027event\u0027 command when called to execute. Creates a new event","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"     * with the provided information and adds it to the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"        Task curr \u003d new Event(eventMessage, from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"        tasks.addTask(curr);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"        return ui.showAddTaskMessage(tasks, curr);","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"        return EventCommand.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":51}},{"path":"src/main/java/panav/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027bye\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027bye\u0027 command when called to execute. Tells the user it","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"     * is exiting and shuts down the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"     * In the case of \u0027bye\u0027 command, we need to exit from program.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"     * @return boolean value true.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"        return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"        return ExitCommand.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":43}},{"path":"src/main/java/panav/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":" * Class to represent the \u0027find\u0027 command.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    private String keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"     * Method represents the functionality when \u0027find\u0027 command is types.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"     * @param tasks the tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write from files.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"        //ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"        //System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"        text +\u003d tasks.printTasksContainingKeyword(this.keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"        //ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"panavdua":36}},{"path":"src/main/java/panav/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027list\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027list\u0027 command when called to execute. It prints","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"     * all the tasks in the whole list.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"        //ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"        //System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"        text +\u003d tasks.printAllTasks();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"        //ui.showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"        return ListCommand.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":35}},{"path":"src/main/java/panav/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.exception.ToDoDescriptionException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import panav.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import panav.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":" * Class to encapsulate a \u0027todo\u0027 command, extends from Command.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    private String todoMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    public TodoCommand(String todoMessage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        this.todoMessage \u003d todoMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     * Specifies the behaviour of \u0027todo\u0027 command when called to execute. Creates a new todo","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"     * with the provided information and adds it to the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"     * @param ui ui to interact with user.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"     * @param storage storage to read/write text in file.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"            Task curr \u003d new ToDo(this.todoMessage);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"            tasks.addTask(curr);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"            return ui.showAddTaskMessage(tasks, curr);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"        } catch (ToDoDescriptionException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"        return TodoCommand.COMMAND_WORD;","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":45}},{"path":"src/main/java/panav/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" * Parent class to represent all possible Exceptions that may arise during the running","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * of the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":13}},{"path":"src/main/java/panav/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"package panav.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" * Encapsulates the exception that occurs when the user enters a command which is not","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * recognised and not included in the list of possible commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":16}},{"path":"src/main/java/panav/exception/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" * Encapsulates the exception that occurs when the user tries to edit/delete a task in the list","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * but provides a task number which is either less than zero, or more than the total number","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" * of tasks in the entire list.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"public class InvalidNumberException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    public InvalidNumberException(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"panavdua":16}},{"path":"src/main/java/panav/exception/ToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" * Encapsulates the exception that occurs when the user types in a todo command but does not","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * provide any description.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"public class ToDoDescriptionException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    public ToDoDescriptionException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":15}},{"path":"src/main/java/panav/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.command.DeadlineCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.command.DeleteCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.command.EditCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import panav.command.EventCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import panav.command.ExitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import panav.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"import panav.command.ListCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import panav.command.TodoCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"import panav.exception.InvalidInputException;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":" * Class to represent the parser which takes in the users command and makes sense of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"     * Method takes in the full user input string and decodes it to the respective command.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"     * @param fullCommand the full user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     * @return the decoded command from among the list of available commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"        String[] temp \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"        String firstWord \u003d temp[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"            case \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"                String todoMessage \u003d fullCommand.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"                return new TodoCommand(todoMessage);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"                int indexBy \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"                String by \u003d fullCommand.substring(indexBy + 4);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"                String deadlineMessage \u003d fullCommand.substring(9, indexBy - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"                return new DeadlineCommand(deadlineMessage, by);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"            case \"event\":","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"                int fromIndex \u003d 0;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"                int toIndex \u003d 0;","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"                String eventMessage \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"                String from \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"                String to \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"                for (int j \u003d 0; j \u003c temp.length; j++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"                    if (temp[j].compareTo(\"/from\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"                        fromIndex \u003d j;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"                    if (temp[j].compareTo(\"/to\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"                        toIndex \u003d j;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"                for (int j \u003d 0; j \u003c temp.length; j++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"                    if (j \u003c fromIndex \u0026\u0026 j \u003e 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"                        eventMessage +\u003d temp[j] + \" \";","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"                    if (j \u003e fromIndex \u0026\u0026 j \u003c toIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"                        from +\u003d temp[j] + \" \";","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"                    if (j \u003e toIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"                        to +\u003d temp[j];","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"                return new EventCommand(eventMessage, from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"                return new EditCommand(fullCommand, true);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"                return new EditCommand(fullCommand, false);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"                return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"panavdua"},"content":"            case \"find\":","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"panavdua"},"content":"                String keyWord \u003d fullCommand.replace(\"find\", \"\").trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"panavdua"},"content":"                return new FindCommand(keyWord);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"panavdua"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"panavdua"},"content":"                throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"panavdua"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"panavdua"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"panavdua"},"content":"            return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":88}},{"path":"src/main/java/panav/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import panav.exception.ToDoDescriptionException;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"import panav.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"import panav.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"import panav.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"import panav.task.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":" * Class to represent the storage facility of the program. It loads up the existing task list","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":" * when chatbot starts, and writes any changes if they are made.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"public class Storage {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    private String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"     * Reads the existing list of tasks from text file.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"     * @return an arrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"     * @throws FileNotFoundException if text file doesn\u0027t exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"     * @throws ToDoDescriptionException if todo is missing description.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, ToDoDescriptionException {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"            String[] arr \u003d command.split(\" ~ \");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"            Task curr;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"            if (arr[0].compareTo(\"T\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"                curr \u003d new ToDo(arr[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"                if (arr[1].compareTo(\"1\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"                    curr.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"            } else if (arr[0].compareTo(\"D\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"                curr \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"                if (arr[1].compareTo(\"1\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"                    curr.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"                curr \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"                if (arr[1].compareTo(\"1\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"                    curr.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"            list.add(curr);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"        return list;","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"     * Writes the changes to the list to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"     * @param tasks the TaskList containing the tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"     * @throws IOException in case if folder is not found or some other exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"    public void write(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"panavdua"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"panavdua"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"panavdua"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"panavdua"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"panavdua"},"content":"            String str \u003d task.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"panavdua"},"content":"            int indexBy \u003d str.indexOf(\"by:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"panavdua"},"content":"            int indexFrom \u003d str.indexOf(\"from:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"panavdua"},"content":"            int indexTo \u003d str.indexOf(\"to:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"panavdua"},"content":"            int check \u003d task.isDone() ? 1 : 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"panavdua"},"content":"            int length \u003d str.length();","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"panavdua"},"content":"            if (indexBy !\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"panavdua"},"content":"                textToAdd +\u003d String.format(\"%c ~ %d ~ %s ~ %s %n\", str.charAt(1), check,","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"panavdua"},"content":"                        str.substring(7, indexBy - 2), str.substring(indexBy + 4, length - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"panavdua"},"content":"            } else if (indexFrom !\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"panavdua"},"content":"                textToAdd +\u003d String.format(\"%c ~ %d ~ %s ~ %s ~ %s %n\", str.charAt(1), check,","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"panavdua"},"content":"                        str.substring(7, indexFrom - 1), str.substring(indexFrom + 6, indexTo - 1),","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"panavdua"},"content":"                        str.substring(indexTo + 4, length - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"panavdua"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"panavdua"},"content":"                textToAdd +\u003d String.format(\"%c ~ %d ~ %s %n\", str.charAt(1), check, str.substring(7));","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"panavdua"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"panavdua"},"content":"        fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":100}},{"path":"src/main/java/panav/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":" * Class to represent a Deadline task. It has attributes for its deadline time.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"     * @param description","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"     * @param by","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":24}},{"path":"src/main/java/panav/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":" * Class to represent an Event. It contains attributes for its start and end timelines.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"     * @param description","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"     * @param from","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"     * @param to","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":26}},{"path":"src/main/java/panav/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":" * Abstract class to represent a Task in the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"     * @param description","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"     * Method to show if a task is completed or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"     * @return \"X\" is task is done, \" \" otherwise.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"     * Method to mark a task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"     * Method to check if a task is done or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"     * @return true if done, false otherwise.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":55}},{"path":"src/main/java/panav/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * Class to represent the list of Tasks in this program. It contains functionality","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" * to edit the task list and add/delete changes.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise ArrayList of tasks and populate it with","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"     * given list of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"     * @param src list of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    public TaskList(ArrayList\u003cTask\u003e src) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"        for (Task task : src) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"            tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise empty ArrayList of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"     * Method to print all the tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"    public String printAllTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"            text +\u003d task + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"     * Method to return number of tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"     * @return length of list.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    public int getLength() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"     * Method to delete a task from the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"     * @param index the index from where the Task is to be deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"     * @return the removed Task.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"        return tasks.remove(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"     * Method to add a task to the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"     * Method to mark a task as done in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"     * @param index the index of task to be marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"    public String markTask(int index) {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"        //System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"panavdua"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"panavdua"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"panavdua"},"content":"        //System.out.println(task);","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"panavdua"},"content":"        text +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"panavdua"},"content":"     * Method to mark a task as not done in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"panavdua"},"content":"     * @param index the index of task to be unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"panavdua"},"content":"    public String unmarkTask(int index) {","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"Nice! I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"panavdua"},"content":"        //System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"panavdua"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"panavdua"},"content":"        task.markAsNotDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"panavdua"},"content":"        //System.out.println(task);","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"panavdua"},"content":"        text +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"panavdua"},"content":"     * Method to retrieve a Task in the given index.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"panavdua"},"content":"     * @param index the index of task to be retrieved.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"panavdua"},"content":"     * @return the Task at that index.","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"panavdua"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"panavdua"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"panavdua"},"content":"     * Method to print all tasks in the list which contain a particular word.","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"panavdua"},"content":"     * @param keyWord the word to be searched.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"panavdua"},"content":"    public String printTasksContainingKeyword(String keyWord) {","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"panavdua"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"panavdua"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"panavdua"},"content":"            if (task.toString().matches(\"(.*)\" + keyWord + \"(.*)\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"panavdua"},"content":"                counter++;","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"panavdua"},"content":"                //System.out.println(counter + \".\" + task);","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"panavdua"},"content":"                text +\u003d counter + \".\" + task + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":121}},{"path":"src/main/java/panav/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.exception.ToDoDescriptionException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":" * Class to represent an ToDo task. It contains attributes for it\u0027s description.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"     * Constructor to initialise attributes.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"     * @param description","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"     * @throws ToDoDescriptionException","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    public ToDo(String description) throws ToDoDescriptionException {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"            throw new ToDoDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":26}},{"path":"src/main/java/panav/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import panav.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":" * Class to represent all the UI tasks to interact with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    private static final String LINE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"     * Method to print the error while loading tasks from saved file.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"        System.out.println(\"Oops!! There was an error in loading text from your file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"        System.out.println(\"Make sure your file exists in the correct location\");","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"     * Method to print the welcome message when Panav is loaded up.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"        text +\u003d \"Hello hello! I\u0027m Panav \\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"        text +\u003d \"What\u0027s up bro\";","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"     * Method to print the line divider.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"    public String showLine() {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"        return LINE_DIVIDER;","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"     * Method to read user\u0027s command.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"     * @return the String representation of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"     * Method to print the message once a task is added to the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"     * @param task The task which is added.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"    public String showAddTaskMessage(TaskList tasks, Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"        //showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"        String text \u003d \"\";","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"        text +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"        text +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"        text +\u003d \"Now you have \" + tasks.getLength() + \" tasks in the list.\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"        return text;","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"        //showLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"panavdua":71}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"panavdua":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"panav.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"panavdua":19}},{"path":"src/test/java/panav/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import panav.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import panav.command.DeadlineCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"import panav.task.Deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"    public void parse_deadlineCommand_failure() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"        assertEquals(new DeadlineCommand(\"work\", \"tomorrow\"), Parser.parse(\"work /by tomorrow\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"panavdua":15}},{"path":"src/test/java/panav/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"package panav.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    public void getLength_randomTasks_success() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"        list.addTask(new Deadline(\"lots of work\", \"tonight\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        list.addTask(new Event(\"unicon\", \"sat 4pm\", \"8pm\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"        assertEquals(2, list.getLength());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    public void getTask_singleTask_success() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"        Task test \u003d new Event(\"Unicon\", \"4pm\", \"6pm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        list.addTask(test);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"        assertEquals(test, list.getTask(0));","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"panavdua":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"todo read books","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":3}}]
