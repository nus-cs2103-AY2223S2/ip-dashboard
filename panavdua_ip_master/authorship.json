[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"                \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":16}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":" * Class encapsulates an exception which occurs when the user wants to manipulate","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":" * his list using commands such as \u0027delete\u0027, \u0027mark\u0027 etc. but inputs an index number","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":" * which doesn\u0027t exist in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"        return getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":18}},{"path":"src/main/java/InvalidNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"public class InvalidNumberException extends Exception{","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"    public InvalidNumberException(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"        return getMessage();","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"panavdua":11}},{"path":"src/main/java/Panav.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"public class Panav {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    public static void main(String[] args) throws InvalidInputException, ToDoDescriptionException {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"        System.out.println(\"Hello hello! I\u0027m Panav\");","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"        System.out.println(\"What\u0027s up bro\");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"        ArrayList\u003cTask\u003e list \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"        String filePath \u003d \"C:\\\\Users\\\\panav\\\\OneDrive\\\\Desktop\\\\CS2103T\\\\ip\\\\src\\\\main\\\\java\\\\data\\\\panav.txt\";","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"panavdua"},"content":"            list \u003d readFromFile(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"panavdua"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"panavdua"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"panavdua"},"content":"        } catch (ToDoDescriptionException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"panavdua"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"panavdua"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"panavdua"},"content":"        int counter \u003d list.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"panavdua"},"content":"        while(true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"panavdua"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"panavdua"},"content":"                String[] temp \u003d command.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"panavdua"},"content":"                String first \u003d temp[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"panavdua"},"content":"                //Task t \u003d new Task(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"panavdua"},"content":"                int len \u003d command.length();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"panavdua"},"content":"                switch (first) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"panavdua"},"content":"                case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"panavdua"},"content":"                    for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"panavdua"},"content":"                        System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"panavdua"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"panavdua"},"content":"                    String todomessage \u003d command.replace(\"todo\", \"\").trim();","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"panavdua"},"content":"                    Task todo \u003d new ToDo(todomessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"panavdua"},"content":"                    list.add(todo);","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"panavdua"},"content":"                    counter++;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"panavdua"},"content":"                    writeToFile(list, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"panavdua"},"content":"                    System.out.println(todo);","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"panavdua"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"panavdua"},"content":"                    int index_by \u003d command.indexOf(\"/by\");","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"panavdua"},"content":"                    String by \u003d command.substring(index_by + 4);","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"panavdua"},"content":"                    by \u003d formatDate(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"panavdua"},"content":"                    String deadlinemessage \u003d command.substring(9, index_by - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"panavdua"},"content":"                    Task deadline \u003d new Deadline(deadlinemessage, by);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"panavdua"},"content":"                    list.add(deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"panavdua"},"content":"                    counter++;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"panavdua"},"content":"                    writeToFile(list, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"panavdua"},"content":"                    System.out.println(deadline);","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"panavdua"},"content":"                case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"panavdua"},"content":"                    int fromindex \u003d 0, toindex \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"panavdua"},"content":"                    String eventmessage \u003d \"\", from \u003d \"\", to \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"panavdua"},"content":"                    for (int j \u003d 0; j \u003c temp.length; j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"panavdua"},"content":"                        if (temp[j].compareTo(\"/from\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"panavdua"},"content":"                            fromindex \u003d j;","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"panavdua"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"panavdua"},"content":"                        if (temp[j].compareTo(\"/to\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"panavdua"},"content":"                            toindex \u003d j;","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"panavdua"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"panavdua"},"content":"                    for (int j \u003d 0; j \u003c temp.length; j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"panavdua"},"content":"                        if (j \u003c fromindex \u0026\u0026 j \u003e 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"panavdua"},"content":"                            eventmessage +\u003d temp[j] + \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"panavdua"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"panavdua"},"content":"                        if (j \u003e fromindex \u0026\u0026 j \u003c toindex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"panavdua"},"content":"                            from +\u003d temp[j] + \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"panavdua"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"panavdua"},"content":"                        if (j \u003e toindex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"panavdua"},"content":"                            to +\u003d temp[j];","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"panavdua"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"panavdua"},"content":"                    Task event \u003d new Event(eventmessage, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"panavdua"},"content":"                    list.add(event);","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"panavdua"},"content":"                    counter++;","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"panavdua"},"content":"                    writeToFile(list, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"panavdua"},"content":"                    System.out.println(event);","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"panavdua"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"panavdua"},"content":"                    //Fallthrough","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"panavdua"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"panavdua"},"content":"                    int num \u003d readNumber(command, counter);","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"panavdua"},"content":"                    Task cur \u003d list.get(num - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"panavdua"},"content":"                    if (first.compareTo(\"mark\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"panavdua"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"panavdua"},"content":"                        cur.markAsDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"panavdua"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"panavdua"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"panavdua"},"content":"                        cur.markAsNotDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"panavdua"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"panavdua"},"content":"                    System.out.println(cur);","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"panavdua"},"content":"                    writeToFile(list, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"panavdua"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"panavdua"},"content":"                    System.exit(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"panavdua"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"panavdua"},"content":"                    int deleteIndex \u003d readNumber(command, counter);","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"panavdua"},"content":"                    Task removed \u003d list.remove(deleteIndex - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"panavdua"},"content":"                    counter--;","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"panavdua"},"content":"                    writeToFile(list, filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"panavdua"},"content":"                    System.out.println(removed);","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"panavdua"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"panavdua"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"panavdua"},"content":"                default:","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"panavdua"},"content":"                    throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"panavdua"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"panavdua"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"panavdua"},"content":"            } catch (ToDoDescriptionException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"panavdua"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"panavdua"},"content":"            } catch(InvalidNumberException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"panavdua"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"panavdua"},"content":"            } catch(IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"panavdua"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"panavdua"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"panavdua"},"content":"     * Returns the index number for commands which manipulate the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"panavdua"},"content":"     * @param command The command which is manipulating list.","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"panavdua"},"content":"     * @param counter The number of elements in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"panavdua"},"content":"     * @return Index number in command.","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"panavdua"},"content":"     * @throws InvalidNumberException If the index doesn\u0027t exist.","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"panavdua"},"content":"    public static int readNumber(String command, int counter) throws InvalidNumberException{","lastModifiedDate":"2023-01-24"},{"lineNumber":172,"author":{"gitId":"panavdua"},"content":"        int number \u003d Integer.parseInt(String.valueOf(command.charAt(command.length() - 1)));","lastModifiedDate":"2023-01-24"},{"lineNumber":173,"author":{"gitId":"panavdua"},"content":"        if (number \u003e counter || number \u003c 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":174,"author":{"gitId":"panavdua"},"content":"            throw new InvalidNumberException(\"Oops!! There is no such index number in your list\");","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"panavdua"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":176,"author":{"gitId":"panavdua"},"content":"            return number;","lastModifiedDate":"2023-01-24"},{"lineNumber":177,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":179,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"panavdua"},"content":"     * Reads the existing list of tasks from text file.","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"panavdua"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"panavdua"},"content":"     * @param filePath path of file to be read from","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"panavdua"},"content":"     * @throws FileNotFoundException if text file doesn\u0027t exist.","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"panavdua"},"content":"     * @throws ToDoDescriptionException if todo is missing description.","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"panavdua"},"content":"    public static ArrayList\u003cTask\u003e readFromFile(String filePath) throws FileNotFoundException ,","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"panavdua"},"content":"            ToDoDescriptionException {","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"panavdua"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":190,"author":{"gitId":"panavdua"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"panavdua"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":192,"author":{"gitId":"panavdua"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":193,"author":{"gitId":"panavdua"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"panavdua"},"content":"            String[] arr \u003d command.split(\" ~ \");","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"panavdua"},"content":"            Task curr;","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"panavdua"},"content":"            if (arr[0].compareTo(\"T\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"panavdua"},"content":"                curr \u003d new ToDo(arr[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":198,"author":{"gitId":"panavdua"},"content":"                if (arr[1].compareTo(\"1\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"panavdua"},"content":"                    curr.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":201,"author":{"gitId":"panavdua"},"content":"            } else if (arr[0].compareTo(\"D\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"panavdua"},"content":"                curr \u003d new Deadline(arr[2], arr[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"panavdua"},"content":"                if (arr[1].compareTo(\"1\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"panavdua"},"content":"                    curr.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"panavdua"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"panavdua"},"content":"                curr \u003d new Event(arr[2], arr[3], arr[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"panavdua"},"content":"                if (arr[1].compareTo(\"1\") \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":209,"author":{"gitId":"panavdua"},"content":"                    curr.markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":210,"author":{"gitId":"panavdua"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"panavdua"},"content":"            list.add(curr);","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"panavdua"},"content":"        return list;","lastModifiedDate":"2023-01-25"},{"lineNumber":216,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"panavdua"},"content":"     * Writes the changes to the list to the file.","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"panavdua"},"content":"     * @param list the list containing the tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"panavdua"},"content":"     * @param filePath the path of the file to be written to.","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"panavdua"},"content":"     * @throws IOException in case if folder is not found or some other exception.","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"panavdua"},"content":"    public static void writeToFile(ArrayList\u003cTask\u003e list, String filePath) throws IOException {","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"panavdua"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"panavdua"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"panavdua"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"panavdua"},"content":"            String str \u003d task.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":229,"author":{"gitId":"panavdua"},"content":"            int indexBy \u003d str.indexOf(\"by:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"panavdua"},"content":"            int indexFrom \u003d str.indexOf(\"from:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"panavdua"},"content":"            int indexTo \u003d str.indexOf(\"to:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"panavdua"},"content":"            int check \u003d task.isDone ? 1 : 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"panavdua"},"content":"            int length \u003d str.length();","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"panavdua"},"content":"            if (indexBy !\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"panavdua"},"content":"                textToAdd +\u003d String.format(\"%c ~ %d ~ %s ~ %s %n\", str.charAt(1), check,","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"panavdua"},"content":"                        str.substring(7, indexBy - 2), str.substring(indexBy + 4, length - 1));","lastModifiedDate":"2023-01-25"},{"lineNumber":237,"author":{"gitId":"panavdua"},"content":"            } else if (indexFrom !\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"panavdua"},"content":"                textToAdd +\u003d String.format(\"%c ~ %d ~ %s ~ %s ~ %s %n\", str.charAt(1), check,","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"panavdua"},"content":"                        str.substring(7, indexFrom - 1), str.substring(indexFrom + 6, indexTo - 1),","lastModifiedDate":"2023-01-25"},{"lineNumber":240,"author":{"gitId":"panavdua"},"content":"                        str.substring(indexTo + 4, length - 1));","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"panavdua"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"panavdua"},"content":"                textToAdd +\u003d String.format(\"%c ~ %d ~ %s %n\", str.charAt(1), check, str.substring(7));","lastModifiedDate":"2023-01-25"},{"lineNumber":243,"author":{"gitId":"panavdua"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":244,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":246,"author":{"gitId":"panavdua"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-01-25"},{"lineNumber":247,"author":{"gitId":"panavdua"},"content":"        fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":248,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":249,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":250,"author":{"gitId":"panavdua"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"panavdua"},"content":"     * Formats the date according to \u0027MMM dd yyyy\u0027 if it\u0027s given in the correct format of","lastModifiedDate":"2023-01-25"},{"lineNumber":252,"author":{"gitId":"panavdua"},"content":"     * \u0027yyyy-mm-dd\u0027, otherwise it just returns the string.","lastModifiedDate":"2023-01-25"},{"lineNumber":253,"author":{"gitId":"panavdua"},"content":"     * @param dateString the string to be formatted.","lastModifiedDate":"2023-01-25"},{"lineNumber":254,"author":{"gitId":"panavdua"},"content":"     * @return either the formatted date or the original string itself.","lastModifiedDate":"2023-01-25"},{"lineNumber":255,"author":{"gitId":"panavdua"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":256,"author":{"gitId":"panavdua"},"content":"    public static String formatDate(String dateString) {","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"panavdua"},"content":"        LocalDate d \u003d null;","lastModifiedDate":"2023-01-25"},{"lineNumber":258,"author":{"gitId":"panavdua"},"content":"        String result \u003d dateString;","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"panavdua"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":260,"author":{"gitId":"panavdua"},"content":"            d \u003d LocalDate.parse(dateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":261,"author":{"gitId":"panavdua"},"content":"            result \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")).toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":262,"author":{"gitId":"panavdua"},"content":"            System.out.println(\"hiu\");","lastModifiedDate":"2023-01-25"},{"lineNumber":263,"author":{"gitId":"panavdua"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":264,"author":{"gitId":"panavdua"},"content":"            return result;","lastModifiedDate":"2023-01-25"},{"lineNumber":265,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":266,"author":{"gitId":"panavdua"},"content":"        return result;","lastModifiedDate":"2023-01-25"},{"lineNumber":267,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"panavdua":266,"-":2}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"panavdua"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"panavdua"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"panavdua"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":24}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"    public ToDo(String description) throws ToDoDescriptionException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"            throw new ToDoDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"panavdua"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":14}},{"path":"src/main/java/ToDoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"public class ToDoDescriptionException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"    public ToDoDescriptionException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"panavdua"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"panavdua"},"content":"    public String toString(){","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"panavdua"},"content":"        return getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"panavdua"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"panavdua"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"panavdua"},"content":"todo read books","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"panavdua"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"panavdua"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"panavdua":3}}]
