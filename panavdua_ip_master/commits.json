{"authorDailyContributionsMap":{"panavdua":[{"date":"2023-01-19","commitResults":[{"hash":"8673b0af80dd59c44a955dd000f6a9200b1f4e5a","messageTitle":"Created Level - 1 framework","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}},{"hash":"54806e634014dee082b54edccf236f99bc00bc0b","messageTitle":"Level-2 completed","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":5}}},{"hash":"98c646abf38e3d7a20a3cd2118b74e6eaac4b21a","messageTitle":"Added new Task class and edited Duke according to level 3 increment","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":3}}},{"hash":"541bb7bc320d3093a5190974eb9e24a0c0747ac0","messageTitle":"Added new subclasses of events and completed Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":39}}},{"hash":"be2eea4600c09c8a124048eeecc10a64b49da2ae","messageTitle":"Tested out automated testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"8e72879c54f47d3d273b501032897bc5a1431788","messageTitle":"Did level 5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":17}}}]},{"date":"2023-01-20","commitResults":[{"hash":"3b2449ccd394d32a095aef6b59a3e90d5d274a0e","messageTitle":"Added delete functionality","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"fd9fe32375f41ca3d1f0ba42562a0f15a66ec78c","messageTitle":"Fixed bugs in \"deadline\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}}]},{"date":"2023-01-24","commitResults":[{"hash":"bfd8f0083100b81161b1075b49c50b818dc36923","messageTitle":"Add InvalidNumberException and fix bugs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":30}}}]},{"date":"2023-01-25","commitResults":[{"hash":"9e26bff519f48f83184c2fe5bd591928ab254ba3","messageTitle":"Add javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"8712493cacb859c661e7c3bcb020ca9de0c59664","messageTitle":"Add functionality to save list of tasks into hard disk","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":13}}}]},{"date":"2023-01-27","commitResults":[{"hash":"a7622e298f89830cb99a82be52736457e51cdd95","messageTitle":"Implement OOP principls","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":507,"deletions":23}}},{"hash":"8a3dc359baa34b88155ff8a032f0074784141642","messageTitle":"Organise all existing classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":191,"deletions":334}}}]},{"date":"2023-01-28","commitResults":[{"hash":"9279d4e7e2949a70822a82309f7784ad80264363","messageTitle":"Add gradle support","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":0}}},{"hash":"90f01fcf57ffd5739e6e1925fd8447cecc14b806","messageTitle":"Configure Gradle to to run JUnit tests","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"c9f46058d141ca6bef0c2f1f4356e8080d860faa","messageTitle":"Implement JUnit tests for some methods of certain classes","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}},{"hash":"bd74c085eb28c95178936924e81e494995250664","messageTitle":"Modify details in build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"e7428b529495af59b882f0e3fa17986be8f337a3","messageTitle":"Add JavaDoc comments to all classes and public methods in the program.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":221,"deletions":2}}},{"hash":"338daa6645c0d8e2afa547776543ebe7053ff20a","messageTitle":"Made changes to adhere to coding stadard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":14}}},{"hash":"b5a4cbae0f4a97def84d9a2d55638f6d9b8e0165","messageTitle":"Add feature to find all tasks in the list which contain a specific word","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":1}}}]},{"date":"2023-02-02","commitResults":[{"hash":"5060a4d6eeb65bf885020735b7f6cc455d480789","messageTitle":"Implement checkstyle tests and improve the general coding quality","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":41,"deletions":41}}}]},{"date":"2023-02-03","commitResults":[{"hash":"9b4c74654138d825f72a3dc7fa3945afcff2b1d4","messageTitle":"Improve checkStyle in various files","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":42,"deletions":20}}}]},{"date":"2023-02-04","commitResults":[{"hash":"2b6876319a8772a7bcf3cbf1e9ed2186f0995074","messageTitle":"Add JavaFX basic controls to Panav.java and created Launcher.java","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":51,"deletions":2}}}]},{"date":"2023-02-06","commitResults":[{"hash":"189ecd84ff613b8c9f559cdf4c0ff105d55c9a1f","messageTitle":"Create basic layout for GUI Panav","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"f28a21b2121d4b4b074b05e99bde2d58e5c24ce4","messageTitle":"Improve code styling and convention","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":1}}}]},{"date":"2023-02-07","commitResults":[{"hash":"c58139b6c03c6be43f7e7dca2b550a9218fb3ec2","messageTitle":"Add interaction of GUI with the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":283,"deletions":92}}}]},{"date":"2023-02-10","commitResults":[{"hash":"c2b773748d5fdf6e3501409a85f549e77cc32a39","messageTitle":"Use FXML and SceneBuilder","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":137,"deletions":63}}},{"hash":"30f7bf5f1daa7fcea93cc6dee7bb6861c47d5f69","messageTitle":"Improve code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":162,"deletions":281}}},{"hash":"ece3ec7e9b99c2b7efbfb12ebda7a87116659d54","messageTitle":"Add assertions to highlight important assumptions in the code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":5}}}]},{"date":"2023-02-11","commitResults":[{"hash":"8f02e344f79c2ff5e6f1701fa2543a338d402302","messageTitle":"Update build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2023-02-12","commitResults":[{"hash":"0806d51b2eed40121552a06d37177472e3ea2dd5","messageTitle":"Find command: ability to find all tasks of a particular type","messageBody":"User should have the ability to find all the todos/deadlines/events in\nthe task list.\n\nLet\u0027s add functionality so the user can just type \"find todo\" to\nlist out all the todos in the list.\n\nMakes it easier for users to filter out tasks of one type if the\nlist is too long.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":5}}},{"hash":"242a4880436fa0d8bf75b2f2edd1daf5e88d52dc","messageTitle":"Allow case-insensitivity for \u0027find\u0027 command and narrow down on the \u0027searchable\u0027 part of a string representation of a task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":7}}},{"hash":"14caf5642dc1774beb0bae292bdba3baf5e31399","messageTitle":"Update build.gradle to include JavaFX","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}}]},{"date":"2023-02-14","commitResults":[{"hash":"50573ed398fa8a21a34f7d197717b544a250a319","messageTitle":"enable relative path directory instead of absolute so that it can work on any OS","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":47,"deletions":24}}}]},{"date":"2023-02-15","commitResults":[{"hash":"89166095965ba393e38d979c114bfa32ec0cb58c","messageTitle":"Fix bugs related to \u0027mark\u0027 and \u0027unmark\u0027 command","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":2,"deletions":18}}},{"hash":"91cbdebf32079adb3079fb549e1f79cb5b09bb54","messageTitle":"create new classes to separate edit commands","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":9,"deletions":5}}},{"hash":"82290b5b28b9f8557b7fa74cdf2d387e8e1b091c","messageTitle":"create new classes for MarkCommand and UnmarkCommand which extend EditCommand","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":97,"deletions":85}}},{"hash":"d765a3428946c483098dd08e7d7880f816ec3b4f","messageTitle":"Add restriction such that user cannot mark tasks which are already marked; same for unmark as well","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":25,"deletions":0}}},{"hash":"5bda6ff2ea46e3bc36419e5a1297522ae19df8fd","messageTitle":"change panav.txt","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1}}}]},{"date":"2023-02-17","commitResults":[{"hash":"77cbce3119009519431703a6b0968474f5d3a52d","messageTitle":"Add functionality to catch errors arising from editing tasks","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":2,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"panavdua":{"java":1538,"md":0,"fxml":35,"sh":0,"bat":0,"gradle":25,"txt":4}},"authorContributionVariance":{"panavdua":48582.43},"authorDisplayNameMap":{"panavdua":"CS2103T-W09-4 PANA.. DUA"}}
