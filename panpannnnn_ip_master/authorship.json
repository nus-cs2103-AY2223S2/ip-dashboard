[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"    private String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"panpannnnn"},"content":"    private String deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"panpannnnn"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"panpannnnn"},"content":"        super(name);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"panpannnnn"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"panpannnnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"panpannnnn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"panpannnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"panpannnnn"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"panpannnnn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"panpannnnn":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"panpannnnn"},"content":"        System.out.println(\"ฅʕ•ᴥ•ʔฅ :: Hiii! I\u0027m duke, what can I help you with?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"panpannnnn"},"content":"        //echo();","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"panpannnnn"},"content":"        add();","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"panpannnnn"},"content":"    public static void echo() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"panpannnnn"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"panpannnnn"},"content":"        String cmd;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"panpannnnn"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"panpannnnn"},"content":"            cmd \u003d input.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"panpannnnn"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"panpannnnn"},"content":"                System.out.println(\"ʕっ￫ᴥ￩ʔっ :: Buhbyeee, hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"panpannnnn"},"content":"                return;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"panpannnnn"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"panpannnnn"},"content":"                System.out.println(cmd);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"panpannnnn"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"panpannnnn"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"panpannnnn"},"content":"    public static void add() throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"panpannnnn"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"panpannnnn"},"content":"        String cmd;","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"panpannnnn"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"panpannnnn"},"content":"        Integer count \u003d 0;","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"panpannnnn"},"content":"        Integer num;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"panpannnnn"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"panpannnnn"},"content":"            System.out.println(\"•──────────────────♛─────────────────•\");","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"panpannnnn"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"panpannnnn"},"content":"                cmd \u003d input.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"panpannnnn"},"content":"                System.out.println(\"•──────────────────♛─────────────────•\");","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"panpannnnn"},"content":"                if (cmd.equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"ʕっ￫ᴥ￩ʔっ :: Buhbyeee, hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"panpannnnn"},"content":"                    return;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"panpannnnn"},"content":"                } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"ʕ•ᴥ•ʔっ :: Here are the task(s) in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"panpannnnn"},"content":"                    for (int i \u003d 1; i \u003c\u003d count; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"panpannnnn"},"content":"                        System.out.println(i + \".\" + list.get(i-1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"panpannnnn"},"content":"                } else if (cmd.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"panpannnnn"},"content":"                    num \u003d Integer.valueOf(cmd.substring(5));","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"panpannnnn"},"content":"                    if (count \u003c num) {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"panpannnnn"},"content":"                        throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The task does not exist!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"panpannnnn"},"content":"                    list.get(num - 1).setDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"ʕ•̀ω•́ʔ✧ :: Nice! I\u0027ve marked this task as done:\\n  \" + list.get(num - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"panpannnnn"},"content":"                } else if (cmd.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"panpannnnn"},"content":"                    num \u003d Integer.valueOf(cmd.substring(7));","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"panpannnnn"},"content":"                    if (count \u003c num) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"panpannnnn"},"content":"                        throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The task does not exist!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"panpannnnn"},"content":"                    list.get(num - 1).setUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"ʕ•̀ω•́ʔ✧ :: OK, I\u0027ve marked this task as not done yet:\\n  \" + list.get(num - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"panpannnnn"},"content":"                } else if (cmd.startsWith(\"todo\") || cmd.startsWith(\"deadline\") || cmd.startsWith(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"panpannnnn"},"content":"                    boolean valid \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"panpannnnn"},"content":"                    if (cmd.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"panpannnnn"},"content":"                        if (cmd.substring(4).equals(\"\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"panpannnnn"},"content":"                            valid \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"panpannnnn"},"content":"                            throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"panpannnnn"},"content":"                        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"panpannnnn"},"content":"                            list.add(new ToDo(cmd.substring(5)));","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"panpannnnn"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"panpannnnn"},"content":"                    } else if (cmd.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"panpannnnn"},"content":"                        int ind \u003d cmd.indexOf(\"/by\");","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"panpannnnn"},"content":"                        if (ind \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"panpannnnn"},"content":"                            valid \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"panpannnnn"},"content":"                            throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The deadline is missing!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"panpannnnn"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"panpannnnn"},"content":"                        if (ind \u003d\u003d 9) {","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"panpannnnn"},"content":"                            valid \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"panpannnnn"},"content":"                            throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"panpannnnn"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"panpannnnn"},"content":"                        list.add(new Deadline(cmd.substring(9, ind - 1), cmd.substring(ind + 4)));","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"panpannnnn"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"panpannnnn"},"content":"                        int start \u003d cmd.indexOf(\"/from\");","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"panpannnnn"},"content":"                        int end \u003d cmd.indexOf(\"/to\");","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"panpannnnn"},"content":"                        if (start \u003d\u003d -1 || end \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"panpannnnn"},"content":"                            valid \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"panpannnnn"},"content":"                            throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The event duration is missing!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"panpannnnn"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"panpannnnn"},"content":"                        if (start \u003d\u003d 6) {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"panpannnnn"},"content":"                            valid \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"panpannnnn"},"content":"                            throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The description of an event cannot be empty!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"panpannnnn"},"content":"                        }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"panpannnnn"},"content":"                        list.add(new Event(cmd.substring(6, start - 1), cmd.substring(start + 6, end - 1), cmd.substring(end + 4)));","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"panpannnnn"},"content":"                    if (valid) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"panpannnnn"},"content":"                        System.out.println(\"ฅʕ\u0027ᴥ\u0027ʔฅ :: Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"panpannnnn"},"content":"                        System.out.println(\"  \" + list.get(count).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"panpannnnn"},"content":"                        count++;","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"panpannnnn"},"content":"                        System.out.println(\"ʕ•ᴥ•ʔっ :: Now you have \" + count + \" task(s) in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"panpannnnn"},"content":"                } else if (cmd.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"panpannnnn"},"content":"                    if (count \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"panpannnnn"},"content":"                        throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The list is empty!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"panpannnnn"},"content":"                    num \u003d Integer.valueOf(cmd.substring(7));","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"panpannnnn"},"content":"                    if (count \u003c num) {","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"panpannnnn"},"content":"                        throw new DukeException(\"ʕ ﾟ ● ﾟʔ :: ☹ OOPS!!! The task does not exist!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"panpannnnn"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"ฅʕ\u0027ᴥ\u0027ʔฅ :: Noted. I\u0027ve removed this task :\");","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"  \" + list.remove(num - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"panpannnnn"},"content":"                    count --;","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"panpannnnn"},"content":"                    System.out.println(\"ʕ•ᴥ•ʔっ :: Now you have \" + count + \" task(s) in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"panpannnnn"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"panpannnnn"},"content":"                    throw new DukeException(\"╮ʕ˚ᴥ˚ʔ╭ :: ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"panpannnnn"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"panpannnnn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"panpannnnn"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"panpannnnn"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"panpannnnn"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"panpannnnn":111,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"panpannnnn"},"content":"        super(error);","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"panpannnnn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"panpannnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"panpannnnn"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"panpannnnn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"panpannnnn":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"    private String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"panpannnnn"},"content":"    private String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"    private String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"panpannnnn"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"panpannnnn"},"content":"        super(name);","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"panpannnnn"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"panpannnnn"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"panpannnnn"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"panpannnnn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"panpannnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"panpannnnn"},"content":"        return \"[\" + this.type + \"]\" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"panpannnnn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"panpannnnn":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"    private String done;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"panpannnnn"},"content":"    private String name;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"panpannnnn"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"panpannnnn"},"content":"        this.done \u003d \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"panpannnnn"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"panpannnnn"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"panpannnnn"},"content":"        this.done \u003d \"X\";","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"panpannnnn"},"content":"    public void setUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"panpannnnn"},"content":"        this.done \u003d \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"panpannnnn"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"panpannnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"panpannnnn"},"content":"        return \"[\" + done + \"] \" + name;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"panpannnnn"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"panpannnnn":21}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"    private String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"panpannnnn"},"content":"        super(name);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"panpannnnn"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"panpannnnn"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"panpannnnn"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"panpannnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"panpannnnn"},"content":"        return \"[\" + this.type + \"]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"panpannnnn"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"panpannnnn"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"panpannnnn":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"panpannnnn":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"panpannnnn"},"content":"dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"panpannnnn"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"panpannnnn":2,"-":20}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"panpannnnn"},"content":"D:\\Y2S2\\CS2109S\\ip\\src\\main\\java\\Deadline.java","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"panpannnnn"},"content":"D:\\Y2S2\\CS2109S\\ip\\src\\main\\java\\Duke.java","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"panpannnnn"},"content":"D:\\Y2S2\\CS2109S\\ip\\src\\main\\java\\DukeException.java","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"panpannnnn"},"content":"D:\\Y2S2\\CS2109S\\ip\\src\\main\\java\\Event.java","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"panpannnnn"},"content":"D:\\Y2S2\\CS2109S\\ip\\src\\main\\java\\Task.java","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"panpannnnn"},"content":"D:\\Y2S2\\CS2109S\\ip\\src\\main\\java\\ToDo.java","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"panpannnnn":6}}]
