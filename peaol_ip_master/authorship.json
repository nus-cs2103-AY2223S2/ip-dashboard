[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peaol":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"public class Duke {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"    public Duke() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"        this.ui \u003d new Ui(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"peaol"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"peaol"},"content":"        ui.greet();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"peaol"},"content":"        parser.getTaskType();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"peaol"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"peaol"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"peaol"},"content":"        duke.run();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"peaol"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"peaol"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"peaol"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"peaol"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"peaol"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"peaol"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"peaol":40}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"import duke.exceptions.TaskDoesNotExistException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    public TaskList taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    public Scanner scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    String input;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"    public void getTaskType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"peaol"},"content":"        input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"peaol"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"peaol"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"peaol"},"content":"                //print List","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"peaol"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"peaol"},"content":"                    taskList.getList();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"peaol"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"peaol"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"peaol"},"content":"                    //split into 2, first part is duke.task type, second part is instruction","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"peaol"},"content":"                    String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"peaol"},"content":"                    String taskType \u003d parts[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"peaol"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"peaol"},"content":"                        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"peaol"},"content":"                            taskList.markTask(parts);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"peaol"},"content":"                            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"peaol"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"peaol"},"content":"                            taskList.unmarkTask(parts);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"peaol"},"content":"                            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"peaol"},"content":"                        case \"delete\":","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"peaol"},"content":"                            taskList.deleteTask(parts);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"peaol"},"content":"                            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"peaol"},"content":"                        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"peaol"},"content":"                        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"peaol"},"content":"                        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"peaol"},"content":"                            taskList.createTask(parts);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"peaol"},"content":"                            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"peaol"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"peaol"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"peaol"},"content":"            } catch (TaskDoesNotExistException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"peaol"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"peaol"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"peaol"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"peaol"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"peaol"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"peaol":61}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"        super(\"error\");","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        super(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"peaol":12}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class EmptyDescriptionException extends  Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"        super(\"bro where\u0027s the duke.task description?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"peaol":12}},{"path":"src/main/java/duke/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"peaol":12}},{"path":"src/main/java/duke/exceptions/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class TaskDoesNotExistException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    public TaskDoesNotExistException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"        super(\"Task doesn\u0027t exist bruh\");","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    public TaskDoesNotExistException(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        super(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"peaol":13}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"peaol":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":20}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"peaol"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"peaol"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":28}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"import duke.exceptions.TaskDoesNotExistException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    public List\u003cTask\u003e list;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"        return this.list;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"peaol"},"content":"    public int getListSize() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"peaol"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"peaol"},"content":"    public void getList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"peaol"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"peaol"},"content":"        for (Object task : this.list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"peaol"},"content":"            System.out.println(counter + \". \" + task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"peaol"},"content":"            counter++;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"peaol"},"content":"    public void markTask(String[] parts) throws TaskDoesNotExistException {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"peaol"},"content":"        //converting the index from String to Int","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"peaol"},"content":"        int indexInt \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"peaol"},"content":"        //in case the duke.task.Task index to mark exceeds current number of Tasks or neg number","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"peaol"},"content":"        if (indexInt + 1 \u003e list.size() || indexInt \u003c 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"peaol"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"peaol"},"content":"        Task t \u003d list.get(indexInt);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"peaol"},"content":"        t.markDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Nice! I\u0027ve marked this duke.task as done:\\n\" + t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"peaol"},"content":"    public void unmarkTask(String[] parts) throws TaskDoesNotExistException {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"peaol"},"content":"        //converting the index from String to Int","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"peaol"},"content":"        int indexInt \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"peaol"},"content":"        //in case the duke.task.Task index to mark exceeds current number of Tasks or neg number","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"peaol"},"content":"        if (indexInt + 1 \u003e this.getListSize() || indexInt \u003c 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"peaol"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"peaol"},"content":"        Task t \u003d list.get(indexInt);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"peaol"},"content":"        t.markUndone();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Okay.. I\u0027ve unmarked this duke.task:\\n\" + t.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"peaol"},"content":"    public void deleteTask(String[] parts) throws TaskDoesNotExistException {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"peaol"},"content":"        int indexInt \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"peaol"},"content":"        //in case the duke.task.Task index to mark exceeds current number of Tasks or neg number","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"peaol"},"content":"        if (indexInt + 1 \u003e list.size() || indexInt \u003c 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"peaol"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"peaol"},"content":"        String task \u003d list.get(indexInt).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"peaol"},"content":"        list.remove(indexInt);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Noted. I\u0027ve removed this duke.task: \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"peaol"},"content":"                + task","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"peaol"},"content":"                + \"\\nNow you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"peaol"},"content":"    public void createTask(String[] parts) throws EmptyDescriptionException {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"peaol"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"peaol"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"peaol"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"peaol"},"content":"        switch(taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"peaol"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"peaol"},"content":"                String todoDescription \u003d parts[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"peaol"},"content":"                Task t \u003d new Todo(todoDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"peaol"},"content":"                this.list.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"peaol"},"content":"                System.out.println(\"New todo added: \" + todoDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"peaol"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"peaol"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"peaol"},"content":"                //split into descrpition and time","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"peaol"},"content":"                String part2[] \u003d parts[1].split(\"/by:\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"peaol"},"content":"                String deadlineDescription \u003d part2[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"peaol"},"content":"                String time \u003d part2[1].trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"peaol"},"content":"                //turn String date into LocalDate object date","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"peaol"},"content":"                LocalDate date \u003d LocalDate.parse(time);","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"peaol"},"content":"                Task d \u003d new Deadline(deadlineDescription, date);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"peaol"},"content":"                list.add(d);","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"peaol"},"content":"                System.out.println(\"New deadline added: \" + deadlineDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"peaol"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"peaol"},"content":"            case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"peaol"},"content":"                //split into descrpition and time","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"peaol"},"content":"                String part3[] \u003d parts[1].split(\"/from:\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"peaol"},"content":"                String eventDescription \u003d part3[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"peaol"},"content":"                String timearr[] \u003d part3[1].split(\"/to:\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"peaol"},"content":"                String from \u003d timearr[0].trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"peaol"},"content":"                String to \u003d timearr[1].trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"peaol"},"content":"                LocalDate fromdate \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"peaol"},"content":"                LocalDate todate \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"peaol"},"content":"                Task e  \u003d new Event(eventDescription, fromdate, todate);","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"peaol"},"content":"                this.list.add(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"peaol"},"content":"                System.out.println(\"New event added: \" + eventDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"peaol"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"peaol":126}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":14}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    public Ui(TaskList taskList) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    public void greet() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Hello! I\u0027m Mash \\nWhat can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"peaol":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"todo eat","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"deadline play /by: 2023-12-20","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"event play with me /from: 2023-12-20 /to: 2023-12-21","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"mark 2","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"unmark 2","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"delete 3","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"list","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"todo","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"peaol":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peaol":1,"-":20}}]
