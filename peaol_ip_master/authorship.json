[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"import java.util.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Hello! I\u0027m Mash \\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        String input;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"        input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"            //print List","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"                int counter \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"                for (Task task : list) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"                    System.out.println(counter + \". \" + task.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"peaol"},"content":"                    counter++;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"peaol"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"peaol"},"content":"                input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"peaol"},"content":"                //mark a Task","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"peaol"},"content":"            } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"peaol"},"content":"                //getting the index","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"peaol"},"content":"                String indexString \u003d input.substring(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"peaol"},"content":"                //converting the index from String to Int","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"peaol"},"content":"                int indexInt \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"peaol"},"content":"                //in case the Task index to mark exceeds current number of Tasks or neg number","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"peaol"},"content":"                if (indexInt + 1 \u003e list.size() || indexInt \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Task does not exist\");","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"peaol"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"peaol"},"content":"                    Task t \u003d list.get(indexInt);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"peaol"},"content":"                    t.markDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + t.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"peaol"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"peaol"},"content":"                input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"peaol"},"content":"                //unmark a Task","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"peaol"},"content":"            } else if (input.length() \u003e 6 \u0026\u0026 input.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"peaol"},"content":"                String indexString \u003d input.substring(7);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"peaol"},"content":"                //converting the index from String to Int","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"peaol"},"content":"                int indexInt \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"peaol"},"content":"                //in case the Task index to mark exceeds current number of Tasks or neg number","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"peaol"},"content":"                if (indexInt + 1 \u003e list.size() || indexInt \u003c 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Task does not exist\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"peaol"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"peaol"},"content":"                    Task t \u003d list.get(indexInt);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"peaol"},"content":"                    t.markUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + t.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"peaol"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"peaol"},"content":"                input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"peaol"},"content":"                //delete","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"peaol"},"content":"            } else if (input.length() \u003e 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"peaol"},"content":"                String indexString \u003d input.substring(7);","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"peaol"},"content":"                int indexInt \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"peaol"},"content":"                //in case the Task index to mark exceeds current number of Tasks or neg number","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"peaol"},"content":"                if (indexInt + 1 \u003e list.size() || indexInt \u003c 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Task does not exist\");","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"peaol"},"content":"                } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"peaol"},"content":"                    String task \u003d list.get(indexInt).toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"peaol"},"content":"                    list.remove(indexInt);","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"peaol"},"content":"                            + task","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"peaol"},"content":"                            + \"\\nNow you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"peaol"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"peaol"},"content":"                input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"peaol"},"content":"                //normal case: create Task and add Task to list","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"peaol"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"peaol"},"content":"                //if the task is a todo","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"peaol"},"content":"                if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"peaol"},"content":"                    Task t  \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"peaol"},"content":"                    list.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"peaol"},"content":"                            + t.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"peaol"},"content":"                            + \"\\nNow you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"peaol"},"content":"                    //if task is a deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"peaol"},"content":"                } else if (input.length() \u003e 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"peaol"},"content":"                    int slashIndex \u003d input.lastIndexOf(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"peaol"},"content":"                    String date \u003d input.substring(slashIndex + 4);","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"peaol"},"content":"                    Task t  \u003d new Deadline(input.substring(9, slashIndex-1), date);","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"peaol"},"content":"                    list.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"peaol"},"content":"                            + t.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"peaol"},"content":"                            + \"\\nNow you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"peaol"},"content":"                    //if task is an Event","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"peaol"},"content":"                } else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"peaol"},"content":"                    int fromIndex \u003d input.lastIndexOf(\"from\");","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"peaol"},"content":"                    int toIndex \u003d input.lastIndexOf(\"to\");","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"peaol"},"content":"                    String startDate \u003d input.substring(fromIndex + 5, toIndex - 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"peaol"},"content":"                    String endDate \u003d input.substring(toIndex + 3);","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"peaol"},"content":"                    Task t  \u003d new Event(input.substring(6, fromIndex - 2), startDate, endDate);","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"peaol"},"content":"                    list.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"peaol"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"peaol"},"content":"                            + t.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"peaol"},"content":"                            + \"\\nNow you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"peaol"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"peaol"},"content":"                    //Exception for tasks without description","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"peaol"},"content":"                    try {","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"peaol"},"content":"                        if ((input.length() \u003d\u003d 4 \u0026\u0026 input.substring(0).equals(\"todo\"))","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"peaol"},"content":"                                || (input.length() \u003d\u003d 8 \u0026\u0026 input.substring(0).equals(\"deadline\"))","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"peaol"},"content":"                                || (input.length() \u003d\u003d 5 \u0026\u0026 input.substring(0).equals(\"event\"))) {","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"peaol"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"peaol"},"content":"                            //Exception for tasks without their type (event, etc) stated","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"peaol"},"content":"                        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"peaol"},"content":"                            throw new InvalidTaskException();","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"peaol"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"peaol"},"content":"                    } catch(EmptyDescriptionException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"peaol"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"peaol"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"peaol"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"peaol"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"peaol"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"peaol"},"content":"                input \u003d myObj.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"peaol"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"peaol"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"peaol"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"peaol"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"peaol"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"peaol"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"peaol"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"peaol"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"peaol"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"peaol":139,"-":4}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"public class EmptyDescriptionException extends  Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"        super(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"peaol":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"    protected String start;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"    protected String end;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":16}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"peaol":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"peaol"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"peaol"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"peaol"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"peaol"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"peaol"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peaol"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"peaol"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"peaol"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"peaol"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"peaol"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"peaol"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"peaol"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"peaol"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"peaol"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"peaol":12}}]
