[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"pkpaing":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"plugins {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"repositories {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"dependencies {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"test {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"// class Deadline - Type of task with description and a date to finish it by","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MM-yyyy\")","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"        this.by \u003d LocalDate.parse(by, df);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"        return \"D | \" + super.toSavedString() + \" | \" + this.by.format(df);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(df) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"import java.io.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"        ui.takeCommands(this.tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"        storage.saveData(this.tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"        new Duke(System.getProperty(\"user.dir\") +\"/data/duke.txt\").run();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"//","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"    // handleCommand takes in command String s, current tasks, and current number of tasks","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"    // updates task array and returns taskCounter","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"-":2,"pkpaing":38}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"// class to handle any undesirable inputs by the user and display an error message","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":9}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"// class Event - Type of task with description, a start date + time and an end time","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"    protected LocalTime to;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MM-yyyy HH:mm\")","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df2 \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"HH:mm\")","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"                .toFormatter(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"        this.from \u003d LocalDateTime.parse(from, df);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"        this.to \u003d LocalTime.parse(to, df2);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"        return \"E | \" + super.toSavedString() + \" | \" + this.from.format(df) + \" | \" + this.to.format(df2);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"        DateTimeFormatter df2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\").withLocale(Locale.ENGLISH);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(df) + \" to: \" + to.format(df2) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":39}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"// class Storage - handles the loading of data when duke is run and","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"// saving of data when duke is closed","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    private String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    public Storage(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"        this.filePath \u003d s;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"        System.out.println(\"    . . . Loading . . . \");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"        File dir \u003d new File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"            Scanner saveFile \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"            System.out.println(\"    Saved data found, welcome back!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"            while (saveFile.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"                loadSaved(saveFile.nextLine(), tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"            System.out.println(\"    No saved data not found, new file will be created\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"pkpaing"},"content":"        return tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"pkpaing"},"content":"    public static void loadSaved(String s, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"pkpaing"},"content":"        if (s.substring(0, 1).equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"pkpaing"},"content":"            Todo newTodo \u003d new Todo(s.substring(8));","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"pkpaing"},"content":"            if (s.substring(4, 5).equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"pkpaing"},"content":"                newTodo.toggleMarked();","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"pkpaing"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"pkpaing"},"content":"        } else if (s.substring(0, 1).equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"pkpaing"},"content":"            String marked \u003d s.substring(4, 5);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"pkpaing"},"content":"            String task \u003d s.substring(8);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"pkpaing"},"content":"            Deadline newDeadline \u003d new Deadline(task.substring(0, task.indexOf(\"|\") - 1),","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"pkpaing"},"content":"                    task.substring(task.indexOf(\"|\") + 2));","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"pkpaing"},"content":"            if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"pkpaing"},"content":"                newDeadline.toggleMarked();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"pkpaing"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"pkpaing"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"pkpaing"},"content":"            String marked \u003d s.substring(4, 5);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"pkpaing"},"content":"            String task \u003d s.substring(8);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"pkpaing"},"content":"            String desc \u003d task.substring(0, task.indexOf(\"|\") - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"pkpaing"},"content":"            task \u003d task.substring(task.indexOf(\"|\") + 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"pkpaing"},"content":"            Event newEvent \u003d new Event(desc, task.substring(0, task.indexOf(\"|\") - 1),","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"pkpaing"},"content":"                    task.substring(task.indexOf(\"|\") + 2));","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"pkpaing"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"pkpaing"},"content":"    public void saveData(TaskList t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"pkpaing"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"pkpaing"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"pkpaing"},"content":"            FileWriter fWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"pkpaing"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"pkpaing"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"pkpaing"},"content":"                fWriter.write(task.toSavedString());","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"pkpaing"},"content":"                if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"pkpaing"},"content":"                    fWriter.write(\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"pkpaing"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"pkpaing"},"content":"            fWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"pkpaing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"pkpaing"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":89}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"// custom duke.Task class to store individual tasks that the user enters","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"    public void toggleMarked() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"        return description;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"        return this.isDone ? \"1 | \" + this.description : \"0 | \" + this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":33}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"// class TaskList - handles lists of Task objects using an ArrayList","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"    public TaskList(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"    public void displayTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"            System.out.println(\"    No tasks\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    \" + (i + 1) + \". \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":31}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"// class To do - Type of task with just a description","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"        return \"T | \" + super.toSavedString();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"// class Ui - handles all the lines to be printed and all the user inputs (commands)","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"    // prints out welcome greeting to user when Duke is run","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"        System.out.println(\"    Hi! I\u0027m Samantha\\n    How can I help?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"    public void takeCommands(TaskList t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"        String s \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"        int taskCounter \u003d tasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"                // method handleCommand handles current command, returns updated taskCounter variable","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"                taskCounter \u003d handleCommand(s, tasks, taskCounter);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"            // take in next command","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"            s \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"        System.out.println(\"    Bye. Hope to see you soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"    public static int handleCommand(String s, ArrayList\u003cTask\u003e tasks, int taskCounter) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"        // user enters list command","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"pkpaing"},"content":"        if (s.contains(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"pkpaing"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    No tasks\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"pkpaing"},"content":"                for (int i \u003d 0; i \u003c taskCounter; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"pkpaing"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"pkpaing"},"content":"                    System.out.println(\"    \" + (i + 1) + \". \" + task);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"pkpaing"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"pkpaing"},"content":"            // user enters mark or unmark command","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"pkpaing"},"content":"        } else if (s.contains(\"mark\") || s.contains(\"unmark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"pkpaing"},"content":"            int taskNumber \u003d Integer.parseInt(s.substring(s.length() - 1)) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"pkpaing"},"content":"            tasks.get(taskNumber).toggleMarked();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"pkpaing"},"content":"            if (s.contains(\"unmark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"pkpaing"},"content":"            System.out.println(\"  \" + tasks.get(taskNumber).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"pkpaing"},"content":"            // user enters a new task","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"pkpaing"},"content":"        } else if (s.contains(\"todo\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"pkpaing"},"content":"            if (s.substring(4).isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"pkpaing"},"content":"                Task newTask \u003d new Todo(s.substring(5));","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"pkpaing"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    added: \" + newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"pkpaing"},"content":"                return taskCounter + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"pkpaing"},"content":"        } else if (s.contains(\"deadline\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"pkpaing"},"content":"            if (s.substring(8).isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"pkpaing"},"content":"                String by \u003d s.substring(s.indexOf(\"/\") + 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"pkpaing"},"content":"                Task newTask \u003d new Deadline(s.substring(9, s.indexOf(\"/\") - 1), by);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"pkpaing"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    added: \" + newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"pkpaing"},"content":"                return taskCounter + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"pkpaing"},"content":"        } else if (s.contains(\"event\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"pkpaing"},"content":"            if (s.substring(5).isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"pkpaing"},"content":"                String from \u003d s.substring(s.indexOf(\"/\") + 6, s.lastIndexOf(\"/\") - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"pkpaing"},"content":"                String to \u003d s.substring(s.lastIndexOf(\"/\") + 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"pkpaing"},"content":"                Task newTask \u003d new Event(s.substring(6, s.indexOf(\"/\") - 1), from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"pkpaing"},"content":"                tasks.add(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    added: \" + newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"pkpaing"},"content":"                return taskCounter + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"pkpaing"},"content":"        } else if (s.contains(\"delete\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"pkpaing"},"content":"            if (s.substring(6).isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    OOPS!!! You have not entered anything to delete.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"pkpaing"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"pkpaing"},"content":"                int taskNumber \u003d Integer.parseInt(s.substring(s.length() - 1)) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"pkpaing"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task:\\n      \" + tasks.get(taskNumber) +","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"pkpaing"},"content":"                        \"\\n    Now you have \" + (taskCounter - 1) + \" tasks in the list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"pkpaing"},"content":"                tasks.remove(taskNumber);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"pkpaing"},"content":"                return taskCounter - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"pkpaing"},"content":"        } else if (s.contains(\"find\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"pkpaing"},"content":"            String findString \u003d s.substring(5);","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"pkpaing"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"pkpaing"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"pkpaing"},"content":"                if (task.toString().contains(findString)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"pkpaing"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"pkpaing"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"pkpaing"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"pkpaing"},"content":"            TaskList searchResults \u003d new TaskList(foundTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"pkpaing"},"content":"            System.out.println(\"Here are the tasks I found!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"pkpaing"},"content":"            searchResults.displayTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"pkpaing"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"pkpaing"},"content":"            //throw new duke.DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"pkpaing"},"content":"            System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"pkpaing"},"content":"            return taskCounter;","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"pkpaing"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"pkpaing"},"content":"        return taskCounter;","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":124}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pkpaing"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pkpaing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pkpaing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pkpaing"},"content":"import duke.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pkpaing"},"content":"import org.testng.Assert;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pkpaing"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pkpaing"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pkpaing"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pkpaing"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pkpaing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pkpaing"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pkpaing"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pkpaing"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pkpaing"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pkpaing"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pkpaing"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pkpaing"},"content":"    void uiWelcomeTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pkpaing"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pkpaing"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pkpaing"},"content":"        assertEquals(\"Hi! I\u0027m Samantha\\n\" + \"    How can I help?\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pkpaing"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pkpaing"},"content":"    void todoSaveTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pkpaing"},"content":"        Todo todo \u003d new Todo(\"go home\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pkpaing"},"content":"        System.out.println(todo.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pkpaing"},"content":"        assertEquals(\"[T][ ] go home\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pkpaing"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pkpaing"},"content":"    void deadlineSaveTest() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pkpaing"},"content":"        Deadline deadline \u003d new Deadline(\"finish work\", \"29-01-2023\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pkpaing"},"content":"        System.out.println(deadline.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"pkpaing"},"content":"        assertEquals(\"[D][ ] finish work (by: 29-01-2023)\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"pkpaing"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"pkpaing"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"pkpaing"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pkpaing":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"pkpaing"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"pkpaing":1}}]
