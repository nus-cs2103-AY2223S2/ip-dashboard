[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * Represents a Deadline object. A Deadline object is a task with a deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    LocalDateTime deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    public Deadline(String title, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"        super(title);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        this.deadline \u003d super.parseDateString(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    public Deadline(String title, String deadline, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"        this.deadline \u003d super.parseDateString(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"        return String.format(\"D|%d|%s|%s\", super.getIsDone() ? 1 : 0, super.getTitle(), this.deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s][D] %s (by: %s)\", super.getIsDone() ? \"X\" : \" \",","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"                super.getTitle(), super.dateTimeToString(this.deadline));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":" * Main entry point of the program.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"        // Create an instance of our main application","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"        // We need to create a new class since the static main","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"        // method cannot access instance attributes, so we cannot","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"        // store program state.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        MainApplication app \u003d new MainApplication();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"        app.start();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"potty10":9,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"// Learn to create custom Exceptions: https://www.baeldung.com/java-new-custom-exception","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * DukeException is the base class of all exceptions in the Duke application.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    public DukeException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        super(errorMessage, error);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":14}},{"path":"src/main/java/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":" * DukeInvalidArgumentException indicates that the user-supplied command has a correct","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":" * syntax, but the argument/s is not allowed, has an invalid syntax, or the wrong number","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * of arguments is supplied corresponding to the command.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"public class DukeInvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    public DukeInvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":10}},{"path":"src/main/java/DukeInvalidCommandSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":" * DukeInvalidCommandSyntaxException indicates that a user-supplied command has an invalid syntax","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":" * and hence cannot be parsed. Note that even if a command has a valid syntax, it does not mean","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * that the command is a valid command, because it may not correspond to any known commands or","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" * has the wrong options.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * All commands must have the syntax \"main-command [/option option-args | args...]\"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public class DukeInvalidCommandSyntaxException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public DukeInvalidCommandSyntaxException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":12}},{"path":"src/main/java/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":" * DukeUnknownCommandException indicates that the command has a valid syntax, but does not","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":" * correspond to any known commands in the program.","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"    public DukeUnknownCommandException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * Represents an Event object. An Even object has a start time and end time.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    LocalDateTime startTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    LocalDateTime endTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public Event(String title, String startTime, String endTime) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        super(title);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"        this.startTime \u003d super.parseDateString(startTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        this.endTime \u003d super.parseDateString(endTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    public Event(String title, String startTime, String endTime, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"        this.startTime \u003d super.parseDateString(startTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        this.endTime \u003d super.parseDateString(endTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"        return String.format(\"D|%d|%s|%s|%s\", super.getIsDone() ? 1 : 0, super.getTitle(),","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"                this.startTime, this.endTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s][E] %s (from: %s to %s)\", super.getIsDone() ? \"X\" : \" \",","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"                super.getTitle(), super.dateTimeToString(this.startTime),","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"                super.dateTimeToString(this.endTime));","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":33}},{"path":"src/main/java/MainApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":" * MainApplication is the main application of the Duke program. It serves as a","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":" * translation layer between the command line and model classes.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"public class MainApplication {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    private TaskApplication taskApplication;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    private String DELIMITER \u003d  \"\\t---\";","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    public MainApplication() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"        this.taskApplication \u003d new TaskApplication();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"     * https://www.tutorialspoint.com/javaregex/javaregex_capturing_groups.htm","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"     * @param regex","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"     * @param command","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"     * @return","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    private static String[] parseByRegex(String regex, String command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"        Pattern r \u003d Pattern.compile(regex);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"        Matcher m \u003d r.matcher(command);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"            for (int i \u003d 1; i \u003c\u003d m.groupCount(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"                result.add(m.group(i));","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        return result.stream().toArray(String[] ::new);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"    private void listTasksCommand() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"        this.taskApplication.printAllTasks();","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"    private void markCommand(String command) throws DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"        int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d command.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"        if (tokens.length \u003c 2) throw new DukeInvalidArgumentException(\"The (mark)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"                \"command requires 1 integer argument\");","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"        index \u003d -1;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"            index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"\\tThe (mark)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"                    \"command requires 1 integer argument\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"        this.taskApplication.markTask(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\t\" + this.taskApplication.getTask(index));","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"    private void unmarkCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"        int index;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d command.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"        if (tokens.length \u003c 2) throw new DukeInvalidArgumentException(\"\\tThe (unmark)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"                \"command requires 1 integer argument\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"        index \u003d -1;","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"            index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"The (mark)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"                    \"command requires 1 integer argument\");","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"        this.taskApplication.unmarkTask(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\t\" + this.taskApplication.getTask(index));","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"    private void todoCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"        Task t;","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d command.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"        if (tokens.length \u003c 2) throw new DukeInvalidArgumentException(\"\\tThe (todo)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"                \"command requires 1 String argument to set the title of the task.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"        tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"        t \u003d new ToDo(tokens[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"        this.taskApplication.addTask(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"        System.out.printf(\"\\tGot it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"                \"\\t%s\\n\\tNow you have %d tasks in the list.\\n\", t, this.taskApplication.getNoOfTasks());","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"    private void deadlineCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"        Task t;","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"        // String[] tokens \u003d command.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d parseByRegex(\"deadline\\\\s+([^/]+)\\\\s+/by\\\\s+([^/]+)\\\\s*\", command);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"        // t \u003d new Deadline(tokens[0].split(\" \", 2)[1], tokens[1].split(\" \", 2)[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"        t \u003d new Deadline(tokens[0], tokens[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"        this.taskApplication.addTask(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"        System.out.printf(\"\\tGot it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"                \"\\t%s\\n\\tNow you have %d tasks in the list.\\n\", t, this.taskApplication.getNoOfTasks());","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"    private void eventCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"        Task t;","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"//        String[] tokens \u003d command.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"//        t \u003d new Event(tokens[0].split(\" \", 2)[1],","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"//                tokens[1].split(\" \", 2)[1],","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"//                tokens[2].split(\" \", 2)[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d parseByRegex(\"event\\\\s+([^/]+?)\\\\s+/from\\\\s+([^/]+?)\\\\s+\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"                \"/to\\\\s([^/]+)\\\\s*\", command);","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"potty10"},"content":"        t \u003d new Event(tokens[0], tokens[1], tokens[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"potty10"},"content":"        this.taskApplication.addTask(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"potty10"},"content":"        System.out.printf(\"\\tGot it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"potty10"},"content":"                \"\\t%s\\n\\tNow you have %d tasks in the list.\\n\", t, this.taskApplication.getNoOfTasks());","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"potty10"},"content":"    private void deleteCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d command.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"potty10"},"content":"        if (tokens.length \u003c 2) throw new DukeInvalidArgumentException(\"The (mark)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"potty10"},"content":"                \"command requires 1 integer argument\");","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"potty10"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"potty10"},"content":"            index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"potty10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"\\tThe (mark)\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"potty10"},"content":"                    \"command requires 1 integer argument\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"potty10"},"content":"        Task t \u003d this.taskApplication.popTask(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"potty10"},"content":"        System.out.printf(\"\\tNoted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"potty10"},"content":"                \"\\t%s\\n\\tNow you have %d tasks in the list.\\n\", t, this.taskApplication.getNoOfTasks());","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"potty10"},"content":"    private void parseCommand(String command) throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"potty10"},"content":"        switch(tokens[0]) {","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"potty10"},"content":"            case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"potty10"},"content":"                this.listTasksCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"potty10"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"potty10"},"content":"                this.markCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"potty10"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"potty10"},"content":"                this.unmarkCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"potty10"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"potty10"},"content":"                this.todoCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"potty10"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"potty10"},"content":"                this.deadlineCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"potty10"},"content":"            case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"potty10"},"content":"                this.eventCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"potty10"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"potty10"},"content":"                this.deleteCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"potty10"},"content":"            default:","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"potty10"},"content":"                throw new DukeUnknownCommandException(\"\\tUnknown command\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"potty10"},"content":"    public void start() {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"potty10"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"potty10"},"content":"        String command;","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"potty10"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"potty10"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"potty10"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"potty10"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"potty10"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"potty10"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"potty10"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"potty10"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"potty10"},"content":"            System.out.println(DELIMITER);","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"potty10"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"potty10"},"content":"                System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"potty10"},"content":"                System.out.println(DELIMITER);","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"potty10"},"content":"                this.taskApplication.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":175,"author":{"gitId":"potty10"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"potty10"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"potty10"},"content":"                this.parseCommand(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"potty10"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"potty10"},"content":"                // Any DukeException is non-fatal, so we just print them","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"potty10"},"content":"                System.out.print(e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"potty10"},"content":"            System.out.println(DELIMITER);","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":188}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * Represents a Task object.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"    private String title;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    public Task(String title) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    };","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    public Task(String title, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    public String getTitle() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"        return this.title;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    public abstract String toDiskFormat();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    LocalDateTime parseDateString(String dateString) throws DateTimeParseException {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"    String dateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu, HH.mm a\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s] %s\", isDone ? \"x\" : \" \", this.title);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":43}},{"path":"src/main/java/TaskApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":" * TaskApplication is a model class that has the basic functionalities of a checklist.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":" * It helps to keep track of everyday tasks or events.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"public class TaskApplication {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    private List\u003cTask\u003e userTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    private static Task fromString(String str) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        System.out.println(str);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"        Task newtask;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d str.split(\"\\\\|\");","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"        System.out.println(Arrays.toString(tokens));","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"        if (tokens[0].equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"            newtask \u003d new ToDo(tokens[2], tokens[1] \u003d\u003d \"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"        } else if (tokens[0].equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"            newtask \u003d new Deadline(tokens[2], tokens[3],tokens[1] \u003d\u003d \"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"            newtask \u003d new Event(tokens[2], tokens[3],tokens[4],tokens[1] \u003d\u003d \"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        System.out.println(newtask);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        return newtask;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"     * https://www.sghill.net/2014/how-do-i-make-cross-platform-file-paths-in-java/","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"     * https://www.baeldung.com/java-path-vs-file","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"     * https://www.digitalocean.com/community/tutorials/java-read-file-line-by-line","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    private static List\u003cTask\u003e loadData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"            Path path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"                Files.createDirectories(Paths.get(System.getProperty(\"user.dir\"), \"data\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"            BufferedReader bf \u003d Files.newBufferedReader(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"            String line \u003d bf.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"                result.add(fromString(line));","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"                line \u003d bf.readLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"            bf.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"            result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"            System.out.println(\"Unable to open data\\\\duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"        return result;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"     * https://beginnersbook.com/2014/01/how-to-write-to-file-in-java-using-bufferedwriter/","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"     * @param userTasks","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"    private static void saveData(List\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"        Path path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"        BufferedWriter bw \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"            bw \u003d Files.newBufferedWriter(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"            for (Task t: userTasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"                System.out.println(t.toDiskFormat());","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"                bw.write(t.toDiskFormat());","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"                bw.newLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"        } finally {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"                if (bw!\u003dnull) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"                    bw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"                System.out.println(\"Unable to save to data\\\\duke.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"    public TaskApplication() {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"         this.userTasks \u003d loadData();","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"    public void markTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"        if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"                    String.format(\"\\tThere are only %d tasks. There is no task\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"                            \"with index %d\", this.userTasks.size(), index)","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"        this.userTasks.get(index).setIsDone(true);","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"    public void unmarkTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"        if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"                    String.format(\"\\tThere are only %d tasks. There is no task\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"                            \"with index %d\\n\", this.userTasks.size(), index)","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"potty10"},"content":"        this.userTasks.get(index).setIsDone(false);","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"potty10"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"potty10"},"content":"        this.userTasks.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"potty10"},"content":"    public Task popTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"potty10"},"content":"        if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"potty10"},"content":"                    String.format(\"\\tThere are only %d tasks. There is no task\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"potty10"},"content":"                            \"with index %d\\n\", this.userTasks.size(), index)","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"potty10"},"content":"        return this.userTasks.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"potty10"},"content":"    public void printAllTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"potty10"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"potty10"},"content":"        for (Task s: this.userTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"potty10"},"content":"            System.out.printf(\"\\t%d.%s\\n\", i, s);","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"potty10"},"content":"            i++;","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"potty10"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"potty10"},"content":"        return this.userTasks.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"potty10"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"potty10"},"content":"        return this.userTasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"potty10"},"content":"    public void close() {","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"potty10"},"content":"        saveData(this.userTasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":145}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":" * Represents a ToDo object.","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"    public ToDo(String title) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"        super(title);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public ToDo(String title, boolean isDone) { super(title, isDone); }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"        return String.format(\"T|%d|%s\", super.getIsDone() ? 1 : 0, super.getTitle());","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s][T] %s\", super.getIsDone() ? \"X\" : \" \", super.getTitle());","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"deadline return book /by 2015-08-04T10:11:30","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"event project meeting /from 2015-08-04T10:11:30 /to 2015-08-04T10:11:30","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"potty10":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"potty10":1,"-":21}}]
