[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"potty10":19,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"Duke is a command-line chatbot to help you to keep track of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"\u003cimg height\u003d\"400px\" src\u003d\"Ui.png\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"## Quick Start","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/potty10/ip/releases).","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"3. Copy or move `duke.jar` to the folder that you want to use as the home folder for Duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"4. Open a command terminal, `cd` into the folder in step 3, and run `java -jar duke.jar` to run Duke. A graphical user interface (GUI) should open.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"5. Type any commands in the command box, then click `Send` or press `Enter` to run any commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"Users primary interact with the chatbot with commands. Commands primarily have the syntax `command command_arg [/option option_arg]`.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"### 1. Exiting and saving","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"Exiting the application automatically saves any data.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"### 2. Add tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"There are 3 types of tasks that can be recorded in the duke application:","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"- `event`: An event has a start time and end time.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"- `deadline`: A deadline must have a specified end time.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"- `todo`: A todo task has no start time or end time.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"Note that any time strings must have both `date` and `time`, where `time` ","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"is precise up to minutes. The 24-hour time format, commonly known as military time, should be used.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"### 3. Delete tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"Delete tasks when you no longer need to record them.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"### 4. Mark or unmark tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"Each task has a corresponding checkbox that can be checked or unchecked. It is useful if you want to mark tasks that are done or over.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"### 5. List tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"List all tasks that are recorded in the application.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"### 6. Find tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"Find all tasks by keyword.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"### 1. `bye` - Exits application","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"Format: `bye`","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"Exits the application and saves any data.","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":" ","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"### 2. `todo` - Add a Todo task","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"Format: `todo task_name`","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"Adds a todo task with `task_name` as the name of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"Example of usage: `todo homework 1`","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"OK! I\u0027ve added this task:","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"[ ][T] homework 1","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"### 3. `deadline` - Adds a task with a deadline","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"Format: `deadline task_name /by time`","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"Adds a task with `task_name` as the name of the task and `time` as the deadline. `time` must be specified in the format","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"`year-month-day-hour-minute`.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"Example of usage:  `deadline homework 1 /by 2023-02-02-23-59`","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"OK! I\u0027ve added this task:","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"[ ][D] homework 1 (by: 02 Feb 2023, 23.59 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"### 4. `event` - Adds a Event task","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"Format: `event event_name /from start_time /to end_time`","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"An event is considered as a task with start time and end time. This command adds a ","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"task with `event_name` as the name of the task, `start_time` as the start time and `end_time` as the end time.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"`time` must be specified in the format `year-month-day-hour-minute`.","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"Example of usage: `event project meeting /from 2023-02-02-16-00 /to 2023-02-02-17-00`","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"OK! I\u0027ve added this task:","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"[ ][E] project meeting (from: 02 Feb 2023, 16.00 PM to 02 Feb 2023, 17.00 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"### 5. `mark` - Marks a task","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"potty10"},"content":"Format: `mark index`","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"potty10"},"content":"Marks a task with the `index`. Index of a task can be found by listing all tasks using the command `list`.","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"potty10"},"content":"Example of usage: `mark 1`","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"potty10"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"potty10"},"content":"Marks a task with the index `1`.","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"potty10"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"potty10"},"content":"[X][T] homework 1","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"potty10"},"content":"### 6. `unmark` - Unmarks a task","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"potty10"},"content":"Format: `unmark index`","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"potty10"},"content":"Unmarks a task with the `index`. Index of a task can be found by listing all tasks using the command `list`.","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"potty10"},"content":"Example of usage: `unmark 1`","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"potty10"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"potty10"},"content":"Unmarks a task with the index `1`.","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"potty10"},"content":"OK! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"potty10"},"content":"[ ][T] homework 1","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"potty10"},"content":"### 7. `list` - List all tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"potty10"},"content":"Format: `list`","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"potty10"},"content":"List all tasks in the application. For each task, `list` will show whether it is","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"potty10"},"content":"1. Checked and unchecked","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"potty10"},"content":"2. The type of task (`event`, `todo` or `deadline`)","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"potty10"},"content":"3. Name of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"potty10"},"content":"Example outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"potty10"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"potty10"},"content":"1. [ ][T] homework 1","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"potty10"},"content":"2. [ ][D] homework 1 (by: 02 Feb 2023, 23.59 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"potty10"},"content":"3. [ ][E] project meeting (from: 02 Feb 2023, 16.00 PM to 02 Feb 2023, 17.00 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"potty10"},"content":"### 8. `find` - Find all tasks with the specified keyword","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"potty10"},"content":"Format: `find keyword`","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"potty10"},"content":"Lists all tasks with the specified `keyword` in the name.","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"potty10"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"potty10"},"content":"`find homework`","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"potty10"},"content":"List all tasks whose name contains the keyword `homework`.","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"potty10"},"content":"Here are the tasks that you want:","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"potty10"},"content":"1. [ ][T] homework 1","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"potty10"},"content":"2. [ ][D] homework 1 (by: 02 Feb 2023, 23.59 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"potty10"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"potty10"},"content":"### 9. `delete` - Delete tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"potty10"},"content":"Format: `delete arg1 ...`","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"potty10"},"content":"Delete all tasks with the index `arg1, arg2, ...`. Index of a task can be found by listing all tasks using the ","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"potty10"},"content":"command `list`. Note that all indexes must be unique.","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"potty10"},"content":"`delete 1 2 3`","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"potty10"},"content":"Delete all tasks with index `1`, `2`, `3`.","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"potty10"},"content":"OK! I\u0027ve removed this task:","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"potty10"},"content":"1. [ ][T] homework 1","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"potty10"},"content":"2. [ ][D] homework 1 (by: 02 Feb 2023, 23.59 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"potty10"},"content":"3. [ ][E] project meeting (from: 02 Feb 2023, 16.00 PM to 02 Feb 2023, 17.00 PM)","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"potty10"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"potty10":168,"-":28}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"        this.setSpacing(10);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.WHITE, null, null)));","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":68}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":" * Main entry point of the program.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"    private TaskList taskApplication;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"     * Constructs an instance of the main application.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"    public Duke() {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"        this.taskApplication \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    private String getTasksAsString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"        for (Task s: tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"            result.append(String.format(\"%d. %s\\n\", i, s));","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"            i++;","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"        return result.toString().replaceAll(\"\\\\n$\", \"\");","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"    private String listTasksCommand() {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"        return String.format(\"Here are the tasks in your list:\\n%s\", this.taskApplication.getAllTaskString());","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"    private String markCommand(List\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003d\u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"        int index \u003d Integer.parseInt(tokens.get(1)) - 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"        this.taskApplication.markTask(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", this.taskApplication.getTask(index));","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"    private String unmarkCommand(List\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003d\u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"        int index \u003d Integer.parseInt(tokens.get(1)) - 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"        this.taskApplication.unmarkTask(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"        return String.format(\"OK! I\u0027ve marked this task as not done yet:\\n%s\", this.taskApplication.getTask(index));","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"    private String todoCommand(List\u003cString\u003e tokens) {","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003d\u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"        Task newTask \u003d new ToDo(tokens.get(1));","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"        this.taskApplication.addTask(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"        return String.format(","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"                \"OK! I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"                newTask, this.taskApplication.getNoOfTasks()","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"    private String deadlineCommand(List\u003cString\u003e tokens) {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003d\u003d 3;","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"        Task newTask \u003d new Deadline(tokens.get(1), tokens.get(2));","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"        this.taskApplication.addTask(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"        return String.format(","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"                \"OK! I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"                newTask, this.taskApplication.getNoOfTasks()","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"    private String eventCommand(List\u003cString\u003e tokens) {","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003d\u003d 4;","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"        Task newTask \u003d new Event(tokens.get(1), tokens.get(2), tokens.get(3));","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"        this.taskApplication.addTask(newTask);","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"        return String.format(","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"                \"OK! I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"                newTask, this.taskApplication.getNoOfTasks()","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"    private String deleteCommand(List\u003cString\u003e tokens) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003e 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"        List\u003cInteger\u003e indexes \u003d tokens","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"                .stream()","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"                .skip(1)","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"                .map(s -\u003e Integer.parseInt(s) - 1)","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"        List\u003cTask\u003e tasks \u003d this.taskApplication.popMultipleTasks(indexes);","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"        return String.format(\"OK! I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"                getTasksAsString(tasks), this.taskApplication.getNoOfTasks());","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"potty10"},"content":"    private String findCommand(List\u003cString\u003e tokens) {","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"potty10"},"content":"        assert tokens.size() \u003d\u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"potty10"},"content":"        String keyword \u003d tokens.get(1);","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"potty10"},"content":"        List\u003cTask\u003e tasks \u003d this.taskApplication.getTaskByKeyword(keyword);","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"potty10"},"content":"        return String.format(\"Here are the tasks that you want:\\n%s\",","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"potty10"},"content":"                getTasksAsString(tasks));","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"potty10"},"content":"    private String byeCommand() {","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"potty10"},"content":"        this.taskApplication.save();","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"potty10"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":119,"author":{"gitId":"potty10"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"potty10"},"content":"    private String parseCommand(String command) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e tokens \u003d this.parser.parseCommand(command);","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"potty10"},"content":"        switch(tokens.get(0)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"potty10"},"content":"        case \"list\":","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"potty10"},"content":"            return this.listTasksCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"potty10"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"potty10"},"content":"            return this.markCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"potty10"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"potty10"},"content":"            return this.unmarkCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"potty10"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"potty10"},"content":"            return this.todoCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"potty10"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"potty10"},"content":"            return this.deadlineCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"potty10"},"content":"        case \"event\":","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"potty10"},"content":"            return this.eventCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"potty10"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"potty10"},"content":"            return this.deleteCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":138,"author":{"gitId":"potty10"},"content":"        case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"potty10"},"content":"            return this.findCommand(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":140,"author":{"gitId":"potty10"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"potty10"},"content":"            return this.byeCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"potty10"},"content":"        default:","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"potty10"},"content":"            throw new DukeUnknownCommandException(\"I have no idea what you just said.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"potty10"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"potty10"},"content":"        return this.isExit;","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"potty10"},"content":"     * Executes the given command and returns the output of that command.","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"potty10"},"content":"     * @param input user command.","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"potty10"},"content":"     * @return Output of user command.","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"potty10"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"potty10"},"content":"            return this.parseCommand(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":159,"author":{"gitId":"potty10"},"content":"            // Any duke.exceptions.DukeException is non-fatal, so we just print them","lastModifiedDate":"2023-02-10"},{"lineNumber":160,"author":{"gitId":"potty10"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":161,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":162,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"potty10":161,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"        String response \u003d this.duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"        if (duke.getIsExit()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":53}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * DukeException is the base class of all exceptions in the Duke application.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    public DukeException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        super(errorMessage, error);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":14}},{"path":"src/main/java/duke/exceptions/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * DukeInvalidArgumentException indicates that the user-supplied command has a correct","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" * syntax, but the argument/s is not allowed, has an invalid syntax, or the wrong number","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * of arguments is supplied corresponding to the command.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public class DukeInvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public DukeInvalidArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":12}},{"path":"src/main/java/duke/exceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * DukeUnknownCommandException indicates that the command has a valid syntax, but does not","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" * correspond to any known commands in the program.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    public DukeUnknownCommandException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":12}},{"path":"src/main/java/duke/exceptions/DukeWrongNumberOfArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * DukeWrongNumberOfArgumentsException indicates that the command is valid, but the wrong number of arguments","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" * is supplied.","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"public class DukeWrongNumberOfArgumentsException extends DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    public DukeWrongNumberOfArgumentsException(String errorMessage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":11}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.parser;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeWrongNumberOfArgumentsException;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":" * A simple parser for user commands.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    private List\u003cString\u003e parseByRegex(String regex, String command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"        // Solution below adapted from https://www.tutorialspoint.com/javaregex/javaregex_capturing_groups.htm","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"        Pattern r \u003d Pattern.compile(regex);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"        Matcher m \u003d r.matcher(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"        if (m.find()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"            for (int i \u003d 1; i \u003c\u003d m.groupCount(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"                result.add(m.group(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"        return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"    private List\u003cString\u003e splitStringIntoIntegers(String string) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"        String[] array \u003d string.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"        return Arrays.asList(array);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"    private void assertTokenLength(List\u003cString\u003e tokens, int length) throws DukeWrongNumberOfArgumentsException {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        if (tokens.size() !\u003d length) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"            throw new DukeWrongNumberOfArgumentsException(\"Wrong number of arguments supplied. This command requires \"","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"                    + (length - 1) + \" number of arguments.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"    private void assertHasArguments(String[] tokens) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"        if (tokens.length \u003c\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"I urge you to supply at least one argument\");","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"    private void assertIsNumber(String token) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"            Integer.parseInt(token);","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"The command requires integer arguments.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"    private void assertAllNumbers(List\u003cString\u003e tokenList, int start, int end) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"            for (int i \u003d start; i \u003c\u003d end; i++) {","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"                Integer.parseInt(tokenList.get(i));","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"The command requires integer arguments.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"    private void assertIsDateString(String dateString) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"            LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(\"The command requires at least one argument in the format: \"","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"                    + \"yyyy-MM-dd-HH-mm. Example: 2023-02-02-02-09\");","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"     * Returns a stream of tokens from the user command.","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"     * @param userInput String to be parsed.","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"     * @return List of tokens corresponding to the command.","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"     * @throws DukeException If input does not correspond to any known commands.","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"    public List\u003cString\u003e parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"        String command \u003d userInput.trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d command.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"        result.add(tokens[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"        switch(tokens[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"            assertHasArguments(tokens);","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"            result.add(tokens[1].trim());","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"            assertTokenLength(result, 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"            assertIsNumber(result.get(1));","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"            assertHasArguments(tokens);","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"            result.addAll(splitStringIntoIntegers(tokens[1]));","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"            assertAllNumbers(result, 1, result.size() - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"potty10"},"content":"            break;","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"potty10"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"potty10"},"content":"        case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"potty10"},"content":"            assertHasArguments(tokens);","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"potty10"},"content":"            result.add(tokens[1].trim());","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"potty10"},"content":"            assertTokenLength(result, 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"potty10"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"potty10"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"potty10"},"content":"            assertHasArguments(tokens);","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"potty10"},"content":"            result.addAll(parseByRegex(\"^\\\\s*([^/]+)\\\\s+/by\\\\s+([^/]+)\\\\s*$\", tokens[1]));","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"potty10"},"content":"            assertTokenLength(result, 3);","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"potty10"},"content":"            assertIsDateString(result.get(2));","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"potty10"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"potty10"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"potty10"},"content":"            assertHasArguments(tokens);","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"potty10"},"content":"            result.addAll(parseByRegex(\"^\\\\s*([^/]+?)\\\\s+/from\\\\s+([^/]+?)\\\\s+/to\\\\s([^/]+)\\\\s*$\", tokens[1]));","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"potty10"},"content":"            assertTokenLength(result, 4);","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"potty10"},"content":"            assertIsDateString(result.get(2));","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"potty10"},"content":"            assertIsDateString(result.get(3));","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"potty10"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"potty10"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"potty10"},"content":"            throw new DukeUnknownCommandException(\"I have no idea what you just said.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"potty10"},"content":"        return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":131}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":" * A utility class to save Task objects in the hard disk and persist them","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":" * for the subsequent sessions.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    private static final String BACKUP_FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    private static final String BACKUP_FILE_DIR \u003d \"data\";","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     * Recreates a Task object from the disk format.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"     * @param str A string that represents a Task in disk format.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"    private static Task fromString(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        Task newtask;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"        String[] tokens \u003d str.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"        if (tokens[0].equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"            newtask \u003d new ToDo(tokens[2], tokens[1].equals(\"1\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"        } else if (tokens[0].equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"            newtask \u003d new Deadline(tokens[2], tokens[3], tokens[1].equals(\"1\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"            newtask \u003d new Event(tokens[2], tokens[3], tokens[4], tokens[1].equals(\"1\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"        return newtask;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"     * Recreates the list of Task objects from a file in the correct format.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"     * @return List of Task objects that was stored in the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"     * @see \u003ca href\u003d\"https://www.sghill.net/2014/how-do-i-make-cross-platform-file-paths-in-java/\"\u003eTutorial 1\u003c/a\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"     * @see \u003ca href\u003d\"https://www.baeldung.com/java-path-vs-file\"\u003eTutorial 2\u003c/a\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"     * @see \u003ca href\u003d\"https://www.digitalocean.com/community/tutorials/java-read-file-line-by-line\"\u003eTutorial 3\u003c/a\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"    public List\u003cTask\u003e loadData() {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"            // Solution below adapted from","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"            // https://www.sghill.net/2014/how-do-i-make-cross-platform-file-paths-in-java/","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"            Path path \u003d Paths.get(System.getProperty(\"user.dir\"), BACKUP_FILE_DIR, BACKUP_FILE_NAME);","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"                Files.createDirectories(Paths.get(System.getProperty(\"user.dir\"), BACKUP_FILE_DIR));","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"                Files.createFile(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"            BufferedReader bf \u003d Files.newBufferedReader(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"            String line \u003d bf.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"                result.add(fromString(line));","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"                line \u003d bf.readLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"            bf.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"            result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"            System.out.println(\"Unable to open \" + BACKUP_FILE_DIR + \" \\\\ \" + BACKUP_FILE_NAME);","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"        return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"     * Saves the list of Task objects to a file.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"     * @param userTasks List of Task objects to save.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"    public void saveData(List\u003cTask\u003e userTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"        Path path \u003d Paths.get(System.getProperty(\"user.dir\"), BACKUP_FILE_DIR, BACKUP_FILE_NAME);","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"        BufferedWriter bw \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"        // Solution below adapted from","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"        // https://beginnersbook.com/2014/01/how-to-write-to-file-in-java-using-bufferedwriter/","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"            bw \u003d Files.newBufferedWriter(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"            for (Task t: userTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"                bw.write(t.toDiskFormat());","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"                bw.newLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"        } finally {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"                if (bw !\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"                    bw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"                System.out.println(\"Unable to save to \" + BACKUP_FILE_DIR + \" \\\\ \" + BACKUP_FILE_NAME);","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":99}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * A Deadline is a task with a deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"     * Constructs an unchecked Deadline with a title and deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"     * @param title The title of the Deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"     * @param deadline A datetime string in ISO 8601 format.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    public Deadline(String title, String deadline) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"        super(title);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        this.deadline \u003d super.parseDateString(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"     * Constructs a Deadline with a title and deadline that is checked or","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"     * unchecked depending on the value of isDone.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"     * @param title The title of the Deadline task.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     * @param deadline A datetime string in ISO 8601 format.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"     * @param isDone Boolean to indicate if the Deadline should be checked or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    public Deadline(String title, String deadline, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        this.deadline \u003d super.parseDateString(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"     * Returns the disk format representation of the Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"     * @return Deadline object in disk format.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"        return String.format(\"D|%d|%s|%s\", super.getIsDone() ? 1 : 0, super.getTitle(),","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"                super.dateTimeToDiskFormat(this.deadline));","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"     * Returns a printable version of the Deadline object. It contains the title,","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"     * deadline and an indicator of whether it is checked or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"     * @return The string representation of this Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s][D] %s (by: %s)\", super.getIsDone() ? \"X\" : \" \",","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"                super.getTitle(), super.dateTimeToString(this.deadline));","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * An Event object is a Task with a start time and end time.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"     * Constructs an unchecked Event with a title, start time and end time.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"     * @param title The title of the Event task.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"     * @param startTime A datetime string in ISO 8601 format.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"     * @param endTime A datetime string in ISO 8601 format.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    public Event(String title, String startTime, String endTime) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"        super(title);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        this.startTime \u003d super.parseDateString(startTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"        this.endTime \u003d super.parseDateString(endTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     * Constructs an Event with a title, start time and end time that is checked","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"     * or unchecked depending on the value of isDone.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"     * @param title The title of the Event task.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"     * @param startTime A datetime string in ISO 8601 format.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"     * @param endTime A datetime string in ISO 8601 format.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"     * @param isDone Boolean to indicate if the Deadline should be checked or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"    public Event(String title, String startTime, String endTime, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        super(title, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"        this.startTime \u003d super.parseDateString(startTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"        this.endTime \u003d super.parseDateString(endTime);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"     * Returns the disk format representation of the Event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"     * @return Event object in disk format.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"        return String.format(\"E|%d|%s|%s|%s\", super.getIsDone() ? 1 : 0, super.getTitle(),","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"                super.dateTimeToDiskFormat(this.startTime), super.dateTimeToDiskFormat(this.endTime));","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"     * Returns a printable version of the Event object. It contains the title,","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"     * start time, end time and an indicator of whether it is checked or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"     * @return  The string representation of this Event object.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s][E] %s (from: %s to %s)\", super.getIsDone() ? \"X\" : \" \",","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"                super.getTitle(), super.dateTimeToString(this.startTime),","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"                super.dateTimeToString(this.endTime));","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":" * Represents a Task object.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    private String title;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"     * Constructs an unchecked Task object with a title.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"     * @param title Title of the Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    public Task(String title) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    };","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"     * Constructs a Task object with a title, and it is checked or unchecked depending on the value of isDone.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     * @param title Title of Task object.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"     * @param isDone Boolean to indicate if the Deadline should be checked or not.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    public Task(String title, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"    public String getTitle() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"        return this.title;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"    public abstract String toDiskFormat();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"    protected LocalDateTime parseDateString(String dateString) throws DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"        return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"    protected String dateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu, HH.mm a\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"    protected String dateTimeToDiskFormat(LocalDateTime localDateTime) {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s] %s\", isDone ? \"x\" : \" \", this.title);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":60}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":" * Represents a ToDo object.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"     * Constructs an unchecked ToDo with a title and deadline.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"     * @param title Title of ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    public ToDo(String title) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        super(title);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"     * Constructs a ToDo with a title, and is checked or unchecked depending on the value of isDone.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"     * @param title Title of ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"     * @param isDone Boolean to indicate if the Deadline should be checked or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"    public ToDo(String title, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"        super(title, isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     * Returns the string format to be saved on disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"     * @return ToDo object in disk format.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"    public String toDiskFormat() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        return String.format(\"T|%d|%s\", super.getIsDone() ? 1 : 0, super.getTitle());","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"     * Returns a printable version of the ToDo object. It contains the title,","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"     * and an indicator of whether it is checked or not.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"     * @return The string representation of this ToDo object.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        return String.format(\"[%s][T] %s\", super.getIsDone() ? \"X\" : \" \", super.getTitle());","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"potty10":42}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.tasklist;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":" * TaskList has the basic functionalities of a checklist.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":" * A checklist keeps track of everyday tasks or events.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"    /** Backing array of Tasks */","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"    private List\u003cTask\u003e userTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"    /** Underlying storage to load and save Tasks */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"     * Constructs a TaskList and initialises the underlying backing store if it","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"     * does not exist. Otherwise, load data from the backing store.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        this.userTasks \u003d storage.loadData();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"     * Marks the task with the specific index as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"     * @param index Index of task in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"     * @throws DukeInvalidArgumentException If index is out of bounds.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    public void markTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"        if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"                    String.format(\"There are only %d tasks, so you can\u0027t get a task \"","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"                            + \"with index %d\", this.userTasks.size(), index + 1)","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"        this.userTasks.get(index).setIsDone(true);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"     * Marks the task with the specific index as not done.","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"     * @param index Index of task in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"     * @throws DukeInvalidArgumentException If index is out of bounds.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"    public void unmarkTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"        if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"                    String.format(\"There are only %d tasks, so you can\u0027t get a task \"","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"                            + \"with index %d\", this.userTasks.size(), index + 1)","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"        this.userTasks.get(index).setIsDone(false);","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"     * Adds a Task to TaskList.","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"     * @param task Task to add.","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"        this.userTasks.add(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"     * Pops and returns the task with the specific index in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"     * @param index Index of task in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"     * @return Task that is removed.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"     * @throws DukeInvalidArgumentException If index is out of bounds.","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"    public Task popTask(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"        if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"                    String.format(\"There are only %d tasks, so you can\u0027t get a task \"","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"                            + \"with index %d\\n\", this.userTasks.size(), index + 1)","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"        return this.userTasks.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"     * Pops and returns the list of tasks with the specific indexes in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"     * @param indexes Indexes of the tasks to pop in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"     * @return List of Tasks that are removed.","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"     * @throws DukeInvalidArgumentException If any index is out of bounds.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"    public List\u003cTask\u003e popMultipleTasks(List\u003cInteger\u003e indexes) throws DukeInvalidArgumentException {","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"        for (Integer index: indexes) {","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"            if (index \u003c 0 || index \u003e this.userTasks.size() - 1) {","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"                throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"                        String.format(\"There are only %d tasks, so you can\u0027t get a task \"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"                                + \"with index %d\\n\", this.userTasks.size(), index + 1)","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"                );","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"        Set\u003cInteger\u003e uniqueIndexes \u003d new HashSet\u003c\u003e(indexes);","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"        if (uniqueIndexes.size() \u003c indexes.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"                    String.format(\"All indexes must be unique.\")","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"potty10"},"content":"            );","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"potty10"},"content":"        indexes.sort(Collections.reverseOrder());","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"potty10"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"potty10"},"content":"        for (int index: indexes) {","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"potty10"},"content":"            result.add(this.userTasks.remove(index));","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"potty10"},"content":"        return result;","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"potty10"},"content":"     * Returns a String representation of all Task objects in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"potty10"},"content":"     * @return String representation of all tasks stored in TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"potty10"},"content":"    public String getAllTaskString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"potty10"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"potty10"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"potty10"},"content":"        for (Task s: this.userTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"potty10"},"content":"            result.append(String.format(\"%d.%s\\n\", i, s));","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"potty10"},"content":"            i++;","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"potty10"},"content":"        return result.toString().replaceAll(\"\\\\n$\", \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":132,"author":{"gitId":"potty10"},"content":"     * Returns a list of all the tasks whose name contains the keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"potty10"},"content":"     * @param keyword Keyword to find tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"potty10"},"content":"     * @return List of tasks whose name contains the keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"potty10"},"content":"    public List\u003cTask\u003e getTaskByKeyword(String keyword) {","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"potty10"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"potty10"},"content":"        for (Task s: this.userTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"potty10"},"content":"            if (s.getTitle().contains(keyword)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"potty10"},"content":"                result.add(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"potty10"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"potty10"},"content":"        return result;","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"potty10"},"content":"     * Returns the Task at the specified index.","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"potty10"},"content":"     * @param index Index of task in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"potty10"},"content":"     * @return Task that has the index in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"potty10"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"potty10"},"content":"        return this.userTasks.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"potty10"},"content":"     * Returns the number of tasks in TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"potty10"},"content":"     * @return Number of tasks in TaskList.","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"potty10"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"potty10"},"content":"        return this.userTasks.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"potty10"},"content":"     * Saves the underlying data to duke.Storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"potty10"},"content":"    public void save() {","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"potty10"},"content":"        this.storage.saveData(this.userTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":171}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":" * Ui represents the user interface, which in this case is the console.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    private static final String DELIMITER \u003d \"\\t---\";","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"     * Prints the start message.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    public void printStart() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"     * Adds a tab to every line and prints the string.","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"     * @param string String to print.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"    public void printBlock(String string) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"        System.out.println(DELIMITER);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\t\" + string.replace(\"\\n\", \"\\n\\t\").replaceAll(\"\\\\t$\", \"\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"        System.out.println(DELIMITER);","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"    public void printEnd() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"        System.out.println(DELIMITER);","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"        System.out.println(DELIMITER);","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"    public boolean hasNextCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"        return this.scanner.hasNextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"potty10":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"import static org.junit.jupiter.api.Assertions.assertIterableEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    public void parseCommand_listCommand_success() {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"list\");","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"            assertIterableEquals(expected, parser.parseCommand(\"list\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"            fail(\"Parser should not throw an exception\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    public void parseCommand_markCommand_success() {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"mark\", \"1\");","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"            assertIterableEquals(expected, parser.parseCommand(\"mark 1\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"            fail(\"Parser should not throw an exception\");","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"    public void parseCommand_markCommandWithSpace_success() {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"mark\", \"1\");","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"potty10"},"content":"            assertIterableEquals(expected, parser.parseCommand(\"   mark    1   \"));","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"potty10"},"content":"            fail(\"Parser should not throw an exception\");","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"    public void parseCommand_deleteCommand_success() {","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"delete\", \"1\");","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"potty10"},"content":"            assertIterableEquals(expected, parser.parseCommand(\"delete 1\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"            fail(\"Parser should not throw an exception\");","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"    public void parseCommand_deleteCommandMultipleIndex_success() {","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"delete\", \"1\", \"2\", \"3\");","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"potty10"},"content":"            assertIterableEquals(expected, parser.parseCommand(\"delete 1 2 3\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"potty10"},"content":"            fail(\"Parser should not throw an exception\");","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"potty10"},"content":"    public void parseCommand_eventCommand_success() {","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"potty10"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"event\", \"read book\", \"2022-02-02-02-02\", \"2022-02-02-02-02\");","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"potty10"},"content":"            assertIterableEquals(expected, parser.parseCommand(\"event read book \"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"potty10"},"content":"                    + \"/from 2022-02-02-02-02 /to 2022-02-02-02-02 \"));","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"potty10"},"content":"            fail(\"Parser should not throw an exception\");","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"potty10"},"content":"    public void parseCommand_unknownCommand_exceptionThrown() {","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"potty10"},"content":"            parser.parseCommand(\"hello\");","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"potty10"},"content":"            fail(\"Expected an exception but it was not thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"potty10"},"content":"            assertEquals(\"I have no idea what you just said.\", e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"potty10"},"content":"    public void parseCommand_invalidEventCommand_exceptionThrown() {","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"potty10"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"potty10"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"potty10"},"content":"            parser.parseCommand(\"event read book /from 2022-02-02-02 /to 2022-02-02-02\");","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"potty10"},"content":"            fail(\"Expected an exception but it was not thrown\");","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"potty10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"potty10"},"content":"            assertEquals(\"The command requires at least one argument in the format: yyyy-MM-dd-HH-mm. \"","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"potty10"},"content":"                    + \"Example: 2023-02-02-02-09\", e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"potty10"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"potty10":105}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public void testToDiskFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        assertEquals(\"D|0|project meeting|2023-02-02-02-09\",","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"                new Deadline(\"project meeting\", \"2023-02-02-02-09\").toDiskFormat());","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        assertEquals(\"D|1|project meeting|2023-02-02-02-09\",","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"                new Deadline(\"project meeting\", \"2023-02-02-02-09\", true).toDiskFormat());","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        assertEquals(\"[ ][D] project meeting (by: 04 Aug 2015, 10.11 AM)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"                new Deadline(\"project meeting\", \"2015-08-04-10-11\").toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        assertEquals(\"[X][D] project meeting (by: 04 Aug 2015, 10.11 AM)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"                new Deadline(\"project meeting\", \"2015-08-04-10-11\", true).toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":23}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public void testToDiskFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        assertEquals(\"E|0|project meeting|2023-02-02-02-09|2023-02-02-02-09\",","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"                new Event(\"project meeting\", \"2023-02-02-02-09\", \"2023-02-02-02-09\").toDiskFormat());","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"        assertEquals(\"E|1|project meeting|2023-02-02-02-09|2023-02-02-02-09\",","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"                new Event(\"project meeting\", \"2023-02-02-02-09\", \"2023-02-02-02-09\", true).toDiskFormat());","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"        assertEquals(\"[ ][E] project meeting (from: 04 Aug 2015, 10.11 AM to 04 Aug 2015, 10.11 AM)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"                new Event(\"project meeting\", \"2015-08-04-10-11\", \"2015-08-04-10-11\").toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"        assertEquals(\"[X][E] project meeting (from: 04 Aug 2015, 10.11 AM to 04 Aug 2015, 10.11 AM)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"                new Event(\"project meeting\", \"2015-08-04-10-11\", \"2015-08-04-10-11\", true).toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":23}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"    public void testToDiskFormat() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"        assertEquals(\"T|0|read book\", new ToDo(\"read book\").toDiskFormat());","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"        assertEquals(\"T|1|read book\", new ToDo(\"read book\", true).toDiskFormat());","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"        assertEquals(\"[ ][T] read book\", new ToDo(\"read book\").toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"        assertEquals(\"[X][T] read book\", new ToDo(\"read book\", true).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"potty10":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"deadline return book /by 2015-08-04T10:11:30","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"event project meeting /from 2015-08-04T10:11:30 /to 2015-08-04T10:11:30","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"bye","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"potty10":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"REM delete output from previous run","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"if exist data\\duke.txt del data\\duke.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"potty10":3,"-":21}}]
