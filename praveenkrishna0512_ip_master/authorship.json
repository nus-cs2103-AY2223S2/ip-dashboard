[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"praveenkrishna0512":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"checkstyle {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"praveenkrishna0512":23,"-":40}},{"path":"docs/DevGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"# Developer Guide","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"### If you make a new command","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"1. Add to the command handler in duke.Duke.java","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"2. Make new command enum","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"3. Add functionality for error handling","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"4. Add command functionality","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"### Things to undo","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"1. Remove comments around MissingJavadocCheck in checkstyle.xml","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"### Things to do","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"1. Update all javadoc + coding standards","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":13}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":1,"-":29}},{"path":"memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"T, 1, access","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"D, 0, access, Friday May 05 1600 22:00 PM","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"T, 1, access","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"T, 0, access","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"T, 0, access","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"T, 0, d","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"praveenkrishna0512":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.exceptions.MemoryFailedException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents the entry point for the Duke application. The main function resides in this class.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"public class Duke {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String[] defaultMemoryPathArray \u003d {\".\", \"memory.txt\"};","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private TaskList allTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    public Duke() {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        this(defaultMemoryPathArray);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    public Duke(String[] memoryPathArray) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"        this.storage \u003d new Storage(memoryPathArray);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"        this.allTasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"            this.storage.loadTasks(this.allTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (MemoryFailedException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"            // TODO: Handle this error in a user-friendly manner","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     * Takes in a command and outputs the appropriate response.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"            response \u003d Parser.handleCommands(command, this.allTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"            assert response !\u003d null : \"Response from parser should not be null!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"            response \u003d e.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        return response;","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    public void saveTasks() {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        this.storage.saveTasks(this.allTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"praveenkrishna0512":51,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"    // Solution adapted from","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"    // https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":" * Main entry point for the GUI of the Duke application.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    // Solution adapted from","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    // https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"            stage.setOnCloseRequest(e -\u003e Platform.exit());","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":35}},{"path":"src/main/java/duke/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"public enum Commands {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"    LIST,","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"    BYE,","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"    MARK,","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"    UNMARK,","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    TODO,","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"    EVENT,","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    UNRECOGNIZED,","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    DELETE,","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    FIND","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":14}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents an exception thrown by Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"public class DukeException extends Throwable {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"        super();","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns string representation of the Duke Exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the Duke Exception.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        return \"Duke Exception: Something went wrong! Couldn\u0027t really pinpoint it though D:\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":22}},{"path":"src/main/java/duke/exceptions/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.commands.Commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents an exception thrown by Duke due to an unrecognized command found in the user\u0027s input.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"public class IllegalCommandException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    private Commands c;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    public IllegalCommandException(Commands c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"        this.c \u003d c;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns a string describing the IllegalCommandException, depending on the unrecognized command type.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the IllegalCommandException.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"        switch (this.c) {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"        case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your list command is as such\\n\\nlist\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"        case BYE:","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your list command is as such\\n\\nbye\\n\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \"Having troubles saying bye huh ;)\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"        case MARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your mark command is as such\\n\\nmark index-of-task\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your unmark command is as such\\n\\nunmark index-of-task\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your todo command is as such\\n\\ntodo name-of-task\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"        case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your event command is as such\\n\\nevent name-of-task \"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \"/from start-date (format: yyyy-MM-dd HH:mm) /to end-date (format: yyyy-MM-dd HH:mm)\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your deadline command is as such\\n\\ndeadline name-of-task \"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \"/by date-of-deadline (format: yyyy-MM-dd HH:mm)\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        case DELETE:","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your delete command is as such\\n\\ndelete index-of-task\\n\";","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        case FIND:","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: Make sure that your find command is as such\\n\\nfind enter-keyword-here\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        case UNRECOGNIZED:","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Command Exception: That is not a recognized command!\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        default:","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"            return super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"praveenkrishna0512":51}},{"path":"src/main/java/duke/exceptions/MemoryFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents an exception thrown by Duke due to failure in loading task list state from memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"public class MemoryFailedException extends DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    public MemoryFailedException() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns a string describing the MemoryFailedException.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the MemoryFailedException.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        return \"There was an issue loading up memory. Loading empty task list instead!\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"praveenkrishna0512":22}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents a task with a deadline. The deadline is given by a date and time.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    private LocalDateTime dateBy;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    public Deadline(String title, LocalDateTime dateBy, boolean done) {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"        super(title, done);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"        this.dateBy \u003d dateBy;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * This string includes the task completion status, type and name of task, and date and time of deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneString \u003d this.getDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", doneString, this.getTitle(), this.dateBy.format(dateFormat));","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the Deadline, for storage in memory","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"     * This string includes the task completion status, type and name of task, and date and time of deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the Deadline, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    public String convertToMemoryString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneString \u003d this.getDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"EEEE MMM dd yyyy HH:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        return \"D, \" + doneString + \", \" + this.getTitle() + \", \" + this.dateBy.format(dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":43}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents an event, with a start time and end time.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    public Event(String title, LocalDateTime start, LocalDateTime end, boolean done) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"        super(title, done);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * This string includes the task completion status, type and name of task,","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     * and the date and time specifying when the event begins and concludes.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneString \u003d this.getDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd yyyy, HH:mm\");","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        return String.format(\"[E][%s] %s (from: %s, to: %s)\", doneString, this.getTitle(),","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"                this.start.format(dateFormat), this.end.format(dateFormat));","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the Event, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     * This string includes the task completion status, type and name of task,","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     * and the date and time specifying when the event begins and concludes.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the Event, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    public String convertToMemoryString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneString \u003d this.getDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"EEEE MMM dd yyyy HH:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        return \"E, \" + doneString + \", \" + this.getTitle() + \", \"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"                + this.start.format(dateFormat) + \", \" + this.end.format(dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":49}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents a task within Duke.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"    private boolean done;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    private String title;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    public Task(String title, boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    public String getTitle() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.title;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setTitle(String newTitle) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        this.title \u003d newTitle;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.done;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the Task, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the Task, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    public abstract String convertToMemoryString();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"praveenkrishna0512":37}},{"path":"src/main/java/duke/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"    TODO,","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"    EVENT,","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"    DEADLINE","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":7}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents a task to be done. This task has no attributes other than its title.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    public ToDo(String title, boolean done) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"        super(title, done);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the ToDo.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"     * This string includes the task completion status, type and name of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the ToDo.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneString \u003d this.getDone() ? \"X\" : \" \";","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"        return String.format(\"[T][%s] %s\", doneString, this.getTitle());","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns formatted string representation of the ToDo, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"     * This string includes the task completion status, type and name of task.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return String representation of the ToDo, for storage in memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    public String convertToMemoryString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneString \u003d this.getDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"        return \"T, \" + doneString + \", \" + this.getTitle();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents the dialog box of each message","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    // Solution adapted from","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    // https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    // Variables not used currently but may be used in the future.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":63}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.utils.ReplyString;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    // Solution adapted from","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    // https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private VBox displayViewBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private TextField inputField;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    // Variables not used currently but may be used in the future.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"            this.getClass().getResourceAsStream(\"/images/userOne\" + \".png\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    private Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"            this.getClass().getResourceAsStream(\"/images/duke.png\")));","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        scrollPane.vvalueProperty().bind(displayViewBox.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        displayViewBox.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"                DialogBox.getDukeDialog(ReplyString.getOnStartupString(), dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Handle errors properly","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        String input \u003d inputField.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        String rawResponse \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        displayViewBox.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        if (Objects.equals(rawResponse, \"\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"            // TODO: Check if application exits properly","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"            displayViewBox.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                    DialogBox.getDukeDialog(ReplyString.getGoodbyeString(), dukeImage));","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            duke.saveTasks();","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"            return;","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"        String finalResponse \u003d rawResponse + \"\\n\\n\" + ReplyString.getPromptQuestionString();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        displayViewBox.getChildren().add(DialogBox.getDukeDialog(finalResponse, dukeImage));","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        inputField.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":76}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"public class Ui {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"    //TODO: Reassess the value of this class","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"     * Listens to and returns the user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return the String representing the user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String listen() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":19}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.utils;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.commands.Commands;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.exceptions.IllegalCommandException;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.TaskType;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" * Acts as the parser to listen to and act upon user input in the command line interface.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     * Parses the raw command entered by the user and acts upon it. Returns a boolean representing if","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * the application should continue prompting the user for input.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param rawCommand a string representing the command entered by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param allTasks the TaskList containing all the tasks logged in by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return A boolean representing if the application should continue prompting the user for input.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws DukeException if the user input is not recognized.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String handleCommands(String rawCommand, TaskList allTasks) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"        int commandIndex \u003d rawCommand.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        String command \u003d rawCommand;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"        if (commandIndex !\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"            // There is a space character in the command","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            command \u003d rawCommand.substring(0, commandIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"            arguments \u003d rawCommand.substring(commandIndex + 1).trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"        switch (command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"b\":","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"            return result;","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"ls\":","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d ReplyString.getAllTasksString(allTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"m\":","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processMarkCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"um\":","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processUnmarkCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"t\":","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processTodoCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"d\":","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processDeadlineCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"e\":","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"event\":","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processEventCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"del\":","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processDeleteCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"f\":","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        case \"find\":","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d processFindCommand(arguments, allTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.UNRECOGNIZED);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        assert !Objects.equals(result, \"\")","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"                : \"Result from a valid command should not be an empty string\";","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processMarkCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        String result;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"            int markIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d allTasks.changeTaskCompletionStatus(markIndex, true);","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.MARK);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processUnmarkCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        String result;","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"            int unmarkIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d allTasks.changeTaskCompletionStatus(unmarkIndex, false);","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.UNMARK);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processTodoCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"        if (arguments.trim().equals(\"\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.TODO);","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        String result \u003d allTasks.addToList(arguments, TaskType.TODO, null,","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"                null, false, true);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processDeadlineCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        String result;","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"            int slashIndex \u003d arguments.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"            String dateByString \u003d arguments.substring(slashIndex + 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"            LocalDateTime dateBy \u003d LocalDateTime.parse(dateByString, dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d allTasks.addToList(arguments.substring(0, slashIndex - 1), TaskType.DEADLINE,","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"                    null, dateBy, false, true);","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.DEADLINE);","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processEventCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        String result;","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"            int firstSlashIndex \u003d arguments.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"            String startAndEnd \u003d arguments.substring(firstSlashIndex + 6);","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"            int secondSlashIndex \u003d startAndEnd.indexOf(\u0027/\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"            String startString \u003d startAndEnd.substring(0, secondSlashIndex - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"            String endString \u003d startAndEnd.substring(secondSlashIndex + 4);","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(startString, dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(endString, dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"            // TODO: Check if start date is after end date","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d allTasks.addToList(arguments.substring(0, firstSlashIndex - 1), TaskType.EVENT,","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"                    start, end, false, true);","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.EVENT);","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processDeleteCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"        String result;","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"            int deleteIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d allTasks.deleteTask(deleteIndex);","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.DELETE);","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"praveenkrishna0512"},"content":"    private static String processFindCommand(String arguments, TaskList allTasks)","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"praveenkrishna0512"},"content":"        String result;","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d allTasks.find(arguments);","lastModifiedDate":"2023-02-03"},{"lineNumber":169,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalCommandException(Commands.FIND);","lastModifiedDate":"2023-01-28"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"        return result;","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"praveenkrishna0512":175}},{"path":"src/main/java/duke/utils/ReplyString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.utils;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"public class ReplyString {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"                                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"                                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"                                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INITIAL_GREETING \u003d \"Hope you are doing great!\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String DOTTED_LINE \u003d \"----------------------------------------------------\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String ON_STARTUP \u003d LOGO + INITIAL_GREETING + DOTTED_LINE;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String PROMPT_QUESTION \u003d \"Enter your prompt below:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String GOODBYE \u003d \"Sad...Alright bye!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getOnStartupString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        return ON_STARTUP;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getPromptQuestionString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"        return PROMPT_QUESTION;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getGoodbyeString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"        return GOODBYE;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"     * Outputs the string representation of all tasks within the","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"     * task list provided as input.","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param taskList the TaskList containing relevant tasks.","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return A string representation of all tasks within the provided task list.","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getTaskListString(TaskList taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        result.append(\"\\n\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"            String taskString \u003d String.format(\"%d. %s\", i + 1, task.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"            result.append(taskString);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        result.append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        return result.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"     * Outputs the string representation of all tasks within the user\u0027s task list.","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param allTasks the TaskList containing all tasks logged by the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return A string representation of all tasks within the user\u0027s task list.","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getAllTasksString(TaskList allTasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"You have zero tasks now!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        result.append(\"Your tasks so far!!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        result.append(getTaskListString(allTasks));","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        return result.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":67}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.utils;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.exceptions.MemoryFailedException;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.TaskType;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":" * Handles the loading of data from and storage of data to memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private Path memoryPath;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private File memory;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    public Storage(String[] memoryPathArray) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"        assert memoryPathArray.length \u003e 0 : \"Memory Path Array should not be empty\";","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        this.memoryPath \u003d Paths.get(memoryPathArray[0],","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"                Arrays.copyOfRange(memoryPathArray, 1, memoryPathArray.length));","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        this.memory \u003d new File(String.valueOf(memoryPath));","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     * Loads tasks from memory into the TaskList in the application.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param allTasks the TaskList containing all the tasks logged in by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws MemoryFailedException if there is an issue retrieving data from memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    public void loadTasks(TaskList allTasks) throws MemoryFailedException {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            boolean success \u003d this.memory.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"            Scanner memoryScanner \u003d new Scanner(memory);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"            while (memoryScanner.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"                String taskLine \u003d memoryScanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"                loadTaskLine(taskLine, allTasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new MemoryFailedException();","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"     * Parses each line within the memory file, converts it into a Task object,","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"     * and adds it to the TaskList in the application.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param taskLine a String from memory, representing a Task object.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param allTasks the TaskList containing all the tasks logged in by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    private void loadTaskLine(String taskLine, TaskList allTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Handle corruption in file, leading to incorrect syntax","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Edit such that it doesn\u0027t print anything","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        String[] attributes \u003d taskLine.split(\", \");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        String type \u003d attributes[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        String doneNumber \u003d attributes[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        boolean done \u003d Objects.equals(doneNumber, \"1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        String title \u003d attributes[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"EEEE MMM dd yyyy HH:mm a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        if (Objects.equals(type, \"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"            allTasks.addToList(title, TaskType.TODO, null, null, done, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        } else if (Objects.equals(type, \"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            LocalDateTime dateBy \u003d LocalDateTime.parse(attributes[3], dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"            allTasks.addToList(title, TaskType.DEADLINE, null, dateBy, done, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        } else if (Objects.equals(type, \"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(attributes[3], dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(attributes[4], dateFormat);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"            allTasks.addToList(title, TaskType.EVENT, start, end, done, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"            // TODO: Think if I can alert user of this","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            System.out.println(\"Some task in memory does not fall into the three task categories!\"","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \"\\nThese are not loaded.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"     * Saves tasks from the TaskList in the application into memory.","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param allTasks the TaskList containing all the tasks logged in by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"    public void saveTasks(TaskList allTasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Handle case where file is destroyed while script is running","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"            BufferedWriter fw \u003d Files.newBufferedWriter(this.memoryPath, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"            for (Task task: allTasks.getArray()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"                fw.write(task.convertToMemoryString());","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"                fw.newLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"praveenkrishna0512":106}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.utils;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.TaskType;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" * Contains the list of all tasks logged in by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private ArrayList\u003cTask\u003e array;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    public TaskList(ArrayList\u003cTask\u003e array) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"        this.array \u003d array;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    public ArrayList\u003cTask\u003e getArray() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.array;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return the number of tasks in the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.array.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns the task at the specified index, within the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param taskIndex an integer referencing the index of a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.array.get(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        this.array.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param title the title of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param type the type of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param start the start date and time of the task, if applicable.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param end the end date and time of the task, if applicable.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param done the completion status of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param shouldPrintOutput a boolean specifying if the function should print","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     *     an output as acknowledgement for adding the task to the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"    public String addToList(String title, TaskType type, LocalDateTime start,","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                          LocalDateTime end, boolean done, boolean shouldPrintOutput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Create multiple addToLists with different method signature","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        if (type \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"            task \u003d new ToDo(title, done);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        } else if (type \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"            task \u003d new Deadline(title, end, done);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        } else if (type \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            task \u003d new Event(title, start, end, done);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"            // TODO: Think of how to show the user this issue","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"            return \"Something seems wrong with the task type...I could not add this task\";","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        this.array.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        String resultString \u003d \"Added this to your task list: \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"                + task.toString()","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"                + \"\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                + String.format(\"Number of tasks left: %d\", this.array.size())","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"                + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"        return resultString;","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     * Deletes the task at the specified index, within the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param taskIndex an integer referencing the index of a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        Task deletedTask \u003d this.array.remove(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"        String resultString \u003d \"Removed this from your task list: \"","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"                + \"\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"                + deletedTask.toString()","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"                + \"\\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"                + String.format(\"Number of tasks left: %d\", this.array.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        return resultString;","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"     * Changes the completion status of the task at the specified index, within the TaskList.","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param taskIndex an integer referencing the index of a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param completionStatus a boolean specifying whether the task is completed or not.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"    public String changeTaskCompletionStatus(int taskIndex, boolean completionStatus) {","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        Task task \u003d this.array.get(taskIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        task.setDone(completionStatus);","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        String resultString \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        if (completionStatus) {","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"            resultString +\u003d \"Solid work man! This task is marked done\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"            resultString +\u003d \"Aww what happened? This task is marked as undone\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        resultString +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        return resultString;","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"        for (Task t: this.array) {","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"            String taskDescription \u003d t.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"            boolean containsKeyword \u003d taskDescription.contains(keyword);","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"            if (containsKeyword) {","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"                result.addToList(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        String resultString \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"        if (result.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"            resultString \u003d \"There are no matching tasks in your list!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"            return resultString;","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"        assert result.size() \u003e 0 : \"Number of results from search cannot be negative.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"        resultString \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"        resultString +\u003d ReplyString.getTaskListString(result);","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"        return resultString;","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"praveenkrishna0512":143}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c!-- Solution below adapted from","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml --\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"30.0\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c!-- Solution below adapted from","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"https://se-education.org/guides/tutorials/javaFxPart4.html#javafx-tutorial-part-4-using-fxml --\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"590.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cTextField fx:id\u003d\"inputField\" layoutY\u003d\"565.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"525.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"565.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\" prefWidth\u003d\"65.0\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"565.0\" prefWidth\u003d\"590.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"                \u003cVBox fx:id\u003d\"displayViewBox\" prefHeight\u003d\"558.0\" prefWidth\u003d\"590.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"praveenkrishna0512":21}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    @DisplayName(\"The toString method in the Deadline class should return a string of specified format.\")","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    void testToString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2022, 05, 05, 22, 00);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"        this.deadline \u003d new Deadline(\"Vet proposal\", end, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(\"[D][ ] Vet proposal (by: Thursday, May 05 2022, 22:00)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"                this.deadline.toString(),","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"                \"There is a problem with the toString method in Event class\");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"praveenkrishna0512":24}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    private Event event;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    @DisplayName(\"The toString method in the Event class should return a string of specified format.\")","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    void testToString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2022, 05, 05, 19, 00);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2022, 05, 05, 22, 00);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        this.event \u003d new Event(\"Access meeting\", start, end, false);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(\"[E][ ] Access meeting (from: Thursday, May 05 2022, 19:00, \"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"                + \"to: Thursday, May 05 2022, 22:00)\",","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"                this.event.toString(),","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"                \"There is a problem with the toString method in Event class\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"praveenkrishna0512":25}},{"path":"src/test/java/duke/utils/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package duke.utils;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    void setUp() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    @DisplayName(\"Initialized TaskList should contain an ArrayList of size 0.\")","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    void testEmptyTaskListInitialization() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(0, this.taskList.size(),","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"                \"There is a problem with initialization of TaskList\");","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"praveenkrishna0512":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"test","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"help","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"deadline do problem set 0 /by 2020-05-05 15:00","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"event access party /from 2019-05-05 15:00 /to 2020-05-05 16:00","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"todo","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"deadline","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"event","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"deadline do this by sunday","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"deadline            /by sunday","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"deadline this /by","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"event from 1900hrs /to monday","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"event this /from 1900hrs to monday","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"event this /from 1900hrs","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"event this /to today","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"event    /from 1900hrs /to today","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"event this /from        /to","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"todo do 2103t project","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"mark -1","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"mark 6","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"unmark -1","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"unmark 7","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"delete 4","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"delete 0","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"delete -1","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"delete 2","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"praveenkrishna0512":37}},{"path":"text-ui-test/memory.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"T, 0, borrow book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"E, 0, access party, Sunday May 05 2019 15:00 PM, Tuesday May 05 2020 16:00 PM","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"praveenkrishna0512":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"REM delete memory from previous run","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"if exist ..\\memory.txt del ..\\memory.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"REM delete memory from previous run","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"if exist .\\memory.txt del .\\memory.txt","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"praveenkrishna0512":8,"-":19}}]
