[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"pzhengze":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":" * Represents the Duke personal assistant.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    /** Reference for the Storage object used for i/o to save file. */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"    /** Reference for the TaskList object used for storing Task objects. */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"    /** Reference for the Ui object used for user interaction in the console. */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"    /** Reference for the Parser object used for parsing user input. */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Duke object.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"     * Creates a new Object with the save file at the specified path.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"     * @param path The relative path of the save text file.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    public Duke(String path) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"            tasks \u003d new TaskList(storage.loadSaveFile());","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"            ui.printException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"     * Creates a new Duke object at the default save path and runs it.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"     * Runs the duke object, allowing the user to interact with it.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"        this.ui.greet();","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"        do {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"                input \u003d this.ui.getUserInput();","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"                this.ui.printResponse(parser.parseAndExecute(input));","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"                this.ui.printException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"        } while (!input.equals(\"bye\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"            this.storage.save(tasks.getTasks());","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"            this.ui.printException(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"pzhengze":68,"-":2}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(errorMsg);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/exceptions/DukeFileCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeFileCreationException extends DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeFileCreationException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! Save file cannot be created. Please restart Duke.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/exceptions/DukeInvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeInvalidTaskNumberException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeInvalidTaskNumberException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! Task number must be a number.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/exceptions/DukeMissingDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeMissingDeadlineException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeMissingDeadlineException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! The date/time of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":8}},{"path":"src/main/java/duke/exceptions/DukeMissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeMissingDescriptionException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeMissingDescriptionException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":8}},{"path":"src/main/java/duke/exceptions/DukeMissingEventDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeMissingEventDateException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeMissingEventDateException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! The start/end date of an event cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":8}},{"path":"src/main/java/duke/exceptions/DukeReadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeReadException extends DukeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeReadException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! Failed to read from save file.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/exceptions/DukeTaskNumberOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeTaskNumberOutOfRangeException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeTaskNumberOutOfRangeException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! Task number out of range.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/exceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeUnknownCommandException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeUnknownCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/exceptions/DukeWriteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"public class DukeWriteException extends DukeException{","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"    public DukeWriteException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"        super(\"\\t OOPS!!! Failed to write to save file:\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"pzhengze":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":" * Represents a Parser.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":" * Parses user input into different TaskList methods.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"    /** Reference to the TaskList it is parsing for */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Parser object.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"     * @param tasks The TaskList to be parsed for.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"     * Parses the command and calls the correct TaskList method.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"     * @param command The user command to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"     * @return The feedback message to the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeUnknownCommandException if the parser fails to understand the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeException if an exception occurred while executing the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    public String parseAndExecute(String command) throws DukeUnknownCommandException, DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"        // Extracts the command the other details of the command","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"        String[] inputArray \u003d command.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"        String fn \u003d inputArray[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"        String info \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"        if (inputArray.length \u003e 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"            info \u003d String.join(\" \", Arrays.copyOfRange(inputArray, 1, inputArray.length));","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"        // Interprets the extracted function and executes the correct TaskList method.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"        switch(fn) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"            case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"                return tasks.list();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"                return tasks.mark(info.strip());","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"                return tasks.unMark(info.strip());","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"                return tasks.delete(info.strip());","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"                return tasks.add(TaskType.ToDos, info.strip());","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"                return tasks.add(TaskType.Deadlines, info.strip());","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"            case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"                return tasks.add(TaskType.Events, info.strip());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"            case \"find\":","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"                return tasks.find(info.strip());","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"                return \"\\t Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"                throw new DukeUnknownCommandException();","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"pzhengze":67}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeFileCreationException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeReadException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeWriteException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"import duke.task.Events;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":" * Represents a Storage.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":" * Responsible for the reading and writing to save file for Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"    /** Relative path of the save file */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    private final String path;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"    /** The save file in File object form */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    private final File saveFile;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"     * @param path The relative path of the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"        saveFile \u003d new File(path);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"     * Deletes old save file and saves input task list into new save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeWriteException if the writer fails to write to save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeFileCreationException if a new save file fails to be created.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws DukeWriteException, DukeFileCreationException {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"        // Deletes old save and creates new one.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"        saveFile.delete();","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"            throw new DukeFileCreationException();","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"        // Convert all task into String form and writes it into save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"        StringBuilder save \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"            save.append(task.save());","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"        this.writeToFile(save.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"     * Appends given string into a new line at bottom of save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"     * @param s The string to be appended.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeWriteException if the writer fails to write into the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"    private void writeToFile(String s) throws DukeWriteException {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"pzhengze"},"content":"            FileWriter fw \u003d new FileWriter(path, true);","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"pzhengze"},"content":"            fw.write(s);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"pzhengze"},"content":"            fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"pzhengze"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"pzhengze"},"content":"            throw new DukeWriteException();","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"pzhengze"},"content":"     * Reads save file and creates a list of Tasks based on it.","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"pzhengze"},"content":"     * @return The list of Tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeFileCreationException if it fails to create a save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeReadException if it fails to read the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"pzhengze"},"content":"    public ArrayList\u003cTask\u003e loadSaveFile() throws DukeFileCreationException, DukeReadException {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"pzhengze"},"content":"        Scanner scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"pzhengze"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"pzhengze"},"content":"        // Checks if the save file\u0027s parent directory and the save file exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"pzhengze"},"content":"        // Creates them if they do not exit.","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"pzhengze"},"content":"        // Returns empty list if save file does not exist.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"pzhengze"},"content":"            if (!saveFile.getParentFile().exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"pzhengze"},"content":"                saveFile.getParentFile().mkdirs();","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"pzhengze"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"pzhengze"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"pzhengze"},"content":"                return list;","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"pzhengze"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"pzhengze"},"content":"            throw new DukeFileCreationException();","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"pzhengze"},"content":"            scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"pzhengze"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"pzhengze"},"content":"            throw new DukeReadException();","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"pzhengze"},"content":"        // Reads save file line by line and creates new Tasks based on it.","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"pzhengze"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"pzhengze"},"content":"            String fn \u003d scanner.next();","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"pzhengze"},"content":"            String[] details \u003d scanner.nextLine()","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"pzhengze"},"content":"                    .strip()","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"pzhengze"},"content":"                    .split(\"-\");","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"pzhengze"},"content":"            switch (fn) {","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"pzhengze"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"pzhengze"},"content":"                list.add(new ToDos(details[0],","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"pzhengze"},"content":"                        Boolean.parseBoolean(details[1])","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"pzhengze"},"content":"                ));","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"pzhengze"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"pzhengze"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"pzhengze"},"content":"                list.add(new Deadlines(details[0],","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"pzhengze"},"content":"                        Boolean.parseBoolean(details[1]),","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"pzhengze"},"content":"                        details[2]","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"pzhengze"},"content":"                ));","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"pzhengze"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"pzhengze"},"content":"            case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"pzhengze"},"content":"                list.add(new Events(details[0],","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"pzhengze"},"content":"                        Boolean.parseBoolean(details[1]),","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"pzhengze"},"content":"                        details[2],","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"pzhengze"},"content":"                        details[3]","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"pzhengze"},"content":"                ));","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"pzhengze"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"pzhengze"},"content":"        return list;","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"pzhengze":138}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":" * Represents a Deadlines Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"    /** Storage of the due date of Deadline. */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    /** String form of dueDate. */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    private final String stringDueDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Deadlines object where dueDate is a LocalDateTime object.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"     * @param isDone The boolean showing if the Task has been done.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"     * @param dueDate The due date of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    public Deadlines(String description, boolean isDone, LocalDateTime dueDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"        this.stringDueDate \u003d dueDate.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Deadlines object where dueDate is a String.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"     * @param isDone The boolean showing if the Task has been done.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"     * @param deadline The due date of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"    public Deadlines(String description, boolean isDone, String deadline) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"        this.dueDate \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"        this.stringDueDate \u003d deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"     * Returns the Deadlines Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"     * This shows if the Deadlines Task has been done, represented by [X].","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"     * @return The Deadlines Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"                super.toString(),","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"                stringDueDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"     * Returns the Task in String form specific for saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"     * @return The Task in String form","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"    public String save() {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"deadline %s-%s-%s\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"                this.description,","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"                this.isDone,","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"                this.dueDate.format(DateTimeFormatter.ofPattern((\"d/M/yyyy HHmm\"))));","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"pzhengze":64}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":" * Represents an Events Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"    /** Storage of the start time of Event. */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    /** Storage of the end time of Event. */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    /** String form of startTime. */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"    private final String stringStartTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"    /** String form of endTime */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"    private final String stringEndTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Events object where duration is represented by LocalDateTime objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"     * @param isDone The boolean showing if the Task has been done.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"     * @param startTime The start time of the Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"     * @param endTime The end time of the Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    public Events(String description,boolean isDone, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"        this.stringStartTime \u003d startTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"        this.stringEndTime \u003d endTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Events object where duration is represented by Strings.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"     * @param isDone The boolean showing if the Task has been done.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"     * @param startTime The start time of the Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"     * @param endTime The end time of the Event Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"    public Events(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"        this.startTime \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"        this.stringStartTime \u003d startTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"        this.endTime \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"        this.stringEndTime \u003d endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"     * Returns the Events Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"     * This shows if the Events Task has been done, represented by [X].","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"     * @return The Events Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), stringStartTime, stringEndTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"     * Returns the Task in String form specific for saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"     * @return The Task in String form","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"pzhengze"},"content":"    public String save() {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"event %s-%s-%s-%s\\n\",","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"pzhengze"},"content":"                this.description,","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"pzhengze"},"content":"                this.isDone,","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"pzhengze"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")),","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"pzhengze"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"pzhengze":75}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":" * Represents a Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"    /** Storage of the description of Task */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"    protected final String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"    /** Boolean showing if the task has been done*/","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"     * Constructor for the Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"     * @param isDone The boolean showing if the task has been done.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"     * Mark the Task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"     * @return Message to user informing about successful execution.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    public String mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"\\t Nice! I\u0027ve marked this task as done:\\n\\t   %s\", this);","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"     * Mark the Task as not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"     * @return Message to user informing about successful execution.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"    public String unMark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"\\t Ok, I\u0027ve marked this task as not done yet:\\n\\t   %s\", this);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"     * Checks if description contains s.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"     * @param s The String to check for.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"     * @return True if description contains s. Else False.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"    public boolean contain(String s) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"        int index \u003d description.indexOf(s);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"        return index !\u003d - 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"     * Returns the Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"     * @return The Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"     * Returns the Task in String form specific for saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"     * @return The Task in String form","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"    public abstract String save();","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"pzhengze"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"pzhengze":72}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":" * The types of Tasks available.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":" * {@link #ToDos}","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":" * {@link #Deadlines}","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":" * {@link #Events}","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"     * Represents a Todos Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"    ToDos,","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"     * Represents a Deadlines Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"    Deadlines,","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"     * Represents a Events Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    Events","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"pzhengze":24}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":" * Represents a Todos Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"     * Constructor for a Todos object.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"     * @param isDone The boolean showing if the task has been done.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"     * Returns the Todos Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"     * This shows if the Todos Task has been done, represented by [X].","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"     * @return The Todos Task in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"     * Returns the Task in String form specific for saving.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"     * @return The Task in String form","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"    public String save(){","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"todo %s-%s\\n\", this.description, this.isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"pzhengze":35}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":" * Represents the list containing the Tasks objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"    /** Reference to the ArrayList object that contains the Task objects. */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"     * Constructor for empty TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"     * Constructor for a TaskList object that contains existing Task objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"     * @param tasks The existing list of Task objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"     * Adds a new Task into the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"     * Task added depends on the type inputted and the input string.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"     * If TaskType \u003d Todos: A Todos Task is created.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"     * A Todos Task requires a description in input String s","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"     * If TaskType \u003d Deadlines: A Deadlines Task is created.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"     * A Deadlines Task requires a description and a deadline(/by) in input String s","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"     * If TaskType \u003d Events: A Events Task is created.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"     * An Events Task requires a descriptions, a duration(/from and /to) in input String s","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"     * @param type The type of Task to be created","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"     * @param s The containing the data required to create the new Task","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"     * @return Message to user informing about successfully creation and adding the new Task into the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeMissingDescriptionException If s does not contain a description for Task.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeMissingDeadlineException If s does not contain /by which signifies the due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeMissingEventDateException If s does not contain /from or /to which signifies the duration.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"    public String add(TaskType type, String s) throws DukeMissingDescriptionException,","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"            DukeMissingDeadlineException, DukeMissingEventDateException {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"        String output \u003d \"\\t Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"        switch (type) { // Interprets input string differently depending on the input type.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"        case ToDos:","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"            if (s.isBlank()) { // Checks if s contains a description.","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingDescriptionException();","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"            // Creates a new Todos object and add it to the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"            ToDos todo \u003d new ToDos(s, false);","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"            tasks.add(todo);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"pzhengze"},"content":"            // Add object into the output String.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"pzhengze"},"content":"            output +\u003d \"\\t   \" + todo;","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"pzhengze"},"content":"            break;","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"pzhengze"},"content":"        case Deadlines: {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"pzhengze"},"content":"            if (s.isBlank()) { // Checks if s is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingDescriptionException();","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"pzhengze"},"content":"            // Checks for presence of due date.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"pzhengze"},"content":"            // Throws DukeMissingDeadlineException if not found","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"pzhengze"},"content":"            int index \u003d s.indexOf(\" /by \");","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"pzhengze"},"content":"            if (index \u003d\u003d -1 || s.substring(index + 5)","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"pzhengze"},"content":"                    .isBlank()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingDeadlineException();","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"pzhengze"},"content":"            // Gets the description and due date from s.","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"pzhengze"},"content":"            String desc \u003d s.substring(0, index).strip();","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"pzhengze"},"content":"            String by \u003d s.substring(index + 5).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"pzhengze"},"content":"            // Check if s contains a description.","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"pzhengze"},"content":"            if (index \u003d\u003d 0 || desc.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingDescriptionException();","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"pzhengze"},"content":"            // Attempt to interpret the due date as a LocalDateTime object.","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"pzhengze"},"content":"            // If exception is thrown, treat deadline as a String.","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"pzhengze"},"content":"            // Create Deadlines object and add it into the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"pzhengze"},"content":"            // Adds object into the output String.","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"pzhengze"},"content":"            Deadlines dueDate \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"pzhengze"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"pzhengze"},"content":"                LocalDateTime localBy \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"pzhengze"},"content":"                dueDate \u003d new Deadlines(desc, false, localBy);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"pzhengze"},"content":"            } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"pzhengze"},"content":"                dueDate \u003d new Deadlines(desc, false, by);","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"pzhengze"},"content":"            } finally {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"pzhengze"},"content":"                tasks.add(dueDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"pzhengze"},"content":"                output +\u003d \"\\t   \" + dueDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"pzhengze"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"pzhengze"},"content":"        case Events: {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"pzhengze"},"content":"            if (s.isBlank()) { // Checks is s is empty.","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingDescriptionException();","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"pzhengze"},"content":"            // Checks from presence of duration.","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"pzhengze"},"content":"            // Throws DukeMissingEventDateException if not found.","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"pzhengze"},"content":"            int fromIndex \u003d s.indexOf(\" /from \");","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"pzhengze"},"content":"            int toIndex \u003d s.indexOf(\" /to \");","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"pzhengze"},"content":"            if (fromIndex \u003d\u003d -1 ||","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"pzhengze"},"content":"                    toIndex \u003d\u003d -1 ||","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"pzhengze"},"content":"                    toIndex \u003c fromIndex + 7 ||","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"pzhengze"},"content":"                    s.substring(fromIndex + 7, toIndex).isBlank() ||","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"pzhengze"},"content":"                    s.substring(toIndex + 5).isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingEventDateException();","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"pzhengze"},"content":"            // Gets description and duration from s.","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"pzhengze"},"content":"            String desc \u003d s.substring(0, fromIndex).strip();","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"pzhengze"},"content":"            String startTime \u003d s.substring(fromIndex + 7, toIndex).strip();","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"pzhengze"},"content":"            String endTime \u003d s.substring(toIndex + 5).strip();","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"pzhengze"},"content":"            // Checks if description is empty,","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"pzhengze"},"content":"            if (fromIndex \u003d\u003d 0 || desc.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"pzhengze"},"content":"                throw new DukeMissingDescriptionException();","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"pzhengze"},"content":"            // Attempt to interpret the duration as a LocalDateTime object.","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"pzhengze"},"content":"            // If exception is thrown, treat duration as a String.","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"pzhengze"},"content":"            // Create Events object and add it into the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"pzhengze"},"content":"            // Adds the object into the output string.","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"pzhengze"},"content":"            Events event \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"pzhengze"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"pzhengze"},"content":"                LocalDateTime localStartTime \u003d LocalDateTime.parse(startTime, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"pzhengze"},"content":"                LocalDateTime localEndTime \u003d LocalDateTime.parse(endTime, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"pzhengze"},"content":"                event \u003d new Events(desc, false, localStartTime, localEndTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"pzhengze"},"content":"            } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"pzhengze"},"content":"                event \u003d new Events(desc, false, startTime, endTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"pzhengze"},"content":"            } finally {","lastModifiedDate":"2023-01-24"},{"lineNumber":148,"author":{"gitId":"pzhengze"},"content":"                tasks.add(event);","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"pzhengze"},"content":"                output +\u003d \"\\t   \" + event;","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"pzhengze"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"%s\\n\\t Now you have %d tasks in the list.\", output, tasks.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"pzhengze"},"content":"     * Marks the Task at the specified index as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"pzhengze"},"content":"     * @param s The index of the Task in 1-index form.","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"pzhengze"},"content":"     * @return Message informing user of successful execution.","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeInvalidTaskNumberException when index is not an integer.","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeTaskNumberOutOfRangeException when index is out of range.","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"pzhengze"},"content":"    public String mark(String s) throws DukeInvalidTaskNumberException, DukeTaskNumberOutOfRangeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"pzhengze"},"content":"        int num \u003d TaskList.stringToInt(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"pzhengze"},"content":"        if (num \u003c -1 || num \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"pzhengze"},"content":"            throw new DukeTaskNumberOutOfRangeException();","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"pzhengze"},"content":"        return tasks.get(num - 1).mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"pzhengze"},"content":"     * Marks the Task at the specified index as not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"pzhengze"},"content":"     * @param s The index of the Task in 1-index form.","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"pzhengze"},"content":"     * @return Message informing user of successful execution.","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeInvalidTaskNumberException when index is not an integer.","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeTaskNumberOutOfRangeException when index is out of range.","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"pzhengze"},"content":"    public String unMark(String s) throws DukeInvalidTaskNumberException, DukeTaskNumberOutOfRangeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"pzhengze"},"content":"        int num \u003d TaskList.stringToInt(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"pzhengze"},"content":"        if (num \u003c -1 || num \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":184,"author":{"gitId":"pzhengze"},"content":"            throw new DukeTaskNumberOutOfRangeException();","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"pzhengze"},"content":"        return tasks.get(num - 1).unMark();","lastModifiedDate":"2023-01-27"},{"lineNumber":187,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":190,"author":{"gitId":"pzhengze"},"content":"     * Removes the Task at the specified index from the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"pzhengze"},"content":"     * @param s The index of the Task in 1-index form.","lastModifiedDate":"2023-01-27"},{"lineNumber":192,"author":{"gitId":"pzhengze"},"content":"     * @return Message informing user of successful execution.","lastModifiedDate":"2023-01-27"},{"lineNumber":193,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeInvalidTaskNumberException when index is not an integer.","lastModifiedDate":"2023-01-27"},{"lineNumber":194,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeTaskNumberOutOfRangeException when index is out of range.","lastModifiedDate":"2023-01-27"},{"lineNumber":195,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"pzhengze"},"content":"    public String delete(String s) throws DukeInvalidTaskNumberException, DukeTaskNumberOutOfRangeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"pzhengze"},"content":"        int num \u003d TaskList.stringToInt(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"pzhengze"},"content":"        String output \u003d \"\\t Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"pzhengze"},"content":"        if (num \u003c -1 || num \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"pzhengze"},"content":"            throw new DukeTaskNumberOutOfRangeException();","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"pzhengze"},"content":"        Task removed \u003d tasks.remove(num - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":204,"author":{"gitId":"pzhengze"},"content":"        return String.format(\"%s\\t   %s\\n\\t Now you have %d tasks in the list.\", output, removed, tasks.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":205,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"pzhengze"},"content":"     * Returns the list in String form for user to view.","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"pzhengze"},"content":"     * @return The list in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":210,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":211,"author":{"gitId":"pzhengze"},"content":"    public String list() {","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"pzhengze"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"pzhengze"},"content":"        output.append(\"\\t Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"pzhengze"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"pzhengze"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":216,"author":{"gitId":"pzhengze"},"content":"            output.append(String.format(\"\\t %d.%s\\n\", index, task));","lastModifiedDate":"2023-01-27"},{"lineNumber":217,"author":{"gitId":"pzhengze"},"content":"            index++;","lastModifiedDate":"2023-01-27"},{"lineNumber":218,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":219,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":220,"author":{"gitId":"pzhengze"},"content":"        return output.substring(0, output.length() - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":221,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":222,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":223,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":224,"author":{"gitId":"pzhengze"},"content":"     * Searches through list for Tasks whose description contains s.","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"pzhengze"},"content":"     * @param s The String to be searched for.","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"pzhengze"},"content":"     * @return Message to user informing about the tasks that match.","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"pzhengze"},"content":"    public String find(String s) {","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"pzhengze"},"content":"        StringBuilder output \u003d new StringBuilder(\"\\t Here are the matching tasks in your list.\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"pzhengze"},"content":"        if (s.isBlank()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"pzhengze"},"content":"            return output.substring(0, output.length() - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"pzhengze"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":234,"author":{"gitId":"pzhengze"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"pzhengze"},"content":"            if (task.contain(s)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"pzhengze"},"content":"                output.append(String.format(\"\\t %d.%s\\n\", index, task));","lastModifiedDate":"2023-01-27"},{"lineNumber":237,"author":{"gitId":"pzhengze"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"pzhengze"},"content":"            index++;","lastModifiedDate":"2023-01-19"},{"lineNumber":239,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":240,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":241,"author":{"gitId":"pzhengze"},"content":"        return output.substring(0, output.length() - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":243,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":245,"author":{"gitId":"pzhengze"},"content":"     * Returns the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":246,"author":{"gitId":"pzhengze"},"content":"     * @return The Arraylist containing the Task objects.","lastModifiedDate":"2023-01-27"},{"lineNumber":247,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":248,"author":{"gitId":"pzhengze"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-25"},{"lineNumber":249,"author":{"gitId":"pzhengze"},"content":"        return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":250,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":251,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":252,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":253,"author":{"gitId":"pzhengze"},"content":"     * Converts s into an integer.","lastModifiedDate":"2023-01-27"},{"lineNumber":254,"author":{"gitId":"pzhengze"},"content":"     * @param s The String to be converted.","lastModifiedDate":"2023-01-27"},{"lineNumber":255,"author":{"gitId":"pzhengze"},"content":"     * @return The resultant integer.","lastModifiedDate":"2023-01-27"},{"lineNumber":256,"author":{"gitId":"pzhengze"},"content":"     * @throws DukeInvalidTaskNumberException if s is not an integer in String form.","lastModifiedDate":"2023-01-27"},{"lineNumber":257,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":258,"author":{"gitId":"pzhengze"},"content":"    private static int stringToInt(String s) throws DukeInvalidTaskNumberException {","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"pzhengze"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":260,"author":{"gitId":"pzhengze"},"content":"            return Integer.parseInt(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":261,"author":{"gitId":"pzhengze"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":262,"author":{"gitId":"pzhengze"},"content":"            throw new DukeInvalidTaskNumberException();","lastModifiedDate":"2023-01-19"},{"lineNumber":263,"author":{"gitId":"pzhengze"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":264,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":266,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"pzhengze":266}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":" * Represents the Ui responsible for the interaction with the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":" * @author pzhengze","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"    /** Reference for Scanner object for reading user input in command line. */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"     * Constructor for Ui object.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"    public Ui(){}","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"     * Prints greeting for user.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    public void greet() {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"        printText(\"\\t Hello! I\u0027m Duke\\n\\t What can I do for you?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"     * Reads 1 line of user input through the command line and returns it.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"     * @return The user input that is read as a String.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"     * Prints the message String that was provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"     * @param s The message String.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"    public void printResponse(String s) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"        printText(s);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"     * Prints the message in the DukeException that was provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"     * @param e The DukeException.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"    public void printException(DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"        printText(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"     * Prints the provided String along with a top and bottom line.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"     * @param s The String to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"    private void printText(String s) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"        System.out.println(s);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"pzhengze":60}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"    private final InputStream originalIn \u003d System.in;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"        duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    ","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"    @AfterEach","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    public void resetIO() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"        System.setIn(originalIn);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure duke object is created\")","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"    public void testCreateDukeObject() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"        assertNotNull(duke, \"Duke object should be created\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pzhengze":35}},{"path":"src/test/java/duke/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"public class DeadlinesTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    Deadlines deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"        deadline \u003d new Deadlines(\"Testing\",","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"                false,","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"                LocalDateTime.parse(\"26/1/2023 2359\",","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"                        DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Deadline object is created\")","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"    public void testDeadlines() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"        assertNotNull(deadline, \"Deadline object should be created\");","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Deadline toString method works correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"                \"[D][ ] Testing (by: 26 Jan 2023 2359)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Deadline save method works correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"    public void testSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"        assertEquals(deadline.save(), \"deadline Testing-false-26/1/2023 2359\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pzhengze":42}},{"path":"src/test/java/duke/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"public class EventsTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"    Events event;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"        event \u003d new Events(\"Testing\",","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"                false,","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"                LocalDateTime.parse(\"26/01/2023 0000\",","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"                        DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")),","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"                LocalDateTime.parse(\"26/01/2023 2359\",","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"                        DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Event object is created\")","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"    public void testEvents() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"        assertNotNull(event, \"Deadline object should be created\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Event toString method works correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"        assertEquals(event.toString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"                \"[E][ ] Testing (from: 26 Jan 2023 0000 to: 26 Jan 2023 2359)\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Event save method works correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"    public void testSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"        assertEquals(event.save(), \"event Testing-false-26/1/2023 0000-26/1/2023 2359\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pzhengze":41}},{"path":"src/test/java/duke/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"public class ToDosTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"    ToDos todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"        todo \u003d new ToDos(\"Testing\", false);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Todo object is created\")","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    public void testTodos() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"        assertNotNull(todo, \"Deadline object should be created\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Todo toString method works correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"        assertEquals(todo.toString(),","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"                \"[T][ ] Testing\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Todo save method works correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"    public void testSave() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"        assertEquals(todo.save(), \"todo Testing-false\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pzhengze":33}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"package duke.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"public class UiTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"    private final ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"    private final InputStream originalIn \u003d System.in;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"    public void setup() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"    @AfterEach","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"    public void reset() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"        System.setIn(originalIn);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Ui object is created\")","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"    public void testUi() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"        assertNotNull(ui);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Ui prints the string provided\")","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"    public void testPrintResponse() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"        ui.printResponse(\"\\t test\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"        assertEquals(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"                        .concat(\"\\t test\\n\")","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"                        .concat(\"\\t____________________________________________________________\\n\\n\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"pzhengze"},"content":"                out.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Ui prints the error message\")","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"pzhengze"},"content":"    public void testPrintException() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"pzhengze"},"content":"        DukeException e \u003d new DukeException(\"test\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"pzhengze"},"content":"        ui.printException(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"pzhengze"},"content":"        assertEquals(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"pzhengze"},"content":"                        .concat(\"test\\n\")","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"pzhengze"},"content":"                        .concat(\"\\t____________________________________________________________\\n\\n\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"pzhengze"},"content":"                out.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"pzhengze"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"pzhengze"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"pzhengze"},"content":"    @DisplayName(\"Ensure Ui prints greeting correctly\")","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"pzhengze"},"content":"    public void testGreet() {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"pzhengze"},"content":"        ui.greet();","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"pzhengze"},"content":"        assertEquals(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"pzhengze"},"content":"                        .concat(\"\\t Hello! I\u0027m Duke\\n\\t What can I do for you?\\n\")","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"pzhengze"},"content":"                        .concat(\"\\t____________________________________________________________\\n\\n\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"pzhengze"},"content":"                out.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"pzhengze"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"pzhengze"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"pzhengze":70}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pzhengze"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"pzhengze"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"pzhengze"},"content":"todo test","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"pzhengze"},"content":"todo     test","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"pzhengze"},"content":"mark","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"pzhengze"},"content":"mark 7","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"pzhengze"},"content":"mark 4  6","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"pzhengze"},"content":"mark abc","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"pzhengze"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"pzhengze"},"content":"unmark","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"pzhengze"},"content":"unmark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"pzhengze"},"content":"unmark 5    4","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"pzhengze"},"content":"unmark ab","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"pzhengze"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"pzhengze"},"content":"delete","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"delete 6","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"pzhengze"},"content":"delete 6    4","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"pzhengze"},"content":"delete hf","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"pzhengze"},"content":"delete 1","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"pzhengze"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"pzhengze"},"content":"deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"pzhengze"},"content":"deadline finish level 6","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"deadline /by week 2","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"pzhengze"},"content":"deadline   /by week 2","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"pzhengze"},"content":"deadline finish level-6 /by","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"pzhengze"},"content":"deadline finish level-6 /by","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"pzhengze"},"content":"deadline finish level-6    /by","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"pzhengze"},"content":"deadline finish level-6 /by week 2","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"pzhengze"},"content":"deadline     finish level-6    /by     week 2","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"pzhengze"},"content":"mark      1","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"pzhengze"},"content":"unmark     1","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"pzhengze"},"content":"delete      1","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"pzhengze"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"pzhengze"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"pzhengze"},"content":"event work out","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"pzhengze"},"content":"event /from 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"pzhengze"},"content":"event       /from 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"pzhengze"},"content":"event work out /from 2pm /to","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"pzhengze"},"content":"event work out /from 2pm /to","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"pzhengze"},"content":"event work out /from 2pm      /to","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"pzhengze"},"content":"event work out /from /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"pzhengze"},"content":"event work out /from      /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"pzhengze"},"content":"event work out /from 2pm /to 4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"pzhengze"},"content":"event     work out   /from    2pm    /to     4pm","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"pzhengze"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"pzhengze"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"pzhengze":46}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"pzhengze"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"pzhengze"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"pzhengze":2}}]
