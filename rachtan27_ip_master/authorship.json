[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"E|project week | |2019-11-15|2019-11-25","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"T|borrow book|X","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"D|return book | |2019-10-15","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"    LocalDate byWhen;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"    public Deadline(String desc,LocalDate byWhen) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"        super(desc,\"D\");","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public LocalDate getByWhen() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        return byWhen;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"        return super.toString() + String.format(\"[by %s]\", this.byWhen.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"        ArrayList\u003cTask\u003e storeTasks \u003d getFileContents();","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"        int numElem \u003d storeTasks.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"How may I be of service to you? \\nEnter your command:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        String commandToEcho \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        while (!commandToEcho.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"            if(commandToEcho.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"                if(numElem\u003d\u003d0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"                    System.out.println(\"You do not have any tasks for now!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"                for (int i \u003d 0; i \u003c numElem; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"                    System.out.println(String.format(\"%d. %s\",i+1,storeTasks.get(i)));","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"            } else if (commandToEcho.length() \u003e\u003d4 \u0026\u0026 commandToEcho.substring(0, 4).equals(\"mark\") ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"                    int intTaskIndex \u003d getTaskIndex(commandToEcho);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"                    storeTasks.get(intTaskIndex).markAsDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + storeTasks.get(intTaskIndex).toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"            } else if (commandToEcho.length() \u003e\u003d6 \u0026\u0026 commandToEcho.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"                int intTaskIndex \u003d getTaskIndex(commandToEcho);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"                storeTasks.get(intTaskIndex).markUndone();","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n \" + storeTasks.get(intTaskIndex).toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"            } else if (commandToEcho.length()\u003e\u003d6 \u0026\u0026 commandToEcho.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"                int intTaskIndex \u003d getTaskIndex(commandToEcho);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"                Task taskRemoved \u003d storeTasks.get(intTaskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"                storeTasks.remove(intTaskIndex);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"                numElem--;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + taskRemoved.toString() + String.format(\"\\n Now you have %d tasks in the list.\",numElem));","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"                Task currentTask;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"                if (commandToEcho.length() \u003e\u003d 4 \u0026\u0026 commandToEcho.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"                    if (commandToEcho.equals(\"todo\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"                        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"//                        throw new DukeException();","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"                    } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"                        String desc \u003d getDescToDo(5, commandToEcho);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"                        currentTask \u003d new Todo(desc);","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"                        storeTasks.add(currentTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"                        System.out.println(currentTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"                        numElem++;","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"                        System.out.println(String.format(\"Now you have %d task(s) in the list.\", numElem));","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"                } else if (commandToEcho.length() \u003e\u003d 8 \u0026\u0026 commandToEcho.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"                    if (commandToEcho.equals(\"deadline\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"                        System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"                    } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"                        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"                            String desc \u003d getDesc(9, commandToEcho);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"                            LocalDate byWhen \u003d getByWhen(commandToEcho);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"                            currentTask \u003d new Deadline(desc, byWhen);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"                            storeTasks.add(currentTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"                            System.out.println(currentTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"                            numElem++;","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"                            System.out.println(String.format(\"Now you have %d task(s) in the list.\", numElem));","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"                        }","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"                    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"                } else if (commandToEcho.length() \u003e\u003d 5 \u0026\u0026 commandToEcho.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"                    if (commandToEcho.equals(\"event\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"                        System.out.println(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"                    } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"                        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"                            String desc \u003d getDesc(6, commandToEcho);","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"rachtan27"},"content":"                            LocalDate from \u003d getFrom(commandToEcho);","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"                            LocalDate to \u003d getTo(commandToEcho);","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"                            if (to.isAfter(from)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"                                currentTask \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"                                storeTasks.add(currentTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"                                System.out.println(currentTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"                                numElem++;","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"                                System.out.println(String.format(\"Now you have %d task(s) in the list.\", numElem));","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"                            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"                                System.out.println(\"ERROR!! From date cannot be BEFORE To date!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"                            }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"                        }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"rachtan27"},"content":"                    System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"rachtan27"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"rachtan27"},"content":"            commandToEcho \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"rachtan27"},"content":"        saveTasks(storeTasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"rachtan27"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"rachtan27"},"content":"    static int getTaskIndex(String commandToEcho) {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"rachtan27"},"content":"        String taskIndex \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"rachtan27"},"content":"        int toMinus \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"rachtan27"},"content":"        char fromBack \u003d commandToEcho.charAt(commandToEcho.length() - toMinus);","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"        while (fromBack !\u003d (\u0027 \u0027)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"            taskIndex \u003d fromBack + taskIndex;","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"            toMinus++;","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"rachtan27"},"content":"            fromBack \u003d commandToEcho.charAt(commandToEcho.length() - toMinus);","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"rachtan27"},"content":"        int intTaskIndex \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"        return intTaskIndex;","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"    static String getDescToDo(int startIndex, String commandToEcho) {","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"rachtan27"},"content":"        String subString \u003d commandToEcho.substring(startIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"rachtan27"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"        char front \u003d subString.charAt(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"        while (index \u003c subString.length() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"            desc \u003d desc + front;","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"rachtan27"},"content":"            index++;","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"            front \u003d subString.charAt(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"        desc \u003d desc + front;","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"        return desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"    static String getDesc(int startIndex, String commandToEcho) {","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"rachtan27"},"content":"        String subString \u003d commandToEcho.substring(startIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"rachtan27"},"content":"        String desc \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"rachtan27"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"rachtan27"},"content":"        char front \u003d subString.charAt(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"rachtan27"},"content":"        while (front !\u003d (\u0027/\u0027)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"rachtan27"},"content":"            desc \u003d desc + front;","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"rachtan27"},"content":"            index++;","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"rachtan27"},"content":"            front \u003d subString.charAt(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"rachtan27"},"content":"        return desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"rachtan27"},"content":"    static LocalDate getByWhen(String commandToEcho) throws DateTimeParseException {","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"rachtan27"},"content":"        String[] arrOfStr \u003d commandToEcho.split(\"/by\")[1].split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"rachtan27"},"content":"        String strDate \u003d arrOfStr[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"rachtan27"},"content":"            LocalDate date \u003d LocalDate.parse(strDate);","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"rachtan27"},"content":"            return date;","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"rachtan27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"rachtan27"},"content":"            System.out.println(\"INVALID DATE!!! Please enter date in YYYY/MM/DD format\");","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"rachtan27"},"content":"            throw e;","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"rachtan27"},"content":"    static LocalDate getFrom(String commandToEcho) throws DateTimeParseException {","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"rachtan27"},"content":"        String[] arrOfStr \u003d commandToEcho.split(\"/from\")[1].split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"rachtan27"},"content":"            LocalDate from \u003d LocalDate.parse(arrOfStr[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"rachtan27"},"content":"            return from;","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"rachtan27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"rachtan27"},"content":"            System.out.println(\"INVALID \u0027From\u0027 DATE!!! Please enter date in YYYY/MM/DD format\");","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"rachtan27"},"content":"            throw e;","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"rachtan27"},"content":"    static LocalDate getTo(String commandToEcho) throws DateTimeParseException {","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"rachtan27"},"content":"        String[] arrOfStr \u003d commandToEcho.split(\"/from\")[1].split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"rachtan27"},"content":"            LocalDate to \u003d LocalDate.parse((arrOfStr[3]));","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"rachtan27"},"content":"            return to;","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"rachtan27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"rachtan27"},"content":"            System.out.println(\"INVALID \u0027To\u0027 DATE!!! Please enter date in YYYY/MM/DD format\");","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"rachtan27"},"content":"            throw e;","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":178,"author":{"gitId":"rachtan27"},"content":"    private static ArrayList\u003cTask\u003e getFileContents() throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"rachtan27"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"rachtan27"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":181,"author":{"gitId":"rachtan27"},"content":"            throw new FileNotFoundException(\"Folder does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":182,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":183,"author":{"gitId":"rachtan27"},"content":"        File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"rachtan27"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"rachtan27"},"content":"            throw new FileNotFoundException(\"File does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"rachtan27"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-30"},{"lineNumber":188,"author":{"gitId":"rachtan27"},"content":"        ArrayList\u003cTask\u003e storeTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"rachtan27"},"content":"        int numElem \u003d 0;","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"rachtan27"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":191,"author":{"gitId":"rachtan27"},"content":"            String currentLine \u003d sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":192,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfDetails \u003d currentLine.split(\"\\\\|\");","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"rachtan27"},"content":"            String type \u003d arrOfDetails[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":194,"author":{"gitId":"rachtan27"},"content":"            char marker \u003d arrOfDetails[2].charAt(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"rachtan27"},"content":"            boolean isMarked \u003d (marker\u003d\u003d\u0027X\u0027) ? true : false;","lastModifiedDate":"2023-01-30"},{"lineNumber":196,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d arrOfDetails[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"rachtan27"},"content":"            switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"rachtan27"},"content":"            case \"T\":// T|desc|X","lastModifiedDate":"2023-02-01"},{"lineNumber":199,"author":{"gitId":"rachtan27"},"content":"                storeTasks.add(new Todo(desc));","lastModifiedDate":"2023-02-01"},{"lineNumber":200,"author":{"gitId":"rachtan27"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":201,"author":{"gitId":"rachtan27"},"content":"            case \"D\": //D|desc|X|byWhen","lastModifiedDate":"2023-02-01"},{"lineNumber":202,"author":{"gitId":"rachtan27"},"content":"                LocalDate byWhen \u003d LocalDate.parse(arrOfDetails[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"rachtan27"},"content":"                storeTasks.add(new Deadline(desc,byWhen));","lastModifiedDate":"2023-01-30"},{"lineNumber":204,"author":{"gitId":"rachtan27"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"rachtan27"},"content":"            case \"E\": //D|desc|X|from|to","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"rachtan27"},"content":"                LocalDate from \u003d LocalDate.parse(arrOfDetails[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"rachtan27"},"content":"                LocalDate to \u003d LocalDate.parse(arrOfDetails[4]);","lastModifiedDate":"2023-02-01"},{"lineNumber":208,"author":{"gitId":"rachtan27"},"content":"                storeTasks.add(new Event(desc,from,to));","lastModifiedDate":"2023-01-30"},{"lineNumber":209,"author":{"gitId":"rachtan27"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":210,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":211,"author":{"gitId":"rachtan27"},"content":"            if (isMarked) {","lastModifiedDate":"2023-01-30"},{"lineNumber":212,"author":{"gitId":"rachtan27"},"content":"                storeTasks.get(numElem).markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":213,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":214,"author":{"gitId":"rachtan27"},"content":"            numElem++;","lastModifiedDate":"2023-01-30"},{"lineNumber":215,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"rachtan27"},"content":"        return storeTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":217,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":218,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":219,"author":{"gitId":"rachtan27"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e storeTasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":220,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":221,"author":{"gitId":"rachtan27"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":222,"author":{"gitId":"rachtan27"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":223,"author":{"gitId":"rachtan27"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":224,"author":{"gitId":"rachtan27"},"content":"            fw \u003d new FileWriter(\"data/duke.txt\", true);","lastModifiedDate":"2023-01-30"},{"lineNumber":225,"author":{"gitId":"rachtan27"},"content":"            for (Task t: storeTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":226,"author":{"gitId":"rachtan27"},"content":"                String type \u003d t.getType();","lastModifiedDate":"2023-02-01"},{"lineNumber":227,"author":{"gitId":"rachtan27"},"content":"                String content \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":228,"author":{"gitId":"rachtan27"},"content":"                switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":229,"author":{"gitId":"rachtan27"},"content":"                case \"T\": // T|desc|X","lastModifiedDate":"2023-02-01"},{"lineNumber":230,"author":{"gitId":"rachtan27"},"content":"                    content \u003d String.format(\"%s|%s|%s\",t.getType(),t.getDesc(),t.getStatusIcon());","lastModifiedDate":"2023-02-01"},{"lineNumber":231,"author":{"gitId":"rachtan27"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":232,"author":{"gitId":"rachtan27"},"content":"                case \"D\": //D|desc|X|from","lastModifiedDate":"2023-02-01"},{"lineNumber":233,"author":{"gitId":"rachtan27"},"content":"                    Deadline deadlineTask \u003d (Deadline) t;","lastModifiedDate":"2023-02-01"},{"lineNumber":234,"author":{"gitId":"rachtan27"},"content":"                    content \u003d String.format(\"%s|%s|%s|%s\",t.getType(),t.getDesc(),t.getStatusIcon(),deadlineTask.getByWhen());","lastModifiedDate":"2023-02-01"},{"lineNumber":235,"author":{"gitId":"rachtan27"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":236,"author":{"gitId":"rachtan27"},"content":"                case \"E\": //D|desc|X|from|to","lastModifiedDate":"2023-02-01"},{"lineNumber":237,"author":{"gitId":"rachtan27"},"content":"                    Event eventTask \u003d (Event) t;","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"rachtan27"},"content":"                    content \u003d String.format(\"%s|%s|%s|%s|%s\",t.getType(),t.getDesc(),t.getStatusIcon(),eventTask.getFrom(),eventTask.getTo());","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"rachtan27"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"rachtan27"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"rachtan27"},"content":"                fw.write(content + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":242,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":243,"author":{"gitId":"rachtan27"},"content":"            fw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"rachtan27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"rachtan27"},"content":"            System.out.println(\"Error with saving TODO task\");","lastModifiedDate":"2023-01-30"},{"lineNumber":246,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"rachtan27":239}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"    public DukeException(String message){","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rachtan27":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"    LocalDate from;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"    LocalDate to;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"    public Event(String desc,LocalDate from, LocalDate to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"        super(desc,\"E\");","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"        return from;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        return to;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        return super.toString() +","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"                String.format(\"[from: %s to: %s]\", this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"                        this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"//addapted from partial solution provided in lecture notes","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"//https://nus-cs2103-ay2223s2.github.io/website/admin/ip-w2.html","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"    String desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"    String type;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"    boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"        this.type \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    public Task(String desc,String type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public String getType() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        return this.type;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        return desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        return String.format(\"[%s][%s] %s\", this.type,this.getStatusIcon(),this.getDesc());","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":43}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"public class Todo extends Task{ //type T","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"        super(desc,\"T\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"event project week /from 2019-11-15 /to 2019-11-25","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rachtan27":9}},{"path":"data/.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"rachtan27":0}}]
