[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"rachtan27":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"//    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"    archiveBaseName \u003d \"dukeFX\"","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"rachtan27":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"# Squirtle(daDuke)\u0027s User Guide","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"Ever felt like there\u0027s way too many things your have to keep track of?","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"To the point it\u0027s too much for your brain capacity that you end up ","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"forgetting to do something way too often!","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"No worries as Squirtle is here to help you! ","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"![This is an image](/../src/main/resources/images/squirtle.png)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"### Add Task","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"There are 3 types are task you can ask Squirtle to help you remember!","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"**1. ToDo task**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"Query: `todo {task description}` ","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"todo Call Grandma","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"OK! I\u0027ve added:","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"[T][ ] Call Grandma","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"**2. Deadline task**","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"Query: `deadline {task description} /by {YYYY-MM-DD HHMM}`","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"deadline CS2103 iP /by 2023-02-17 2359","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"OK! I\u0027ve added:","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"[D][ ] CS2103 iP [by Feb 17 2023 23:59]","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"**3. Event task**","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"Query: `deadline {task description} /from {YYYY-MM-DD HHMM} /to {YYYY-MM-DD HHMM}`","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"event Family Vacation /from 2023-06-01 0900 /to 2023-06-08 1700","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"OK! I\u0027ve added:","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"[E][ ] Family Vacation [from: Jun 01 2023 09:00 to: Jun 08 2023 17:00]","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"### List All Tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"Want to know everything you have to do at a glance? Just tell Squirtle to list them all!","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"Query:","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"`List`","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"Expected Outcome: List of all the tasks you asked Squirtle to memorise","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"1. [T][ ] Call Grandma","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"2. [D][ ] CS2103 iP [by Feb 17 2023 23:59]","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"3. [E][ ] Family Vacation [from: Jun 01 2023 09:00 to: Jun 08 2023 17:00]","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"### Delete Task","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"rachtan27"},"content":"You can tell Squirtle to forget a certain task that you no longer need!","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"Query: `delete {task index}`","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"delete 2","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"[D][ ] CS2103 iP [by Feb 17 2023 23:59]","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"rachtan27"},"content":"### Mark Task As Done","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"rachtan27"},"content":"Once you\u0027ve found the motivation to complete a task, you can boast about it to Squirtle ","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"rachtan27"},"content":"who would mark the task as done to acknowledge your effort!","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"rachtan27"},"content":"Query: `mark {task index}`","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":104,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"rachtan27"},"content":"mark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"rachtan27"},"content":"[D][X] CS2103 iP [by Feb 17 2023 23:59]","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"### Unmark Task","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"rachtan27"},"content":"Realised you messed up a marked task? No worries, Squirtle understands and can","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"unmark the task so that you will be reminded that it is still a work in progress!","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"Query: `unmark {task index}`","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"unmark 2","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"[D][ ] CS2103 iP [by Feb 17 2023 23:59]","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"rachtan27"},"content":"### Find Task(s)","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"rachtan27"},"content":"Looking for a certain task? Tell Squirtle the keyword and he will filter all the relevant tasks for you!","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"rachtan27"},"content":"Query: `find {keyword}`","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"rachtan27"},"content":"E.g:","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"rachtan27"},"content":"find Vacation","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"rachtan27"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"rachtan27"},"content":"1. [E][X] Family Vacation [from: Jun 01 2023 09:00 to: Jun 08 2023 17:00]","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"rachtan27"},"content":"### Sort Task(s)","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"rachtan27"},"content":"Deadlines all over the place? Don\u0027t know what to do first? ","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"rachtan27"},"content":"Just tell Squirtle to sort them!","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"rachtan27"},"content":"Query:","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"rachtan27"},"content":"`Sort` ","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"rachtan27"},"content":"Expected outcome:","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"rachtan27"},"content":"Task list has been sorted!","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"rachtan27"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"rachtan27"},"content":"Here\u0027s sneak peak at how your convo with Squirtle would be like!","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"rachtan27"},"content":"![This is an image](/Ui.png)","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"-":16,"rachtan27":149}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"rachtan27":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":" * Duke class with storage,tasks and ui.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    protected Storage storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    protected Ui ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * @param filePath","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"            this.tasks \u003d new TaskList(storage.loadContents());","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"            ui.showResponse(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"     * Launches Duke app.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"     * @param args","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"     * Runs Duke app.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"                String userInput \u003d ui.getCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"                ui.showResponse(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"rachtan27":51}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":" * DukeException class.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"        super(message);","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rachtan27":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"rachtan27":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"rachtan27":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pikachu.jpg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/squirtle.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"     * Initialise main window for GUI.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.guiWelcome(), dukeImage));","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"        String response \u003d \"Default response\";","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"            command.execute(duke.tasks, duke.ui, duke.storage);","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"            response \u003d command.getResponse();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"            String errorMessage \u003d e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"            response \u003d \"Error! \" + errorMessage;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"        if (isExit) {","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"rachtan27":70}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"import duke.command.SortCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"import duke.command.TerminateCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":" * Parser handles making sense of user command.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"     * Parses command that user inputs.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"     * @return Command","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        String commandWord \u003d getCommandWord(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"            return parseList();","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"            return parseMark(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"            return parseUnmark(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"            return parseDelete(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"        case TerminateCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"            return parseTerminate();","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"        case ToDoCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"            return parseTodo(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"            return parseDeadline(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"            return parseEvent(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"            return parseFind(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"            return parseSort();","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"            return new UnknownCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"     * Gets the command word of the user input","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"     * @return command word.","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"    public static String getCommandWord(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"        String[] arrOfStr \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"        String commandWord \u003d arrOfStr[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"        return commandWord;","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"     * Gets the index of the task specified.","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"     * @return index of task specified","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"    public static int getTaskIndex(String userInput) {","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"        String[] arrOfStr \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"        String strIndex \u003d arrOfStr[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"        int intIndex \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"        return intIndex;","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"     * Gets the description of the todo task.","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"     * @return description of the todo task","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"    public static String getDescToDo(String userInput) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfStr \u003d userInput.split(\"todo \");","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d arrOfStr[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"            return desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"rachtan27"},"content":"     * Gets the description of the deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"rachtan27"},"content":"     * @return description of the deadline task","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"rachtan27"},"content":"    public static String getDescDeadline(String userInput) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfStr \u003d userInput.split(\"deadline \");","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"rachtan27"},"content":"            String descDateTime \u003d arrOfStr[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfDescDateTime \u003d descDateTime.split(\"/by\");","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d arrOfDescDateTime[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"            if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"rachtan27"},"content":"            return desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"rachtan27"},"content":"     * Gets the description of the event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"rachtan27"},"content":"     * @return description of the event task","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"    public static String getDescEvent(String userInput) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfStr \u003d userInput.split(\"event \");","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"            String descDateTime \u003d arrOfStr[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfDescDateTime \u003d descDateTime.split(\"/from\");","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d arrOfDescDateTime[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"            if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"rachtan27"},"content":"            return desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"rachtan27"},"content":"     * Gets the deadline of deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"rachtan27"},"content":"     * @return deadline of task","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"rachtan27"},"content":"    public static LocalDateTime getDeadline(String userInput) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfStr \u003d userInput.split(\"/by \");","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"rachtan27"},"content":"            String strDate \u003d arrOfStr[1];","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"rachtan27"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(strDate, formatter);","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"rachtan27"},"content":"            return dateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"rachtan27"},"content":"        } catch (ArrayIndexOutOfBoundsException ae) {","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"\u0027/by DATETIME\u0027 is missing!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"rachtan27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"INVALID DATE!!! Please enter date in YYYY-MM-DD HHMM format\");","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"rachtan27"},"content":"     * Gets the start date of event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"rachtan27"},"content":"     * @return start date of task","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"rachtan27"},"content":"    public static LocalDateTime getFrom(String userInput) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfStr \u003d userInput.split(\"/from \")[1].split(\" /to\");","lastModifiedDate":"2023-02-07"},{"lineNumber":168,"author":{"gitId":"rachtan27"},"content":"            String strFrom \u003d arrOfStr[0];","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"rachtan27"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":170,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(strFrom, formatter);","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"rachtan27"},"content":"            return from;","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"rachtan27"},"content":"        } catch (ArrayIndexOutOfBoundsException ae) {","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"\u0027/from\u0027 DATETIME\u0027 is missing!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"rachtan27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"INVALID \u0027From\u0027 DATE!!! Please enter date in YYYY-MM-DD HHMM format\");","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"rachtan27"},"content":"     * Gets end date of event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"rachtan27"},"content":"     * @return end date of task","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"rachtan27"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"rachtan27"},"content":"    public static LocalDateTime getTo(String userInput) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":186,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"rachtan27"},"content":"            String[] arrOfStr \u003d userInput.split(\"/to \");","lastModifiedDate":"2023-02-07"},{"lineNumber":188,"author":{"gitId":"rachtan27"},"content":"            String strTo \u003d arrOfStr[1];","lastModifiedDate":"2023-02-07"},{"lineNumber":189,"author":{"gitId":"rachtan27"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-07"},{"lineNumber":190,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(strTo, formatter);","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"rachtan27"},"content":"            return to;","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"rachtan27"},"content":"        } catch (ArrayIndexOutOfBoundsException ae) {","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"\u0027/to\u0027 DATETIME\u0027 is missing!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"rachtan27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":195,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"INVALID \u0027To\u0027 DATE!!! Please enter date in YYYY-MM-DD HHMM format\");","lastModifiedDate":"2023-02-07"},{"lineNumber":196,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":197,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":198,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":199,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":200,"author":{"gitId":"rachtan27"},"content":"     * Gets keyword from full user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"rachtan27"},"content":"     * @return","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"rachtan27"},"content":"    public static String getKeyword(String userInput) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":206,"author":{"gitId":"rachtan27"},"content":"            String keyword \u003d userInput.substring(5);","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"rachtan27"},"content":"            return keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":208,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":209,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":210,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":211,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":212,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"rachtan27"},"content":"     * Parse list command.","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"rachtan27"},"content":"     * @return new ListCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":217,"author":{"gitId":"rachtan27"},"content":"    private static Command parseList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"rachtan27"},"content":"        return new ListCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":220,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":221,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":222,"author":{"gitId":"rachtan27"},"content":"     * Parse mark command.","lastModifiedDate":"2023-02-11"},{"lineNumber":223,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":224,"author":{"gitId":"rachtan27"},"content":"     * @return new MarkCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":225,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":226,"author":{"gitId":"rachtan27"},"content":"    private static Command parseMark(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"rachtan27"},"content":"        int taskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":228,"author":{"gitId":"rachtan27"},"content":"        return new MarkCommand(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":229,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":230,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":231,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":232,"author":{"gitId":"rachtan27"},"content":"     * Parse unmark command.","lastModifiedDate":"2023-02-11"},{"lineNumber":233,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":234,"author":{"gitId":"rachtan27"},"content":"     * @return new UnmarkCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":235,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":236,"author":{"gitId":"rachtan27"},"content":"    private static Command parseUnmark(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":237,"author":{"gitId":"rachtan27"},"content":"        int taskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":238,"author":{"gitId":"rachtan27"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":239,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":240,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":241,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":242,"author":{"gitId":"rachtan27"},"content":"     * Parse delete command.","lastModifiedDate":"2023-02-11"},{"lineNumber":243,"author":{"gitId":"rachtan27"},"content":"     * @param userInput","lastModifiedDate":"2023-02-11"},{"lineNumber":244,"author":{"gitId":"rachtan27"},"content":"     * @return new DeleteCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":245,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"rachtan27"},"content":"    private static Command parseDelete(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":247,"author":{"gitId":"rachtan27"},"content":"        int taskIndex \u003d getTaskIndex(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"rachtan27"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":249,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"rachtan27"},"content":"     * Parse terminate command.","lastModifiedDate":"2023-02-11"},{"lineNumber":253,"author":{"gitId":"rachtan27"},"content":"     * @return new TerminateCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"rachtan27"},"content":"    private static Command parseTerminate() {","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"rachtan27"},"content":"        return new TerminateCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":259,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":260,"author":{"gitId":"rachtan27"},"content":"     * Parse todo command.","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"rachtan27"},"content":"     * @return new ToDoCommand or new ErrorCommand if an error is caught","lastModifiedDate":"2023-02-11"},{"lineNumber":263,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":264,"author":{"gitId":"rachtan27"},"content":"    private static Command parseTodo(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":265,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":266,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d getDescToDo(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":267,"author":{"gitId":"rachtan27"},"content":"            assert desc.length() !\u003d 0 : \"Todo task description cannot be empty!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":268,"author":{"gitId":"rachtan27"},"content":"            return new ToDoCommand(desc);","lastModifiedDate":"2023-02-11"},{"lineNumber":269,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":270,"author":{"gitId":"rachtan27"},"content":"            Ui.showResponse(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":271,"author":{"gitId":"rachtan27"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":272,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":273,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":274,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":275,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":276,"author":{"gitId":"rachtan27"},"content":"     * Parse deadline command.","lastModifiedDate":"2023-02-11"},{"lineNumber":277,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":278,"author":{"gitId":"rachtan27"},"content":"     * @return new DeadlineCommand or new ErrorCommand if an error is caught","lastModifiedDate":"2023-02-11"},{"lineNumber":279,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":280,"author":{"gitId":"rachtan27"},"content":"    private static Command parseDeadline(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":281,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":282,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d getDescDeadline(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":283,"author":{"gitId":"rachtan27"},"content":"            assert desc.length() !\u003d 0 : \"Deadline task description cannot be empty!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":284,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime byWhen \u003d getDeadline(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":285,"author":{"gitId":"rachtan27"},"content":"            assert byWhen !\u003d null : \"Deadline should not be null!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":286,"author":{"gitId":"rachtan27"},"content":"            return new DeadlineCommand(desc, byWhen);","lastModifiedDate":"2023-02-11"},{"lineNumber":287,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":288,"author":{"gitId":"rachtan27"},"content":"            Ui.showResponse(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":289,"author":{"gitId":"rachtan27"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":290,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":291,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":292,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":293,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":294,"author":{"gitId":"rachtan27"},"content":"     * Parse event command.","lastModifiedDate":"2023-02-11"},{"lineNumber":295,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":296,"author":{"gitId":"rachtan27"},"content":"     * @return new EventCommand or new ErrorCommand if an error is caught","lastModifiedDate":"2023-02-11"},{"lineNumber":297,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":298,"author":{"gitId":"rachtan27"},"content":"    private static Command parseEvent(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":299,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":300,"author":{"gitId":"rachtan27"},"content":"            String desc \u003d getDescEvent(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":301,"author":{"gitId":"rachtan27"},"content":"            assert desc.length() !\u003d 0 : \"Event task description cannot be empty!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":302,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime from \u003d getFrom(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":303,"author":{"gitId":"rachtan27"},"content":"            assert from !\u003d null : \"Start date/time should not be null!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":304,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime to \u003d getTo(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":305,"author":{"gitId":"rachtan27"},"content":"            assert to !\u003d null : \"End date/time should not be null!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":306,"author":{"gitId":"rachtan27"},"content":"            if (from.isAfter(to)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":307,"author":{"gitId":"rachtan27"},"content":"                return new ErrorCommand(\"Error!! FROM datetime cannot be after TO datetime!!!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":308,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":309,"author":{"gitId":"rachtan27"},"content":"            return new EventCommand(desc, from, to);","lastModifiedDate":"2023-02-11"},{"lineNumber":310,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":311,"author":{"gitId":"rachtan27"},"content":"            Ui.showResponse(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":312,"author":{"gitId":"rachtan27"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":313,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":314,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":315,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":316,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":317,"author":{"gitId":"rachtan27"},"content":"     * Parse find command.","lastModifiedDate":"2023-02-11"},{"lineNumber":318,"author":{"gitId":"rachtan27"},"content":"     * @param userInput full user input","lastModifiedDate":"2023-02-11"},{"lineNumber":319,"author":{"gitId":"rachtan27"},"content":"     * @return new FindCommand or new ErrorCommand if an error is caught","lastModifiedDate":"2023-02-11"},{"lineNumber":320,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":321,"author":{"gitId":"rachtan27"},"content":"    private static Command parseFind(String userInput) {","lastModifiedDate":"2023-02-11"},{"lineNumber":322,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":323,"author":{"gitId":"rachtan27"},"content":"            String keyword \u003d getKeyword(userInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":324,"author":{"gitId":"rachtan27"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2023-02-11"},{"lineNumber":325,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":326,"author":{"gitId":"rachtan27"},"content":"            Ui.showResponse(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":327,"author":{"gitId":"rachtan27"},"content":"            return new ErrorCommand(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":328,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":329,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":330,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":331,"author":{"gitId":"rachtan27"},"content":"    private static Command parseSort() {","lastModifiedDate":"2023-02-11"},{"lineNumber":332,"author":{"gitId":"rachtan27"},"content":"        return new SortCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":333,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":334,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":334}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":" * Storage deals with loading tasks from the file and saving tasks to the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    private String filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"     * Constructor for Storage.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"     * @param filePath","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"     * Loads tasks in file to an arraylist of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"     * @return arraylist of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    public ArrayList\u003cTask\u003e loadContents() throws FileNotFoundException, DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"            throw new FileNotFoundException(\"File does not exist!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"            String currentLine \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"            storeTask(currentLine, taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"        return taskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"     * Stores current task into current task list","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"     * @param currentLine saved input","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"     * @param taskList current task list","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException when there is an error","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"    private static void storeTask(String currentLine, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"        String[] arrOfDetails \u003d currentLine.split(\"\\\\|\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"        String type \u003d arrOfDetails[0];","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"        char marker \u003d arrOfDetails[2].charAt(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"        boolean isMarked \u003d (marker \u003d\u003d \u0027X\u0027) ? true : false;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"        String desc \u003d arrOfDetails[1];","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"        assert desc.length() !\u003d 0 : \"Description of task cannot be empty!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"        switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"        case \"T\": // T|desc|X","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"            taskList.add(new Todo(desc));","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"        case \"D\": //D|desc|X|byWhen","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime byWhen \u003d LocalDateTime.parse(arrOfDetails[3]);","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"            taskList.add(new Deadline(desc, byWhen));","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"        case \"E\": //D|desc|X|from|to","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(arrOfDetails[3]);","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(arrOfDetails[4]);","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"            taskList.add(new Event(desc, from, to));","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"        default:","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"            assert false;","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"Loading Error!!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"        if (isMarked) {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"            taskList.get(taskList.size() - 1).markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"     * Saves tasks to file.","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"     * @param storeTasks current arraylist of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e storeTasks) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"            fw.write(\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"            fw.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"            fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"            for (Task t: storeTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"                String content \u003d getContent(t);","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"                fw.write(content + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"rachtan27"},"content":"            fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"rachtan27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"rachtan27"},"content":"            new DukeException(\"Error with saving TODO task\");","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"rachtan27"},"content":"     * Gets content of specified task.","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"rachtan27"},"content":"     * @param t specified task","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"rachtan27"},"content":"     * @return String of content to be saved","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException when there is an error.","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"rachtan27"},"content":"    private static String getContent(Task t) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"        String type \u003d t.getType();","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"        switch (type) {","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"rachtan27"},"content":"        case \"T\": //T|desc|X","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"rachtan27"},"content":"            content \u003d String.format(\"%s|%s|%s\", t.getType(), t.getDesc(), t.getStatusIcon());","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"rachtan27"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"        case \"D\": //D|desc|X|from","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"rachtan27"},"content":"            Deadline deadlineTask \u003d (Deadline) t;","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"            content \u003d String.format(\"%s|%s|%s|%s\", t.getType(),","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"rachtan27"},"content":"                    t.getDesc(), t.getStatusIcon(), deadlineTask.getDeadline());","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"rachtan27"},"content":"        case \"E\": //D|desc|X|from|to","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"            Event eventTask \u003d (Event) t;","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"            content \u003d String.format(\"%s|%s|%s|%s|%s\", t.getType(),","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"                    t.getDesc(), t.getStatusIcon(), eventTask.getFrom(), eventTask.getTo());","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"rachtan27"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"        default:","lastModifiedDate":"2023-02-08"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"            assert false;","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(\"Saving Error\");","lastModifiedDate":"2023-02-08"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"        assert content.length() !\u003d 0 : \"Content to be saved should not be an empty string!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"        return content;","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":133}},{"path":"src/main/java/duke/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.task.TaskWithDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * TaskComparator to sort task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"        if (t1.getType().equals(\"T\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"            if (t2.getType().equals(\"T\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"                return t1.getDesc().compareTo(t2.getDesc());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"                return -1;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        } else if (t2.getType().equals(\"T\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"            assert !t1.getType().equals(\"T\") : \"T1 should not be ToDo type!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"            return 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"            assert !t1.getType().equals(\"T\") : \"T1 should not be ToDo type!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"            assert !t2.getType().equals(\"T\") : \"T2 should not be ToDo type!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"            TaskWithDate task1 \u003d (TaskWithDate) t1;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"            TaskWithDate task2 \u003d (TaskWithDate) t2;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"            boolean isBefore \u003d task1.getDateForComparison().isBefore(task2.getDateForComparison());","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"            if (isBefore) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"                return -1;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"                return 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"rachtan27":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * TaskList contains the task list and handles operations related to the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * @param tasks current arraylist of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"     * Gets current arraylist of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"     * @return arraylist of tasks","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"     * Gets the size of current task list","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"     * @return size of task list","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"    public Task getTaskAtIndex(int index) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"     * Lists tasks in TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"    public String listTasks() {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"        int numTasks \u003d tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"        String output \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"            output +\u003d \"\\nYou do not have any tasks for now!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"                output +\u003d String.format(\"\\n%d. %s\", i + 1, tasks.get(i));","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"     * Marks task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"     * @param taskIndex index of specified task","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"    public void markTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"rachtan27"},"content":"     * Unmarks task.","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"     * @param taskIndex index of specified task","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"    public void unmarkTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"            tasks.get(taskIndex).markUndone();","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"     * Deletes task.","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"     * @param taskIndex index of specified task","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"rachtan27"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"rachtan27"},"content":"     * Adds task.","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"rachtan27"},"content":"     * @param newTask task to be added","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"rachtan27"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"rachtan27"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"rachtan27"},"content":"     * Finds and returns tasks in task list that matches keyword.","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"     * @param keyword","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"    public String findKeywordMatches(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"rachtan27"},"content":"        int numMatch \u003d 0;","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"rachtan27"},"content":"        String output \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"rachtan27"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"            String taskDesc \u003d tasks.get(i).getDesc();","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"rachtan27"},"content":"            if (taskDesc.contains(keyword)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"                numMatch++;","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"rachtan27"},"content":"                output +\u003d String.format(\"\\n%d. %s\", numMatch, tasks.get(i));","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"        if (numMatch \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"            output +\u003d \"\\nThere are no matches!!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"rachtan27"},"content":"        return output;","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"    public void sortTaskList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"        Collections.sort(this.tasks, new TaskComparator());","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":132}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":" * UI of Duke Application","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public Ui() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * Shows welcome message in Duke\u0027s text-based UI","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"How may I be of service to you? \\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"     * Prompts user for the command and reads the text entered by the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"     * @return (full line) string command","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        System.out.println(\"Enter your command: \");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        String inputLine \u003d sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        return inputLine;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"     * Prints goodbye.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"    public void showGoodBye() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"     * Prints specified response","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"     * @param response String","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"    public static void showResponse(String response) {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"        System.out.println(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"     * Welcomes user on GUI.","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"     * @return default welcome message.","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"    public static String guiWelcome() {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"        return \"Hi! I\u0027m Squirtle (aka the DUKE)!\\nHow may I be of service?\";","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":61}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":" * Abstract class for specific commands that results in adding of tasks to inherit","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":7}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * Abstract class Command for specific commands to inherit from.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    protected String responseFromDukeAfterExecution \u003d \"No response because this has not been executed.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * Executes command specified by user.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * @param tasks current task list","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * @param ui current ui","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     * @param storage current storage","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     * @throws DukeException when there is an error in executing task","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"     * Gets response from duke after execution of command","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"     * @return response","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    public String getResponse() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        return responseFromDukeAfterExecution;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":33}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":" * DeadlineCommand class to represent command to create new Deadline task.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    private String desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime byWhen;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"     * Constructor for DeadlineCommand","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"     * @param byWhen","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    public DeadlineCommand(String desc, LocalDateTime byWhen) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        Deadline newTask \u003d new Deadline(desc, byWhen);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        String response \u003d \"OK! I\u0027ve added:\\n\" + newTask","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"                + String.format(\"\\nNow you have %d task(s) in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":36}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" * DeleteCommand to represent command to delete task at a specific index in the task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"public class DeleteCommand extends AddCommand {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     * @param taskIndex","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        String response;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"            Task taskRemoved \u003d tasks.getTaskAtIndex(taskIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"            tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"            response \u003d \"Noted. I\u0027ve removed this task: \\n\" + taskRemoved","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"                    + String.format(\"\\nNow you have %d tasks in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":38}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" * ErrorCommand that represents command that shows errors in the program.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    private String errorResponse;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"     * Constructor for ErrorCommand.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    public ErrorCommand(String errorResponse) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"        this.errorResponse \u003d errorResponse;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d errorResponse;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"rachtan27":23}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":" * EventCommand that represents command to add an Event task to task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    private String desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"     * @param desc description of event","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"     * @param from start datetime","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"     * @param to end datetime","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    public EventCommand(String desc, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        Event newTask \u003d new Event(desc, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        String response \u003d \"OK! I\u0027ve added:\\n\" + newTask","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"                + String.format(\"\\nNow you have %d task(s) in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":40}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" * FindCommand class that represents command to find task(s) that contains certain keywords.","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    private String keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        String response \u003d tasks.findKeywordMatches(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rachtan27":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" * ListCommand class that represents command to list all the current tasks in the task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    public ListCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        String response \u003d tasks.listTasks();","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * MarkCommand that represents command to mark a certain task as done.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     * @param taskIndex","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        String response \u003d \"DEFAULT MESSAGE\";","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"            tasks.markTask(taskIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"            response \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTaskAtIndex(taskIndex).toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":35}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" * SortCommand that represents command to sort task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * Constructor for SortCommand.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    public SortCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        tasks.sortTaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        String response \u003d \"Task list has been sorted!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"rachtan27":26}},{"path":"src/main/java/duke/command/TerminateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * TerminateCommand that represents command to end the program.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public class TerminateCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * Constructor for TerminateCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public TerminateCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"            storage.saveTasks(tasks.getArrayList());","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"            ui.showGoodBye();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"            this.responseFromDukeAfterExecution \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"            Ui.showResponse(\"Error in saving tasks\");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"            this.responseFromDukeAfterExecution \u003d \"Error in saving tasks\";","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":35}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * ToDoCommand that represents command to add Todo event to task list.","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public class ToDoCommand extends AddCommand {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    private String desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * Constructor for ToDoCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public ToDoCommand(String desc) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        Todo newTask \u003d new Todo(desc);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        String response \u003d \"OK! I\u0027ve added:\\n\" + newTask.toString()","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"                + String.format(\"\\nNow you have %d task(s) in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":33}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" * UnknownCommand that represents a command that Duke does not recognise.","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    private static final String ERROR_MESSAGE \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"     * Constructor for UnknownCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    public UnknownCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(ERROR_MESSAGE);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d ERROR_MESSAGE;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":23}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":" * UnmarkCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    private int taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * @param taskIndex","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        String response;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"            tasks.unmarkTask(taskIndex);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"            response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + tasks.getTaskAtIndex(taskIndex).toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        Ui.showResponse(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        this.responseFromDukeAfterExecution \u003d response;","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"rachtan27":34}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" * Deadline task that has description of task and a deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"public class Deadline extends TaskWithDate {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"     * Constructor for deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * @param deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public Deadline(String desc, LocalDateTime deadline) {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        super(desc, \"D\", deadline);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"     * Gets deadline of DeadlineTask.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"     * @return deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        return deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"     * Prints string representation of deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"     * @return string representation of deadline task","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        return super.toString()","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"                + String.format(\"[by %s]\", this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" * Event task that has description of task, start date and end date","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"public class Event extends TaskWithDate {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * Constructor for Event","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * @param from","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     * @param to","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public Event(String desc, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        super(desc, \"E\", from);","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"     * Gets start date.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"     * @return start date","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        return from;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"     * Gets end date.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"     * @return end date","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        return to;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"     * Prints string representation of event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"     * @return string representation of event task","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"        return super.toString()","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"                + String.format(\"[from: %s to: %s]\", this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"                        this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"//adapted from partial solution provided in lecture notes","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"//https://nus-cs2103-ay2223s2.github.io/website/admin/ip-w2.html","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" * Task that has description, type and variable to determine if it is done or not.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    private String desc;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    private String type;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        this.type \u003d null;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"     * Constructor for Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"     * @param type","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"    public Task(String desc, String type) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"     * Gets type of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"     * @return type of task","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    public String getType() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        return this.type;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"     * Gets status icon of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"     * @return status icon of task","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"     * Gets description of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"     * @return description of task","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"    public String getDesc() {","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"        return desc;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"     * Marks task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"     * Unmarks task.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"     * Prints string representation of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"     * @return string representation of task","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"        return String.format(\"[%s][%s] %s\", this.type, this.getStatusIcon(), this.getDesc());","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":80}},{"path":"src/main/java/duke/task/TaskWithDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":" * TaskWithDate with additional dateForComparison attribute.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"public abstract class TaskWithDate extends Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    private LocalDateTime dateForComparison;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"     * Constructor for TaskWithDate.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"     * @param type","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * @param dateForComparison","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public TaskWithDate(String desc, String type, LocalDateTime dateForComparison) {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        super(desc, type);","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        this.dateForComparison \u003d dateForComparison;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    public LocalDateTime getDateForComparison() {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        return dateForComparison;","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"rachtan27":25}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":" * Todo tasks that has description.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"     * Constructor for Todo.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"     * @param desc","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        super(desc, \"T\");","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rachtan27":15}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"rachtan27":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"rachtan27":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"public class EventTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    private Event task \u003d new Event(\"event project week \",","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"            LocalDateTime.parse(\"2019-11-15 2200\", formatter), LocalDateTime.parse(\"2019-11-25 2359\", formatter));","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public void eventTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        assertEquals(\"[E][ ] event project week [from: Nov 15 2019 22:00 to: Nov 25 2019 23:59]\", task.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    public void markEventTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        assertEquals(\"[E][X] event project week [from: Nov 15 2019 22:00 to: Nov 25 2019 23:59]\", task.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rachtan27":27}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package duke.task;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"public class TodoTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    private Todo task \u003d new Todo(\"assignment\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public void todoTest() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        assertEquals(\"[T][ ] assignment\", task.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    public void markTodoTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"        task.markAsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        assertEquals(\"[T][X] assignment\", task.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rachtan27":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"delete 1","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"delete 2","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"delete 1","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"deadline return book /by 2019-10-15 1325","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"event project meeting /from 2019-11-15 1000 /to 2019-11-25 1200","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"delete 1","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"todo borrow another book","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"list","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rachtan27":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"rachtan27":1}}]
