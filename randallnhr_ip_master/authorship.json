[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"    public Deadline(String name, String start) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"        super(name);","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"        this.deadline \u003d LocalDate.parse(start);","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    public String getFileDesc() {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"        ? \"D|1|\" + this.name + \"|\" + convertFileDate(this.deadline)","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"        : \"D|0|\" + this.name + \"|\" + convertFileDate(this.deadline);","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"                ? \"[D][X] \" + this.name + \" (by: \" + getDate(this.deadline) + \")\"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"                : \"[D][ ] \" + this.name + \" (by: \" + getDate(this.deadline) + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"    private static final String SAVE_PATH \u003d \"./taskList.txt\";","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    public Duke() {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"            this.storage \u003d new Storage(SAVE_PATH);","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"            this.taskList \u003d storage.loadData();","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"    public void run() {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"            ui.start();","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"            String[] input \u003d ui.readLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"            while (!input[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                    ui.displayLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"                    parser.readInput(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"                    ui.displayLine();  ","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"                    input \u003d ui.readLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"            ui.goodbye();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"            storage.storeData(this.taskList.getTasks());","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"        // System.out.println(\"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"        //         \"What can I do for you?\");","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"        // BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"        // try {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"        //     ArrayList\u003cTask\u003e lst \u003d loadData(SAVE_PATH);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"        //     int count \u003d 0 + lst.size();","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"        //     String[] word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"        //     while (!word[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"        //         try {","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"        //             if (word[0].equals(\"list\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"        //                 int curr \u003d 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"        //                 Iterator\u003cTask\u003e iter \u003d lst.iterator();","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"        //                 while (iter.hasNext()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"        //                     System.out.println(curr + \" \" + iter.next());","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"        //                     curr++;","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"randallnhr"},"content":"        //                 word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"        //             } else if (word[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"randallnhr"},"content":"        //                 if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Mark needs a number.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"randallnhr"},"content":"        //                 if (Integer.parseInt(word[1]) \u003e count) {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"        //                 Task t \u003d lst.get(Integer.parseInt(word[1]) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"        //                 t.isDone \u003d true;","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"        //                 System.out.println(\"Task has been marked as done:\\n \" + t);","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"randallnhr"},"content":"        //                 word \u003d br.readLine().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"randallnhr"},"content":"        //             } else if (word[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"randallnhr"},"content":"        //                 if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Unmark needs a number.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"randallnhr"},"content":"        //                 if (Integer.parseInt(word[1]) \u003e count) {","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"randallnhr"},"content":"        //                 Task t \u003d lst.get(Integer.parseInt(word[1]) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"randallnhr"},"content":"        //                 t.isDone \u003d false;","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"randallnhr"},"content":"        //                 System.out.println(\"Task has been marked as not done:\\n \" + t);","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"randallnhr"},"content":"        //                 word \u003d br.readLine().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"randallnhr"},"content":"        //             } else if (word[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"randallnhr"},"content":"        //                 if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"todo needs a description\");","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"randallnhr"},"content":"        //                 Task t \u003d new Todo(word[1].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"randallnhr"},"content":"        //                 lst.add(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"randallnhr"},"content":"        //                 count++;","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"randallnhr"},"content":"        //                 System.out.println(\"Added new todo:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"randallnhr"},"content":"        //                 word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"randallnhr"},"content":"        //             } else if (word[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"randallnhr"},"content":"        //                 if (word.length \u003d\u003d 1 || !word[1].contains(\"/by\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Deadline needs a /by.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"randallnhr"},"content":"        //                 String[] tempWord \u003d word[1].strip().split(\"/by \");","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"randallnhr"},"content":"        //                 if (tempWord.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"/by needs a date/time.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"        //                 try {","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"randallnhr"},"content":"        //                     Task t \u003d new Deadline(tempWord[0].strip(), tempWord[1].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"randallnhr"},"content":"        //                     lst.add(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"randallnhr"},"content":"        //                     count++;","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"randallnhr"},"content":"        //                     System.out.println(\"Added new deadline:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"randallnhr"},"content":"        //                     word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"randallnhr"},"content":"        //                 } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Date after /by needs to be in format yyyy-mm-dd\");","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"randallnhr"},"content":"        //             } else if (word[0].equals(\"event\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"randallnhr"},"content":"        //                 if (word.length \u003d\u003d 1 || !word[1].contains(\"/from\") || !word[1].contains(\"/to\") ) {","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Event needs a /from and /to.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"randallnhr"},"content":"        //                 String[] tempWord \u003d word[1].split(\"/\");","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"randallnhr"},"content":"        //                 String[] from \u003d tempWord[1].split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"randallnhr"},"content":"        //                 String[] to \u003d tempWord[2].split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"randallnhr"},"content":"        //                 if (from.length \u003d\u003d 1 || to.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"/from and /to needs a date/time.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"randallnhr"},"content":"        //                 try {","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"randallnhr"},"content":"        //                     Task t \u003d new Event(tempWord[0].strip(), from[1].strip(), to[1].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"randallnhr"},"content":"        //                     lst.add(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"randallnhr"},"content":"        //                     count++;","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"randallnhr"},"content":"        //                     System.out.println(\"Added new event:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"randallnhr"},"content":"        //                     word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"randallnhr"},"content":"        //                 } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Date after /from and /to needs to be in format yyyy-mm-dd\");","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"randallnhr"},"content":"        //             } else if (word[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"randallnhr"},"content":"        //                 if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Delete needs a number.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"randallnhr"},"content":"        //                 if (Integer.parseInt(word[1]) \u003e count) {","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"randallnhr"},"content":"        //                     throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"randallnhr"},"content":"        //                 }","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"randallnhr"},"content":"        //                 Task t \u003d lst.remove(Integer.parseInt(word[1]) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"randallnhr"},"content":"        //                 count--;","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"randallnhr"},"content":"        //                 System.out.println(\"Deleted task:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"randallnhr"},"content":"        //                 word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"randallnhr"},"content":"        //             } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"randallnhr"},"content":"        //                 throw new DukeException(\"Sorry I do not understand the command\");","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"randallnhr"},"content":"        //             }","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"randallnhr"},"content":"        //         } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"randallnhr"},"content":"        //             System.out.println(e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":143,"author":{"gitId":"randallnhr"},"content":"        //             word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"randallnhr"},"content":"        //         }","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"randallnhr"},"content":"        //     }","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"randallnhr"},"content":"        //     storeData(lst);","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"randallnhr"},"content":"        //     System.out.println(\"Duke: Goodbye\");","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"randallnhr"},"content":"        // } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":149,"author":{"gitId":"randallnhr"},"content":"        //     System.out.println(e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"randallnhr"},"content":"        // }","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"randallnhr":147,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    public DukeException(String m) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"        super(m);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"randallnhr":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    public Event(String name, String start, String end) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"        super(name);","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"        this.from \u003d LocalDate.parse(start);","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"        this.to \u003d LocalDate.parse(end);","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"        if (this.from.isAfter(this.to)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"/to date is before /from date\");","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"    public String getFileDesc() {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"        ? \"E|1|\" + this.name + \"|\" + convertFileDate(this.from) + \"|\" + convertFileDate(this.to)","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"        : \"E|0|\" + this.name + \"|\" + convertFileDate(this.from) + \"|\" + convertFileDate(this.to);","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                ? \"[E][X] \" + this.name + \" (from: \" + getDate(this.from) + \" to: \" + getDate(this.to) + \")\"","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"                : \"[E][ ] \" + this.name + \" (from: \" + getDate(this.from) + \" to: \" + getDate(this.to) + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":28}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"public class Parser {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    public Parser() {};","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    public void readInput(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"        switch (input[0]) {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"            case \"list\":   ","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"                taskList.list(); ","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"                break;        ","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"                mark(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"                unmark(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"                todo(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"                deadline(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"            case \"event\":","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"                event(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"                delete(input, taskList);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"                break;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"            default:","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"                throw new DukeException(\"Sorry I do not understand the command\");","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"    public void mark(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Mark needs a number.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"        if (Integer.parseInt(input[1]) \u003e taskList.size()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"        taskList.markTask(Integer.parseInt(input[1]) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"    public void unmark(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Unmark needs a number.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"        if (Integer.parseInt(input[1]) \u003e taskList.size()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"        taskList.unmarkTask(Integer.parseInt(input[1]) - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"    public void todo(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"todo needs a description\");","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"        Task t \u003d new Todo(input[1].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"randallnhr"},"content":"        taskList.addTask(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Added new todo:\\n  \" + t + \"\\nNumber of tasks: \" + taskList.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"randallnhr"},"content":"    public void deadline(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"randallnhr"},"content":"        if (input.length \u003d\u003d 1 || !input[1].contains(\"/by\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Deadline needs a /by.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"        String[] tempInput \u003d input[1].strip().split(\"/by \");","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"        if (tempInput.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"/by needs a date/time.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"randallnhr"},"content":"            Task t \u003d new Deadline(tempInput[0].strip(), tempInput[1].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"            taskList.addTask(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"            System.out.println(\"Added new deadline:\\n  \" + t + \"\\nNumber of tasks: \" + taskList.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"randallnhr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Date after /by needs to be in format yyyy-mm-dd\");","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"randallnhr"},"content":"    public void event(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"randallnhr"},"content":"        if (input.length \u003d\u003d 1 || !input[1].contains(\"/from\") || !input[1].contains(\"/to\") ) {","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Event needs a /from and /to.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"randallnhr"},"content":"        String[] tempInput \u003d input[1].split(\"/\");","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"randallnhr"},"content":"        String[] from \u003d tempInput[1].split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"randallnhr"},"content":"        String[] to \u003d tempInput[2].split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"randallnhr"},"content":"        if (from.length \u003d\u003d 1 || to.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"/from and /to needs a date/time.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"randallnhr"},"content":"            Task t \u003d new Event(tempInput[0].strip(), from[1].strip(), to[1].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"randallnhr"},"content":"            taskList.addTask(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"randallnhr"},"content":"            System.out.println(\"Added new event:\\n  \" + t + \"\\nNumber of tasks: \" + taskList.size());","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"randallnhr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Date after /from and /to needs to be in format yyyy-mm-dd\");","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"    public void delete(String[] input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"randallnhr"},"content":"        if (input.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Delete needs a number.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"randallnhr"},"content":"        int index \u003d Integer.parseInt(input[1]); ","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"randallnhr"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"randallnhr"},"content":"        taskList.deleteTask(index - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"randallnhr":109}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.io.File;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"public class Storage {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"    private String filePath;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"    public TaskList loadData() throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"            if (file.createNewFile()){","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"                return taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Something went wrong when accessing file\");","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"        Scanner sc;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Unable to read file\");","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"        ","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"                Task task;","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"                String[] line \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"                if (line[0].equals(\"T\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"                    task \u003d new Todo(line[2].strip());","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"                } else if (line[0].equals(\"D\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"                    task \u003d new Deadline(line[2], line[3]);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"                } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"                    task \u003d new Event(line[2], line[3], line[4]);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"    ","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"                    task.mark();","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"    ","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"                taskList.addTask(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"        sc.close();","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"        return taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"    public void storeData(ArrayList\u003cTask\u003e t) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"randallnhr"},"content":"                System.out.println(\"Created new file taskList.txt\");","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"randallnhr"},"content":"            } ","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"randallnhr"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"randallnhr"},"content":"            String taskString \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"randallnhr"},"content":"            for (int i \u003d 0; i \u003c t.size(); i++){","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"randallnhr"},"content":"                taskString +\u003d t.get(i).getFileDesc() + \"\\n\";","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"            fw.write(taskString);","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"            fw.close();","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"randallnhr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Unable to save to file\");","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"randallnhr":74}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"    protected String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"    public Task(String name) {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"    public String getDate(LocalDate date) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyy\");","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        return date.format(format);","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    public String convertFileDate(LocalDate date) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"        return date.format(format);","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"    public void mark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    ","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"    public void unmark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"    public String getFileDesc() {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"        return this.isDone ","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"        ? \"1|\" + this.name ","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        : \"0|\" + this.name;","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"                ? \"[X] \" + this.name","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"                : \"[ ] \" + this.name;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":44}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"public class TaskList {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    private int count;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"    public void list() {","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"        int curr \u003d 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"        Iterator\u003cTask\u003e iter \u003d this.taskList.iterator();","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"            System.out.println(curr + \" \" + iter.next());","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"            curr++;","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"        this.taskList.add(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"        count++;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"    ","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        Task t \u003d this.taskList.remove(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"        count--;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Deleted task:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"    public void markTask(int i) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"        Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        t.mark();","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Task has been marked as done:\\n \" + t);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"        Task t \u003d this.taskList.get(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"        t.unmark();","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Task has been marked as not done:\\n \" + t);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"    public int size() {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"        return count;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"randallnhr":52}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"        super(name);","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"    public String getFileDesc() {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"        ? \"T|1|\" + this.name","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"        : \"T|0|\" + this.name;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"                ? \"[T][X] \" + this.name","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"                : \"[T][ ] \" + this.name;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"public class Ui {","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    private BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"    public void start() {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Hello! I\u0027m Duke!\\n\" +","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"        displayLine();    ","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"    public String[] readLine() throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"            System.out.print(\"Type your command: \");","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"            return br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"            throw new DukeException(\"Error reading input\");","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"    public void displayLine() {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"_________________________________________\\n\");","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    public void goodbye() {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        displayLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"randallnhr":31}},{"path":"src/main/java/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"T|0|1","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"D|1|2|2023-05-20","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"E|0|3|2023-05-05|2023-05-06","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"randallnhr":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"todo task 1","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"deadline task 2 /by 2023-05-05","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"event task 3 /from 2023-05-05 /to 2023-05-06","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"deadline task 2 /by sun","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"event task 3 /from sun /to mon","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"event task 3 /from 2023-05-05 /to 2023-05-04","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"randallnhr":10}}]
