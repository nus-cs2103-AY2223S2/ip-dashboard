[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    public Deadline(String name, String start) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"        super(name, start, null);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"                ? \"[D][X] \" + this.name + \" (by: \" + this.startDate + \")\"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"                : \"[D][ ] \" + this.name + \" (by: \" + this.startDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"                \"What can I do for you?\");","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"            String[] word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"            while (!word[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"                try {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"                    if (word[0].equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"                        int curr \u003d 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"                        Iterator\u003cTask\u003e iter \u003d lst.iterator();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"                        while (iter.hasNext()) {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                            System.out.println(curr + \" \" + iter.next());","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"                            curr++;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"                    } else if (word[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"                        if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Mark needs a number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"                        if (Integer.parseInt(word[1]) \u003e count) {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"                        Task t \u003d lst.get(Integer.parseInt(word[1]) - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"                        t.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"                        System.out.println(\"Task has been marked as done:\\n \" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().split(\" \",2);","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"                    } else if (word[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"                        if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Unmark needs a number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"                        if (Integer.parseInt(word[1]) \u003e count) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"                        Task t \u003d lst.get(Integer.parseInt(word[1]) - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"                        t.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"                        System.out.println(\"Task has been marked as not done:\\n \" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().split(\" \",2);","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"                    } else if (word[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"                        if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"todo needs a description\");","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"                        Task t \u003d new Todo(word[1].strip());","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"                        lst.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"                        count++;","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"                        System.out.println(\"Added new todo:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"                    } else if (word[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"randallnhr"},"content":"                        if (word.length \u003d\u003d 1 || !word[1].contains(\"/by\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Deadline needs a /by.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"randallnhr"},"content":"                        String[] tempWord \u003d word[1].strip().split(\"/by \");","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"randallnhr"},"content":"                        if (tempWord.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"/by needs a date/time.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"                        Task t \u003d new Deadline(tempWord[0].strip(), tempWord[1].strip());","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"                        lst.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"randallnhr"},"content":"                        count++;","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"randallnhr"},"content":"                        System.out.println(\"Added new deadline:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"                    } else if (word[0].equals(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"                        if (word.length \u003d\u003d 1 || !word[1].contains(\"/from\") || !word[1].contains(\"/to\") ) {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Event needs a /from and /to.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"randallnhr"},"content":"                        String[] tempWord \u003d word[1].split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"randallnhr"},"content":"                        String[] from \u003d tempWord[1].split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"randallnhr"},"content":"                        String[] to \u003d tempWord[2].split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"randallnhr"},"content":"                        if (from.length \u003d\u003d 1 || to.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"/from and /to needs a date/time.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"randallnhr"},"content":"                        Task t \u003d new Event(tempWord[0].strip(), from[1].strip(), to[1].strip());","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"randallnhr"},"content":"                        lst.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"randallnhr"},"content":"                        count++;","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"randallnhr"},"content":"                        System.out.println(\"Added new event:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"randallnhr"},"content":"                    } else if (word[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"randallnhr"},"content":"                        if (word.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Delete needs a number.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"randallnhr"},"content":"                        if (Integer.parseInt(word[1]) \u003e count) {","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"randallnhr"},"content":"                            throw new DukeException(\"Invalid task.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"randallnhr"},"content":"                        }","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"randallnhr"},"content":"                        Task t \u003d lst.remove(Integer.parseInt(word[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"randallnhr"},"content":"                        count--;","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"                        System.out.println(\"Deleted task:\\n  \" + t + \"\\nNumber of tasks: \" + count);","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"                        word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"                    } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"randallnhr"},"content":"                        throw new DukeException(\"Sorry I do not understand the command\");","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"randallnhr"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"randallnhr"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"randallnhr"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"randallnhr"},"content":"                    word \u003d br.readLine().strip().split(\" \",2);","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"randallnhr"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"randallnhr"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"randallnhr"},"content":"        System.out.println(\"Duke: Goodbye\");","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"randallnhr":106,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    public DukeException(String m) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"        super(m);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"randallnhr":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"        super(name, start, end);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"                ? \"[E][X] \" + this.name + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"                : \"[E][ ] \" + this.name + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":12}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    protected String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    protected String startDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"    protected String endDate;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"    public Task(String name, String date1, String date2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"        this.startDate \u003d date1;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"        this.endDate \u003d date2;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"                ? \"[X] \" + this.name","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"                : \"[ ] \" + this.name;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":20}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"        super(name, null, null);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"        return this.isDone","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"                ? \"[T][X] \" + this.name","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"                : \"[T][ ] \" + this.name;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"randallnhr":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"todo task 1","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"deadline task 2 /by sun","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"event task 3 /from sun /to mon","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"unmark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"randallnhr":7}}]
