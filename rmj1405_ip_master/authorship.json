[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rmj1405":22,"-":40}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rmj1405":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"import command.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.FileManager;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.Parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Represents the main logic flow of the chatbot.","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * Initialises the file manager, task manager, parser and","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * loads data from the hard disk.","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public Duke() {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"        this.fileManager \u003d new FileManager();","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        assert this.fileManager.loadDataToArrayList(this.taskManager) !\u003d -1;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        this.parser \u003d new Parser(fileManager);","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * Parses scanner input and executes the corresponding command to","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * generate a response from the chatbot.","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @param input","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * @return String representation of the chatbot\u0027s response","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"            Command command \u003d parser.parse(input.trim());","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            assert command !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"            String res \u003d command.executeCommand(taskManager);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"            assert res !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"            return res;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"            return e.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rmj1405":41,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rmj1405":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     *      the application scene can be set.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"     *      Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"     *      primary stages.","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"            stage.setTitle(\"RubiRyo\");","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"            assert duke !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"            stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rmj1405":37}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/star.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ryo-trans.png\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rmj1405":49}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import util.FileManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * Executes bye command which saves all tasks to hard disk.","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * Initialise bye command with the file manager to","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     * store tasks in.","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"     * @param fileManager","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    public ByeCommand(FileManager fileManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        assert fileManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * Saves tasks into file manager and returns a","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * goodbye statement.","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     * @return Goodbye message","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        fileManager.saveTasksToFile(taskManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"        return DukeUI.terminateMessage();","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":40}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Abstract class that executes the command given by the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"     * Extracts index of task in list which is given","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * by user in String format and parses it to int.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * @param string","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @return integer index of task","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public int extractIndex(String string) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        if (!Parser.isNumeric(string)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"            return 0;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        return Integer.parseInt(string);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * Abstract method to execute a given command.","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @return Successful execution of command message","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    public abstract String executeCommand(TaskManager taskManager) throws DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":34}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" * Executes add deadline task command.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    private final String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * Executes command to add a deadline task to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public DeadlineCommand(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * Adds a deadline type task to the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * String input is parsed to extract date and","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * time the task is due by.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @return Successful add deadline message","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            String[] tmp \u003d this.description.split(\" /by \");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"            Deadline deadline \u003d new Deadline(tmp[0], false, tmp[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"            assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"            taskManager.addTaskToList(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"            return DukeUI.deadlineTaskMessage(deadline, taskManager.getTaskArraySize());","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.deadlineFormatErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":45}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Executes delete task command.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private final int index;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * Extracts and initialises list index from String input.","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * @param input","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        this.index \u003d super.extractIndex(input) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"     * Executes deletion of task at index given by user.","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @return Successful task deletion message.","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"            assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"            taskManager.deleteTask(this.index);","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            return DukeUI.deleteTaskMessage(taskManager.getTaskArraySize());","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.indexErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":39}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" * Executes add event task command.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    private final String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * Executes command to add an event task to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public EventCommand(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * Adds an event type task to the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * String input is parsed to extract start and end","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * dates and timings of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @return Successful add event message","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            String[] arr \u003d this.description.split(\" /from \");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"            String[] time \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"            String start \u003d time[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"            String end \u003d time[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"            Event event \u003d new Event(arr[0], false, start, end);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"            assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"            taskManager.addTaskToList(event);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"            return DukeUI.eventTaskMessage(event, taskManager.getTaskArraySize());","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.eventFormatErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":48}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Executes find task in list command.","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private final String word;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * Executes command to find a task in the list","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * given an input keyword.","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param word","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * Finds task in list using keyword provided by user.","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * @return Successful tasks found message","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        return DukeUI.foundTaskMessage() + taskManager.findTasks(this.word);","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rmj1405":35}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.CommandMenu;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Executes help command which displays all commands and how to use them.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    public HelpCommand() {}","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * Displays the command menu when prompted by user.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     * @return all commands","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        return CommandMenu.displayCommandMenu();","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"rmj1405":25}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":" * Executes display task list command.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * Displays the task list when prompted by user.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @return String of tasks in list","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        return taskManager.displayList();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":25}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Executes mark task as completed in list command.","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private final int index;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * Extracts and initialises list index from String input.","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * @param input","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        this.index \u003d super.extractIndex(input) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"     * Marks task at index given by user as completed.","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @return Success message that task has been completed","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"            assert taskManager !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"            taskManager.markTask(this.index);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            return DukeUI.markTaskMessage() + taskManager.printTask(this.index);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.indexErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"rmj1405":39}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" * Executes add todo task command.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    private final String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * Executes command to add a todo task to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * Adds a todo type task to the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * @return Successful add todo message","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        ToDo todo \u003d new ToDo(this.description, false);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        taskManager.addTaskToList(todo);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        return DukeUI.todoTaskMessage(todo, taskManager.getTaskArraySize());","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":37}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Executes uncheck task from list command.","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private final int index;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * Extracts and initialises list index from String input.","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * @param input","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        this.index \u003d super.extractIndex(input) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"     * Unmarks task at index given by user as completed.","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @return Success message that task is uncompleted.","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    public String executeCommand(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"            assert taskManager !\u003d null;","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"            taskManager.unmarkTask(this.index);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            return DukeUI.unmarkTaskMessage() + taskManager.printTask(this.index);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.indexErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"rmj1405":39}},{"path":"src/main/java/data/UserTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"Event,true,party,12/2/23 0600,12/2/23 1000","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"Deadline,false,test program,25/12/23 1150","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"Deadline,true,homework,14/2/23 2359","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"Todo,false,get a haircut","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"rmj1405":4}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":" * Represents a deadline task that the user wishes to","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":" * add to the list. A deadline object has a completion","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * status, description and time to complete by.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private String by;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    private String byFormatted;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * Initialise a deadline task.","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     * @param status","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"     * @param by","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    public Deadline(String description, boolean status, String by) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        super(description, status);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"        assert super.dateFormatter(this.by) !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        this.byFormatted \u003d super.dateFormatter(this.by);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @return Encoded task","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        assert super.getStatus() !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        return String.format(\"Deadline,%s,%s,%s\", super.getStatus(),","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"                super.getDescription(), this.by);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"     * Decodes a String representation of a task in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"     * back into the Task object.","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"     * @param data","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"     * @return Decoded Task object","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"    public static Task deserialise(String data) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        String[] arr \u003d data.split(\",\");","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        assert arr.length !\u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"        boolean isDone \u003d Boolean.parseBoolean(arr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"        String description \u003d arr[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"        String by \u003d arr[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"        return new Deadline(description, isDone, by);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byFormatted + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"rmj1405":61}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":" * Represents an event task that the user wishes to add","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":" * to the list. An event object has a completion status,","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * description, start and end timings.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    private String startFormatted;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    private String start;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    private String endFormatted;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    private String end;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * Initialise an event task.","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"     * @param status","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"     * @param start","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"     * @param end","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    public Event(String description, boolean status, String start, String end) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        super(description, status);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        assert super.dateFormatter(start) !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        this.startFormatted \u003d super.dateFormatter(start);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        assert super.dateFormatter(end) !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        this.endFormatted \u003d super.dateFormatter(end);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"     * @return Encoded task","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        return String.format(\"Event,%s,%s,%s,%s\", super.getStatus(),","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"                super.getDescription(), this.start, this.end);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"     * Decodes a String representation of a task in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"     * back into the Task object.","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"     * @param data","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"     * @return Decoded Task object","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"    public static Task deserialise(String data) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"        String[] arr \u003d data.split(\",\");","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"        assert arr.length !\u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"        boolean isDone \u003d Boolean.parseBoolean(arr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"        String description \u003d arr[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"        String start \u003d arr[3];","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"        String end \u003d arr[4];","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"        return new Event(description, isDone, start, end);","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"        return \"[E]\" + super.toString() + \" (Start: \" + startFormatted + \" | End: \" + endFormatted + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"rmj1405":69}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * Represents a task that the user wishes to add to","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":" * the list. A task object has a completion status and","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":" * a description.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    private String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    //Credit to @Junyi00 for the simple and easy to understand serialisation method for level-7","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    //serialise and deserialise methods used in the task package classes are adopted from him","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"     * Initialises a task.","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * @param status","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        //mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"        return isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        return description;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"     * Formats the date and time input by the user while creating the","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"     * task into a more readable format i.e. 1 Jan 2021 11:59 PM.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"     * @param str","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"     * @return Formatted date and time","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"    public String dateFormatter(String str) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"        //\"d/M/y H:mm\" for auto detection of AM/PM d/M/yy h:mma for manual but in 12hr time","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(str, DateTimeFormatter.ofPattern(\"d/M/yy Hmm\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"            assert localDateTime !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"            String dt \u003d localDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"            assert dt !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"            return dt;","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(\"Please enter date in dd/mm/yy and time in hhmm 24hr format!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"     * Encodes task data for storage in a file.","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"     * @return Encoded String representation","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"        return String.format(\"Task,%s,%s\", this.getStatus(), this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"     * Decodes a String representation of a task in the file","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"     * back into the Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"     * @param data","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"     * @return Decoded Task object","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"    public static Task deserialise(String data) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"        String[] arr \u003d data.split(\",\");","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"rmj1405"},"content":"        assert arr.length !\u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"        boolean isDone \u003d Boolean.parseBoolean(arr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"        String desc \u003d arr[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"        return new Task(desc, isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"rmj1405"},"content":"     * String representation of a Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"     * @return String representation of a Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"rmj1405"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"rmj1405"},"content":"        String str \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"rmj1405"},"content":"        return str;","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"rmj1405":110}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import util.DukeUI;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" * Manages all Task related operations such as updating","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":" * the completion status of a task, inserting and deleting","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":" * the task from the list, and displaying the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"public class TaskManager {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    private final ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     * Initialises the ArrayList.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    public TaskManager() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"        this.taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"     * @param index","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        Task task \u003d taskArr.get(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        task.markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"     * @param index","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"        Task task \u003d taskArr.get(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"     * Removes the task from the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"     * @param index","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"        taskArr.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"     * @param task","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"        taskArr.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"     * Prints task from list at a given index.","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"     * @param index","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"     * @return String representation of a task at a given index","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"    public String printTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"        String str \u003d taskArr.get(index).toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"        return str;","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"     * Iterates through task list to display its elements.","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"     * @return String of tasks in the list","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"    public String displayList() throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"        if (taskArr.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(\"Your list is empty, please add a task!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"        for (int i \u003d 0; i \u003c taskArr.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"            Task task \u003d taskArr.get(i);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"            sb.append(i + 1 + \". \" + task);","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"     * Finds tasks in the list which match a given keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"     * @param word","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"     * @return all matching tasks","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"    public String findTasks(String word) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"        for (Task task : taskArr) {","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"rmj1405"},"content":"            if (!task.getDescription().contains(word)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"rmj1405"},"content":"                continue;","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"            sb.append(++count + \". \" + task);","lastModifiedDate":"2023-02-10"},{"lineNumber":105,"author":{"gitId":"rmj1405"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2023-02-10"},{"lineNumber":106,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"rmj1405"},"content":"        if (sb.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.missingTaskErrorMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"rmj1405"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"rmj1405"},"content":"    public int getTaskArraySize() {","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"rmj1405"},"content":"        return taskArr.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"rmj1405"},"content":"    public ArrayList\u003cTask\u003e getTaskArr() {","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"rmj1405"},"content":"        return taskArr;","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"rmj1405":121}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":" * Represents a todo task that the user wishes to add","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":" * to the list. A todo object has a completion status","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * and description.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"     * Initialise a todo task.","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     * @param description","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"     * @param status","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    public ToDo(String description, boolean status) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        super(description, status);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"     * @return Encoded task","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"        return String.format(\"Todo,%s,%s\", super.getStatus(), super.getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * Decodes a String representation of a task in the file","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     * back into the Task object.","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"     * @param data","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"     * @return Decoded Task object","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"    public static Task deserialise(String data) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"        String[] arr \u003d data.split(\",\");","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        assert arr.length !\u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        boolean isDone \u003d Boolean.parseBoolean(arr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        String description \u003d arr[2];","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        return new ToDo(description, isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"rmj1405":51}},{"path":"src/main/java/util/CommandMenu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package util;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":" * Enum to manage command menu for help page.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"public enum CommandMenu {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"    EVENT(\"Create Event Task\", \"event party /from 12/2/23 0600 /to 12/2/23 1000\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    TODO(\"Create ToDo Task\", \"todo homework\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"    DEADLINE(\"Create Deadline Task\", \"deadline test program /by 25/12/23 1150\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"    MARK(\"Mark Task as Done\", \"mark x - x is the index of the task in list\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    UNMARK(\"Unmark Task as Not Done\", \"unmark x - x is the index of the task in list\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    DELETE(\"Delete Task from List\", \"delete x - x is the index of the task in list\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    FIND(\"Find Task in List\", \"find p - will display all tasks with a p in the name\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    LIST(\"Display List\", \"list\"),","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    BYE(\"Save Tasks and Exit\", \"bye\");","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"    private String description;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    private String exampleUsage;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    CommandMenu(String description, String exampleUsage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        this.exampleUsage \u003d exampleUsage;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        return description;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"        return exampleUsage;","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"     * Displays command menu with a command description","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"     * and example usage.","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"     * @return list of commands","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    public static String displayCommandMenu() {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        for (CommandMenu command : CommandMenu.values()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"            sb.append(command.getDescription().toUpperCase());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"            sb.append(\"Example usage: \" + command.getExampleUsage()","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"rmj1405":51}},{"path":"src/main/java/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package util;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":" * Custom exception class which throws a","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":" * custom error message.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"        super(msg);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"        return String.format(\"Oh no! %s\", super.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":16}},{"path":"src/main/java/util/DukeUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package util;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":" * Contains library of String outputs for different cases.","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class DukeUI {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"     * UI for welcoming user.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    public static String welcomeMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"        String s \u003d \"Woof! I\u0027m RubiRyo the Japanese Spitz!\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"                + \"Give me a command or type menu to see the commands I know!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        return s;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    public static String terminateMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        return \"ByeBye! Come play with me again!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * UI for tasks that match keyword provided by user.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"    public static String foundTaskMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"        String str \u003d \"Here are matching tasks in your list: \";","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        return str + System.lineSeparator();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"     * UI for completed tasks.","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"    public static String markTaskMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"        String str \u003d \"Great job! I have checked this task off the list:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        return str + System.lineSeparator();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"     * UI for incomplete tasks.","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    public static String unmarkTaskMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"        String str \u003d \"No worries! I have unchecked this task in the list: \";","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"        return str + System.lineSeparator();","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"     * UI for number of tasks in the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"     * @param numOfTasks","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"     * @return number of tasks message","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"    public static String updateTaskMessage(int numOfTasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"        String sizeMessage \u003d String.format(\"There are currently %d task(s) in the list!\", numOfTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"        return sizeMessage;","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"     * UI for deleting task in the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"     * @param numOfTasks","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"    public static String deleteTaskMessage(int numOfTasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"        String okMessage \u003d \"Okay! I have removed the task!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"        return okMessage + System.lineSeparator() + updateTaskMessage(numOfTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"     * UI for adding event task to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"     * @param numOfTasks","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"    public static String eventTaskMessage(Event event, int numOfTasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"        String okMessage \u003d String.format(\"I have added: %s !\", event);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"        return okMessage + System.lineSeparator() + updateTaskMessage(numOfTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"     * UI for adding deadline task to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"     * @param numOfTasks","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"    public static String deadlineTaskMessage(Deadline deadline, int numOfTasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"        String okMessage \u003d String.format(\"I have added: %s !\", deadline);","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"        return okMessage + System.lineSeparator() + updateTaskMessage(numOfTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"rmj1405"},"content":"     * UI for todo task to the list.","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"rmj1405"},"content":"     * @param numOfTasks","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"rmj1405"},"content":"     * @return message","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"rmj1405"},"content":"    public static String todoTaskMessage(ToDo todo, int numOfTasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"rmj1405"},"content":"        String okMessage \u003d String.format(\"I have added: %s !\", todo);","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"rmj1405"},"content":"        return okMessage + System.lineSeparator() + updateTaskMessage(numOfTasks);","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"rmj1405"},"content":"    public static String indexErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"rmj1405"},"content":"        return \"Item does not exist in list! Please check your list again.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"rmj1405"},"content":"    public static String eventFormatErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"rmj1405"},"content":"        return \"Please add a description, date and time e.g. party /from 12/2/23 1800 /to 12/2/23 2200\";","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"rmj1405"},"content":"    public static String deadlineFormatErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"rmj1405"},"content":"        return \"Please add a description, date and time e.g. homework /by 12/12/12 2359\";","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"rmj1405"},"content":"    public static String missingTaskErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"rmj1405"},"content":"        return \"Your list does not contain this task!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"rmj1405"},"content":"     * For when user does not include index of task for mark","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"rmj1405"},"content":"     * and unmark commands or does not include description for","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"rmj1405"},"content":"     * task commands.","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"rmj1405"},"content":"     * @return error message","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"rmj1405"},"content":"    public static String incompleteInputErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"rmj1405"},"content":"        return \"Please enter an index or description with the command!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"rmj1405"},"content":"     * For when user inputs a command that does not exist.","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"rmj1405"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"rmj1405"},"content":"     * @return error message","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"rmj1405"},"content":"    public static String invalidInputErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"rmj1405"},"content":"        return \"Command not recognised, please enter a valid command!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"rmj1405"},"content":"    public static String emptyInputErrorMessage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"rmj1405"},"content":"        return \"No command given, please give me one!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"rmj1405":151}},{"path":"src/main/java/util/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package util;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":" * Contains method for data related operations i.e.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":" * saving data to a file or uploading data to destination.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"public class FileManager implements Serializable {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    private static final String FILEPATH \u003d \"src/main/java/data/UserTasks.txt\";","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    //Credit to @Junyi00 for the simple and easy to understand serialisation method for level-7","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * Extracts tasks from the arraylist and writes","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * to the file at a specified path.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"    public void saveTasksToFile(TaskManager taskManager) throws DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            assert !FILEPATH.isEmpty();","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"            File file \u003d new File(FILEPATH);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"            if (!file.isFile() \u0026\u0026 !file.isDirectory()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"                throw new DukeException(\"File or folder not found! Please create the file or folder.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"            ArrayList\u003cTask\u003e taskArr \u003d taskManager.getTaskArr();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"            for (int i \u003d 0; i \u003c taskArr.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"                fw.write(taskArr.get(i).serialise());","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            fw.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(\"IO Error Occurred in File Manager\");","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"     * Upload data stored in specified file path to","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"     * the arraylist.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"     * @param taskManager","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"     * @return a 0 to indicate successful load","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"     *      and -1 to indicate unsuccessful load.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"    public int loadDataToArrayList(TaskManager taskManager) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"        assert !FILEPATH.isEmpty();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"            return -1;","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"                String data \u003d s.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"                String id \u003d data.split(\",\")[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"                Task task;","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"                switch (id) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"                case \"Todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"                    task \u003d ToDo.deserialise(data);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"                case \"Event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"                    task \u003d Event.deserialise(data);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"                    task \u003d Deadline.deserialise(data);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"                    task \u003d Task.deserialise(data);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"                assert taskManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"                taskManager.addTaskToList(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"rmj1405"},"content":"            return -1;","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"            return -1;","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"        return 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":100}},{"path":"src/main/java/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package util;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import command.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import command.DeadlineCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import command.EventCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import command.FindCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"import command.HelpCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"import command.ListCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"import command.TodoCommand;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":" * A library of useful methods to parse various String","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":" * user inputs and retrieve data from it.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    private String[] inputArr;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"    private FileManager fileManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    public Parser(FileManager fileManager) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"     * Removes leading and trailing whitespaces in user","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"     * input and extracts the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"     * @param input","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"     * @return command String","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        String ip \u003d input;","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        this.inputArr \u003d ip.split(\" \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"        String userCommand \u003d inputArr[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"            switch (userCommand) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"            case \"help\":","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"                return new HelpCommand();","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"            case \"list\":","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"                return new ListCommand();","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"                assert fileManager !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"                return new ByeCommand(fileManager);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"            case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"                return new FindCommand(inputArr[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"                return new MarkCommand(inputArr[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"                return new UnmarkCommand(inputArr[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"                return new DeleteCommand(inputArr[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"                return new TodoCommand(inputArr[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"            case \"event\":","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"                return new EventCommand(inputArr[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"                return new DeadlineCommand(inputArr[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"            case \"\":","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"                throw new DukeException(DukeUI.emptyInputErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"            default:","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"                throw new DukeException(DukeUI.invalidInputErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(DukeUI.incompleteInputErrorMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"            String str \u003d e.getMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"            throw new DukeException(str);","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"rmj1405"},"content":"    //credit: https://stackabuse.com/java-check-if-string-is-a-number/","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"rmj1405"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"rmj1405"},"content":"     * Checks if a given String is numeric.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"rmj1405"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"rmj1405"},"content":"     * @param string","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"rmj1405"},"content":"     * @return true if String is numeric and false otherwise","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"rmj1405"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"rmj1405"},"content":"    public static boolean isNumeric(String string) {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"rmj1405"},"content":"        int intValue;","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"rmj1405"},"content":"        if (string \u003d\u003d null || string.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"rmj1405"},"content":"            System.out.println(\"String cannot be parsed, it is null or empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"rmj1405"},"content":"            return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"rmj1405"},"content":"            intValue \u003d Integer.parseInt(string);","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"rmj1405"},"content":"            assert (Integer) intValue !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"rmj1405"},"content":"            return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"rmj1405"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"rmj1405"},"content":"            System.out.println(\"Illegal string input!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"rmj1405"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"rmj1405":99}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" styleClass\u003d\"dialog-box\" stylesheets\u003d\"@style.css\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"         \u003cimage\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"            \u003cImage url\u003d\"@../images/ryo.png\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"         \u003c/image\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rmj1405":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.effect.InnerShadow?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"root\" stylesheets\u003d\"@style.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"39.0\" prefWidth\u003d\"409.0\" promptText\u003d\"Enter a command here\" AnchorPane.bottomAnchor\u003d\"3.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"            \u003cFont name\u003d\"System Font\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"            \u003cInnerShadow height\u003d\"10.68\" radius\u003d\"5.2075\" width\u003d\"12.15\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"                  \u003cColor red\u003d\"0.6399999856948853\" green\u003d\"0.6335999965667725\" blue\u003d\"0.6335999965667725\" opacity\u003d\"0.47609943151474\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"               \u003c/color\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"420.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"38.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"#5088b5\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"            \u003cFont name\u003d\"Andale Mono\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"         \u003c/cursor\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"            \u003cInnerShadow height\u003d\"20.18\" radius\u003d\"9.057500000000001\" width\u003d\"18.05\"\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"                  \u003cColor opacity\u003d\"0.151472270488739\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"               \u003c/color\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"555.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"484.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"rmj1405":49}},{"path":"src/test/java/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    //creates new task array","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    TaskManager tm \u003d new TaskManager();","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_checkAddToList_success() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"        DeadlineCommand dc \u003d new DeadlineCommand(tm, \"test program /by 25/12/23 1150\");","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"        dc.executeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"        assertEquals(1, tm.getTaskArraySize());","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_checkTaskAddedToList_success() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"        DeadlineCommand dc \u003d new DeadlineCommand(tm, \"test program /by 25/12/23 1150\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"        dc.executeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"        assertEquals(\"[D][ ] test program (by: 25 Dec 2023 11:50 AM)\", tm.printTask(0));","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"            DeadlineCommand dc \u003d new DeadlineCommand(tm, \"test /by 25/12/23 11:50PM\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"            dc.executeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"[D][ ] test program (by: 25/12/23 11:50 AM)\", tm.printTask(0));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"            fail();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"Please enter date in dd/mm/yy and time in hhmm 24hr format!\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_invalidUserInput_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"            DeadlineCommand dc \u003d new DeadlineCommand(tm, \"test /by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"            dc.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"[D][ ] test program (by: 25/12/23 11:50 AM)\", tm.printTask(0));","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"Please add a description, date and time e.g. homework /by 12/12/12 2359\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"rmj1405":52}},{"path":"src/test/java/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"import task.TaskManager;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import util.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"    TaskManager tm \u003d new TaskManager();","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_checkAddToList_success() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"        EventCommand ec \u003d new EventCommand(tm, \"party /from 12/2/23 0600 /to 12/2/23 1000\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"        ec.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"        assertEquals(1, tm.getTaskArraySize());","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_checkTaskAddedToList_success() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rmj1405"},"content":"        EventCommand ec \u003d new EventCommand(tm, \"party /from 12/2/23 0600 /to 12/2/23 1000\");","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"rmj1405"},"content":"        ec.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rmj1405"},"content":"        assertEquals(\"[E][ ] party (Start: 12 Feb 2023 06:00 AM | End: 12 Feb 2023 10:00 AM)\", tm.printTask(0));","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rmj1405"},"content":"            EventCommand ec \u003d new EventCommand(tm, \"party /from 12/2/23 0600 /to 12/2/2 1000\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"rmj1405"},"content":"            ec.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"[E][ ] party (Start: 12 Feb 2023 06:00 AM | End: 12 Feb 2023 10:00 AM)\",","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rmj1405"},"content":"                    tm.printTask(0));","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rmj1405"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"rmj1405"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"Please enter date in dd/mm/yy and time in hhmm 24hr format!\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_invalidUserInputV1_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"rmj1405"},"content":"            EventCommand ec \u003d new EventCommand(tm, \"party /from 12/2/23 0600\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"rmj1405"},"content":"            ec.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"rmj1405"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"rmj1405"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"Please add a description, date and time e.g. party /from 12/2/23 1800 /to 12/2/23 2200\",","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"rmj1405"},"content":"                    e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_invalidUserInputV2_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"rmj1405"},"content":"            EventCommand ec \u003d new EventCommand(tm, \"party /to 12/2/2\");","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"rmj1405"},"content":"            ec.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"rmj1405"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"rmj1405"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"Please add a description, date and time e.g. party /from 12/2/23 1800 /to 12/2/23 2200\",","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"rmj1405"},"content":"                    e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"rmj1405"},"content":"    public void executeCommand_invalidUserInputV3_exceptionThrown() {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"rmj1405"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"rmj1405"},"content":"            EventCommand ec \u003d new EventCommand(tm, \"party\");","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"rmj1405"},"content":"            ec.executeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"rmj1405"},"content":"            fail();","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"rmj1405"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"rmj1405"},"content":"            assertEquals(\"Please add a description, date and time e.g. party /from 12/2/23 1800 /to 12/2/23 2200\",","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"rmj1405"},"content":"                    e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"rmj1405"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"rmj1405":74}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"package task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"    @Test","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"rmj1405"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"rmj1405"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"rmj1405":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rmj1405"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rmj1405"},"content":"todo homework","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rmj1405"},"content":"event party","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rmj1405"},"content":"9pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rmj1405"},"content":"12am","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rmj1405"},"content":"deadline assignment","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rmj1405"},"content":"tomorrow 12pm","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rmj1405"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rmj1405"},"content":"check 1","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rmj1405"},"content":"check 4","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rmj1405"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rmj1405"},"content":"check 3","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rmj1405"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rmj1405"},"content":"uncheck 1","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rmj1405":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"rmj1405"},"content":"REM run the program, feed command from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rmj1405":1,"-":20}}]
