[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"# A User Guide to LeDuke","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"\u003e \"I\u0027m going to use all my tools, my God-given ability,","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"\u003e and make the best life I can with it. - Lebron James\"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"One of the tools Lebron James mentioned is LeDuke, a **CLI-based task-management application** that","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"allowed him to juggle the responsibilities of being the GOAT in basketball.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"And he wants to share it with you.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"## Quick Start","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"1. Install `Java 11`.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"2. Download LeDuke from here.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"3. Put the LeDuke `jar` file into your desired folder.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"4. Run java `-jar .\\duke.jar` to start the app.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"## Features","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"- `LIST` out the tasks you have","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"- Add different types of tasks, including:","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"   - `TODO`, a task that need to be done","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"   - `DEADLINE`, a task that has a deadline date","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"   - `EVENT`, a task that has a start and end date","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"- `MARK` tasks as done/undone","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"- `DELETE` unwanted tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"- `FIND` tasks based on keywords","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"- `UPDATE` existing tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"## Interface","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"![LeDuke](docs/Ui.png)","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"rockman007372":29,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rockman007372":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"# A User Guide to LeDuke","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"\u003e \"I\u0027m going to use all my tools, my God-given ability, ","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"\u003e and make the best life I can with it. - Lebron James\" ","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"One of the tools Lebron James mentioned is LeDuke, a **CLI-based task-management application** that ","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"allowed him to juggle the responsibilities of being the GOAT in basketball.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"And he wants to share it with you.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"## Quick Start","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"1. Install `Java 11`.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"2. Download LeDuke from here.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"3. Put the LeDuke `jar` file into your desired folder.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"4. Run java `-jar .\\duke.jar` to start the app.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"## Features ","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"- `LIST` out the tasks you have","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"- Add different types of tasks, including:","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"  - `TODO`, a task that need to be done","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"  - `DEADLINE`, a task that has a deadline date","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"  - `EVENT`, a task that has a start and end date ","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"- `MARK` tasks as done/undone","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"- `DELETE` unwanted tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"- `FIND` tasks based on keywords","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"- `UPDATE` existing tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"## Interface","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"![LeDuke](Ui.png)","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"rockman007372":23,"-":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents the chatbot users interact with.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    private String name;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     * Constructor for the bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    public Duke() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        this.name \u003d \"LeDuke\";","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.ui \u003d new Ui(name);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        this.storage \u003d new Storage(FILE_DIRECTORY, FILE_NAME, ui);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * Forms a response from the user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * Terminates the bot if command is BYE.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     * @param input String representing an input.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * @return String representing Duke\u0027s response.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"            assert c !\u003d null : \"Command cannot be null\";","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            assert response !\u003d null : \"Response cannot be null\";","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"            return response;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"            return \"Error: \" + exception.getMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"     * Returns the name of the bot","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"     * @return String as the name of the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    public String getName() {","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"        return this.name;","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"     * Returns a welcome message from the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"     * @return String as a welcome message .","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"    public String createWelcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        return ui.sayHello();","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":68}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents an exception thrown by Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     * Returns the error message of the exception.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     * @return String representing error message.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rockman007372":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        AnchorPane ap \u003d new MainWindow(duke, stage);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        /* Custom stage settings */","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        stage.setResizable(true);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        stage.setTitle(duke.getName());","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"            event.consume();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"            confirmClose();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        });","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     * Creates a confirmation popup to ask whether user wants to exit.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    private void confirmClose() {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        /* Creates a confirmation alert */","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        alert.setTitle(\"Confirmation\");","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        alert.setHeaderText(\"Are you sure you want to LeExit?\");","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        /* Creates buttons */","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        ButtonType buttonYes \u003d new ButtonType(\"Yes\");","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        ButtonType buttonNo \u003d new ButtonType(\"No\");","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        alert.getButtonTypes().setAll(buttonYes, buttonNo);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        /* Checks user\u0027s answer */","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        Optional\u003cButtonType\u003e answer \u003d alert.showAndWait();","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        answer.filter(response -\u003e response \u003d\u003d buttonYes).ifPresent(event -\u003e stage.close());","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rockman007372":58}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a command from user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     * Executes the command then returns the string response from the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"     * @param tasks The TaskList instance of a list of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * @param ui Ui instance.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     * @param storage Storage instance handling loading and saving task list to local storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * @return String representing the response of the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":27}},{"path":"src/main/java/duke/command/CommandAddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":" * Represents a Deadline command.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"public class CommandAddDeadline extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private String deadlineDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * Constructor for AddDeadLineCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     * @param deadlineDescription Description of the deadline task.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     * @param by Date of the deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    public CommandAddDeadline(String deadlineDescription, LocalDate by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        super();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        this.deadlineDescription \u003d deadlineDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        Task deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        String taskString \u003d \"New todo added: \" + deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        String lengthString \u003d String.format(\"\\nYou now have %s LeTask(s) in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(taskString + lengthString);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":40}},{"path":"src/main/java/duke/command/CommandAddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":" * Represents an Event command.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"public class CommandAddEvent extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * Constructor for CommandAddEvent.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     * @param eventDescription Description of an event task.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     * @param from Date the event starts.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * @param to Date the event ends.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    public CommandAddEvent(String eventDescription, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d eventDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        Task event \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        String taskString \u003d \"New todo added: \" + event;","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"        String lengthString \u003d String.format(\"\\nYou now have %s LeTask(s) in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(taskString + lengthString);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":42}},{"path":"src/main/java/duke/command/CommandAddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents a Todo command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class CommandAddTodo extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    public CommandAddTodo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        String taskString \u003d \"New todo added: \" + todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        String lengthString \u003d String.format(\"\\nYou now have %s LeTask(s) in the list.\", tasks.getSize());","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(taskString + lengthString);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":31}},{"path":"src/main/java/duke/command/CommandDeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents a Delete command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class CommandDeleteTask extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    private int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public CommandDeleteTask(int taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.index \u003d taskIndex;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        Task deleted \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"LeTask deleted: \" + deleted);","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":25}},{"path":"src/main/java/duke/command/CommandExit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents an Exit command.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandExit extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public CommandExit() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        return ui.sayGoodbye();","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":26}},{"path":"src/main/java/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a Find command.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    private String[] keyword;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public CommandFind(String... keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        String foundTasks \u003d tasks.findTasks(this.keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"LeTasks matching your keywords:\\n\" + foundTasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rockman007372":22}},{"path":"src/main/java/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a List command.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandList extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    public CommandList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        String tasksString \u003d tasks.listTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(tasksString);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":20}},{"path":"src/main/java/duke/command/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents a Mark/Unmark command.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    private int idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     * Constructor for a Mark/Unmark command.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task to be marked/unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * @param isDone Status of the task to be marked/unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    public CommandMark(int idx, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        Task markedTask \u003d tasks.markTask(idx - 1, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        String response \u003d \"LeTask marked as \" + (isDone ? \"done: \" : \"undone: \") + markedTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(response);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":34}},{"path":"src/main/java/duke/command/CommandUpdate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskComponent;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":" * Represents an Update command.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"public class CommandUpdate extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    private int idx;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    private List\u003cPair\u003cTaskComponent, ?\u003e\u003e updateComponents;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     * Constructor for an Update command.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task to be updated.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    public CommandUpdate(int idx, List\u003cPair\u003cTaskComponent, ?\u003e\u003e updateComponents) {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        this.updateComponents \u003d updateComponents;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"        Task updatedTask \u003d tasks.update(idx - 1, updateComponents);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        return \"LeTask updated: \" + updatedTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"rockman007372":37}},{"path":"src/main/java/duke/command/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents a valid operation in the user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public enum Operation {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND, BYE, UPDATE","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":8}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":" * Represents a storage to handle saving and loading save file.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    private String fileDirectory;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    private String fileName;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     * Constructor for storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"     * @param fileDirectory Directory of the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * @param fileName      Name of the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * @param ui            Ui instance to take care of user interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    public Storage(String fileDirectory, String fileName, Ui ui) {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"     * Adds a task from the save file to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    private void loadTaskFromFile(String task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"            String[] command \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"            String taskType \u003d command[0].trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"            String description \u003d command[2].trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"            Task t;","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"            case \"T\":","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Todo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"            case \"D\":","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"                LocalDate by \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"            case \"E\":","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"                LocalDate from \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"                LocalDate to \u003d LocalDate.parse(command[4].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"                throw new DukeException(String.format(\"Invalid type of task: %s\", task));","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"            boolean isMarked \u003d command[1].trim().equals(\"1\");","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"            t.markStatus(isMarked);","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"            this.taskList.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"            ui.print(String.format(\"Task has wrong format: %s\", task));","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"     * Creates parent directories and the file if necessary. Then returns file.","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"     * @param directory Directory of the file","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"     * @param filename  Name of the file","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"     * @return The file","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"    private File getFileWithAssurance(String directory, String filename) {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"        /* Loads parent directories */","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"        /* Creates parent directories if necessary */","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"        /* Loads file */","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"        File file \u003d new File(directory + \"/\" + filename);","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"        /* Creates file if necessary */","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"                ui.print(\"No save file found. Creating new save...\");","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"                ui.print(\"Save file detected.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"            ui.print(\"Something went wrong while creating a new save.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"        return file;","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"     * Loads the save file at startup if it exists.","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"     * If directory does not exist, create a new directory.","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"     * @return List of tasks from the save file","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"        File file \u003d getFileWithAssurance(this.fileDirectory, this.fileName);","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"                this.loadTaskFromFile(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"            sc.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"            ui.printFileNotFoundError();","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"        return this.taskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"     * Saves the task list to hard drive.","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory + \"/\" + this.fileName);","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"                fw.write(t.toSavedString() + System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"            fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"            ui.printFileSaved();","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"rockman007372"},"content":"            ui.printFileSaveError();","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":153}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     * @param description Description for deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * @param by Date of deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        return \"[D]\" + super.toString() + \" (by \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        return \"D\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.by;","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"    public void setComponent(TaskComponent component, Object detail) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        switch (component) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"            this.description \u003d (String) detail;","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        case BY:","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"            this.by \u003d (LocalDate) detail;","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"DEADLINE task does not have this component: \" + component);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents an event.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * Constructor for event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * @param from Date when event starts.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * @param to Date when even ends.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"                + \" (from \" + this.from.format(formatter)","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"                + \" to \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        return \"E\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    public void setComponent(TaskComponent component, Object detail) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        switch (component) {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"            this.description \u003d (String) detail;","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        case FROM:","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"            this.from \u003d (LocalDate) detail;","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        case TO:","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"            this.to \u003d (LocalDate) detail;","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"EVENT task does not have this component: \" + component);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":" * Represents a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return this.description;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * Marks the status of this task according to the argument.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     * @param isDone Status of the task to be set.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    public void markStatus(boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * Gets the status of the given task.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    public abstract String toSavedString();","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"     * Checks if this task\u0027s description matches any keywords.","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"     * @param keywords List of keywords to check.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"     * @return True if task\u0027s description matches any keywords.","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"    public boolean isMatched(String... keywords) {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        return Arrays.stream(keywords).anyMatch(keyword -\u003e this.description.contains(keyword));","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"     * Sets the component of this task to a new component description.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"     * @param component Component of the task to be updated.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"     * @param detail The new detail of the component.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"    public abstract void setComponent(TaskComponent component, Object detail) throws DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":76}},{"path":"src/main/java/duke/task/TaskComponent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents a valid task component.","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public enum TaskComponent {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    DESCRIPTION, BY, FROM, TO;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"rockman007372":8}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    private HashMap\u003cInteger, Task\u003e indexToTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * Constructor for the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * @param list A list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        taskList \u003d list;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        indexToTask \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * Returns the arraylist of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     * @return Arraylist of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     * Adds a given task to the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"     * Returns the size of the list of task.","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"     * @return Integer representing the size of the list.","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"     * Lists all the tasks in the list in chronological order.","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"     * Also maps the task index to each task.","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"     * @return The string representation of the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If there is no task available.","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"    public String listTasks() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No LeTasks available.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"        /* Updates indexToTask hashmap and creates a string representing the task list */","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"        String stringList \u003d convertListToString(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"        return stringList;","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"    private String convertListToString(List\u003cTask\u003e list) {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"        indexToTask.clear(); // Reset hashmap","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"        IntStream indices \u003d IntStream.range(0, list.size());","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"        String stringList \u003d indices.peek(index -\u003e indexToTask.put(index, list.get(index)))","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"                .mapToObj(index -\u003e (index + 1) + \". \" + list.get(index))","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"                .collect(Collectors.joining(System.lineSeparator()));","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"        String stringListWithoutLastSeparator \u003d stringList.substring(0, stringList.length());","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"        return stringListWithoutLastSeparator;","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"     * Finds all the tasks matching the keywords and updates hashmap.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"     * @param keywords Keywords to find the tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"     * @return String representation of all the matching tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"    public String findTasks(String... keywords) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e filteredTaskList \u003d taskList.stream()","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"                .filter(task -\u003e task.isMatched(keywords))","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"        if (filteredTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No matching LeTask found.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"        return convertListToString(filteredTaskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"    private void checkIndexOutOfBounds(int idx) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"        boolean isOutOfBound \u003d !indexToTask.containsKey(idx);","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"        if (isOutOfBound) {","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"LeTask index out of bounds.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"     * Marks the task with the given index as either done or undone, then return that task.","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"     * Task are 0-indexed.","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"     * @param isDone Status of the task to be marked.","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"     * @return The task to be marked/unmarked.","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"    public Task markTask(int idx, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"        checkIndexOutOfBounds(idx); // Does this violate SLAP?","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"        Task taskToMark \u003d indexToTask.get(idx);","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"        taskToMark.markStatus(isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"        return taskToMark;","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"     * Deletes the task with the same index.","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"     * @return Task deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"    public Task deleteTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"        checkIndexOutOfBounds(idx); // Does this violate SLAP?","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d indexToTask.get(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"        taskList.remove(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"        indexToTask.remove(idx);","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"        return t;","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"     * Returns the task at the given index in the actual ArrayList task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"     * @return The task at that index.","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"rockman007372"},"content":"     * Compares an object to this task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"rockman007372"},"content":"     * @param o Object to be compared with.","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"rockman007372"},"content":"     * @return True if the given object is equal to this task list in value.","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"rockman007372"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"rockman007372"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"rockman007372"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"rockman007372"},"content":"        if (!(o instanceof TaskList)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"rockman007372"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"rockman007372"},"content":"        // Typecast o to TaskList since we know it is of type TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"rockman007372"},"content":"        TaskList task \u003d (TaskList) o;","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"rockman007372"},"content":"        return task.taskList.equals(this.taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"rockman007372"},"content":"     * Updates the component of the given task and returns the updated task.","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"rockman007372"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"rockman007372"},"content":"     * @param updateComponents List of pairs of components and the detail to update.","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"rockman007372"},"content":"     * @return The task updated.","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"rockman007372"},"content":"    public Task update(int index, List\u003cPair\u003cTaskComponent, ?\u003e\u003e updateComponents) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"rockman007372"},"content":"        checkIndexOutOfBounds(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"rockman007372"},"content":"        Task task \u003d indexToTask.get(index);","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"rockman007372"},"content":"        for (Pair\u003cTaskComponent, ?\u003e componentPair : updateComponents) {","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"rockman007372"},"content":"            TaskComponent component \u003d componentPair.getKey();","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"rockman007372"},"content":"            Object detail \u003d componentPair.getValue();","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"rockman007372"},"content":"            task.setComponent(component, detail);","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"rockman007372"},"content":"        return task;","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":191}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"     * Constructor for Todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     * @param description Description for Todo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        return \"T\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    public void setComponent(TaskComponent component, Object detail) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        switch (component) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        case DESCRIPTION:","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"            this.description \u003d (String) detail;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"TODO task does not have this component: \" + component);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":48}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    private Circle circle;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        circle.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"    private void flip(boolean isError) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        /* Change the colour of Duke\u0027s dialog based on whether it is error message */","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        if (isError) {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"            dialog.getStyleClass().add(\"label-duke-error\");","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"            dialog.getStyleClass().add(\"label-duke\");","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"    public static DialogBox getDukeDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"        db.flip(isError);","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rockman007372":73}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    private final Stage stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaSmith.jpg\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaLebron.png\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    private Image dukeImageError \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaLebronMad.png\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     * Constructor for MainWindow class.","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"     * @param duke Duke bot instance.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     * @param stage Javafx Stage instance.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    public MainWindow(Duke duke, Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        showWelcomeMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        String welcomeMessage \u003d duke.createWelcomeMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage, false)","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"        boolean isError \u003d (response.startsWith(\"Error: \"));","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"        Image dukeImg \u003d isError ? dukeImageError : dukeImage;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"                DialogBox.getDukeDialog(response, dukeImg, isError)","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"            fireCloseEvent();","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"    private void fireCloseEvent() {","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"        stage.fireEvent(new WindowEvent(","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"                stage,","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"                WindowEvent.WINDOW_CLOSE_REQUEST","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"        ));","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":101}},{"path":"src/main/java/duke/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandAddDeadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandAddEvent;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandAddTodo;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandDeleteTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandExit;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandFind;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandList;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandMark;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandUpdate;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"import duke.command.Operation;","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskComponent;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":" * Represents a parser to process user inputs.","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     * Parses the user input into a meaningful command.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * @return Command instance derived from the user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If any of the following is violated:","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     *         If no command description is given.","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     *         If command given is not valid.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     *         If the date format is not valid.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     *         If format of task index is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"            /* Split string into 2 parts, 1st part is the operation, 2nd part is the description */","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"            Operation op \u003d Operation.valueOf(command[0].trim().toUpperCase()); // Throws exception if invalid operation.","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"            if (op.equals(Operation.BYE)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"                return new CommandExit();","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"            if (op.equals(Operation.LIST)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"                return new CommandList();","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"            boolean isNoDescription \u003d command.length \u003c 2 || command[1].trim().isEmpty();","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"            if (isNoDescription) {","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"                throw new DukeException(\"No command description given.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"            String description \u003d command[1].trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"            switch (op) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"            case MARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"                return parseMarkTask(op, description);","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"            case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"            case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"                return parseAddTask(op, description);","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"            case DELETE:","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"                return parseDeleteTask(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"            case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"                return parseFindTask(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"            case UPDATE:","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"                return parseUpdateTask(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"                assert false : \"cannot reach here as Operation::valueOf already throws IllegalArgumentException\";","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"                return null;","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Task must be referenced by its index.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Invalid command.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Wrong date format given.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to mark/unmark a task.","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"     * @param op Operation (MARK/UNMARK) input by user.","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"     * @param index The string representing the index of the task to be marked.","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"     * @return CommandMark instance.","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"     * @throws NumberFormatException If format of task index is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"    public static Command parseMarkTask(Operation op, String index) throws NumberFormatException {","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"        boolean isDone \u003d op.equals(Operation.MARK);","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(index); // Throws NumberFormatException if index is not a valid integer.","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"        return new CommandMark(taskIndex, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to add a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"     * @param op Operation (TODO/ DEADLINE/ EVENT) input by user.","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"     * @param description String representing the task description.","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"     * @return A Command instance representing the type of task to add.","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"    public static Command parseAddTask(Operation op, String description) throws DateTimeParseException {","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"        switch (op) {","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"        case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"            return new CommandAddTodo(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"            String[] deadlineString \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"            String deadlineDescription \u003d deadlineString[0].trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"            LocalDate by \u003d LocalDate.parse(deadlineString[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"            return new CommandAddDeadline(deadlineDescription, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"        case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"            String[] eventString \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"            String eventDescription \u003d eventString[0].trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"            /* Parse the string to get to and from dates of the event */","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"            String[] fromAndTo \u003d eventString[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"            LocalDate from \u003d LocalDate.parse(fromAndTo[0].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"            LocalDate to \u003d LocalDate.parse(fromAndTo[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"            return new CommandAddEvent(eventDescription, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"            assert false : \"Cannot reach here\";","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"            return null;","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to delete a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"     * @param index String representing index of the task to be deleted.","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"     * @return A Command instance to delete a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"     * @throws NumberFormatException If the date format is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"    public static Command parseDeleteTask(String index) throws NumberFormatException {","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(index); // Throws NumberFormatException if index is not a valid integer.","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"        return new CommandDeleteTask(taskIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to find tasks matching a list of keywords.","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"rockman007372"},"content":"     * @param keywords String representing the keywords to search the tasks for.","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"rockman007372"},"content":"     * @return A Command instance to find tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":157,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"rockman007372"},"content":"    public static Command parseFindTask(String keywords) {","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"rockman007372"},"content":"        return new CommandFind(keywords.split(\" \"));","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"rockman007372"},"content":"    // exception to handle:","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"rockman007372"},"content":"    // 1. wrong index format - CHECK","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"rockman007372"},"content":"    // 2. index out of bounds - CHECK","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"rockman007372"},"content":"    // 3. invalid component - CHECK","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"rockman007372"},"content":"    // 4. task has no such component - CHECK","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"rockman007372"},"content":"    // 5. input does not have enough components - CHECK?","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to update a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"rockman007372"},"content":"     * @param updateDescription String representing the update information.","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"rockman007372"},"content":"     * @return An instance of CommandUpdate.","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"rockman007372"},"content":"     * @throws NumberFormatException If the format of index is invalid.","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"rockman007372"},"content":"     * @throws DateTimeParseException If the format of the date is invalid.","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If any of the following is violated:","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"rockman007372"},"content":"     *         If the format of task component is invalid.","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"rockman007372"},"content":"     *         If the update component is missing.","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"rockman007372"},"content":"    public static Command parseUpdateTask(String updateDescription)","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"rockman007372"},"content":"            throws NumberFormatException, DateTimeParseException, DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"rockman007372"},"content":"        /* Obtains index of task and what to update */","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"rockman007372"},"content":"        int limiter \u003d 2;","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"rockman007372"},"content":"        String[] indexAndUpdate \u003d updateDescription.split(\" \", limiter);","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"rockman007372"},"content":"        if (indexAndUpdate.length \u003c limiter) {","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Update information missing.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"rockman007372"},"content":"        int index \u003d Integer.parseInt(indexAndUpdate[0].trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"rockman007372"},"content":"        String update \u003d indexAndUpdate[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"rockman007372"},"content":"        /* Splits the update information based on the update components */","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"rockman007372"},"content":"        String regex \u003d \"((?\u003d/description|/by|/from|/to)|(?\u003c\u003d/description|/by|/from|/to))\";","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"rockman007372"},"content":"        String[] updateComponents \u003d update.split(regex);","lastModifiedDate":"2023-02-12"},{"lineNumber":197,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":198,"author":{"gitId":"rockman007372"},"content":"        /* Creates a list of pairs of task component and the updated information */","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"rockman007372"},"content":"        List\u003cPair\u003cTaskComponent, ?\u003e\u003e updateComponentsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":200,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c updateComponents.length - 1; i \u003d i + 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":201,"author":{"gitId":"rockman007372"},"content":"            String component \u003d updateComponents[i].trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"rockman007372"},"content":"            String updateContent \u003d updateComponents[i + 1].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"rockman007372"},"content":"            switch (component) {","lastModifiedDate":"2023-02-12"},{"lineNumber":205,"author":{"gitId":"rockman007372"},"content":"            case \"/description\":","lastModifiedDate":"2023-02-12"},{"lineNumber":206,"author":{"gitId":"rockman007372"},"content":"                updateComponentsList.add(new Pair\u003c\u003e(TaskComponent.DESCRIPTION, updateContent));","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"rockman007372"},"content":"            case \"/by\":","lastModifiedDate":"2023-02-12"},{"lineNumber":209,"author":{"gitId":"rockman007372"},"content":"                LocalDate newBy \u003d LocalDate.parse(updateContent);","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"rockman007372"},"content":"                updateComponentsList.add(new Pair\u003c\u003e(TaskComponent.BY, newBy));","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"rockman007372"},"content":"            case \"/from\":","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"rockman007372"},"content":"                LocalDate newFrom \u003d LocalDate.parse(updateContent);","lastModifiedDate":"2023-02-16"},{"lineNumber":214,"author":{"gitId":"rockman007372"},"content":"                updateComponentsList.add(new Pair\u003c\u003e(TaskComponent.FROM, newFrom));","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"rockman007372"},"content":"            case \"/to\":","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"rockman007372"},"content":"                LocalDate newTo \u003d LocalDate.parse(updateContent);","lastModifiedDate":"2023-02-16"},{"lineNumber":218,"author":{"gitId":"rockman007372"},"content":"                updateComponentsList.add(new Pair\u003c\u003e(TaskComponent.TO, newTo));","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"rockman007372"},"content":"            default:","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"rockman007372"},"content":"                throw new DukeException(\"Invalid task component: \" + component);","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"rockman007372"},"content":"        if (updateComponentsList.isEmpty()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":226,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Invalid update command format.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":229,"author":{"gitId":"rockman007372"},"content":"        return new CommandUpdate(index, updateComponentsList);","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":231}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents the UI of the bot.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    private String botName;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"     * Constructor for a UI that handle forming bot responses.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     * @param name Name of chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.botName \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * Creates a response message.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * @param s Message.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     * @return String representing Duke\u0027s response.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String formResponse(String s) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return s;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * Returns a welcome message.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     * @return String representing welcome message.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public String sayHello() {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        return this.formResponse(\"LEBRON JAMESSS #kidfromAkron #kingme\");","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     * Returns a terminating message.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * @return String representing goodbye message.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    public String sayGoodbye() {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        return this.formResponse(\"Not staying for Taco Tuesday? :\u003c\");","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"     * Prints the string on the output screen.","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"     * @param s String to print.","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    public void print(String s) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        System.out.println(\"\u003e \" + s);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    public void printFileSaved() {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        this.print(\"File saved.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"    public void printFileSaveError() {","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        this.print(\"Something went wrong while saving file.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"    public void printFileNotFoundError() {","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        this.print(\"File not found.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" contentDisplay\u003d\"TOP\" stylesheets\u003d\"@style.css\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        \u003cCircle fx:id\u003d\"circle\" radius\u003d\"38.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white;\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #EEEEEE;\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"40.0\" minHeight\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"76.0\" stylesheets\u003d\"@style.css\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"         \u003cgraphic\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"            \u003cImageView fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateX\u003d\"-4.0\" translateY\u003d\"6.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"               \u003cimage\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"                  \u003cImage url\u003d\"@../images/send.png\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"               \u003c/image\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"         \u003c/graphic\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #393E46;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"315.0\" style\u003d\"-fx-background-color: #18122B;\" stylesheets\u003d\"@style.css\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":28}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    public void getResponse_invalidCommand_exceptionMessageGiven() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        String exceptionString \u003d duke.getResponse(\"abcd\");","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        assertEquals(\"Error: Invalid command.\", exceptionString);","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    public void getResponse_missingDescription_exceptionMessageGiven() {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        String exceptionString \u003d duke.getResponse(\"update\");","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        assertEquals(\"Error: No command description given.\", exceptionString);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    public void getResponse_wrongIndex_exceptionMessageGiven() {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        String exceptionString \u003d duke.getResponse(\"delete 1\");","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        assertEquals(\"Error: LeTask index out of bounds.\", exceptionString);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rockman007372":29}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":" * Tester for TaskList class.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public void getListTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        TaskList tasklist \u003d new TaskList(testList);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e returnedList \u003d tasklist.getList();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        assertEquals(testList, returnedList);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        Task taskToAdd \u003d new Todo(\"To add\");","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        // Add task to the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        TaskList testList \u003d new TaskList(listOfTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        testList.addTask(taskToAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        assertEquals(taskToAdd, listOfTasks.get(0));","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"        Task testTask \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003cTask\u003e(Arrays.asList(testTask)));","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        assertEquals(testTask, list.getTask(0));","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    public void deleteTaskTest() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        Task taskToDelete \u003d new Todo(\"test\");","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        TaskList listOfTasks \u003d new TaskList(new ArrayList\u003cTask\u003e(Arrays.asList(taskToDelete)));","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        listOfTasks.listTasks(); // To update the indexToTask hashmap","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        Task taskDeleted \u003d listOfTasks.deleteTask(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        TaskList listAfterDelete \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        assertEquals(listAfterDelete, listOfTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        assertEquals(taskToDelete, taskDeleted);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rockman007372":57}}]
