[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rockman007372":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rockman007372":21,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"T|0|another bug","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"T|1|new bug","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"T|0|another bug??? wth","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents the chatbot users interact with.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    private String name;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     * Constructor for the bot.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    public Duke() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        this.name \u003d \"LeDuke\";","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.ui \u003d new Ui(name);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        this.storage \u003d new Storage(FILE_DIRECTORY, FILE_NAME, ui);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * Forms a response from the user input.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * Terminates the bot if command is BYE.","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     * @param input String representing an input.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * @return String representing Duke\u0027s response.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"            return response;","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"     * Returns the name of the bot","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"     * @return String as the name of the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    public String getName() {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        return this.name;","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"     * Returns a welcome message from the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"     * @return String as a welcome message .","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"    public String createWelcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"        return ui.sayHello();","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":64}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents an exception thrown by Duke.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     * Returns the error message of the exception.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     * @return String representing error message.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rockman007372":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        AnchorPane ap \u003d new MainWindow(duke, stage);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        /* Custom stage settings */","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        stage.setTitle(duke.getName());","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"            event.consume();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"            closeProgramConfirm(stage);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        });","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        stage.show();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     * Creates a confirmation popup to ask whether user wants to exit.","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"     * @param stage The stage operating.","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    private void closeProgramConfirm(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.CONFIRMATION);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        alert.setTitle(\"Confirmation\");","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        alert.setHeaderText(\"Are you sure you want to LeExit?\");","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        ButtonType buttonYes \u003d new ButtonType(\"Yes\");","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        ButtonType buttonNo \u003d new ButtonType(\"No\");","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        alert.getButtonTypes().setAll(buttonYes, buttonNo);","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        Optional\u003cButtonType\u003e answer \u003d alert.showAndWait();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        if (answer.get() \u003d\u003d buttonYes) {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"            stage.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rockman007372":59}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a command from user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     * Executes the command then returns the string response from the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"     * @param tasks The TaskList instance of a list of tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * @param ui Ui instance.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     * @param storage Storage instance handling loading and saving task list to local storage.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * @return String representing the response of the bot.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":27}},{"path":"src/main/java/duke/command/CommandAddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":" * Represents a Deadline command.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"public class CommandAddDeadline extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private String deadlineDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * Constructor for AddDeadLineCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     * @param deadlineDescription Description of the deadline task.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     * @param by Date of the deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    public CommandAddDeadline(String deadlineDescription, LocalDate by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        super();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"        this.deadlineDescription \u003d deadlineDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        Task deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"New deadline added: \" + deadline","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"                + String.format(\"\\nThere are currently %d tasks.\", tasks.getSize()));","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":38}},{"path":"src/main/java/duke/command/CommandAddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":" * Represents an Event command.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"public class CommandAddEvent extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * Constructor for CommandAddEvent.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     * @param eventDescription Description of an event task.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"     * @param from Date the event starts.","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * @param to Date the event ends.","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    public CommandAddEvent(String eventDescription, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d eventDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        Task event \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"New event added: \" + event","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"                + String.format(\"\\nThere are currently %d tasks.\", tasks.getSize()));","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":40}},{"path":"src/main/java/duke/command/CommandAddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents a Todo command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class CommandAddTodo extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    public CommandAddTodo(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        Task todo \u003d new Todo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"New todo added: \" + todo","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"                + String.format(\"\\nThere are currently %d tasks.\", tasks.getSize()));","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":29}},{"path":"src/main/java/duke/command/CommandDeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" * Represents a Delete command.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"public class CommandDeleteTask extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    private int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public CommandDeleteTask(int taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.index \u003d taskIndex;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        Task deleted \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"LeTask deleted: \" + deleted);","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":25}},{"path":"src/main/java/duke/command/CommandExit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents an Exit command.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandExit extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public CommandExit() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        return ui.sayGoodbye();","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":26}},{"path":"src/main/java/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a Find command.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    private String[] keyword;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public CommandFind(String... keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        String foundTasks \u003d tasks.findTasks(this.keyword);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"LeTasks matching your keywords:\" + System.lineSeparator() + foundTasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rockman007372":22}},{"path":"src/main/java/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a List command.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandList extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    public CommandList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        String tasksString \u003d tasks.listTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(tasksString);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":20}},{"path":"src/main/java/duke/command/CommandMark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a Mark/Unmark command.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class CommandMark extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    private int idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * Constructor for a Mark/Unmark command.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task to be marked/unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * @param isDone Status of the task to be marked/unmarked.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    public CommandMark(int idx, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        tasks.markTask(idx - 1, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        return ui.formResponse(\"LeTask marked as \" + (isDone ? \"done: \" : \"undone: \")","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"                + tasks.getTask(idx - 1));","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":33}},{"path":"src/main/java/duke/command/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents a valid operation in the user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public enum Operation {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, FIND","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":8}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":" * Represents a storage to handle saving and loading save file.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    private String fileDirectory;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    private String fileName;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     * Constructor for storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     * @param fileDirectory Directory of the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"     * @param fileName      Name of the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * @param ui            Ui instance to take care of user interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    public Storage(String fileDirectory, String fileName, Ui ui) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"     * Adds a task from the save file to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    private void loadTaskFromFile(String task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"        /* Parser */","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        String taskType \u003d command[0].trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        String description \u003d command[2].trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d new Todo(\"\"); // Placeholder task","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        case \"T\":","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"            t \u003d new Todo(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        case \"D\":","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"            LocalDate by \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"            t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        case \"E\":","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"            LocalDate from \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"            LocalDate to \u003d LocalDate.parse(command[4].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"            t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"        boolean isMarked \u003d command[1].trim().equals(\"1\");","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"        t.markStatus(isMarked);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"        this.taskList.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"     * Creates parent directories and the file if necessary. Then returns file.","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"     * @param directory Directory of the file","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"     * @param filename  Name of the file","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"     * @return The file","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"    private File fileWithAssurance(String directory, String filename) {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"        // Load parent directories","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"        // Create parent directories if necessary","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        // Load file","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"        File file \u003d new File(directory + \"/\" + filename);","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"        // Create file if necessary","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"                ui.print(\"No save file found. Creating new save...\");","lastModifiedDate":"2023-02-04"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"                ui.print(\"Save file loaded\");","lastModifiedDate":"2023-02-04"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"            ui.print(\"Something went wrong while creating a new save\");","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"        return file;","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"     * Loads the save file at startup if it exists.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"     * If directory does not exist, create a new directory.","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"     * @return List of tasks from the save file","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"        ui.printLoadingFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"        File file \u003d fileWithAssurance(this.fileDirectory, this.fileName);","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"                this.loadTaskFromFile(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"            sc.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"            ui.print(\"File not found\");","lastModifiedDate":"2023-02-04"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"        } finally {","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"            return this.taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"     * Saves the task list to hard drive.","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory + \"/\" + this.fileName);","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"                fw.write(t.toSavedString() + System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"            fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"            ui.printSavingFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"            ui.print(\"Something went wrong while saving file\");","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":149}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":" * Represents a deadline.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"     * @param description Description for deadline task.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * @param by Date of deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        return \"[D]\" + super.toString() + \" (by \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"        return \"D\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.by;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":" * Represents an event.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"     * Constructor for event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     * @param from Date when event starts.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * @param to Date when even ends.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"                + \" (from \" + this.from.format(formatter)","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"                + \" to \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        return \"E\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents a task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"     * Constructor for a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     * @param description Task description.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        return this.description;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * Marks the status of this task according to the argument.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"     * @param isDone Status of the task to be set.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    public void markStatus(boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * Gets the status of the given task.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * @return Status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    public abstract String toSavedString();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":54}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    private HashMap\u003cInteger, Task\u003e indexToTask;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"     * Constructor for the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"     * @param list A list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        taskList \u003d list;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        indexToTask \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     * Returns the arraylist of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"     * @return Arraylist of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     * Add a given task to the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"     * Lists out all the tasks in the list in chronological order.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"     * Map the task index to each task.","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"     * @return The string representation of the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If there is no task available.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"    public String listTasks() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        indexToTask.clear(); // Reset hashmap","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No tasks available.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        StringBuilder stringList \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"            stringList.append((i + 1) + \". \" + task);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"            indexToTask.put(i, task);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"            if (i \u003c taskList.size() - 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"                stringList.append(System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"        return stringList.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"    private void checkIndex(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"        if (idx \u003c 0 || idx \u003e\u003d indexToTask.size()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Task index out of bounds.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"     * Mark the task with the given index as either done or undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"     * Task are 0-indexed.","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"     * @param isDone Status of the task to be marked.","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"    public void markTask(int idx, boolean isDone) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"        checkIndex(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d indexToTask.get(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        t.markStatus(isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"     * Deletes the task with the same index.","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"     * @return Task deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"    public Task deleteTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"        checkIndex(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d indexToTask.get(idx);","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"        taskList.remove(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"        indexToTask.remove(idx);","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"        return t;","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"     * Returns the task at the given index in the ArrayList task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"     * @return The task at that index.","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"     * Compares an object to this task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"     * @param o Object to be compared with.","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"     * @return True if the given object is equal to this task list in value.","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"        if (!(o instanceof TaskList)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"            return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"        // Typecast o to TaskList since we know it is of type TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"        TaskList task \u003d (TaskList) o;","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"        return task.taskList.equals(this.taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"    * Finds all the tasks matching the keywords.","lastModifiedDate":"2023-02-04"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"    *","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"    * @param keywords Keywords to find the tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"    * @return String representation of all the matching tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"    */","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"    public String findTasks(String... keywords) throws DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"        // Reset Hashmap","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"        indexToTask.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"        StringBuilder foundTasks \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"rockman007372"},"content":"        // Dynamically generated index","lastModifiedDate":"2023-01-31"},{"lineNumber":152,"author":{"gitId":"rockman007372"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"rockman007372"},"content":"        for (Task t : this.taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"rockman007372"},"content":"            String description \u003d t.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"rockman007372"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"rockman007372"},"content":"                if (description.contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"rockman007372"},"content":"                    foundTasks.append((idx + 1) + \". \" + t + System.lineSeparator());","lastModifiedDate":"2023-01-31"},{"lineNumber":159,"author":{"gitId":"rockman007372"},"content":"                    indexToTask.put(idx, t);","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"rockman007372"},"content":"                    idx++;","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"rockman007372"},"content":"                    break; // Break out of for loop","lastModifiedDate":"2023-02-04"},{"lineNumber":162,"author":{"gitId":"rockman007372"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"rockman007372"},"content":"        if (foundTasks.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No matching task found.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"rockman007372"},"content":"        foundTasks.deleteCharAt(foundTasks.length() - 1); // Deletes the last lineSeparator.","lastModifiedDate":"2023-02-03"},{"lineNumber":172,"author":{"gitId":"rockman007372"},"content":"        return foundTasks.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":174}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"     * Constructor for Todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"     * @param description Description for Todo task.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"     * Returns the string representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * @return Representation of the task in the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        return \"T\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    private Circle circle;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        circle.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"rockman007372":63}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    private final Stage stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/LeDuke_avatar.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * Constructor for MainWindow class.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"     * @param duke Duke bot instance.","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"     * @param stage Javafx Stage instance.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    public MainWindow(Duke duke, Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        this.showWelcomeMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"    @FXML","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"            fireCloseEvent();","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"    private void fireCloseEvent() {","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"        stage.fireEvent(new WindowEvent(","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"                stage,","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"                WindowEvent.WINDOW_CLOSE_REQUEST","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"        ));","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"        String welcomeMessage \u003d duke.createWelcomeMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":94}},{"path":"src/main/java/duke/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandAddDeadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandAddEvent;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandAddTodo;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandDeleteTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandExit;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandFind;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandList;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import duke.command.CommandMark;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"import duke.command.Operation;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":" * Represents a parser to process user inputs.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * Parses the user input into a meaningful command.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"     * @param input User input.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"     * @return Command instance derived from the user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If any of the following is violated:","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     *         If no command description is given.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     *         If command given is not valid.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"     *         If the date format is not valid.","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"     *         If format of task index is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"                return new CommandExit();","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"                return new CommandList();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            // Split string into 2 parts, 1st part is the operation, 2nd part is the description","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"            String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"            Operation op \u003d Operation.valueOf(command[0].toUpperCase()); // Throws exception if not a valid operation.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"            // The operation is valid but no description was given.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"                throw new DukeException(\"No command description given.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"            String description \u003d command[1].trim();","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"            switch (op) {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"            case MARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"                return markTaskParser(op, description);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"            case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"            case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"                return addTaskParser(op, description);","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"            case DELETE:","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"                return deleteTaskParser(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"            case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"                return findTaskParser(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"            default:","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"                return null; // cannot reach here, as Operation.valueOf throws IllegalArgumentException","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Task must be referenced by its index.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Invalid command.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Wrong date format given.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"     * Parses the mark command input.","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"     * @param op Operation (MARK/UNMARK) input by user.","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"     * @param index The string representing the index of the task to be marked.","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"     * @return CommandMark instance.","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"     * @throws NumberFormatException If format of task index is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"    public static Command markTaskParser(Operation op, String index) throws NumberFormatException {","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"        boolean isDone \u003d op.equals(Operation.MARK);","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(index); // Throws exception if index is not a valid integer.","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"        return new CommandMark(taskIndex, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to add a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"     * @param op Operation (TODO/ DEADLINE/ EVENT) input by user.","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"     * @param description String representing the task description.","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"     * @return A Command instance representing the type of task to add.","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"     * @throws DateTimeParseException If the date format is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"    public static Command addTaskParser(Operation op, String description) throws DateTimeParseException {","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"        switch (op) {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"        case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"            return new CommandAddTodo(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"            String[] deadlineString \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"            String deadlineDescription \u003d deadlineString[0].trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"            LocalDate by \u003d LocalDate.parse(deadlineString[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"            return new CommandAddDeadline(deadlineDescription, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"        case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"            String[] eventString \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"            String eventDescription \u003d eventString[0].trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"            // Parse the string to get to and from dates of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"            String[] fromAndTo \u003d eventString[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"            LocalDate from \u003d LocalDate.parse(fromAndTo[0].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"            LocalDate to \u003d LocalDate.parse(fromAndTo[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"            return new CommandAddEvent(eventDescription, from, to);","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"            return null;","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to delete a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"     * @param index String representing index of the task to be deleted.","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"     * @return A Command instance to delete a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"     * @throws NumberFormatException If the date format is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"    public static Command deleteTaskParser(String index) throws NumberFormatException {","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(index); // Throws exception if index is not a valid integer.","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"        return new CommandDeleteTask(taskIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"     * Parses the command to find tasks matching a list of keywords.","lastModifiedDate":"2023-02-04"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"     * @param keywords String representing the keywords to search the tasks for.","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"     * @return A Command instance to find tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"    public static Command findTaskParser(String keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"        return new CommandFind(keywords.split(\" \"));","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":148}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":" * Represents the UI of the bot.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    private String botName;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"     * Constructor for a UI that handle forming bot responses.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"     * @param name Name of chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public Ui(String name) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.botName \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"     * Creates a response message.","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"     * @param s Message.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"     * @return String representing Duke\u0027s response.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String formResponse(String s) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return s;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"     * Returns a welcome message.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"     * @return String representing welcome message.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    public String sayHello() {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        return this.formResponse(\"LEBRON JAMESSSS #kidfromAkron #kingme\");","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"     * Returns a terminating message.","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"     * @return String representing goodbye message.","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    public String sayGoodbye() {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        return this.formResponse(\"Not staying for Taco Tuesday? :\u003c\");","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"     * Print the string on the output screen.","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"     * @param s String to print.","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    public void print(String s) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        System.out.println(\"\u003e \" + s);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    public void printLoadingFile() {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        this.print(\"Loading file...\");","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"    public void printSavingFile() {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        this.print(\"Saving file...\");","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" prefHeight\u003d\"78.0\" prefWidth\u003d\"283.0\" style\u003d\"-fx-background-color: white;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        \u003cCircle fx:id\u003d\"circle\" radius\u003d\"38.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white;\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"556.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"326.0\" AnchorPane.bottomAnchor\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"340.0\" layoutY\u003d\"560.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"57.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"            \u003cFont name\u003d\"Calibri Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: e0cfb1;\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"rockman007372":24}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rockman007372":13}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":" * Tester for TaskList class.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public void getListTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        TaskList tasklist \u003d new TaskList(testList);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e returnedList \u003d tasklist.getList();","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        assertEquals(testList, returnedList);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        Task taskToAdd \u003d new Todo(\"To add\");","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        List\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        // Add task to the task list","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        TaskList testList \u003d new TaskList(listOfTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        testList.addTask(taskToAdd);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        assertEquals(taskToAdd, listOfTasks.get(0));","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    public void getTaskTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"        Task testTask \u003d new Todo(\"test\");","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        TaskList list \u003d new TaskList(new ArrayList\u003cTask\u003e(Arrays.asList(testTask)));","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        assertEquals(testTask, list.getTask(0));","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"    public void deleteTaskTest() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        Task taskToDelete \u003d new Todo(\"test\");","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        TaskList listOfTasks \u003d new TaskList(new ArrayList\u003cTask\u003e(Arrays.asList(taskToDelete)));","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        listOfTasks.listTasks(); // To update the indexToTask hashmap","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        Task taskDeleted \u003d listOfTasks.deleteTask(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        TaskList listAfterDelete \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        assertEquals(listAfterDelete, listOfTasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        assertEquals(taskToDelete, taskDeleted);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"rockman007372":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"todo eat","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"todo sleep","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"todo repeat","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"mark 100","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"delete 2","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"event repeat /from today /to tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"bye","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rockman007372":1,"-":20}}]
