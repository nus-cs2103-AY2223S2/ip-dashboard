[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"T|1|eat","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"T|0|me","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"T|1|please","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"D|0|daddy |2023-01-28","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"E|0|school |2023-01-29|2023-01-29","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":5}},{"path":"src/main/java/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    private String deadlineDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    private LocalDate by;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    public AddDeadlineCommand(String deadlineDescription, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        super();","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        this.deadlineDescription \u003d deadlineDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        Task deadline \u003d tasks.addDeadline(deadlineDescription, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(\"New deadline task added: \" + deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":18}},{"path":"src/main/java/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    private LocalDate from;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    private LocalDate to;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public AddEventCommand(String eventDescription, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d eventDescription;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        Task event \u003d tasks.addEvent(description, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(\"New event task added: \" + event);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":19}},{"path":"src/main/java/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        Task todo \u003d tasks.addToDo(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(\"New todo task added: \" + todo);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":17}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"        return false;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":8}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        return \"[D]\" + super.toString() + \"(by \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        return \"D\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.by;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":25}},{"path":"src/main/java/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    private int index;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"        this.index \u003d taskIndex;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        Task deleted \u003d tasks.deleteTask(index - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(\"Task deleted: \" + deleted);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        this.ui \u003d new Ui(\"Tyrone\");","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.storage \u003d new Storage(FILE_DIRECTORY, FILE_NAME, ui);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    public void run() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"                ui.showError(\"Task must be referenced by its index.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"                ui.showError(\"Invalid command.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"                ui.showError(\"Wrong date format given\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        ui.terminate();","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"        Duke bot \u003d new Duke(FILE_PATH);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"        bot.run();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":44,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"                + \"(from \" + this.from.format(formatter)","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"                + \" to \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return \"E\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":27}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        return true;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":16}},{"path":"src/main/java/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        String tasksString \u003d tasks.listTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(tasksString);","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":10}},{"path":"src/main/java/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    private int idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    public MarkTaskCommand(int idx) {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        tasks.markTask(idx - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(\"Task masked as done: \" + tasks.getTask(idx - 1));","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":14}},{"path":"src/main/java/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public enum Operation {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":3}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    public Parser() {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    public static Command parse(String input) throws DukeException, IllegalArgumentException,","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"            DateTimeParseException, NumberFormatException {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        // Split strings into 2, first part is the operation, 2nd part is the description","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        Operation op \u003d Operation.valueOf(command[0].toUpperCase());","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        if (!op.equals(Operation.LIST) \u0026\u0026 command.length \u003c 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No command description given.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        switch (op) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"            case MARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"                return markTaskParser(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"                return unmarkTaskParser(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"            case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"            case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"                return addTaskParser(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"            case LIST:","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"                return new ListTasksCommand();","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"            case DELETE:","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"                return deleteTaskParser(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"        return null; // cannot reach here, as Operation.valueOf throws IllegalArgumentException","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"    public static Command markTaskParser(String input) throws NumberFormatException {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]); // Throws exception if not valid string as id","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"        return new MarkTaskCommand(taskIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"    public static Command unmarkTaskParser(String input) throws NumberFormatException {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]); // Throws exception if not valid string as id","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        return new UnmarkTaskCommand(taskIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"    public static Command addTaskParser(String input) throws DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        Operation op \u003d Operation.valueOf(command[0].toUpperCase());","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"        String description \u003d command[1];","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        switch (op) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"            case TODO:","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"                return new AddTodoCommand(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"                String[] deadlineString \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"                String deadlineDescription \u003d deadlineString[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"                LocalDate by \u003d LocalDate.parse(deadlineString[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"                return new AddDeadlineCommand(deadlineDescription, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"            case EVENT:","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"                String[] eventString \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"                String eventDescription \u003d eventString[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"                // Parse the string to get to and from dates of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"                String[] fromAndTo \u003d eventString[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"                LocalDate from \u003d LocalDate.parse(fromAndTo[0].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"                LocalDate to \u003d LocalDate.parse(fromAndTo[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"                return new AddEventCommand(eventDescription, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"        return null;","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"    public static Command deleteTaskParser(String input) throws NumberFormatException {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"        int taskIndex \u003d Integer.parseInt(command[1]); // Throws exception if not valid string as id","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"        return new DeleteTaskCommand(taskIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":92}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    private String fileDirectory;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    private String fileName;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    public Storage(String fileDirectory, String fileName, Ui ui) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"     * Adds a task from saved file to the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    private void loadTaskFromFile(String task) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        // Parser","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        String taskType \u003d command[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        String description \u003d command[2];","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d new Task(\"placeholder\");","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"            case \"T\":","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"                t \u003d new ToDo(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"            case \"D\":","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"                LocalDate by \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"            case \"E\":","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"                LocalDate from \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"                LocalDate to \u003d LocalDate.parse(command[4].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"        boolean isMarked \u003d command[1].equals(\"1\");","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        if (isMarked) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"            t.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        this.taskList.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"     * Creates parent directories and the file if necessary. Then returns file.","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"     * @param directory Directory of the file","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"     * @param filename Name of the file","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"     * @return The file","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"    private File fileWithAssurance(String directory, String filename) {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"        // Load parent directories","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"        // Create parent directories if necessary","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"        // Load file","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"        File file \u003d new File(directory + \"/\" + filename);","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"        // Create file if not exist","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"                ui.showFileCreatedSuccessfully();","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"                ui.showCreatingFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"            ui.showError(\"Something went wrong while creating a new save\");","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"        return file;","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"     * Loads the save file at startup if it exists.","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"     * If directory does not exist, create a new directory.","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"     * @return List of tasks from the save file","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"        File file \u003d fileWithAssurance(this.fileDirectory, this.fileName);","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"                this.loadTaskFromFile(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"            sc.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"            ui.showSaveNotFound();","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"        } finally {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"            return this.taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"     * Saves the task list to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"        ui.showSavingFile();","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"            FileWriter fw \u003d new FileWriter(this.fileDirectory + \"/\" + this.fileName);","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"                fw.write(t.toSavedString() + System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"            fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"            ui.showError(\"Something went wrong with saving file\");","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"    //    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"//     * Gets the directories to the save file.","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"//     *","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"//     * @return String representing the directories to the save file.","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"//     */","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"//    public String getDir() {","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"//        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"//        Path path \u003d java.nio.file.Paths.get(home, \"data\");","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"//        return path.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"//    }","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":146}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    protected String description \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        return \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":30}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        taskList \u003d list;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    public Task addToDo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        Task todo \u003d new ToDo(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        return todo;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    public Task addDeadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"        Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return deadline;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    public Task addEvent(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"        Task event \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        taskList.add(event);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        return event;","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    public String listTasks() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No tasks available.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"        StringBuilder stringList \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"            stringList.append((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"            if (i \u003c taskList.size() - 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"                stringList.append(System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        return stringList.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    private void checkIndex(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        if (idx \u003c 0 || idx \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Task index out of bounds.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"    public void markTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        checkIndex(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"    public void unmarkTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        checkIndex(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"        t.markAsUndone();","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"     * Deletes the task with the same index.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"     * @param idx Index of the task in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"     * @return Task deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If index is out of bounds.","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"    public Task deleteTask(int idx) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"        checkIndex(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"        taskList.remove(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"        return t;","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":90}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        return \"T\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    private String botName;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public Ui (String name) {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        this.botName \u003d name;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    public void formResponse(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        String opener \u003d \"◤\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        String ender \u003d \"◣\";","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        // Find max length of a line","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        String[] stringArr \u003d s.split(System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"        int maxLen \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        for (String str : stringArr) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"            maxLen \u003d Math.max(maxLen, str.length());","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"        // Create adjustable text box","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c maxLen; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"            if (i \u003d\u003d maxLen - 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"                opener +\u003d \"◥\";","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"                ender +\u003d \"◢\";","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"                opener +\u003d \"━\";","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"                ender +\u003d \"━\";","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"        // Change String array to a StringBuilder","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"        // Append line separator + append \" \" space character to each line","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c stringArr.length; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"            sb.append(\" \" + stringArr[i]);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"            if (i !\u003d stringArr.length - 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"        System.out.println(\"\\n\" + opener + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"                + sb.toString()","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"                + \"\\n\" + ender + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(botName + \"Bot activated.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    public void terminate() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(\"Bot terminated\");","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        this.sc.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"    public void showSaveNotFound() {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(\"An error occurred while locating save file.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"    public void showFileCreatedSuccessfully() {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(\"New save file created.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"    public void showCreatingFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(\"Save file detected. Loading...\");","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"    public void showSavingFile() {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(\"Saving file...\");","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"    public void showError(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"        this.formResponse(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":82}},{"path":"src/main/java/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    private int idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    public UnmarkTaskCommand(int idx) {","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        tasks.unmarkTask(idx - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        ui.formResponse(\"Task masked as done: \" + tasks.getTask(idx - 1));","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        storage.save(tasks.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":14}},{"path":"test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"class DukeTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    void listTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    void isValidTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    void isNoTaskGiven() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    void checkCommandValidity() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    void markTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    void unmarkTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    void addTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    void deleteTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    void interact() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"rockman007372":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"todo eat","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"todo sleep","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"todo repeat","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"mark 100","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"delete 2","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"event repeat /from today /to tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"bye","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":17}}]
