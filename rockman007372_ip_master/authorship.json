[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"T|1|eat","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"E|0|you |2023-01-28|2023-01-29","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"T|1|out","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"D|0|hehe |2023-01-30","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"rockman007372":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        return \"[D]\" + super.toString() + \"(by \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        return \"D\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.by;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"// Level 7","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.io.File;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"// Level 8","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"// Level 1","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    private static final String BOT_NAME \u003d \"Tyrone\";","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"        Duke.say(Duke.BOT_NAME + \"Bot activated.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"    public static void processInput(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"            // Split strings into 2, first part is the operation, 2nd part is the description","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"            String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"            Operation op \u003d Operation.valueOf(command[0].toUpperCase());","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"            switch (op) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"                case MARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"                    Duke.markTask(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"                    Duke.unmarkTask(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"                case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"                case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"                    Duke.addTask(command, op);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"                case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"                    Duke.listTasks();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"                case DELETE:","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"                    Duke.deleteTask(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"            Duke.say(e.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"            Duke.say(\"What are you talkin about man?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"            Duke.say(\"Wrong date format given.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"    public static void interact() {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        while (true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"            // If input is \"bye\", terminate loop","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"            // Else, we process the input","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"            Duke.processInput(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"        sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"    public static void say(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"        String opener \u003d \"◤\";","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"        String ender \u003d \"◣\";","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"        // Find max length of a line","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"        String[] stringArr \u003d s.split(System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"        int maxLen \u003d 0;","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"        for (String str : stringArr) {","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"            maxLen \u003d Math.max(maxLen, str.length());","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"        // Create adjustable text box","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c maxLen; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"            if (i \u003d\u003d maxLen - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"                opener +\u003d \"◥\";","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"                ender +\u003d \"◢\";","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"                opener +\u003d \"━\";","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"                ender +\u003d \"━\";","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"        // Change String array to a StringBuilder","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"        // Append line separator + append \" \" space character to each line","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c stringArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"            sb.append(\" \" + stringArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"            if (i !\u003d stringArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"        System.out.println(\"\\n\" + opener + \"\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"                + sb.toString()","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"                + \"\\n\" + ender + \"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"    public static void listTasks() throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No tasks available right now. :\u003e\");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"        StringBuilder stringList \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"            stringList.append((i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"            if (i \u003c taskList.size() - 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"                stringList.append(System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"        Duke.say(stringList.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"    public static boolean isInvalidTask(String[] command) {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"        String idx \u003d command[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"        // False if idx is not an integer or idx is out of bounds","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"        return (!idx.matches(\"-?\\\\d+\")","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"                || Integer.parseInt(idx) \u003c 1","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"                || Integer.parseInt(idx) \u003e taskList.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"    public static boolean isNoTaskGiven(String[] command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"        return command.length \u003c 2;","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"rockman007372"},"content":"    public static void checkCommandValidity(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"rockman007372"},"content":"        if (isNoTaskGiven(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"You gave me no task.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"rockman007372"},"content":"        if (isInvalidTask(command)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"Task given is invalid / unavailable.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"rockman007372"},"content":"    public static void markTask(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"rockman007372"},"content":"        Duke.checkCommandValidity(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"rockman007372"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"rockman007372"},"content":"        Duke.say(\"Task masked as done: \" + t);","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"rockman007372"},"content":"    public static void unmarkTask(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"rockman007372"},"content":"        Duke.checkCommandValidity(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"rockman007372"},"content":"        t.markAsUndone();","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"rockman007372"},"content":"        Duke.say(\"Task masked as undone: \" + t);","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"rockman007372"},"content":"     * Adds a task to the task list, taking into account the type of task given.","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"rockman007372"},"content":"     * @param command The given command from user.","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"rockman007372"},"content":"     * @param op The type of task given.","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"rockman007372"},"content":"    public static void addTask(String[] command, Operation op) throws DukeException, DateTimeParseException {","lastModifiedDate":"2023-01-28"},{"lineNumber":182,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"rockman007372"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"No task description given.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"rockman007372"},"content":"        String description \u003d command[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"rockman007372"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"rockman007372"},"content":"        switch (op) {","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"rockman007372"},"content":"        case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"rockman007372"},"content":"            Task todo \u003d new ToDo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"rockman007372"},"content":"            taskList.add(todo);","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"rockman007372"},"content":"            text.append(\"New todo task added: \" + todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"rockman007372"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"rockman007372"},"content":"            String[] deadlineString \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":201,"author":{"gitId":"rockman007372"},"content":"            String deadlineDescription \u003d deadlineString[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":202,"author":{"gitId":"rockman007372"},"content":"            LocalDate by \u003d LocalDate.parse(deadlineString[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":203,"author":{"gitId":"rockman007372"},"content":"            Task deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":204,"author":{"gitId":"rockman007372"},"content":"            taskList.add(deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"rockman007372"},"content":"            text.append(\"New deadline added: \" + deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"rockman007372"},"content":"        case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"rockman007372"},"content":"            String[] eventString \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":210,"author":{"gitId":"rockman007372"},"content":"            String eventDescription \u003d eventString[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":211,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"rockman007372"},"content":"            // Parse the string to get to and from dates of the event","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"rockman007372"},"content":"            String[] fromAndTo \u003d eventString[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":214,"author":{"gitId":"rockman007372"},"content":"            LocalDate from \u003d LocalDate.parse(fromAndTo[0].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"rockman007372"},"content":"            LocalDate to \u003d LocalDate.parse(fromAndTo[1].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"rockman007372"},"content":"            Task event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"rockman007372"},"content":"            taskList.add(event);","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"rockman007372"},"content":"            text.append(\"New event added: \" + event);","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"rockman007372"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"rockman007372"},"content":"        text.append(System.lineSeparator() + \"You have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":224,"author":{"gitId":"rockman007372"},"content":"        Duke.say(text.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":225,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"rockman007372"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"rockman007372"},"content":"     * @param command The input from the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"rockman007372"},"content":"     * @throws DukeException If task is invalid or task is not given.","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"rockman007372"},"content":"    public static void deleteTask(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":234,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":235,"author":{"gitId":"rockman007372"},"content":"        Duke.checkCommandValidity(command);","lastModifiedDate":"2023-01-26"},{"lineNumber":236,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":237,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":238,"author":{"gitId":"rockman007372"},"content":"        taskList.remove(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"rockman007372"},"content":"        // Print response text to user","lastModifiedDate":"2023-01-27"},{"lineNumber":241,"author":{"gitId":"rockman007372"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-01-26"},{"lineNumber":242,"author":{"gitId":"rockman007372"},"content":"        text.append(\"Task deleted: \" + t + System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"rockman007372"},"content":"        text.append(\"You have \" + taskList.size() + \" task(s) remained.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"rockman007372"},"content":"        Duke.say(text.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":246,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":247,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":248,"author":{"gitId":"rockman007372"},"content":"     * Adds a task from saved file to the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":249,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":250,"author":{"gitId":"rockman007372"},"content":"     * @return","lastModifiedDate":"2023-01-28"},{"lineNumber":251,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":252,"author":{"gitId":"rockman007372"},"content":"    private static void loadTaskFromFile(String task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":253,"author":{"gitId":"rockman007372"},"content":"        String[] command \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":254,"author":{"gitId":"rockman007372"},"content":"        String taskType \u003d command[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":255,"author":{"gitId":"rockman007372"},"content":"        String description \u003d command[2];","lastModifiedDate":"2023-01-27"},{"lineNumber":256,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":257,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d new Task(\"placeholder\");","lastModifiedDate":"2023-01-27"},{"lineNumber":258,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":259,"author":{"gitId":"rockman007372"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":260,"author":{"gitId":"rockman007372"},"content":"            case \"T\":","lastModifiedDate":"2023-01-27"},{"lineNumber":261,"author":{"gitId":"rockman007372"},"content":"                t \u003d new ToDo(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":262,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":263,"author":{"gitId":"rockman007372"},"content":"            case \"D\":","lastModifiedDate":"2023-01-27"},{"lineNumber":264,"author":{"gitId":"rockman007372"},"content":"                LocalDate by \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":265,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-27"},{"lineNumber":266,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":267,"author":{"gitId":"rockman007372"},"content":"            case \"E\":","lastModifiedDate":"2023-01-27"},{"lineNumber":268,"author":{"gitId":"rockman007372"},"content":"                LocalDate from \u003d LocalDate.parse(command[3].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":269,"author":{"gitId":"rockman007372"},"content":"                LocalDate to \u003d LocalDate.parse(command[4].trim());","lastModifiedDate":"2023-01-28"},{"lineNumber":270,"author":{"gitId":"rockman007372"},"content":"                t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-27"},{"lineNumber":271,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":272,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":273,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":274,"author":{"gitId":"rockman007372"},"content":"        boolean isMarked \u003d command[1].equals(\"1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":275,"author":{"gitId":"rockman007372"},"content":"        if (isMarked) {","lastModifiedDate":"2023-01-27"},{"lineNumber":276,"author":{"gitId":"rockman007372"},"content":"            t.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":277,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":278,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":279,"author":{"gitId":"rockman007372"},"content":"        Duke.taskList.add(t);","lastModifiedDate":"2023-01-27"},{"lineNumber":280,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":281,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":282,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":283,"author":{"gitId":"rockman007372"},"content":"     * Gets the directories to the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":284,"author":{"gitId":"rockman007372"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":285,"author":{"gitId":"rockman007372"},"content":"     * @return String representing the directories to the save file.","lastModifiedDate":"2023-01-27"},{"lineNumber":286,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":287,"author":{"gitId":"rockman007372"},"content":"    public static String getDir() {","lastModifiedDate":"2023-01-27"},{"lineNumber":288,"author":{"gitId":"rockman007372"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-27"},{"lineNumber":289,"author":{"gitId":"rockman007372"},"content":"        Path path \u003d java.nio.file.Paths.get(home, Duke.FILE_DIRECTORY);","lastModifiedDate":"2023-01-27"},{"lineNumber":290,"author":{"gitId":"rockman007372"},"content":"        return path.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":291,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":292,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":293,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":294,"author":{"gitId":"rockman007372"},"content":"     * Creates parent directories and the file if necessary. Then returns file.","lastModifiedDate":"2023-01-27"},{"lineNumber":295,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":296,"author":{"gitId":"rockman007372"},"content":"    private static File fileWithAssurance(String directory, String filename) {","lastModifiedDate":"2023-01-27"},{"lineNumber":297,"author":{"gitId":"rockman007372"},"content":"        // Load parent directories","lastModifiedDate":"2023-01-27"},{"lineNumber":298,"author":{"gitId":"rockman007372"},"content":"        File dir \u003d new File(directory);","lastModifiedDate":"2023-01-27"},{"lineNumber":299,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":300,"author":{"gitId":"rockman007372"},"content":"        // Create parent directories if necessary","lastModifiedDate":"2023-01-27"},{"lineNumber":301,"author":{"gitId":"rockman007372"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":302,"author":{"gitId":"rockman007372"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":303,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":304,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":305,"author":{"gitId":"rockman007372"},"content":"        // Load file","lastModifiedDate":"2023-01-27"},{"lineNumber":306,"author":{"gitId":"rockman007372"},"content":"        File file \u003d new File(directory + \"/\" + filename);","lastModifiedDate":"2023-01-27"},{"lineNumber":307,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":308,"author":{"gitId":"rockman007372"},"content":"        // Create file if not exist","lastModifiedDate":"2023-01-27"},{"lineNumber":309,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":310,"author":{"gitId":"rockman007372"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":311,"author":{"gitId":"rockman007372"},"content":"                Duke.say(\"New save file created.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":312,"author":{"gitId":"rockman007372"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":313,"author":{"gitId":"rockman007372"},"content":"                Duke.say(\"Save file detected. Loading...\");","lastModifiedDate":"2023-01-27"},{"lineNumber":314,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":315,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":316,"author":{"gitId":"rockman007372"},"content":"            Duke.say(\"Something went wrong while creating a new save\");","lastModifiedDate":"2023-01-27"},{"lineNumber":317,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":318,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":319,"author":{"gitId":"rockman007372"},"content":"        return file;","lastModifiedDate":"2023-01-27"},{"lineNumber":320,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":321,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":322,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":323,"author":{"gitId":"rockman007372"},"content":"     * Loads the save file at startup if it exists.","lastModifiedDate":"2023-01-27"},{"lineNumber":324,"author":{"gitId":"rockman007372"},"content":"     * If directory does not exist, create a new directory.","lastModifiedDate":"2023-01-27"},{"lineNumber":325,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":326,"author":{"gitId":"rockman007372"},"content":"    private static void loadFile() {","lastModifiedDate":"2023-01-27"},{"lineNumber":327,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":328,"author":{"gitId":"rockman007372"},"content":"        File file \u003d fileWithAssurance(Duke.getDir(), FILE_NAME);","lastModifiedDate":"2023-01-27"},{"lineNumber":329,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":330,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":331,"author":{"gitId":"rockman007372"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":332,"author":{"gitId":"rockman007372"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":333,"author":{"gitId":"rockman007372"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":334,"author":{"gitId":"rockman007372"},"content":"                Duke.loadTaskFromFile(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":335,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":336,"author":{"gitId":"rockman007372"},"content":"            sc.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":337,"author":{"gitId":"rockman007372"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":338,"author":{"gitId":"rockman007372"},"content":"            Duke.say(\"An error occurred while locating save file.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":339,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":340,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":341,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":342,"author":{"gitId":"rockman007372"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":343,"author":{"gitId":"rockman007372"},"content":"     * Saves the task list to hard drive.","lastModifiedDate":"2023-01-27"},{"lineNumber":344,"author":{"gitId":"rockman007372"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":345,"author":{"gitId":"rockman007372"},"content":"    private static void saveFile() {","lastModifiedDate":"2023-01-27"},{"lineNumber":346,"author":{"gitId":"rockman007372"},"content":"        Duke.say(\"Saving file...\");","lastModifiedDate":"2023-01-27"},{"lineNumber":347,"author":{"gitId":"rockman007372"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":348,"author":{"gitId":"rockman007372"},"content":"            FileWriter fw \u003d new FileWriter(Duke.getDir() + \"/\" + FILE_NAME);","lastModifiedDate":"2023-01-27"},{"lineNumber":349,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":350,"author":{"gitId":"rockman007372"},"content":"            for (int i \u003d 0; i \u003c Duke.taskList.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":351,"author":{"gitId":"rockman007372"},"content":"                Task t \u003d Duke.taskList.get(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":352,"author":{"gitId":"rockman007372"},"content":"                fw.write(t.toSavedString() + System.lineSeparator());","lastModifiedDate":"2023-01-27"},{"lineNumber":353,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":354,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":355,"author":{"gitId":"rockman007372"},"content":"            fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":356,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":357,"author":{"gitId":"rockman007372"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":358,"author":{"gitId":"rockman007372"},"content":"            Duke.say(\"Something went wrong with saving file\");","lastModifiedDate":"2023-01-27"},{"lineNumber":359,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":360,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":361,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":363,"author":{"gitId":"rockman007372"},"content":"        Duke.greet();","lastModifiedDate":"2023-01-20"},{"lineNumber":364,"author":{"gitId":"rockman007372"},"content":"        Duke.loadFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":365,"author":{"gitId":"rockman007372"},"content":"        Duke.interact();","lastModifiedDate":"2023-01-20"},{"lineNumber":366,"author":{"gitId":"rockman007372"},"content":"        Duke.saveFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":364,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"                + \"(from \" + this.from.format(formatter)","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"                + \" to \" + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return \"E\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":27}},{"path":"src/main/java/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public enum Operation {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":3}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    protected String description \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        return \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    public String toSavedString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"        return \"T\" + \"|\" + (super.isDone ? \"1\" : \"0\")","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"                + \"|\" + super.description;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":17}},{"path":"test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"class DukeTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    void listTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    void isValidTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    void isNoTaskGiven() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    void checkCommandValidity() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"    void markTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"    void unmarkTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"    void addTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    void deleteTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    void interact() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"rockman007372":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"todo eat","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"todo sleep","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"todo repeat","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"mark 100","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"delete 2","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"event repeat /from today /to tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"bye","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":17}}]
