[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    protected String by;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"import java.util.List;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    private static final String botName \u003d \"Tyrone\";","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    public static void print(String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"        System.out.println(s);","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    public static void listTasks() throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"    \u003e No tasks available right now. :\u003e\");","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"            Duke.print(\"    \u003e \" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"rockman007372"},"content":"    public static boolean isValidTask(String[] command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"rockman007372"},"content":"        String idx \u003d command[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"rockman007372"},"content":"        // False if idx is not an integer or idx is out of bounds","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"rockman007372"},"content":"        return (!idx.matches(\"-?\\\\d+\")","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"rockman007372"},"content":"                || Integer.parseInt(idx) \u003c 1","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"rockman007372"},"content":"                || Integer.parseInt(idx) \u003e taskList.size());","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"rockman007372"},"content":"    public static boolean isNoTaskGiven(String[] command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"rockman007372"},"content":"        return command.length \u003c 2;","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"rockman007372"},"content":"    public static void checkCommandValidity(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"rockman007372"},"content":"        if (isNoTaskGiven(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"    \u003e You gave me no task. :(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"rockman007372"},"content":"        if (!isValidTask(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"    \u003e Task given is invalid / unavailable. :(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"rockman007372"},"content":"    public static void markTask(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"rockman007372"},"content":"        Duke.checkCommandValidity(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"rockman007372"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e Task masked as done: \" + t);","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"rockman007372"},"content":"    public static void unmarkTask(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"rockman007372"},"content":"        Duke.checkCommandValidity(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"rockman007372"},"content":"        t.markAsUndone();","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e Task masked as undone: \" + t);","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"rockman007372"},"content":"    public static void addTask(String[] command, Operation op) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"rockman007372"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"    \u003e No task description given. :( \");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"rockman007372"},"content":"        String description \u003d command[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"rockman007372"},"content":"        switch (op) {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"rockman007372"},"content":"            case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"rockman007372"},"content":"                Task todo \u003d new ToDo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"rockman007372"},"content":"                taskList.add(todo);","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"rockman007372"},"content":"                Duke.print(\"    \u003e I got you, new todo task added: \" + todo);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"rockman007372"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"rockman007372"},"content":"                String[] deadlineDescription \u003d description.split(\"/by\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"rockman007372"},"content":"                Task deadline \u003d new Deadline(deadlineDescription[0], deadlineDescription[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"rockman007372"},"content":"                taskList.add(deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"rockman007372"},"content":"                Duke.print(\"    \u003e I got you, new deadline added: \" + deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"rockman007372"},"content":"            case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"rockman007372"},"content":"                String[] eventDescription \u003d description.split(\"/from\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"rockman007372"},"content":"                // Parse the string to get to and from dates of the event","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"rockman007372"},"content":"                String[] fromAndTo \u003d eventDescription[1].split(\"/to\", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"rockman007372"},"content":"                String from \u003d fromAndTo[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"rockman007372"},"content":"                String to \u003d fromAndTo[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"rockman007372"},"content":"                Task event \u003d new Event(eventDescription[0], from, to);","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"rockman007372"},"content":"                taskList.add(event);","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"rockman007372"},"content":"                Duke.print(\"    \u003e I got you, new event added: \" + event);","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"rockman007372"},"content":"                break;","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e Chu have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"rockman007372"},"content":"    public static void deleteTask(String[] command) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"rockman007372"},"content":"        if (isNoTaskGiven(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"    \u003e chu gave me no task\");","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"rockman007372"},"content":"        if (isValidTask(command)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"rockman007372"},"content":"            throw new DukeException(\"    \u003e aint no such task available\");","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"rockman007372"},"content":"        Task t \u003d taskList.get(Integer.parseInt(command[1]) - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"rockman007372"},"content":"        taskList.remove(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e Task deleted: \" + t);","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e Chu have \" + taskList.size() + \" task(s) remained.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"rockman007372"},"content":"    public static void shutdown() {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e Aight imma head out\");","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"rockman007372"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"rockman007372"},"content":"        Duke.print(\"    \u003e What\u0027s up? How is your day?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"rockman007372"},"content":"    public static void interact() {","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"rockman007372"},"content":"        String input;","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"rockman007372"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"rockman007372"},"content":"        while (true) {","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"rockman007372"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"rockman007372"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"rockman007372"},"content":"                // If input is \"bye\", terminate loop","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"rockman007372"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"rockman007372"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"rockman007372"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"rockman007372"},"content":"                // Split strings into 2, first part is the operation, 2nd part is the description","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"rockman007372"},"content":"                String[] command \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"rockman007372"},"content":"                Operation op \u003d Operation.valueOf(command[0].toUpperCase());","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"rockman007372"},"content":"                switch (op) {","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"rockman007372"},"content":"                    case MARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"rockman007372"},"content":"                        Duke.markTask(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"rockman007372"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"rockman007372"},"content":"                    case UNMARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"rockman007372"},"content":"                        Duke.unmarkTask(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"rockman007372"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"rockman007372"},"content":"                    case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"rockman007372"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"rockman007372"},"content":"                    case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"rockman007372"},"content":"                        Duke.addTask(command, op);","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"rockman007372"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"rockman007372"},"content":"                    case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"rockman007372"},"content":"                        Duke.listTasks();","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"rockman007372"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"rockman007372"},"content":"                    case DELETE:","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"rockman007372"},"content":"                        Duke.deleteTask(command);","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"rockman007372"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"rockman007372"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"rockman007372"},"content":"                Duke.print(e.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"rockman007372"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"rockman007372"},"content":"                Duke.print(\"    \u003e What are you talkin about man?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"rockman007372"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"rockman007372"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"rockman007372"},"content":"        Duke.greet();","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"rockman007372"},"content":"        Duke.interact();","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"rockman007372"},"content":"        Duke.shutdown();","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":180,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":177,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"                + \"(from:\" + this.from + \"to:\" + this.to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":17}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class Main {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"        Duke.greet();","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"        Duke.interact();","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        Duke.shutdown();","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":9}},{"path":"src/main/java/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public enum Operation {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":3}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"    private String description \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"rockman007372"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"rockman007372"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"rockman007372"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"rockman007372":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rockman007372"},"content":"todo eat","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"rockman007372"},"content":"todo sleep","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"rockman007372"},"content":"todo repeat","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"rockman007372"},"content":"mark","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"rockman007372"},"content":"mark 100","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"rockman007372"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"rockman007372"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"rockman007372"},"content":"delete 2","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"rockman007372"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"rockman007372"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"rockman007372"},"content":"event repeat /from today /to tomorrow","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"rockman007372"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"rockman007372"},"content":"bye","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"rockman007372"},"content":"","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"rockman007372":17}}]
