[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"# alfred.main.Duke project template","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"3. After that, locate the `src/main/java/alfred.main.Duke.java` file, right-click it, and choose `Run alfred.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruiyigan":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"javafx {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"    version \u003d \"16\"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"checkstyle {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"    mainClassName \u003d \"alfred.main.Launcher\"","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruiyigan":27,"-":40}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"plugins {","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"    id(\"com.gradle.enterprise\") version(\"3.9\")","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"gradleEnterprise {","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"    if (System.getenv(\"CI\") !\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"        buildScan {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"            publishAlways()","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"            termsOfServiceUrl \u003d \"https://gradle.com/terms-of-service\"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"            termsOfServiceAgree \u003d \"yes\"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ruiyigan":13}},{"path":"src/main/java/alfred/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.command;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import alfred.parser.Parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import alfred.storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"import alfred.tasklist.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"import alfred.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":" * Command class main logic of code","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"public class Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"     * Constructor for command class","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    public Command() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"     * Execute command based on the different actions","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"     * @param action","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"     * @param tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"    public String executeCommand(Parser.Action action, String userInput, TaskList tasks, Storage storage)","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"            throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"        switch(action) {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"        case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"            return ui.getTaskListDetailsMessage(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"        case FIND:","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"            TaskList filteredTaskList \u003d tasks.findTask(this.parser.getKeyword(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"            return ui.getFindTaskListMessage(filteredTaskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"        case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"            ToDo todo \u003d new ToDo(this.parser.getTodoDescription(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"            return ui.getAddTaskMessage(todo, tasks.getSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"            Deadline deadline \u003d new Deadline(this.parser.getDeadlineDescription(userInput),","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"                    this.parser.getDeadlineDate(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"            return ui.getAddTaskMessage(deadline, tasks.getSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"        case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"            LocalDate[] eventDetails \u003d this.parser.getEventDateDetails(userInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"            Event event \u003d new Event(this.parser.getEventDescription(userInput),","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"                    eventDetails[0], eventDetails[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ruiyigan"},"content":"            tasks.addTask(event);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ruiyigan"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"ruiyigan"},"content":"            return ui.getAddTaskMessage(event, tasks.getSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ruiyigan"},"content":"        case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"ruiyigan"},"content":"            Task markTask \u003d tasks.getTask(this.parser.getTaskIndex(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ruiyigan"},"content":"            tasks.markTask(this.parser.getTaskIndex(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ruiyigan"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"ruiyigan"},"content":"            return ui.getMarkTaskMessage(markTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ruiyigan"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"ruiyigan"},"content":"            Task unmarkTask \u003d tasks.getTask(this.parser.getTaskIndex(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ruiyigan"},"content":"            tasks.unmarkTask(this.parser.getTaskIndex(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ruiyigan"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"ruiyigan"},"content":"            return ui.getUnmarkTaskMessage(unmarkTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ruiyigan"},"content":"        case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"ruiyigan"},"content":"            Task deleteTask \u003d tasks.getTask(parser.getTaskIndex(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"ruiyigan"},"content":"            String response \u003d ui.getRemoveTaskMessage(deleteTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"ruiyigan"},"content":"            tasks.removeTask(this.parser.getTaskIndex(userInput));","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"ruiyigan"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ruiyigan"},"content":"            response \u003d response + ui.getTotalTasksMessage(tasks.getSize());","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"ruiyigan"},"content":"            return response;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"ruiyigan"},"content":"        case BYE:","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"ruiyigan"},"content":"            return ui.getGoodByeMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"ruiyigan"},"content":"        case STATS:","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"ruiyigan"},"content":"            return ui.getStatsMessage(tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"ruiyigan"},"content":"        case EVENING:","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"ruiyigan"},"content":"            return ui.getGreetingsMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"ruiyigan"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"ruiyigan"},"content":"            return ui.getUnknownMessage();","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ruiyigan":89}},{"path":"src/main/java/alfred/exception/AlfredException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.exception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":" * Exception class.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"public class AlfredException extends Exception {","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"     * Creates an instance of AlfredException.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"     * @param errorMessage","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    public AlfredException(String errorMessage) {","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"ruiyigan":14}},{"path":"src/main/java/alfred/main/Alfred.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.main;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import alfred.command.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import alfred.parser.Parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"import alfred.storage.Storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import alfred.tasklist.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"import alfred.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":" * Alfred is a class that reacts to user\u0027s input","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":" * It uses other classes like Command, Parser, Storage, and TaskList to perform","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":" * various operations depending on the user\u0027s input","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"public class Alfred {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"    private Command command;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"     * Constructor. Takes in a filePath to create Storage object","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"     * @param filePath","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"    public Alfred(String filePath) {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"        command \u003d new Command();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"        } catch (AlfredException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"     * Get message based on user input","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"     * @param input","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"            return this.command.executeCommand(this.parser.getCommand(input), input, tasks, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"            return ui.getUnknownMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ruiyigan":52,"-":1}},{"path":"src/main/java/alfred/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.main;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import alfred.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"            FXMLLoader fxmlLoader;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"            if (text.equals(ui.getUnknownMessage())) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ErrorBox.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"            } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ruiyigan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"ruiyigan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ruiyigan"},"content":"    public static DialogBox getAlfredDialog(String text, Image img) {","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"ruiyigan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ruiyigan"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ruiyigan"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ruiyigan":69}},{"path":"src/main/java/alfred/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.main;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ruiyigan":12}},{"path":"src/main/java/alfred/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.main;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":" * A GUI for Alfred using FXML.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"    private Alfred alfred \u003d new Alfred(\"data/file.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAlfred(alfred);","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"            stage.show();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ruiyigan":31}},{"path":"src/main/java/alfred/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.main;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    private Alfred alfred;","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBatman.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"    private Image alfredImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAlfred.png\"));","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"    public void setAlfred(Alfred d) {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"        alfred \u003d d;","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Alfred\u0027s reply and then appends them to","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"    @FXML","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"        String response \u003d alfred.getResponse(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"                DialogBox.getAlfredDialog(response, alfredImage)","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"        );","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"        //Reused from @jehousoh with modifications","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2.5));","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"            delay.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"            delay.play();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ruiyigan":58,"-":4}},{"path":"src/main/java/alfred/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":" * Takes in user input and parse it to return useful readable data.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"     * Different types of command by user","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"    public enum Action {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"        LIST,","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"        TODO,","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"        EVENT,","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"        MARK,","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"        UNMARK,","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"        DELETE,","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"        FIND,","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"        BYE,","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"        STATS,","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"        EVENING,","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"        UNKNOWN","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    };","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"     * Process userInput and returns relevant action","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"    public Action getCommand(String userInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d userInput.split(\" \", 2)[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"            return Action.LIST;","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"todo\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"            return Action.TODO;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"deadline\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"            return Action.DEADLINE;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"event\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"            return Action.EVENT;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"mark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"            return Action.MARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"unmark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"            return Action.UNMARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"delete\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"            return Action.DELETE;","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"find\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"            return Action.FIND;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"            return Action.BYE;","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"stats\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"            return Action.STATS;","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"        } else if (s.equals(\"evening\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"            return Action.EVENING;","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"ruiyigan"},"content":"        return Action.UNKNOWN;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"ruiyigan"},"content":"     * Obtain to do description from user input","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ruiyigan"},"content":"     * @return String or throws exception","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ruiyigan"},"content":"    public String getTodoDescription(String userInput) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"ruiyigan"},"content":"        String todoDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"ruiyigan"},"content":"            todoDescription \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"ruiyigan"},"content":"        return todoDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ruiyigan"},"content":"     * Obtain deadline description from user input","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"ruiyigan"},"content":"     * @return String or throws exception","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"ruiyigan"},"content":"    public String getDeadlineDescription(String userInput) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"ruiyigan"},"content":"        String deadlineDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"ruiyigan"},"content":"            deadlineDescription \u003d userInput.split(\" \", 2)[1].split(\" /by \", 2)[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"ruiyigan"},"content":"        return deadlineDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"ruiyigan"},"content":"     * Obtain deadline date from user input","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"ruiyigan"},"content":"     * @return LocalDate or throws exception","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"ruiyigan"},"content":"    public LocalDate getDeadlineDate(String userInput) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"ruiyigan"},"content":"        LocalDate deadlineDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"ruiyigan"},"content":"            deadlineDate \u003d LocalDate.parse(userInput.split(\" \", 2)[1].split(\" /by \", 2)[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(\"The date of a deadline cannot be empty. \"","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"ruiyigan"},"content":"                    + \"Make sure dates are in this format yyyy-mm-dd\");","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"ruiyigan"},"content":"        return deadlineDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"ruiyigan"},"content":"     * Obtain event description from user input","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"ruiyigan"},"content":"     * @return String or exception","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"ruiyigan"},"content":"    public String getEventDescription(String userInput) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"ruiyigan"},"content":"        String eventDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"ruiyigan"},"content":"            eventDescription \u003d userInput.split(\" \", 2)[1].split(\" /\", 3)[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"ruiyigan"},"content":"        return eventDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"ruiyigan"},"content":"     * Obtain event date details (start, end) from user input","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"ruiyigan"},"content":"     * @return Start and end date in type Local Date or exception","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"ruiyigan"},"content":"    public LocalDate[] getEventDateDetails(String userInput) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"ruiyigan"},"content":"        LocalDate eventStartDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":141,"author":{"gitId":"ruiyigan"},"content":"        LocalDate eventEndDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":142,"author":{"gitId":"ruiyigan"},"content":"        String[] input \u003d userInput.split(\" \", 2)[1].split(\" /\", 3);","lastModifiedDate":"2023-01-24"},{"lineNumber":143,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"ruiyigan"},"content":"            eventStartDate \u003d LocalDate.parse(input[1].split(\"from \", 2)[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"ruiyigan"},"content":"            eventEndDate \u003d LocalDate.parse(input[2].split(\"to \", 2)[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(\"The start date and end date of a event cannot be empty. \\\" +\\n\"","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"ruiyigan"},"content":"                    + \"\\\"Make sure dates are in this format yyyy-mm-dd.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":149,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":150,"author":{"gitId":"ruiyigan"},"content":"        return new LocalDate[]{eventStartDate, eventEndDate};","lastModifiedDate":"2023-01-24"},{"lineNumber":151,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"ruiyigan"},"content":"     * Obtain task index from user input","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"ruiyigan"},"content":"     * @param userInput","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"ruiyigan"},"content":"    public Integer getTaskIndex(String userInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"ruiyigan"},"content":"        return Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"ruiyigan"},"content":"    public String getKeyword(String userInput) {","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"ruiyigan"},"content":"        return userInput.split(\" \", 2)[1].trim();","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ruiyigan":165}},{"path":"src/main/java/alfred/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.storage;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"import alfred.tasklist.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":" *  alfred.storage.Storage to handle loading and saving of alfred.tasklist.TaskList","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":" *  (before interacting with user and after interacting with user)","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"     *  Constructor to create data storage object","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"     * Saves data from alfred.tasklist.TaskList and store into file specified by this.filePath","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"     * @params list to be saved","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"    public void saveData(TaskList taskList) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"                StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"                taskString.append(task.getEventType());","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"                taskString.append(\" | \" + task.getStatusIcon() + \" | \");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"                taskString.append(task.getStorageDetails() + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"                fileWriter.write(taskString.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"     *  Load data from file path and stores it in an ArrayList for alfred.main.Alfred","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"     * @return ArrayList containing tasks from file based on file path","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"ruiyigan"},"content":"    public ArrayList\u003cTask\u003e loadData() throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"ruiyigan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"ruiyigan"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"ruiyigan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"ruiyigan"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"ruiyigan"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"ruiyigan"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"ruiyigan"},"content":"            Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"ruiyigan"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"ruiyigan"},"content":"                String data \u003d fileReader.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"ruiyigan"},"content":"                String[] dataArray \u003d data.split(\"\\\\| \");","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"ruiyigan"},"content":"                String eventType \u003d dataArray[0].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"ruiyigan"},"content":"                String isDone \u003d dataArray[1].trim();","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"ruiyigan"},"content":"                if (eventType.equals(\"T\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"ruiyigan"},"content":"                    task \u003d new ToDo(dataArray[2].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"ruiyigan"},"content":"                } else if (eventType.equals(\"D\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"ruiyigan"},"content":"                    LocalDate deadline \u003d LocalDate.parse(dataArray[3].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"ruiyigan"},"content":"                    task \u003d new Deadline(dataArray[2].trim(), deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"ruiyigan"},"content":"                } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"ruiyigan"},"content":"                    String[] eventDetails \u003d dataArray[3].split(\"- \");","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"ruiyigan"},"content":"                    LocalDate startDate \u003d LocalDate.parse(eventDetails[0].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"ruiyigan"},"content":"                    LocalDate endDate \u003d LocalDate.parse(eventDetails[1].trim());","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"ruiyigan"},"content":"                    task \u003d new Event(dataArray[2].trim(), startDate, endDate);","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"ruiyigan"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"ruiyigan"},"content":"                if (isDone.equals(\"X\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"ruiyigan"},"content":"                    task.markAsDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"ruiyigan"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"ruiyigan"},"content":"                taskList.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"ruiyigan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"ruiyigan"},"content":"        return taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"ruiyigan":95}},{"path":"src/main/java/alfred/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":" * Child class of task that represents a task with a specific date as deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"     * Creates an instance of deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"     * @param description","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"     * @param date","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    public String getStorageDetails() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"        return this.description + \" | \" + this.date.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    public String getEventType() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"        return \"D\";","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(formatter) + \")\";","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ruiyigan":38}},{"path":"src/main/java/alfred/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":" * Child class of task that represents a task with a start and end date.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"     * Creates an instance of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"     * @param description","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"     * @param startDate","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"     * @param endDate","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    public String getStorageDetails() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"        return this.description + \" | \" + this.startDate.toString() + \" - \" + this.endDate.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"    public String getEventType() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"        return \"E\";","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startDate.format(formatter) + \" to: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"                + this.endDate.format(formatter) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ruiyigan":42}},{"path":"src/main/java/alfred/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":" * Contains various methods of a task","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"     * Creates an instance of task","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"     * @param description","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"    public abstract String getEventType();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    public abstract String getStorageDetails();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ruiyigan":39}},{"path":"src/main/java/alfred/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":" * Child class of task that represents a task with just a description.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    public String getEventType() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"        return \"T\";","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    public String getStorageDetails() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"        return this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ruiyigan":26}},{"path":"src/main/java/alfred/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.tasklist;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import alfred.ui.Ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":" * TaskList stores all tasks and performs operation to manage the tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"     * @param taskList","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"     * Find out number of mark tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"     * @return Number of mark tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"    public int getSizeOfMarkedTasks() throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"        int sizeOfMarkTasks \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"            if (this.getTask(i).getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"                sizeOfMarkTasks \u003d sizeOfMarkTasks + 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"        return sizeOfMarkTasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"     * Find out number of unmark tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"     * @return Number of unmark tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"    public int getSizeOfUnmarkedTasks() throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"        return this.getSize() - this.getSizeOfMarkedTasks();","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"     * Obtain task based on given index","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"ruiyigan"},"content":"     * @param index","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ruiyigan"},"content":"     * @return Task","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"ruiyigan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"ruiyigan"},"content":"        // handle errors out of range","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"ruiyigan"},"content":"        int display \u003d index + 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"ruiyigan"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize() : \"Task\" + display + \" does not exist.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"ruiyigan"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"ruiyigan"},"content":"     * Marks a task based on the task index provided and throws an exception if task does not exist.","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"ruiyigan"},"content":"     * @param index","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"ruiyigan"},"content":"    public void markTask(int index) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"ruiyigan"},"content":"        // handle errors out of range","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"ruiyigan"},"content":"        int display \u003d index + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"ruiyigan"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize() : \"Task\" + display + \" does not exist.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"ruiyigan"},"content":"        this.getTask(index).markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"ruiyigan"},"content":"     * Unmarks a task based on the task index provided","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"ruiyigan"},"content":"     * @param index","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"ruiyigan"},"content":"    public void unmarkTask(int index) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"ruiyigan"},"content":"        // handle errors out of range","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"ruiyigan"},"content":"        int display \u003d index + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ruiyigan"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize() : \"Task\" + display + \" does not exist.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"ruiyigan"},"content":"        this.getTask(index).markAsUndone();","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"ruiyigan"},"content":"     * Add task to taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"ruiyigan"},"content":"     * @param task","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"ruiyigan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"ruiyigan"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"ruiyigan"},"content":"     * Remove task from taskList","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"ruiyigan"},"content":"     * @param index","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"ruiyigan"},"content":"    public void removeTask(int index) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"ruiyigan"},"content":"        // handle errors out of range","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"ruiyigan"},"content":"        int display \u003d index + 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"ruiyigan"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize() : \"Task\" + display + \" does not exist.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"ruiyigan"},"content":"        taskList.remove(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"ruiyigan"},"content":"     * Find and filter task list based on keyword","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"ruiyigan"},"content":"     * @param keyword","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"ruiyigan"},"content":"     * @return List of filtered tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"ruiyigan"},"content":"    public TaskList findTask(String keyword) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"ruiyigan"},"content":"        TaskList filteredTaskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"ruiyigan"},"content":"        for (int i \u003d 0; i \u003c this.getSize(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"ruiyigan"},"content":"            if (this.getTask(i).getStorageDetails().contains(keyword)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"ruiyigan"},"content":"                filteredTaskList.addTask(this.getTask(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"ruiyigan"},"content":"        return filteredTaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ruiyigan":134}},{"path":"src/main/java/alfred/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.ui;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import alfred.tasklist.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"     * Sends greeting message to user","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"    public String getGreetingsMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"        return \"Evening Master Wayne, I\u0027m Alfred\\n\" + \"What can I do for Gotham?\";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"     * Sends goodbye message to user","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    public String getGoodByeMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"        return \"Goodnight Master Wayne. Do rest well...\";","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"     * Sends task details, formatted to user","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"     * @param taskNumber","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"     * @param task","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ruiyigan"},"content":"    public String sendTaskDetails(int taskNumber, Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"ruiyigan"},"content":"        return taskNumber + \". \" + task + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"ruiyigan"},"content":"     * Loop through task lists to print task details","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"ruiyigan"},"content":"     * @param tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"ruiyigan"},"content":"     * @return task details","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ruiyigan"},"content":"    public String getTaskListDetailsMessage(TaskList tasks) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"Master Wayne, here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"ruiyigan"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"ruiyigan"},"content":"                s \u003d s + this.sendTaskDetails(i + 1, tasks.getTask(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"ruiyigan"},"content":"     * Return task details based on keyword by user","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"ruiyigan"},"content":"     * @param tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"ruiyigan"},"content":"     * @return task details","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"ruiyigan"},"content":"     * @throws AlfredException","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"ruiyigan"},"content":"    public String getFindTaskListMessage(TaskList tasks) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"Master Wayne, here are the matching tasks in your list: \\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"ruiyigan"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ruiyigan"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ruiyigan"},"content":"                s \u003d s + this.sendTaskDetails(i + 1, tasks.getTask(i));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"ruiyigan"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"ruiyigan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"ruiyigan"},"content":"            throw new AlfredException(e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"ruiyigan"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"ruiyigan"},"content":"     * Return add task message","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"ruiyigan"},"content":"     * @param task","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"ruiyigan"},"content":"     * @param taskListSize","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"ruiyigan"},"content":"    public String getAddTaskMessage(Task task, int taskListSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + this.getTotalTasksMessage(taskListSize);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"ruiyigan"},"content":"     * Returns task list size message","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"ruiyigan"},"content":"     * @param taskListSize","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"ruiyigan"},"content":"    public String getTotalTasksMessage(int taskListSize) {","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"ruiyigan"},"content":"        return \"Now you have \" + taskListSize + \" tasks in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"ruiyigan"},"content":"     * Return remove task message","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"ruiyigan"},"content":"     * @param task","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"ruiyigan"},"content":"    public String getRemoveTaskMessage(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + task.toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"ruiyigan"},"content":"     * Return mark task message","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"ruiyigan"},"content":"     * @param task","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"ruiyigan"},"content":"    public String getMarkTaskMessage(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"Good job Master Wayne, I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + task.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"ruiyigan"},"content":"     * Return unmark task message","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"ruiyigan"},"content":"     * @param task","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"ruiyigan"},"content":"    public String getUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"OK Master Wayne, I\u0027ve marked this task as not done yet: \\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + task.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"ruiyigan"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"ruiyigan"},"content":"     * Return unknown message","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"ruiyigan"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"ruiyigan"},"content":"     * @return","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"ruiyigan"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"ruiyigan"},"content":"    public String getUnknownMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"I\u0027m sorry Master Wayne, but I don\u0027t know what that means. \\n\";","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"ruiyigan"},"content":"    public String getStatsMessage(TaskList tasks) throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"ruiyigan"},"content":"        String s \u003d \"Here are the stats\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + \"Total number of tasks: \" + tasks.getSize() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + \"Total number of marked tasks: \" + tasks.getSizeOfMarkedTasks() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"ruiyigan"},"content":"        s \u003d s + \"Total number of unmarked tasks: \" + tasks.getSizeOfUnmarkedTasks() + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"ruiyigan"},"content":"        return s;","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ruiyigan":149}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\" style\u003d\"-fx-background-color: #00ADB5; -fx-font-size: 14px; -fx-background-radius: 5px; -fx-padding: 15px 20px 15px 20px; -fx-border-insets: 10px; -fx-background-insets: 10px; -fx-text-fill: #EEEEEE;\"/\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ruiyigan":16}},{"path":"src/main/resources/view/ErrorBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\" style\u003d\"-fx-background-color: #f44336; -fx-font-size: 14px; -fx-background-radius: 5px; -fx-padding: 15px 20px 15px 20px; -fx-border-insets: 10px; -fx-background-insets: 10px; -fx-text-fill: #EEEEEE;\"/\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"ruiyigan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"alfred.main.MainWindow\"\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"\u003cchildren\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" style\u003d\"-fx-background-color: #EEEEEE;\"/\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" style\u003d\"-fx-background-color: #00ADB5; -fx-text-fill: #EEEEEE;\"/\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" style\u003d\"-fx-background-color: #393E46;\"\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #393E46;\"/\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"\u003c/children\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ruiyigan":19}},{"path":"src/test/java/alfred/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.parser;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    public void getCommandTest() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"        String userInput \u003d \"mark 3\";","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"        Parser.Action action \u003d parser.getCommand(userInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"        assertEquals(Parser.Action.MARK, action);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"    public void getEventDateDetailsTest() throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"        LocalDate startDate \u003d LocalDate.of(2021, 10, 10);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"        LocalDate endDate \u003d LocalDate.of(2021, 11, 15);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"        String userInput \u003d \"event overseas /from 2021-10-10 /to 2021-11-15\";","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"        LocalDate[] dates \u003d parser.getEventDateDetails(userInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"        LocalDate[] checkDates \u003d new LocalDate[]{startDate, endDate};","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"        assertEquals(checkDates[0], dates[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"        assertEquals(checkDates[1], dates[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ruiyigan":29}},{"path":"src/test/java/alfred/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"package alfred.tasklist;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ruiyigan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ruiyigan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ruiyigan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ruiyigan"},"content":"import alfred.exception.AlfredException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"ruiyigan"},"content":"import alfred.task.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"ruiyigan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ruiyigan"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ruiyigan"},"content":"    public void getTaskTest() throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"ruiyigan"},"content":"        TaskList tempTaskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ruiyigan"},"content":"        ToDo testTask \u003d new ToDo(\"Hello\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ruiyigan"},"content":"        tempTaskList.addTask(testTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ruiyigan"},"content":"        assertEquals(testTask, tempTaskList.getTask(0));","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ruiyigan"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ruiyigan"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ruiyigan"},"content":"    public void markTest() throws AlfredException {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"ruiyigan"},"content":"        TaskList tempTaskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ruiyigan"},"content":"        ToDo testTask \u003d new ToDo(\"Hello\");","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ruiyigan"},"content":"        tempTaskList.addTask(testTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ruiyigan"},"content":"        tempTaskList.markTask(0);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ruiyigan"},"content":"        assert(testTask.getStatusIcon() \u003d\u003d \"X\");","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ruiyigan"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"ruiyigan"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ruiyigan":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruiyigan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ruiyigan":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ruiyigan"},"content":"java -classpath ..\\bin alfred.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ruiyigan":1,"-":20}}]
