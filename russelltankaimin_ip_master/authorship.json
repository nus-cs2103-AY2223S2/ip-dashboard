[{"path":"src/main/java/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    private String response;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    public AddTaskCommand(String response) {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"        this.response \u003d response;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            Task task \u003d TaskInfoParser.parse(this.response);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":22}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    abstract boolean isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":4}},{"path":"src/main/java/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"public class CommandParser extends Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    final static String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public Command parse(String response) throws UnknownCommandException {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        String[] commands \u003d response.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(BANNER);","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"            if (commands.length \u003c 2 \u0026\u0026 isIndexRequiredCommand(commands[0])) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"                throw new IncompleteCommandException(String.format(\"Hrrmmm. Not enough arguments, \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"                        \"%s has. Hmm\", commands[0]), null);","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"            Commands command \u003d Commands.valueOf(commands[0].toUpperCase());","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            switch (command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"                case LIST:","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"                case MARK:","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"                    return new MarkTaskCommand(commands[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"                    return new UnmarkTaskCommand(commands[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"                case DELETE:","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"                    return new DeleteTaskCommand(commands[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"                case BYE:","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"                    return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"                case TODO:","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"                case EVENT:","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"                    return new AddTaskCommand(response);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"                default :","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                    throw new UnknownCommandException(\"Fall to the Dark Side, you must not. Invalid Command!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            throw e;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Fall to the Dark Side, you must not. Invalid Command!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isIndexRequiredCommand(String command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        return command.equals(\"mark\")","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"unmark\")","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"delete\");","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":46}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public enum Commands {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    LIST, MARK, UNMARK, DELETE, BYE, TODO, EVENT, DEADLINE;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":3}},{"path":"src/main/java/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isCorrectDateFormat(String date) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"            return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isCorrectTimeFormat(String time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            LocalTime localTime \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":24}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    private String time;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    private String deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    public Deadline(String description, String deadline, String time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        this.deadlineTime \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a Deadline task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"     * @return a Deadline task object based on command input","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    public static Deadline create(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        String[] splitCommands \u003d input.trim().split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        splitCommands \u003d StringUtils.removeWhiteSpace(splitCommands);","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        int deadlineIndex \u003d StringUtils.searchString(splitCommands, \"deadline\");","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        int byIndex \u003d StringUtils.searchString(splitCommands,\"/by\");","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Incomplete arguments for command deadline, I have found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        if (splitCommands[splitCommands.length - 1].equals(\"/by\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Deadline entered, you have not.\", null);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        if (deadlineIndex + 1 \u003d\u003d byIndex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"No Task Description, You have entered\", null);","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d StringUtils.joinString(splitCommands, deadlineIndex + 1, byIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        String deadlineDatePart \u003d splitCommands[splitCommands.length - 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        String deadlineTimePart \u003d splitCommands[splitCommands.length - 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        if (!DateTimeUtils.isCorrectDateFormat(deadlineDatePart)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid date format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        } else if (!DateTimeUtils.isCorrectTimeFormat(deadlineTimePart)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid time format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        return new Deadline(description, deadlineDatePart, deadlineTimePart);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    public static Deadline create(String description, String deadline, String time, String marked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        Deadline task \u003d new Deadline(description, deadline, time);","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"            task.markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (by: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"))));","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (by: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"))));","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"        return \"D\";","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the Deadline Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the Deadline Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s (by: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"    public String writeTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"%s %d %s by %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"                super.isCompleted() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"                this.deadline + \" \" + time);","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":118}},{"path":"src/main/java/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    private String indexString;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    public DeleteTaskCommand(String command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"        this.indexString \u003d command;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    void execute(TaskList taskList,Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            taskList.deleteTask(this.indexString);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    final static String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    private final static String FILEPATH \u003d \"src/main/data/duke.txt\";","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"            taskList \u003d Storage.loadData(taskList, FILEPATH);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Transmission error, I encountered! Jumping into hyperspace, it might be!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"                String response \u003d ui.readCommand(scanner);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"                Command command \u003d commandParser.parse(response);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"                ui.showLoadingErrorMessage(e);","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"            } finally {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"                System.out.println(BANNER);","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        storage.saveData(FILEPATH, taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(BANNER);","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"russelltankaimin":41,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public DukeException(String message, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(message, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/DukeFileWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"public class DukeFileWriter {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public static void writeToFile(String path, TaskList taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"            ArrayList\u003cTask\u003e taskArrayList \u003d taskList.getTaskList();","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"            if (taskArrayList.size() \u003e 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"                for (int i \u003d 0; i \u003c taskArrayList.size() - 1; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"                    fileWriter.write(taskArrayList.get(i).writeTask());","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"                    fileWriter.write(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"                fileWriter.write(taskArrayList.get(taskArrayList.size() - 1).writeTask());","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Saving your tasks my padawan, I am\");","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"There is an error writing to file!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"russelltankaimin":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    private String startTimeString;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    private String endTimeString;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    private String startDateString;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    private String endDateString;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    private LocalTime startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    private LocalTime endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    public Event(String description, String startDate, String endDate, String startTime, String endTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        this.startDateString \u003d startDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        this.endDateString \u003d endDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        this.startTimeString \u003d startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        this.endTimeString \u003d endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        this.startDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        this.endDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        this.startTime \u003d LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        this.endTime \u003d LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create an Event task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @return an Event task object based on command input","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    public static Event create(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        splitInput \u003d StringUtils.removeWhiteSpace(splitInput);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        int fromIndex \u003d StringUtils.searchString(splitInput, \"/from\");","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        int toIndex \u003d StringUtils.searchString(splitInput, \"/to\");","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || fromIndex + 1 \u003d\u003d toIndex || fromIndex \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Incomplete arguments for command event, I have found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        } else if (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"This command I do not know, only :\\n \" +","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                    \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\", null);","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        String eventDescription \u003d StringUtils.joinString(splitInput, 1, fromIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        String startDateExtract \u003d splitInput[fromIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        String startTimeExtract \u003d splitInput[fromIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        String endDateExtract \u003d splitInput[toIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        String endTimeExtract \u003d splitInput[toIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        if (!DateTimeUtils.isCorrectDateFormat(startDateExtract)","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectDateFormat(endDateExtract)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid date format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        } else if (!DateTimeUtils.isCorrectTimeFormat(startTimeExtract)","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectTimeFormat(endTimeExtract)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid time format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        return new Event(eventDescription, startDateExtract, endDateExtract,","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"                startTimeExtract, endTimeExtract);","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    public static Event create(String description, String startDate, String endDate,","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"                               String startTime, String endTime, String marked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        if (!DateTimeUtils.isCorrectDateFormat(startDate)","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectDateFormat(endDate)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid date format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"        } else if (!DateTimeUtils.isCorrectTimeFormat(startTime)","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectTimeFormat(endTime)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid time format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"        Event task \u003d new Event(description, startDate, endDate, startTime, endTime);","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"        if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"            task.markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (from: %s %s to: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"))));","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (from: %s %s to: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"))));","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"        return \"E\";","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the Event Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the Event Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s (from: %s %s to: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":130,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":132,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"russelltankaimin"},"content":"    public String writeTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"%s %d %s from %s %s to %s %s\",","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"russelltankaimin"},"content":"                super.isCompleted() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"                this.startDateString,","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"                this.startTimeString,","lastModifiedDate":"2023-01-22"},{"lineNumber":141,"author":{"gitId":"russelltankaimin"},"content":"                this.endDateString,","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"                this.endTimeString);","lastModifiedDate":"2023-01-22"},{"lineNumber":143,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":144}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        ui.displayByeMessage();","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":12}},{"path":"src/main/java/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public IncompleteCommandException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public InvalidIndexException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"        taskList.listItems();","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":11}},{"path":"src/main/java/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    private String taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    public MarkTaskCommand(String taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"            taskList.markTask(this.taskIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":23}},{"path":"src/main/java/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public NoSuchTaskException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public abstract class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":2}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    final static String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    public static TaskList loadData(TaskList taskList, String filePath) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"            taskList \u003d readFromFile(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Hrmm Hrmm, some past tasks I see!!\\n\u0027list\u0027 command to see more, you must enter\");","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(BANNER);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            return taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            Path path \u003d Paths.get(\"src/main/data\");","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"            File newTaskFile \u003d new File(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"            newTaskFile.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"A new file created, I have!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        return new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public static TaskList readFromFile(String path) throws FileNotFoundException {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        while(fileScanner.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            String[] commandArray \u003d line.trim().split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"            Task task \u003d TaskInfoParser.parse(commandArray);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            taskList.addTaskSilent(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        fileScanner.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        return taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"    public static void saveData(String filepath, TaskList taskList) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        DukeFileWriter.writeToFile(filepath, taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":46}},{"path":"src/main/java/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"public class StringUtils {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    public StringUtils() {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public static String joinString(String[] array, int start, int end) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        String string \u003d \"\";","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"            string +\u003d array[i] + \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"        return string + array[end];","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    public static String[] removeWhiteSpace(String[] array) {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        return Arrays.stream(array).filter(x -\u003e !x.equals(\" \") \u0026\u0026 !x.equals(\"\")).toArray(String[]::new);","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    public static int searchString(String[] array, String string) {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            if (array[i].equals(string)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"                return i;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        return -1;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"russelltankaimin":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"abstract public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    protected String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(\"Nice! Marked this task as done, I have:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    public void markSilent() {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(\"Ok! Marked this task as not done yet, I have:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Getter of task description.","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     * @return String representation of the task\u0027s description","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        return this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"     * Abstract method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    abstract public String getTaskType();","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    abstract public String writeTask();","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":53}},{"path":"src/main/java/TaskInfoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"public class TaskInfoParser extends Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"     * This is a parser to extract information from the task to decide which object it is referring","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"     * to in the command input and returns it accordingly.","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input from stdin","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"     * @return Task object specific to the command input string","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    public static Task parse(String input) {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"        String[] commands \u003d input.split(\" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        switch(commands[0]) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"            case \"todo\" :","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"                return ToDo.create(commands);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            case \"deadline\" :","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"                return Deadline.create(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            case \"event\" :","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"                return Event.create(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            default:","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        throw new UnknownCommandException(String.format(\"Fall to the Dark Side You must Not,\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"                \" for not know what %s means!!\", commands[0]), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    public static Task parse(String[] stringArray) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        int length \u003d stringArray.length;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        stringArray \u003d StringUtils.removeWhiteSpace(stringArray);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        switch(stringArray[0]) {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"            case \"T\":","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                return ToDo.create(StringUtils.joinString(stringArray, 2, length - 1), stringArray[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"            case \"D\":","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"                int byIndex \u003d StringUtils.searchString(stringArray, \"by\");","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"                String description \u003d StringUtils.joinString(stringArray, 2, byIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"                String deadline \u003d stringArray[length - 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"                String time \u003d stringArray[length - 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"                return Deadline.create(description, deadline, time, stringArray[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            case \"E\":","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"                int fromIndex \u003d StringUtils.searchString(stringArray, \"from\");","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"                int toIndex \u003d StringUtils.searchString(stringArray, \"to\");","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                String description1 \u003d StringUtils.joinString(stringArray, 2, fromIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"                String startDate \u003d stringArray[fromIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                String startTime \u003d stringArray[fromIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"                String endDate \u003d stringArray[toIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"                String endTime \u003d stringArray[toIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"                assert(toIndex + 3 \u003d\u003d length - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"                return Event.create(description1, startDate, endDate, startTime, endTime, stringArray[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        return null;","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    private final static String ADDTASKMSG \u003d \"Got it. Added this task, I have:\";","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    private final static String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for Task List.","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * Adds task to the task list String array.","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * @param task name of the task","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\"%s\\n %s\", ADDTASKMSG, task.toString()));","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        addTaskSilent(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\"%d tasks in the list, you have now.\", getSize()));","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * Adds task to task list without any messages","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * @param task task object","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public void addTaskSilent(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"     * Outputs the size of non-null Task Objects in Task List.","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     * @return number of tasks in the task list","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"     * Deletes a task in task list by their index counting from 1","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"     * @param indexString","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    public void deleteTask(String indexString) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"            if (idx \u003e this.getSize()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(String.format(\"Noted. Removed this task I have:\\n %s\",","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"                    this.taskList.get(idx - 1)));","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.remove(idx - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(String.format(\"%d tasks in the list, you now have\", getSize()));","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"            throw new NoSuchTaskException(\"In this index, no such task I found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", indexString), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"     * Marks a task by its index in the array of Tasks.","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"     * @param index index of interest to mark the task as done","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"    public void markTask(String index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.get(idx).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", index), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"     * Unmarks a task by its index in the array of Tasks.","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"     * @param index index of interest to unmark the task as undone.","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"    public void unmarkTask(String index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.get(idx).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", index), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"     * Prints the names of tasks in the list in the top-down list format with numbered indexes","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"     * starting from 1 added in chronological order whereas returns empty list string if task list is empty.","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"    public void listItems() {","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"        if (this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Empty, this list is !\");","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"            String out \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"            for (int i \u003d 0; i \u003c this.getSize() - 1; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"                out +\u003d String.format(\"%d.%s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(out + String.format(\"%d.%s\", this.getSize(), taskList.get(this.getSize() - 1).toString()));","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"        return taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":110}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a ToDo task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"     * @param commands string array of commands","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"     * @return a ToDo object based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    public static ToDo create(String[] commands) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        commands \u003d StringUtils.removeWhiteSpace(commands);","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        if (commands.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(String.format(\"Hrrmmm. Not enough arguments, \" +","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"                    \"%s has. Hmm\", \"todo\"), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d StringUtils.joinString(commands, 1, commands.length - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    public static ToDo create(String description, String marked) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"            newTask.markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        return newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * Concatenates the strings from [start, end] indices of commands array to form","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * required description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     * @param commands array of commands split by regex patterns like \" \"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"     * @param start start index of commands array (inclusive)","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     * @param end end index of commands array (inclusive)","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     * @return a string description of a task","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    public static String buildDescription(String[] commands, int start, int end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            description +\u003d commands[i] + \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        return description + commands[end];","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s\",","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"                this.description));","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s\",","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"                this.description));","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        return \"T\";","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the ToDo Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the ToDo Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"                this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    public String writeTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"%s %d %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"                super.isCompleted() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"                this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":98}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    private final static String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    private final static String WELCOME_MSG \u003d \"Greetings! JEDI GRANDMASTER YODA here\\n\" + \"For you, What can I do?\";","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    private final static String BYE_MSG \u003d \"Be Gone, You Must. May the Force be with You!\";","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    enum Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     * Responds to the command given by standard input with the appropriate formatting.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * @param command the input that is retrieved from standard input","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * @param nextLine provides necessary indent should requested","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public void respond(String command, boolean nextLine) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        if (nextLine) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            answer +\u003d BANNER;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        answer +\u003d \"\\n\" + command + \"\\n\" + BANNER;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(answer);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    public void displayByeMessage() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(BYE_MSG);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    public String readCommand(Scanner scanner) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     * Displays the welcome message when launched.","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\"%s\\n%s\\n%s\", BANNER, WELCOME_MSG, BANNER));","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    public void showLoadingErrorMessage(Exception exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(exception.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":45}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public UnknownCommandException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    private String taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    public UnmarkTaskCommand(String taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            taskList.unmarkTask(taskIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"event nus career fair /from 2pm /to 8pm","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"event ma2104 lecture @ lt32 /from Tuesday 12pm /to Tuesday 2pm","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"deadline cs4230 assignment /by :-) 8pm","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"todo buy kpop concert tickets","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"todo rush individual project","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"deadline buy groceries /by 6pm Sat 5 Aug 2023","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"mark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"mark 5","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"unmark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"deadline do cs2101 reflection /by thursday 19 feb 2023 8am","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"mark 6","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"unmark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":18}}]
