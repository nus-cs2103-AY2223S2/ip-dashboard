[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    private String deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    private Deadline(String description, String deadline) {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a Deadline task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"     * @return a Deadline task object based on command input","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    public static Deadline create(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Incomplete arguments for command deadline, I have found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        String deadline \u003d input.substring(byIndex + 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        String deadlineDescription \u003d input.substring(9, byIndex - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        return new Deadline(deadlineDescription, deadline);","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (by: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"                this.deadline));","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (by: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"                this.deadline));","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        return \"D\";","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the Deadline Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the Deadline Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"                this.deadline);","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":72}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"                            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    final static String WELCOME_MSG \u003d \"Greetings! JEDI GRANDMASTER YODA here\\n\" + \"For you, What can I do?\";","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    final static String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    final static String BYE_MSG \u003d \"Be Gone, You Must. May the Force be with You!\";","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        Duke.displayWelcomeMessage();","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        TaskInfoParser parser \u003d new TaskInfoParser();","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        while (true) {","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"            response \u003d scanner.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"            if (response.equals(\"bye\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"            String[] commands \u003d response.split(\" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(BANNER);","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"                if (commands.length \u003c 2 \u0026\u0026 isIndexRequiredCommand(commands[0])) {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"                    throw new IncompleteCommandException(String.format(\"Hrrmmm. Not enough arguments, \" +","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                            \"%s has. Hmm\", commands[0]), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"                switch (commands[0]) {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"                    case \"list\":","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"                        taskList.listItems();","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"                    case \"mark\":","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"                        taskList.markTask(commands[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                        taskList.unmarkTask(commands[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                    case \"delete\":","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"                        taskList.deleteTask(commands[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"                        break;","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"                    default:","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"                        Task newTask \u003d parser.obtainTask(response);","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"                        taskList.addTask(newTask);","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"                        break;","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"                }","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"            } finally {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"                System.out.println(BANNER);","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        Duke.respond(BYE_MSG, true);","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"     * Displays the welcome message when launched.","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"    public static void displayWelcomeMessage() {","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\"%s\\n%s\\n%s\", BANNER, WELCOME_MSG, BANNER));","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"     * Responds to the command given by standard input with the appropriate formatting.","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"     * @param command the input that is retrieved from standard input","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"     * @param nextLine provides necessary indent should requested","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    public static void respond(String command, boolean nextLine) {","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        if (nextLine) {","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"            answer +\u003d BANNER;","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"        answer +\u003d \"\\n\" + command + \"\\n\" + BANNER;","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(answer);","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isIndexRequiredCommand(String command) {","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"        return command.equals(\"mark\")","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"unmark\")","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"delete\");","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"russelltankaimin":81,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public DukeException(String message, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(message, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    private String startTime;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    private String endTime;","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"    private Event(String description, String start, String end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        this.startTime \u003d start;","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"        this.endTime \u003d end;","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create an Event task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * @return an Event task object based on command input","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    public static Event create(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Incomplete arguments for command event, I have found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        String eventDescription \u003d input.substring(6, fromIndex - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        String startTime \u003d input.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        String endTime \u003d input.substring(toIndex + 4);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        return new Event(eventDescription, startTime, endTime);","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime,","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime));","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime,","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime));","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        return \"E\";","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the Event Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the Event Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime,","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime);","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":79}},{"path":"src/main/java/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public IncompleteCommandException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public InvalidIndexException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public NoSuchTaskException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"abstract public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    protected String description;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(\"Nice! Marked this task as done, I have:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(\"Ok! Marked this task as not done yet, I have:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * Getter of task description.","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @return String representation of the task\u0027s description","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        return this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Abstract method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    abstract public String getTaskType();","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":43}},{"path":"src/main/java/TaskInfoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class TaskInfoParser {","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"     * This is a parser to extract information from the task to decide which object it is referring","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"     * to in the command input and returns it accordingly.","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input from stdin","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"     * @return Task object specific to the command input string","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    public static Task obtainTask(String input) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        String[] commands \u003d input.split(\" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        switch(commands[0]) {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"            case \"todo\" :","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"                return ToDo.create(commands);","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"            case \"deadline\" :","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"                return Deadline.create(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            case \"event\" :","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"                return Event.create(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            default:","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        throw new UnknownCommandException(String.format(\"Fall to the Dark Side You must Not,\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"                \" for not know what %s means!!\", commands[0]), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":26}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    private final static String ADDTASKMSG \u003d \"Got it. Added this task, I have:\";","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for Task List.","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Adds task to the task list String array.","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * @param task name of the task","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\"%s\\n %s\", ADDTASKMSG, task.toString()));","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\"%d tasks in the list, you have now.\", getSize()));","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"     * Outputs the size of non-null Task Objects in Task List.","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * @return number of tasks in the task list","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     * Deletes a task in task list by their index counting from 1","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"     * @param indexString","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    public void deleteTask(String indexString) {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            if (idx \u003e this.getSize()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(String.format(\"Noted. Removed this task I have:\\n %s\",","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                    this.taskList.get(idx - 1)));","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.remove(idx - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(String.format(\"%d tasks in the list, you now have\", getSize()));","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"            throw new NoSuchTaskException(\"In this index, no such task I found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", indexString), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"     * Marks a task by its index in the array of Tasks.","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"     * @param index index of interest to mark the task as done","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    public void markTask(String index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.get(idx).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", index), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"     * Unmarks a task by its index in the array of Tasks.","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"     * @param index index of interest to unmark the task as undone.","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"    public void unmarkTask(String index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.get(idx).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", index), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"     * Prints the names of tasks in the list in the top-down list format with numbered indexes","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"     * starting from 1 added in chronological order whereas returns empty list string if task list is empty.","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"    public void listItems() {","lastModifiedDate":"2023-01-16"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"        if (this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Empty, this list is !\");","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"            String out \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"            for (int i \u003d 0; i \u003c this.getSize() - 1; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"                out +\u003d String.format(\"%d.%s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(out + String.format(\"%d.%s\", this.getSize(), taskList.get(this.getSize() - 1).toString()));","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":97}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a ToDo task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"     * @param commands string array of commands","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"     * @return a ToDo object based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    public static ToDo create(String[] commands) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        if (commands.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(String.format(\"Hrrmmm. Not enough arguments, \" +","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"                    \"%s has. Hmm\", \"todo\"), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        String toDoDescription \u003d buildDescription(commands, 1, commands.length - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        return new ToDo(toDoDescription);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     * Concatenates the strings from [start, end] indices of commands array to form","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     * required description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"     * @param commands array of commands split by regex patterns like \" \"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"     * @param start start index of commands array (inclusive)","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * @param end end index of commands array (inclusive)","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * @return a string description of a task","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public static String buildDescription(String[] commands, int start, int end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"            description +\u003d commands[i] + \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        return description + commands[end];","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s\",","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"                this.description));","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(String.format(\" [%s][%s] %s\",","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"                this.description));","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"        return \"T\";","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the ToDo Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the ToDo Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(String.format(\"[%s][%s] %s\",","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"                this.description));","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":81}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"    public UnknownCommandException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage,error);","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"event nus career fair /from 2pm /to 8pm","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"event ma2104 lecture @ lt32 /from Tuesday 12pm /to Tuesday 2pm","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"deadline cs4230 assignment /by :-) 8pm","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"todo buy kpop concert tickets","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"todo rush individual project","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"deadline buy groceries /by 6pm Sat 5 Aug 2023","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"mark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"mark 5","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"unmark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"deadline do cs2101 reflection /by thursday 19 feb 2023 8am","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"mark 6","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"unmark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":18}}]
