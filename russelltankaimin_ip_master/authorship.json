[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"checkstyle {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"russelltankaimin":21,"-":40}},{"path":"src/main/java/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import parsers.TaskInfoParser;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":" * Represents a command which adds a task into a task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    private String response;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor to create a command which tells Duke to add a specific task to the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * @param response command line input to add task","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    public AddTaskCommand(String response) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        this.response \u003d response;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the procedure of adding a task into the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list to add task into","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui user interface","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for reading and writing data to files","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            Task task \u003d TaskInfoParser.parse(this.response);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            String reply \u003d \"Got it. Added this task, I have:\";","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            return String.format(\"%s\\n %s\\n%d tasks in the list, you have now!\", reply,","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                    task, taskList.getSize());","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":48}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Represents a Command object for which Duke can use to execute operations.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"     * Indicates to Duke whether to exit the program.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"     * @return true if it is a terminal command, false otherwise","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list for command to operate on","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui ui for any response and interaction needed with user","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for command to do IO operations on","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     * @return String representation of list","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"russelltankaimin":24}},{"path":"src/main/java/commands/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Commands that are recognised by Duke.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public enum Commands {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    LIST, MARK, UNMARK, DELETE, BYE, TODO, EVENT, DEADLINE, FIND, SORTDEADLINES","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":8}},{"path":"src/main/java/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" * Represents a command which deletes a task into a task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    private String indexString;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor to create a command which tells Duke to delete a specific task to the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * @param command command line input to add task","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public DeleteTaskCommand(String command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        this.indexString \u003d command;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the procedure of deleting a task into the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list to delete task from","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui user interface","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for reading and writing data to files","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            Task taskToBeDeleted \u003d taskList.get(this.indexString);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            taskList.deleteTask(this.indexString);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            return String.format(\"Removed this task I have:\\n %s\\nLeft with %d tasks, you have\",","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"                    taskToBeDeleted.toString(), taskList.getSize());","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":46}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Command which stops Duke from accepting anymore commands so that it can exit the program,","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        return true;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the procedure of stopping Duke from accepting anymore commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list to do task operations on","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui user interface to display exit message","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for reading and writing data to files","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        ui.displayByeMessage();","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        return ui.getByeMsg();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"russelltankaimin":28}},{"path":"src/main/java/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Command for Duke to find tasks pertaining to a keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    private String keyword;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        TaskList filteredTasks \u003d taskList.findByKeyword(this.keyword);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        filteredTasks.listItems();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        return filteredTasks.getSize() \u003d\u003d 0","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"                ? \"Empty the Jedi Archives are, the task you seek\"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"                : String.format(\"%d tasks in the Jedi Archives, I find\\n %s\",","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"                filteredTasks.getSize(), filteredTasks.listItems());","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"russelltankaimin":30}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Command which lets Duke list out all the tasks currently in the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the procedure of listing all tasks into the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list to traverse and list all tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui user interface","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for reading and writing data to files","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        return taskList.listItems();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"russelltankaimin":26}},{"path":"src/main/java/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Represents a command which marks a task into a task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    private String taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor to create a command which tells Duke to mark a specific task to the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskIndex index of task for Duke to mark","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    public MarkTaskCommand(String taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the procedure of marking a task into the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list to mark task from","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui user interface","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for reading and writing data to files","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"            taskList.markTask(taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            return String.format(\"Nice! Marked this task as done, I have:\\n %s\",","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"                    taskList.get(taskIndex).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":43}},{"path":"src/main/java/commands/SortDeadlinesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":" * Represents a command to sort Deadline tasks only.","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"public class SortDeadlinesCommand extends Command {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    public SortDeadlinesCommand() {","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d taskList.getDeadlineTasks();","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(deadlines);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        Collections.sort(deadlines);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(deadlines);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        TaskList filteredDeadlines \u003d new TaskList(deadlines);","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(filteredDeadlines.listItems());","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        return filteredDeadlines.listItems();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"russelltankaimin":32}},{"path":"src/main/java/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package commands;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Represents a command which unmarks a task into a task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    private String taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor to create a command which tells Duke to unmark a specific task to the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskIndex index of task for Duke to unmark","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public UnmarkTaskCommand(String taskIndex) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        super();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the procedure of unmarking a task into the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list to unmark task from","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @param ui user interface","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @param storage storage for reading and writing data to files","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            taskList.unmarkTask(taskIndex);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            return String.format(\"Ok! Marked this task as not done yet, I have:\\n %s\",","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"                    taskList.get(taskIndex).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    private void flipDialogBox() {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        db.flipDialogBox();","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"        return db;","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"russelltankaimin":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import commands.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import files.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import parsers.CommandParser;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import ui.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":" * The main application runner which allows users to track their tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    private static final String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    private static final String FILEPATH \u003d \"src/main/data/duke.txt\";","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    private CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/yoda.jpeg\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"     * Set up the Main Window via Duke.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            taskList \u003d Storage.loadData(FILEPATH);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            //System.out.println(taskList.listItems());","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            this.dialogContainer.getChildren()","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                .add(DialogBox.getDukeDialog(\"Transmission error I encountered. \"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"                    + \"Jumping into hyperspace, it might be!\", dukeImage));","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    public void setDialogBox(VBox dialogContainer) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"     * Handles response from user input to send to dialog box.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"     * @param input raw command input from the user","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     * @return reply status","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    public String handleResponse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"            if (isExit \u0026\u0026 input.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"                Stage currentStage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"                currentStage.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"            Command command \u003d commandParser.parse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"            String reply \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"            if (isExit) {","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"                reply +\u003d \"\\n\" + saveTasks()","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"                        + \"\\nPress Enter again to exit\";","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"            return reply;","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"     * Save tasks from task list into the file specified by FILEPATH.","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"     * @return status message","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"    public String saveTasks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        String status \u003d storage.saveData(FILEPATH, taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"        return status;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"        return ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"        return taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"russelltankaimin":90,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"public class Launcher {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"russelltankaimin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"            stage.show();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"russelltankaimin":27}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/yoda.jpeg\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * Initialises the settings of the GUI.","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        dukeReply(duke.getUi().getWelcomeMsg());","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        duke.setUp();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        duke.setDialogBox(dialogContainer);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    public void dukeReply(String text) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage));","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        String response \u003d duke.handleResponse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"russelltankaimin":62}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Exception for Duke-specific operations.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public DukeException(String message, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        super(message, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":10}},{"path":"src/main/java/exceptions/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Exception for when Duke encounters a commands with an incomplete command.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" * Exception also thrown when Duke receives a command with incomplete information.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"public class IncompleteCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    public IncompleteCommandException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":11}},{"path":"src/main/java/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Exception for when Duke encounters a command which receives an invalid index.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" * Index received could be a non-positive integer, or types other than an integer.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":" * Index could be out of range of task list too.","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    public InvalidIndexException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":12}},{"path":"src/main/java/exceptions/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Exception for when Duke encounters a command to operate on a task which does not exist.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public NoSuchTaskException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":10}},{"path":"src/main/java/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package exceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Exception for when Duke encounters an unknown commands not recognisable from Commands Enum class.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    public UnknownCommandException(String errorMessage, Throwable error) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"        super(errorMessage, error);","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"russelltankaimin":10}},{"path":"src/main/java/files/DukeFileWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package files;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":" * A file writer for Duke to write tasks into files.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"public class DukeFileWriter {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * Writes tasks into file.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * @param path path of file for Duke to write on","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list from which Duke retrieves and writes tasks into file","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    public static String writeToFile(String path, TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"            FileWriter fileWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"            ArrayList\u003cTask\u003e taskArrayList \u003d taskList.getTaskList();","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"            assert taskArrayList !\u003d null;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"            if (taskArrayList.size() \u003e 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"                for (int i \u003d 0; i \u003c taskArrayList.size() - 1; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"                    fileWriter.write(taskArrayList.get(i).writeTask());","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"                    fileWriter.write(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"                fileWriter.write(taskArrayList.get(taskArrayList.size() - 1).writeTask());","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"            return \"Saving your tasks my padawan, I am\";","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            return String.format(\"%s\\n%s\", \"There is an error writing to file!\", e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"russelltankaimin":39}},{"path":"src/main/java/files/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package files;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import parsers.TaskInfoParser;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":" * Represents an internal storage for Duke and also a medium for Duke to read, load and save tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":" * to and from files of a specific filepath.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    static final String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a task list after loading all the tasks from a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"     * Creates a path and a file if file does not exist and then return an empty task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * @param filePath the path of the file from which Storage will load tasks from","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * @return a task list containing tasks read from file","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     * @throws IOException if reading is not successful","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    public static TaskList loadData(String filePath) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"            taskList \u003d readFromFile(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Hrmm Hrmm, some past tasks I see!!\\n\u0027list\u0027 command to see more, you must enter\");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            return taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            Path path \u003d Paths.get(\"src/main/data\");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            File newTaskFile \u003d new File(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            newTaskFile.createNewFile();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"            return taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a task list from which the file\u0027s tasks will be read and stored into only if the file exists.","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"     * @param path the path of the file from which Storage will retrieve data from","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     * @return a task list containing tasks which are read from file","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"     * @throws FileNotFoundException if file does not exist at the specified path","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    public static TaskList readFromFile(String path) throws FileNotFoundException {","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"            String[] commandArray \u003d line.trim().split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            Task task \u003d TaskInfoParser.parse(commandArray);","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"            taskList.addTaskSilent(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        fileScanner.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        return taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"     * Saves tasks into file located at the filepath specified.","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"     * @param filepath path of the file to write tasks into","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"     * @param taskList task list containing task to write to file","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"    public String saveData(String filepath, TaskList taskList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        return DukeFileWriter.writeToFile(filepath, taskList);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":74}},{"path":"src/main/java/formatters/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package formatters;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":" * Utilities class to process Dates and Time.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Return true if date is of the correct format.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * @param date string date","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * @return true if date is of correct format","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isCorrectDateFormat(String date) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"            return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * Return true if time is of the correct format.","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * @param time string time","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @return true if time is of correct format","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isCorrectTimeFormat(String time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            LocalTime localTime \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"            return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":41}},{"path":"src/main/java/formatters/StringUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package formatters;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":" * Utilities class to process strings.","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"public class StringUtils {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    public StringUtils() {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a concatenated string coming from the start to end index of the array.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * @param array string array","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * @param start start index","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * @param end end index","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * @return concatenated string of strings from start to end index of the array","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    public static String joinString(String[] array, int start, int end) {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        String string \u003d \"\";","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"            string +\u003d array[i] + \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        return string + array[end];","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * Removes whitespace or blanks from an array of strings.","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @param array string array","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @return new string array with no blanks or whitespaces","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    public static String[] removeWhiteSpace(String[] array) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        return Arrays.stream(array).filter(x -\u003e !x.isBlank()).toArray(String[]::new);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Returns an index of the array for which a specific string is located, or -1 otherwise.","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     * @param array string array","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"     * @param string string to be located","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"     * @return index of array in where the string is located, otherwise -1","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    public static int searchString(String[] array, String string) {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"            if (array[i].equals(string)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"                return i;","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        return -1;","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"russelltankaimin":52}},{"path":"src/main/java/parsers/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package parsers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import commands.AddTaskCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import commands.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import commands.Commands;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import commands.DeleteTaskCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import commands.ExitCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import commands.FindTaskCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import commands.MarkTaskCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import commands.SortDeadlinesCommand;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import commands.UnmarkTaskCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.IncompleteCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"import formatters.StringUtils;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":" * Represents a parser which takes a command and outputs a Command object for Duke to execute.","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"public class CommandParser extends Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    static final String BANNER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a Command object which can allow Duke to execute.","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * @param response string input from stdin or command line","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     * @return Command for which Duke can execute","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * @throws UnknownCommandException if command is not recognised by Duke","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    public Command parse(String response) throws UnknownCommandException {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        String[] commands \u003d response.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(BANNER);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"            if (commands.length \u003c 2 \u0026\u0026 isIndexRequiredCommand(commands[0])) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"                throw new IncompleteCommandException(String.format(\"Hrrmmm. Not enough arguments, \"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"                        + \"%s has. Hmm\", commands[0]), null);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"            Commands command;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            if (commands[0].equalsIgnoreCase(\"sort\")","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"                    \u0026\u0026 commands[1].equalsIgnoreCase(\"deadlines\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                command \u003d Commands.SORTDEADLINES;","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"            } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                command \u003d Commands.valueOf(commands[0].toUpperCase());","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"            switch (command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"            case LIST:","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"            case MARK:","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"                return new MarkTaskCommand(commands[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"                return new UnmarkTaskCommand(commands[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"            case DELETE:","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"                return new DeleteTaskCommand(commands[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"            case BYE:","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"            // Fall through allowed as all the commands pertain to task creation.","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"            case TODO:","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"            case EVENT:","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"                return new AddTaskCommand(response);","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"            case FIND:","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"                String keywords \u003d StringUtils.joinString(commands, 1, commands.length - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"                return new FindTaskCommand(keywords.trim());","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"            case SORTDEADLINES:","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"                return new SortDeadlinesCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"                throw new UnknownCommandException(\"Fall to the Dark Side, you must not. \"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"                        + \"Invalid Command!\", null);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"            throw e;","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Fall to the Dark Side, you must not.\"","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"                    + \"Invalid Command!\", null);","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     * Allows Duke to recognise if the particular command requires an index to retrieve a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"     * @param command command from stdin or command line","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"     * @return true if the command requires an index, false otherwise","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isIndexRequiredCommand(String command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        assert !command.isEmpty();","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"        return command.equals(\"mark\")","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"unmark\")","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"delete\")","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"                || command.equals(\"find\");","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":91}},{"path":"src/main/java/parsers/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package parsers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Representation of a parser.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public abstract class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":7}},{"path":"src/main/java/parsers/TaskInfoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package parsers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import formatters.StringUtils;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" * Parser which takes in commands or string responses and returns a task.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"public class TaskInfoParser extends Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * Extracts information from the task to decide which object it is referring","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * to in the command input and returns it accordingly.","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input from stdin","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * @return Task object specific to the command input string","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    public static Task parse(String input) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        String[] commands \u003d input.split(\" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        switch(commands[0]) {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"            return ToDo.create(commands);","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"            return Deadline.create(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        case \"event\":","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"            return Event.create(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        default:","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"            break;","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        throw new UnknownCommandException(String.format(\"Fall to the Dark Side You must Not,\"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"                + \" for not know what %s means!!\", commands[0]), null);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Extracts information rom the task to decide which object it is referring to","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     * based on data from the file and returns it accordingly.","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"     * @param stringArray the data split into individual words into an array","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"     * @return Task object specific to the data representation from file","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    public static Task parse(String[] stringArray) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        int length \u003d stringArray.length;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        stringArray \u003d StringUtils.removeWhiteSpace(stringArray);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        switch (stringArray[0]) {","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        case \"T\":","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"            return ToDo.create(StringUtils.joinString(stringArray, 2, length - 1), stringArray[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        case \"D\":","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"            int byIndex \u003d StringUtils.searchString(stringArray, \"by\");","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"            String description \u003d StringUtils.joinString(stringArray, 2, byIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"            String deadline \u003d stringArray[length - 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"            String time \u003d stringArray[length - 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"            assert(byIndex + 2 \u003d\u003d length - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"            return Deadline.create(description, deadline, time, stringArray[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        case \"E\":","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"            int fromIndex \u003d StringUtils.searchString(stringArray, \"from\");","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            int toIndex \u003d StringUtils.searchString(stringArray, \"to\");","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"            assert(fromIndex + 3 \u003d\u003d toIndex);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"            assert(toIndex + 2 \u003d\u003d length - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"            String description1 \u003d StringUtils.joinString(stringArray, 2, fromIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"            String startDate \u003d stringArray[fromIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"            String startTime \u003d stringArray[fromIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"            String endDate \u003d stringArray[toIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"            String endTime \u003d stringArray[toIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"            return Event.create(description1, startDate, endDate, startTime, endTime, stringArray[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"        return null;","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":73}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.IncompleteCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import formatters.DateTimeUtils;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import formatters.StringUtils;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" * Represents a basic task with a deadline.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"public class Deadline extends Task implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    private String time;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    private String deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"     * @param description what is being due","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"     * @param deadline due date","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * @param time due time","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    public Deadline(String description, String deadline, String time) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        this.deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        this.deadlineTime \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a Deadline task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * @return a Deadline task object based on command input","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    public static Deadline create(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        String[] splitCommands \u003d input.trim().split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        splitCommands \u003d StringUtils.removeWhiteSpace(splitCommands);","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        int deadlineIndex \u003d StringUtils.searchString(splitCommands, \"deadline\");","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        int byIndex \u003d StringUtils.searchString(splitCommands, \"/by\");","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Incomplete arguments for command deadline, I have found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        if (splitCommands[splitCommands.length - 1].equals(\"/by\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Deadline entered, you have not.\", null);","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        if (deadlineIndex + 1 \u003d\u003d byIndex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"No Task Description, You have entered\", null);","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d StringUtils.joinString(splitCommands, deadlineIndex + 1, byIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        String deadlineDatePart \u003d splitCommands[splitCommands.length - 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        String deadlineTimePart \u003d splitCommands[splitCommands.length - 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        if (!DateTimeUtils.isCorrectDateFormat(deadlineDatePart)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid date format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"        } else if (!DateTimeUtils.isCorrectTimeFormat(deadlineTimePart)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid time format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        return new Deadline(description, deadlineDatePart, deadlineTimePart);","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a deadline task based on data read from file.","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"     * @param description string array of commands","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"     * @param marked status of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"     * @return a deadline object based on commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"    public static Deadline create(String description, String deadline, String time, String marked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        Deadline task \u003d new Deadline(description, deadline, time);","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"            task.markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"        return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\" [%s][%s] %s (by: %s %s)%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\" [%s][%s] %s (by: %s %s)%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"        return \"D\";","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the Deadline Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the Deadline Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s (by: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":130,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"russelltankaimin"},"content":"     * Data representation of the deadline task into file.","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"russelltankaimin"},"content":"     * @return data representation of the deadline task.","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"russelltankaimin"},"content":"    public String writeTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"%s %d %s by %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"                super.isCompleted() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"russelltankaimin"},"content":"                this.deadline + \" \" + time);","lastModifiedDate":"2023-01-22"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"russelltankaimin"},"content":"    public LocalDate getDeadlineDate() {","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"russelltankaimin"},"content":"        return deadlineDate;","lastModifiedDate":"2023-02-05"},{"lineNumber":145,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"russelltankaimin"},"content":"    public LocalTime getDeadlineTime() {","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"russelltankaimin"},"content":"        return deadlineTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":149,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"russelltankaimin"},"content":"    public int compareTo(Deadline anotherDeadline) {","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"russelltankaimin"},"content":"        LocalTime otherTime \u003d anotherDeadline.getDeadlineTime();","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"russelltankaimin"},"content":"        LocalDate otherDate \u003d anotherDeadline.getDeadlineDate();","lastModifiedDate":"2023-02-05"},{"lineNumber":155,"author":{"gitId":"russelltankaimin"},"content":"        if (deadlineDate.equals(otherDate)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"russelltankaimin"},"content":"            return deadlineTime.isBefore(otherTime)","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"russelltankaimin"},"content":"                    ? -1","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"russelltankaimin"},"content":"                    : 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"russelltankaimin"},"content":"        return deadlineDate.isBefore(otherDate)","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"russelltankaimin"},"content":"                ? -1","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"russelltankaimin"},"content":"                : 1;","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":164,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":164}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.IncompleteCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import formatters.DateTimeUtils;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import formatters.StringUtils;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" * Represents a basic task that lasts over a period of time.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    private String startTimeString;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    private String endTimeString;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    private String startDateString;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    private String endDateString;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    private LocalTime startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    private LocalTime endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     * @param description what the event is about","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * @param startDate start date","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     * @param endDate end date","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * @param startTime start time","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @param endTime end time","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    public Event(String description, String startDate, String endDate, String startTime, String endTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        this.startDateString \u003d startDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        this.endDateString \u003d endDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        this.startTimeString \u003d startTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        this.endTimeString \u003d endTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        this.startDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        this.endDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        this.startTime \u003d LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        this.endTime \u003d LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"Hmm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create an Event task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"     * @param input command input","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     * @return an Event task object based on command input","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    public static Event create(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        splitInput \u003d StringUtils.removeWhiteSpace(splitInput);","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        int fromIndex \u003d StringUtils.searchString(splitInput, \"/from\");","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        int toIndex \u003d StringUtils.searchString(splitInput, \"/to\");","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || fromIndex + 1 \u003d\u003d toIndex || fromIndex \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(\"Incomplete arguments for command event, I have found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        } else if (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"This command I do not know, only :\\n \"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"                    + \"event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\", null);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        String eventDescription \u003d StringUtils.joinString(splitInput, 1, fromIndex - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        String startDateExtract \u003d splitInput[fromIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"        String startTimeExtract \u003d splitInput[fromIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"        String endDateExtract \u003d splitInput[toIndex + 1];","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"        String endTimeExtract \u003d splitInput[toIndex + 2];","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"        if (!DateTimeUtils.isCorrectDateFormat(startDateExtract)","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectDateFormat(endDateExtract)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid date format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"        } else if (!DateTimeUtils.isCorrectTimeFormat(startTimeExtract)","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectTimeFormat(endTimeExtract)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid time format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        return new Event(eventDescription, startDateExtract, endDateExtract,","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"                startTimeExtract, endTimeExtract);","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method which create an Event from data in file.","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     * @param description what the event is about","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"     * @param startDate start date","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"     * @param endDate end date","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"     * @param startTime start time","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"     * @param endTime end time","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"     * @param marked status of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"     * @return Event object based on data from file.","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"    public static Event create(String description, String startDate, String endDate,","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"                               String startTime, String endTime, String marked) {","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"        if (!DateTimeUtils.isCorrectDateFormat(startDate)","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectDateFormat(endDate)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid date format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"        } else if (!DateTimeUtils.isCorrectTimeFormat(startTime)","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"                || !DateTimeUtils.isCorrectTimeFormat(endTime)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"            throw new UnknownCommandException(\"Not a valid time format, it is!\", null);","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"        Event task \u003d new Event(description, startDate, endDate, startTime, endTime);","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"        if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"            task.markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"        return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\" [%s][%s] %s (from: %s %s to: %s %s)%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\" [%s][%s] %s (from: %s %s to: %s %s)%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":130,"author":{"gitId":"russelltankaimin"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"russelltankaimin"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":135,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":136,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":137,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":138,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":141,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"        return \"E\";","lastModifiedDate":"2023-01-16"},{"lineNumber":143,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":144,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":145,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":146,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the Event Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":147,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the Event Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":148,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":149,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":150,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":151,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s (from: %s %s to: %s %s)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":152,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":153,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"russelltankaimin"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"russelltankaimin"},"content":"                this.startTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"russelltankaimin"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"russelltankaimin"},"content":"                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":159,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":160,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":161,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"russelltankaimin"},"content":"     * Data representation of the Event to be written to file.","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"russelltankaimin"},"content":"     * @return data representation of the event to be written in file","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":167,"author":{"gitId":"russelltankaimin"},"content":"    public String writeTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"%s %d %s from %s %s to %s %s\",","lastModifiedDate":"2023-01-22"},{"lineNumber":169,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"russelltankaimin"},"content":"                super.isCompleted() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":171,"author":{"gitId":"russelltankaimin"},"content":"                this.description,","lastModifiedDate":"2023-01-21"},{"lineNumber":172,"author":{"gitId":"russelltankaimin"},"content":"                this.startDateString,","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"russelltankaimin"},"content":"                this.startTimeString,","lastModifiedDate":"2023-01-22"},{"lineNumber":174,"author":{"gitId":"russelltankaimin"},"content":"                this.endDateString,","lastModifiedDate":"2023-01-22"},{"lineNumber":175,"author":{"gitId":"russelltankaimin"},"content":"                this.endTimeString);","lastModifiedDate":"2023-01-22"},{"lineNumber":176,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":177,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":177}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":" * Represents a task with a description and its status.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"    protected String description;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for Task class.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"     * @param description what the task entails","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(\"Nice! Marked this task as done, I have:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    public void markSilent() {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(\"Ok! Marked this task as not done yet, I have:\");","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"     * Getter of task description.","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"     * @return String representation of the task\u0027s description","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        return this.description;","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"     * Abstract method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"     * Data representation of the task to write to file.","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"     * @return data representation of the task to write to file","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"    public abstract String writeTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":64}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.InvalidIndexException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.NoSuchTaskException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" * Represents a task list which stores all the tasks for Duke.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    private static final String ADDTASKMSG \u003d \"Got it. Added this task, I have:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for Task List.","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor for Task List.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     * @param deadlines deadline tasks to be added into task list at initialisation","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    public TaskList(ArrayList\u003c? extends Task\u003e deadlines) {","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        taskList.addAll(deadlines);","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"     * Adds task to the task list String array.","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"     * @param task name of the task","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\"%s\\n %s%n\", ADDTASKMSG, task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        addTaskSilent(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\"%d tasks in the list, you have now.%n\", getSize());","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    public Task get(String idx) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            int index \u003d Integer.parseInt(idx) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"            return taskList.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"            return null;","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     * Adds task to task list without any messages","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"     * @param task task object","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    public void addTaskSilent(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"     * Outputs the size of non-null Task Objects in Task List.","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"     * @return number of tasks in the task list","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a task list containing tasks filtered by a keyword based on their","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"     * string representation.","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"     * @param keyword the keyword to be used for search","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"     * @return task list containing tasks filtered by a keyword based on their string representation","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"    public TaskList findByKeyword(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        this.taskList.stream()","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"                .filter(x-\u003e x.toString().trim().contains(keyword))","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"                .forEach(filteredTasks::addTaskSilent);","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        if (filteredTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Empty the Jedi Archives are, the task you seek\");","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"            System.out.printf(\"%d tasks in the Jedi Archives, I find%n\", filteredTasks.getSize());","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"        return filteredTasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"    public ArrayList\u003cDeadline\u003e getDeadlineTasks() {","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"        ArrayList\u003cDeadline\u003e deadlineTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        taskList.stream()","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"                .filter(x -\u003e x.getTaskType().equals(\"D\"))","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"                .forEach(task -\u003e {","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"                    deadlineTasks.add(deadline);","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"                });","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"        return deadlineTasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"     * Deletes a task in task list by their index counting from 1","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"     * @param indexString string index","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"    public void deleteTask(String indexString) {","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"            if (idx \u003e this.getSize()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"            System.out.printf(\"Noted. Removed this task I have:\\n %s%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"                    this.taskList.get(idx - 1));","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.remove(idx - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"            System.out.printf(\"%d tasks in the list, you now have%n\", getSize());","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"            throw new NoSuchTaskException(\"In this index, no such task I found\", null);","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", indexString), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"     * Marks a task by its index in the array of Tasks.","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"     * @param index index of interest to mark the task as done","lastModifiedDate":"2023-01-16"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"    public void markTask(String index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.get(idx).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", index), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":130,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"     * Unmarks a task by its index in the array of Tasks.","lastModifiedDate":"2023-01-16"},{"lineNumber":132,"author":{"gitId":"russelltankaimin"},"content":"     * @param index index of interest to unmark the task as undone.","lastModifiedDate":"2023-01-16"},{"lineNumber":133,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":134,"author":{"gitId":"russelltankaimin"},"content":"    public void unmarkTask(String index) {","lastModifiedDate":"2023-01-16"},{"lineNumber":135,"author":{"gitId":"russelltankaimin"},"content":"        int idx;","lastModifiedDate":"2023-01-16"},{"lineNumber":136,"author":{"gitId":"russelltankaimin"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":137,"author":{"gitId":"russelltankaimin"},"content":"            idx \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":138,"author":{"gitId":"russelltankaimin"},"content":"            this.taskList.get(idx).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"            throw new InvalidIndexException(String.format(\"Used to index Task List, %s cannot be\", index), null);","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":143,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":144,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":145,"author":{"gitId":"russelltankaimin"},"content":"     * Prints the names of tasks in the list in the top-down list format with numbered indexes","lastModifiedDate":"2023-01-16"},{"lineNumber":146,"author":{"gitId":"russelltankaimin"},"content":"     * starting from 1 added in chronological order whereas returns empty list string if task list is empty.","lastModifiedDate":"2023-01-16"},{"lineNumber":147,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":148,"author":{"gitId":"russelltankaimin"},"content":"    public String listItems() {","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"russelltankaimin"},"content":"        if (this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(\"Empty, this list is !\");","lastModifiedDate":"2023-01-16"},{"lineNumber":151,"author":{"gitId":"russelltankaimin"},"content":"            return \"Empty, this list is !\";","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"russelltankaimin"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":153,"author":{"gitId":"russelltankaimin"},"content":"            String out \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"russelltankaimin"},"content":"            for (int i \u003d 0; i \u003c this.getSize() - 1; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"russelltankaimin"},"content":"                out +\u003d String.format(\"%d.%s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":157,"author":{"gitId":"russelltankaimin"},"content":"            System.out.println(out + String.format(\"%d.%s\", this.getSize(),","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"russelltankaimin"},"content":"                    taskList.get(this.getSize() - 1).toString()));","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"russelltankaimin"},"content":"            return out + String.format(\"%d.%s\", this.getSize(),","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"russelltankaimin"},"content":"                    taskList.get(this.getSize() - 1).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":162,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":163,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"russelltankaimin"},"content":"     * Getter method to retrieve the task list.","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"russelltankaimin"},"content":"     * @return task list","lastModifiedDate":"2023-02-05"},{"lineNumber":166,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"russelltankaimin"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"russelltankaimin"},"content":"        return taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":170}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import exceptions.IncompleteCommandException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import formatters.StringUtils;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":" * Represents a basic task with no deadline or timeline.","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"     * Constructor method for ToDo task.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"     * @param description what the task is about.","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    private ToDo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a ToDo task based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     * @param commands string array of commands","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     * @return a ToDo object based on commands.","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    public static ToDo create(String[] commands) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        commands \u003d StringUtils.removeWhiteSpace(commands);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        if (commands.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"            throw new IncompleteCommandException(String.format(\"Hrrmmm. Not enough arguments, \"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"                    + \"%s has. Hmm\", \"todo\"), null);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d StringUtils.joinString(commands, 1, commands.length - 1);","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     * Factory method to create a ToDo task based on data read from file.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     * @param description string array of commands","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     * @param marked status of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"     * @return a ToDo object based on commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    public static ToDo create(String description, String marked) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        if (marked.equals(\"1\")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"            newTask.markSilent();","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        return newTask;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"     * Concatenates the strings from [start, end] indices of commands array to form","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"     * required description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"     * @param commands array of commands split by regex patterns like \" \"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"     * @param start start index of commands array (inclusive)","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"     * @param end end index of commands array (inclusive)","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     * @return a string description of a task","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    public static String buildDescription(String[] commands, int start, int end) {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            description +\u003d commands[i] + \" \";","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"        return description + commands[end];","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"     * Checks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"        super.mark();","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\" [%s][%s] %s%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"                this.description);","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"     * Unchecks the status of the task and logs to stdout.","lastModifiedDate":"2023-01-16"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"        super.unmark();","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        System.out.printf(\" [%s][%s] %s%n\",","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"                this.description);","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"     * Method for child classes to return their type.","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"     * @return string type of task","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"        return \"T\";","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"     * String representation of the ToDo Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"     * @return string representation of the ToDo Task.","lastModifiedDate":"2023-01-16"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"[%s][%s] %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"                this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"     * Data representation of the ToDo Task into file.","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"     * @return data representation of the ToDo Task.","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"    public String writeTask() {","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"        return String.format(\"%s %d %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"                this.getTaskType(),","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"                super.isCompleted() ? 1 : 0,","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"                this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":120}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":" * Class which handles the interaction between the Duke and the user.","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    private static final String WELCOME_MSG \u003d \"Greetings! JEDI GRANDMASTER YODA here\\n\" + \"For you, What can I do?\";","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    private static final String BYE_MSG \u003d \"Be Gone, You Must. May the Force be with You!\";","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"     * Displays the Goodbye message.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    public void displayByeMessage() {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(BYE_MSG);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * Listens to standard input for a command.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     * @param scanner Scanner object to read the input","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     * @return String input","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    public String readCommand(Scanner scanner) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    public String getWelcomeMsg() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        return WELCOME_MSG;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    public String getByeMsg() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        return BYE_MSG;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"     * Shows exception message thrown to the UI.","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     * @param exception Exception for UI to display error message","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    public void showLoadingErrorMessage(Exception exception) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        System.out.println(exception.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"russelltankaimin":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"russelltankaimin":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"russelltankaimin":19}},{"path":"src/test/java/parsers/TaskInfoParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package parsers;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import tasks.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"class TaskInfoParserTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    private String simpleCommand \u003d \"todo ip 7\";","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    private String[] simpleCommandArray \u003d {\"T\", \"0\", \"ip\", \"7\"};","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    void parseTaskFromStdin_simpleTask_correctInfo() {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"        TaskInfoParser parser \u003d new TaskInfoParser();","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"        Task simpleTask \u003d parser.parse(simpleCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        assertNotNull(simpleTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"T\", simpleTask.getTaskType());","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"T 0 ip 7\", simpleTask.writeTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"ip 7\", simpleTask.getDescription());","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\" \", simpleTask.getStatusIcon());","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"X\", simpleTask.getStatusIcon());","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    void parseTaskFromFile_simpleTask_correctInfo() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        TaskInfoParser parser \u003d new TaskInfoParser();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        Task simpleTask \u003d parser.parse(simpleCommandArray);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        assertNotNull(simpleTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"T\", simpleTask.getTaskType());","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"T 0 ip 7\", simpleTask.writeTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"ip 7\", simpleTask.getDescription());","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\" \", simpleTask.getStatusIcon());","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"X\", simpleTask.getStatusIcon());","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"russelltankaimin":38}},{"path":"src/test/java/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"class ToDoTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"    private String[] commands \u003d {\"todo\", \"ip 7\"};","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"    private ToDo simpleTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    void createTask_simpleTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(commands);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"        assertNotNull(simpleTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    void testCreateFromFile_simpleTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(\"ip 7\", \"1\");","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        assertNotNull(simpleTask);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.getTaskType(), \"T\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.toString(), \"[T][X] ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.writeTask(), \"T 1 ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    void buildDescription_simpleTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        String[] simpleTaskArrayCommand \u003d {\"todo\", \"ip\", \"7\"};","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(ToDo.buildDescription(simpleTaskArrayCommand, 1, 2), \"ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    void markTask_simpleTask_statusIconX() {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(commands);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.getStatusIcon(), \"X\");","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    void unmarkTask_simpleTask_statusIconEmpty() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(commands);","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.getStatusIcon(), \" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    void getTaskType_simpleTask_getT() {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(commands);","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.getTaskType(), \"T\");","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"    void testToString_simpleTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(commands);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.toString(), \"[T][X] ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.toString(), \"[T][ ] ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    void writeTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        ToDo simpleTask \u003d ToDo.create(commands);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.unmark();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.writeTask(), \"T 0 ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"        simpleTask.mark();","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(simpleTask.writeTask(), \"T 1 ip 7\");","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"russelltankaimin":69}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"event nus career fair /from 2pm /to 8pm","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"event ma2104 lecture @ lt32 /from Tuesday 12pm /to Tuesday 2pm","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"deadline cs4230 assignment /by :-) 8pm","lastModifiedDate":"2023-01-16"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"todo buy kpop concert tickets","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"todo rush individual project","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"deadline buy groceries /by 6pm Sat 5 Aug 2023","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"mark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"mark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"mark 5","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"unmark 2","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"deadline do cs2101 reflection /by thursday 19 feb 2023 8am","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"mark 6","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"unmark 3","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"russelltankaimin":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"russelltankaimin":1,"-":20}}]
