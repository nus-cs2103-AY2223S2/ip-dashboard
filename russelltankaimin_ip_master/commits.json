{"authorDailyContributionsMap":{"russelltankaimin":[{"date":"2023-01-17","commitResults":[{"hash":"afb8a158c233478349134cfb48a8e85d9014d91d","messageTitle":"(Level-1) Build basic command-response mechanism","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":6}}},{"hash":"668f5e98844ed15ce6c85b064262af17deac6a95","messageTitle":"(Level-2) Implement new TaskList class and new command handling logic","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":2}}},{"hash":"f21d598c7aa1dd2f52bfbbd953792b14699eb893","messageTitle":"(Level-3) Implement new Task class and parsing logic","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":34}}},{"hash":"12079ba49e0f5fbd865a0e37556bd8d29ef35f6f","messageTitle":"Include abstract Task class and create subclasses of Task","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":130,"deletions":11}}},{"hash":"b8665ae2b8bcbc134a8d97133013f39966a6fffd","messageTitle":"(Level-4) Add Support for tracking ToDo, Events and Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":5}}},{"hash":"933551401fcdc3bc4fc58af84a0cb6e2d38b23fe","messageTitle":"Fix chatbot\u0027s tone and pre-processing out of bounds bugs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"9f591ba64edaf9404a2cf2ba1a329d17c9cda939","messageTitle":"Add UI I/O redirection testing cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":18,"deletions":0},"java":{"insertions":2,"deletions":2},"sh":{"insertions":1,"deletions":1}}},{"hash":"fc1c25da1a470c5d255444b1f3cd251b40dad2c4","messageTitle":"Create new Exception classes specific to Duke\u0027s functionality","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"26f2c7419cd99b7b24a1e31f91c5ee8c5d048d48","messageTitle":"Make TaskInfoParser more concise with Factory Methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":32}}},{"hash":"2bfc9e65df26d1a17b44111f028fe1cbcd85183e","messageTitle":"(Level-5) Help Duke handle erroneous commands","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":17}}},{"hash":"2df742a404a3716a9a7946622ab83c569c1319be","messageTitle":"Create new exception to handle when no such task exists","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"7e50e4e7bd5c603efdd694ae763659b3bdea58ef","messageTitle":"(Level-6) Include deletion of task capability","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":14}}},{"hash":"d55218f408b247b36c4273e9c5e3e7d6340a9238","messageTitle":"Generalise exceptions to DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":5}}},{"hash":"235c3b56a0720e259450013c6aa19a6b02f69cf3","messageTitle":"Convert Task array to Task ArrayList","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":19}}}]},{"date":"2023-01-19","commitResults":[{"hash":"b323778807ee7960bdb5bd77bec4d00da35ed31b","messageTitle":"Utilise Enums to handle non-task related commands","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":18}}}]},{"date":"2023-01-20","commitResults":[{"hash":"904892fff199e336f0505bd4e2ac7b73cc3c2b51","messageTitle":"Add capability to real file for tasks","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":113,"deletions":6}}}]},{"date":"2023-01-21","commitResults":[{"hash":"330c23ed500619d9b3689fb2d94206e0ef9d6d50","messageTitle":"Modify parsing procedures for tasks with exception handling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":39}}},{"hash":"2fe532b924cc5eeb0dd7b3b50b30da3267299e9f","messageTitle":"Add file writing and saving capability to Duke","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":3},"java":{"insertions":50,"deletions":5}}},{"hash":"e6f91e225bc7fa570a612402b71ad1861c84d45b","messageTitle":"(Level-7) Implement save tasks functionality with directory and file creation","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":7},"java":{"insertions":6,"deletions":4}}}]},{"date":"2023-01-22","commitResults":[{"hash":"fb6742f42669ac6d05c55441bf507f553ab2a57c","messageTitle":"(Level-8) Integrate use of LocalDate and LocalTime into Duke","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":129,"deletions":50}}},{"hash":"5f1382a5793d5b9df102692cf0378da02324ed34","messageTitle":"Add Ui and Storage classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":0}}},{"hash":"75b2586d7c2f8bee4b292c3aae149adc93c589c5","messageTitle":"Add different parsers to encapsulate information logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":6}}},{"hash":"468a805b30c8844873b4895c43fbf7359dd99263","messageTitle":"Implement different Command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":119,"deletions":13}}},{"hash":"b927ae878540ba59a8c88201be0c66b522eb0e51","messageTitle":"Refactor code according to new Ui, Storage, Command classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":112}}}]},{"date":"2023-01-23","commitResults":[{"hash":"23b74572e726551d31290129be4aae3cda7378e7","messageTitle":"Repackage classes into packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":183,"deletions":46},"bat":{"insertions":1,"deletions":1}}},{"hash":"053482626cfbc5d4f542d7130f97ae3d64d9487f","messageTitle":"Rename package names","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":105}}},{"hash":"cd7d4c81e8500b02bb8511a26380aa96760a911b","messageTitle":"Set up gradle with recommended testing enabled","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":1},"java":{"insertions":40,"deletions":0}}},{"hash":"cbbd9b5e7471572a730a646689fd31c0a187ceec","messageTitle":"Add JUnit tests for ToDo and TaskInfoParser classes","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":7}}},{"hash":"c2fe363d2d6b291fcec1a0924f69d3f2e6328fed","messageTitle":"Attempt at writing JavaDocs for some classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":20}}},{"hash":"a18b4905a828a5a550242d1697d6f331a512fbac","messageTitle":"Add JavaDocs to all classes in commands package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":0}}},{"hash":"f603d45b3f856676280590aa61e555378e3b5220","messageTitle":"Add JavaDocs to all remaining classes","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":206,"deletions":25}}},{"hash":"4954b70fd7fc809f4053e7790b53d0866a388fa7","messageTitle":"Fix coding style to task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":30}}}]},{"date":"2023-01-24","commitResults":[{"hash":"53ec2a8e2a43bfa41cde999e7004e83387b67346","messageTitle":"Fix code to adhere to coding style","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":66}}},{"hash":"0e818b1a5ad89113a08ed6db33fa7cc039a15985","messageTitle":"(Level-9) Add filter capability for Duke to search by keyword","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":10}}}]},{"date":"2023-01-30","commitResults":[{"hash":"91c20d13c82fe848d28a06826d423d1a7106aeb5","messageTitle":"Set up Duke GUI skeletal code","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":165,"deletions":1}}},{"hash":"a1b6a8c93d530fd60886977c973f52d5b7963cbe","messageTitle":"Adapt Command classes and CommandParser to output strings for rendering","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":27}}},{"hash":"e45843d39f53a93c02c7bc2795561183cb447127","messageTitle":"Update GUI look and mechanics","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":4},"java":{"insertions":87,"deletions":20}}}]},{"date":"2023-01-31","commitResults":[{"hash":"1fbfbac5e8e2935f44df4b700d6a7ca71e3b97fe","messageTitle":"Complete GUI for Duke","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":14}}},{"hash":"c8f3acfd4e8c524657eefa3f73185bcaa01025cf","messageTitle":"Update checkstyle from previous level","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":4}}}]},{"date":"2023-02-05","commitResults":[{"hash":"1a15aef878327436a05e0a0af4d4700c49057998","messageTitle":"Add assertions to parsers, file classes, and duke.","messageBody":"The code does not have a lot of assertions but instead throws a lot of\nexceptions.\n\nAssertions are a good way to verify assumptions about certain invariants\nstemming from the command parsing and their preconditions too.\n\nLet\u0027s add assertions to our code more often instead of just relying on\ntry, catch statements.\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":8}}},{"hash":"b32d374625dcbf98dae771c44076a83b5aa66d22","messageTitle":"Improve code quality across files.","messageBody":"Remove redundant code from Duke.\n\nThere are many commented-out print statements left in the file after\ndebugging for Level 10 GUI requirements. There are also many redundant\nmethods now that Duke runs with javafx.\n\nCode is now shorter and more concise.\n\nLet\u0027s try to remove any redundant code left in our codebase.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":67}}},{"hash":"5c7490cd0ea3bc3bbc023b042b9279dc2978012c","messageTitle":"Add streams usage to shorten code","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}},{"hash":"b6d12ae9154e5e5036bf0fe95f8b4c44eedd334f","messageTitle":"Fix checkstyle for tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":16}}}]}]},"authorFileTypeContributionMap":{"russelltankaimin":{"java":1798,"md":0,"fxml":35,"sh":0,"bat":1,"gradle":21,"txt":18}},"authorContributionVariance":{"russelltankaimin":74687.32},"authorDisplayNameMap":{"russelltankaimin":"CS2103T-W14-2 TAN ..SELL"}}
