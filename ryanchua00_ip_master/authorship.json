[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"    private String deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"    private char type \u003d \u0027D\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"    public Deadline(String description, String date){","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"    public void setDeadline(String date){","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    public String getDeadline(){","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"        return type;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        return super.toString() + \"(by: \"+ deadline + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"    private String start;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"    private String end;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"    private char type \u003d \u0027E\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    public void setStart(String time){","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"        this.start \u003d time;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public void setEnd(String time){","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"        this.end \u003d time;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    public String getStart(){","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"        return this.start;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public String getEnd(){","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        return this.end;","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"        return type;","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        return super.toString() + \"(from: \" + start + \"to: \" + end + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":30}},{"path":"src/main/java/Roody.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"public class Roody {","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    private List\u003cString\u003e printBuffer;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    public Roody(){","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"        // Assumed no more than 100 tasks","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"        this.printBuffer \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    // Provides basic line ","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    private void line() {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    // Repeats the input ","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    private void speak(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        line();","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"        System.out.println(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"        line();","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    private void speak(List\u003cString\u003e inputs) {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        line();","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        inputs.forEach(x -\u003e System.out.println(x));","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        line();","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"        inputs.clear();","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    // Initial Greeting","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    public void greet() {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        this.printBuffer.add(\"Hello, I\u0027m Roody!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        this.printBuffer.add(\"What can I do for you?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        speak(this.printBuffer);","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    // final greeting","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    public void bye() {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        speak(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    ","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    // Stores input to string","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    private void addToList(String input) {","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        String[] inputs \u003d input.split(\"/\");","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        Task task \u003d new Todo(input.substring(\"todo \".length()));","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        char type \u003d input.charAt(0);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"        if (type \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"        } else if (type \u003d\u003d \u0027d\u0027) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"            // more than one / detected,","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"            if (inputs.length \u003e 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"                new RoodyException(\"I don\u0027t understand that. Don\u0027t use additonal \\\"/\\\" for deadlines.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"                task \u003d new Deadline(inputs[0].substring(\"deadline \".length()), inputs[1].substring(\"by \".length()));","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"        } else if (type \u003d\u003d \u0027e\u0027) {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"            // more or less than two / detected,","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"            if (inputs.length !\u003d 3) {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"                new RoodyException(\"I don\u0027t understand that. Don\u0027t use additonal \\\"/\\\" for events.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"                return;","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"                task \u003d new Event(inputs[0].substring(\"event \".length()), inputs[1].substring(\"from \".length()), inputs[2].substring(\"to \".length()));","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"            new RoodyException(\"Error, wrong input detected\");","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"            return;","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        list.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"  [\" + task.getType() +\"][ ] \" + task.toString()); ","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"        speak(printBuffer);","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"    // Prints entire list in this.list","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"    private void printList() {","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        int listIndex \u003d 0;","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"        if (!list.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"            while (count \u003c list.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"                listIndex \u003d count + 1;","lastModifiedDate":"2023-01-16"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"                stringBuilder.append(listIndex);","lastModifiedDate":"2023-01-16"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"                stringBuilder.append(\".[\");","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"                // get type","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"                stringBuilder.append(list.get(count).getType());","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"                stringBuilder.append(\"][\");","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"                // if is done, set as \u0027X\u0027","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"                if (list.get(count).isDone()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"                    stringBuilder.append(\"X] \");","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"                // not done, set as \u0027 \u0027","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"                    stringBuilder.append(\" ] \");","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"                stringBuilder.append(list.get(count).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"                printBuffer.add(stringBuilder.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"                ","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"                // Clears and updates values","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"                stringBuilder.setLength(0);","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"                count++;","lastModifiedDate":"2023-01-16"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"            speak(printBuffer);","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"            new RoodyException(\"There doesn\u0027t seem to be any tasks in your list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"    // toggles completion status of tasks","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"    private void complete(String index, boolean complete){","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"        int taskIndex \u003d Integer.parseInt(index) - 1; ","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"        if (taskIndex \u003e list.size() - 1 || list.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"            new RoodyException(\"Sorry, that task doesn\u0027t exist\");","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"            Task task \u003d list.get(taskIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"ryanchua00"},"content":"            if (complete) {","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"                task.setDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"                printBuffer.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"                printBuffer.add(\"[\"+ task.getType()+\"][X] \" + task.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"                task.setUnDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"ryanchua00"},"content":"                printBuffer.add(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"ryanchua00"},"content":"                printBuffer.add(\"[\"+ task.getType()+\"][ ] \" + task.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"ryanchua00"},"content":"            speak(printBuffer);","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"    private void delete(String index) {","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"        int taskIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"        if (taskIndex \u003e list.size() - 1 || list.get(taskIndex) \u003d\u003d null) {","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"            new RoodyException(\"Sorry, that task doesn\u0027t exist\");","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"            Task task \u003d list.get(taskIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(\"  [\" + task.getType() + \"][ ] \" + task.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(\"Now you have \" + (list.size()-1) + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"ryanchua00"},"content":"            speak(printBuffer);","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"            list.remove(Integer.parseInt(index) - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"ryanchua00"},"content":"    public static void main(String[] args){","lastModifiedDate":"2023-01-13"},{"lineNumber":148,"author":{"gitId":"ryanchua00"},"content":"        Roody roody \u003d new Roody();","lastModifiedDate":"2023-01-13"},{"lineNumber":149,"author":{"gitId":"ryanchua00"},"content":"        // Sends initial greeting","lastModifiedDate":"2023-01-13"},{"lineNumber":150,"author":{"gitId":"ryanchua00"},"content":"        roody.greet();","lastModifiedDate":"2023-01-13"},{"lineNumber":151,"author":{"gitId":"ryanchua00"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-01-13"},{"lineNumber":152,"author":{"gitId":"ryanchua00"},"content":"        String[] inputs;","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"ryanchua00"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"        // Loops until \"bye\" is input","lastModifiedDate":"2023-01-13"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"        while (true) {","lastModifiedDate":"2023-01-13"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"            System.out.print(\"\u003d\u003e \");","lastModifiedDate":"2023-01-13"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"            // Read input","lastModifiedDate":"2023-01-13"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"ryanchua00"},"content":"            inputs \u003d input.toLowerCase().split(\"\\\\s\", 0);","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"ryanchua00"},"content":"            // If bye, break and print end message","lastModifiedDate":"2023-01-13"},{"lineNumber":161,"author":{"gitId":"ryanchua00"},"content":"            if (inputs[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"                break;","lastModifiedDate":"2023-01-13"},{"lineNumber":163,"author":{"gitId":"ryanchua00"},"content":"            // else, repeat","lastModifiedDate":"2023-01-13"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"            } else if (inputs[0].equals(\"list\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"ryanchua00"},"content":"                roody.printList();","lastModifiedDate":"2023-01-16"},{"lineNumber":166,"author":{"gitId":"ryanchua00"},"content":"            } else if (inputs[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"ryanchua00"},"content":"                if (inputs.length \u003d\u003d 2) {                    ","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"ryanchua00"},"content":"                    roody.delete(inputs[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"ryanchua00"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"ryanchua00"},"content":"                    new RoodyException(\"Please enter a index number to be deleted\");","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"ryanchua00"},"content":"            // Checks for second input","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"ryanchua00"},"content":"            } else if (inputs[0].equals(\"mark\") || inputs[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"ryanchua00"},"content":"                if (inputs.length \u003d\u003d 2) {                    ","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"ryanchua00"},"content":"                    roody.complete(inputs[1], inputs[0].equals(\"mark\"));","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"ryanchua00"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"ryanchua00"},"content":"                    new RoodyException(\"Please enter a index number to be marked/unmarked\");","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"ryanchua00"},"content":"            } else if (inputs[0].equals(\"todo\") || inputs[0].equals(\"deadline\") || inputs[0].equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"ryanchua00"},"content":"                if (inputs.length \u003e 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"ryanchua00"},"content":"                    roody.addToList(input);","lastModifiedDate":"2023-01-16"},{"lineNumber":182,"author":{"gitId":"ryanchua00"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"                    new RoodyException(\"Tasks require a description\");","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"                new RoodyException(\"I don\u0027t quite understand that.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"        scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"        roody.bye();","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"ryanchua00":192}},{"path":"src/main/java/RoodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"public class RoodyException{","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"    private String message \u003d \"Oh no :( \";","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"    public RoodyException(String s) {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"        this.message +\u003d s;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"        line();","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"        System.out.println(this.message);","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"        line();","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    // Provides basic line ","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    private void line() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ryanchua00":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"    private boolean done;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"    private String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"    public Task(String description) {  ","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"        this.done \u003d false; ","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"        return this.done;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public void setUnDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"        return \u0027a\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":24}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"    private char type \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"    public Todo(String description){","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"        return type;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    public String toString(){","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"        return super.toString() + \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"todo JS2230 readings ","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"event Japan Trip /from January 25th /to February 2nd","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"deadline Japan Admin (Mum) /by Thursday","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"todo Lunch","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"delete 4","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ryanchua00":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"java -classpath ..\\bin Roody \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"CMD /k","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ryanchua00":3,"-":20}}]
