[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    mainClassName \u003d \"roody.Roody\"","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    archiveBaseName \u003d \"roody\"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryanchua00":7,"-":39}},{"path":"src/main/java/roody/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":" * Represents a Deadline Task","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    private char type \u003d \u0027D\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"     * Creates a Deadline with specified description and due date.","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"     * @param date The due date of the deadline.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    public void setDeadline(LocalDate date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        this.deadline \u003d date;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        return super.saveTask() + \u0027|\u0027 + this.type + \u0027|\u0027 + this.deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        return type;","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        char done \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        if (isDone()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"            done \u003d \u0027X\u0027;","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        return \"[D][\" + done + \"] \" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"            + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":44}},{"path":"src/main/java/roody/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":" * Represents an Event Task.","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    private LocalDate start;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    private LocalDate end;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    private char type \u003d \u0027E\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"     * Creates an Event with specified description, start and end date.","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"     * @param start The start date of the Event.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"     * @param end The end date of the Event.","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public void setStart(LocalDate time) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        this.start \u003d time;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    public void setEnd(LocalDate time) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        this.end \u003d time;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"        return this.start;","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        return this.end;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        return super.saveTask() + \u0027|\u0027 + this.type + \u0027|\u0027 + this.start + \u0027|\u0027 + this.end;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        return type;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        char done \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        if (isDone()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"            done \u003d \u0027X\u0027;","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"        return \"[E][\" + done + \"] \" + super.toString() + \" (from: \"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"            + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"            + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":54}},{"path":"src/main/java/roody/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":" * Represents a parser to take in user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"public class Parser {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    public Parser() {}","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"     * Returns a array of strings with commands that are extracted from user input.","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"     * @param command Input string.","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"     * @return  Commands.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"     * @throws RoodyException If faulty input is detected.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    public static String[] parse(String command) throws RoodyException {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"        // splits once by whitespace to filter by first input","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"        String[] commands \u003d command.toLowerCase().split(\"\\\\s\", 2);","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"        if (commands[0].equals(\"event\") || commands[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"            // split by /","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"            String[] splitCmd \u003d command.split(\"/\", 0);","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"            // case of no extra input","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"            if (splitCmd.length \u003d\u003d commands.length) {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"                throw new RoodyException(\"No date was detected! - /by {date} /from {date} /to {date}\");","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"            // seperates command from description","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"            commands \u003d new String[splitCmd.length + 1];","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"            for (int i \u003d 1; i \u003c splitCmd.length; i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"                commands[i + 1] \u003d splitCmd[i];","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"            String[] cmdAndDesc \u003d splitCmd[0].split(\"\\\\s\", 2);","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"            commands[0] \u003d cmdAndDesc[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"            commands[1] \u003d cmdAndDesc[1];","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"            // seperates additional inputs","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"            commands[2] \u003d splitCmd[1].split(\"\\\\s\", 0)[1];","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"            if (commands[0].equals(\"event\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"                commands[3] \u003d splitCmd[2].split(\"\\\\s\", 0)[1];","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        for (String str : commands) {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"            str.trim();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        return commands;","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"ryanchua00":47}},{"path":"src/main/java/roody/Roody.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * Represents a CLI chatbot named Roody.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"public class Roody {","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    /** Stores tasks */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    /** Manages loading/saving of task data */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    /** Manages GUI */","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * Creates a chatbot with specified filepath to task data.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     * @param filepath The filepath to task data.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public Roody(String filepath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        // Assumed no more than 100 tasks","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    // toggles completion status of tasks","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    private void completeTask(int index, boolean complete) throws RoodyException {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        if (index \u003e list.size() - 1 || list.get(index) \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"            throw new RoodyException(\"Sorry, that task doesn\u0027t exist\");","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"            if (complete) {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"                task.setDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"                task.setUnDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"            ui.showMarkStatus(complete, task);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    private void findTaskByKeyword(String keyword) throws RoodyException {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"            // Splits by \"|\"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"            String[] words \u003d task.saveTask().split(\"\\\\|\");","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"            // Further splits description by whitespace","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"            String[] desc \u003d words[0].split(\"\\\\s\");","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"            for (String word : desc) {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"                // Searches for a match to keyword","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"                if (word.equals(keyword)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"    private void deleteTask(int index) throws RoodyException {","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        if (index \u003e list.size() - 1 || list.get(index) \u003d\u003d null) {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"            throw new RoodyException(\"Sorry, that task doesn\u0027t exist\");","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"            list.remove(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"            ui.showDeleteTask(task, list.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"     * Runs the main process of chatbot","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"    public void run() {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"        // Sends initial greeting","lastModifiedDate":"2023-01-13"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"        ui.greet();","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        list \u003d storage.loadFile();","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"        Task task;","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"            ui.startNextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"                String command \u003d scanner.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"                String[] commands \u003d Parser.parse(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"                switch (commands[0]) {","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"                case \"list\":","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"                    ui.printList(list);","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"                    if (commands.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"                        throw new RoodyException(\"Tasks require a description\");","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"                    task \u003d new Todo(commands[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"                    list.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"                    ui.showAddTask(task, list.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"                    if (commands.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"                        throw new RoodyException(\"Tasks require a description\");","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"                    try {","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"                        task \u003d new Deadline(commands[1], LocalDate.parse(commands[2]));","lastModifiedDate":"2023-02-05"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"                        list.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"                        ui.showAddTask(task, list.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"                        throw new RoodyException(\"Accepted date format is yyyy-mm-dd.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"                case \"event\":","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"                    if (commands.length \u003c 2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"                        throw new RoodyException(\"Tasks require a description\");","lastModifiedDate":"2023-02-04"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"                    try {","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"                        task \u003d new Event(commands[1], LocalDate.parse(commands[2]), LocalDate.parse(commands[3]));","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"                        list.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"ryanchua00"},"content":"                        ui.showAddTask(task, list.size());","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"                        throw new RoodyException(\"Accepted date format is yyyy-mm-dd.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"ryanchua00"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"ryanchua00"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"ryanchua00"},"content":"                    if (commands.length !\u003d 2) {","lastModifiedDate":"2023-02-04"},{"lineNumber":129,"author":{"gitId":"ryanchua00"},"content":"                        throw new RoodyException(\"Please enter a index number to be marked/unmarked/deleted\"","lastModifiedDate":"2023-02-04"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"                                + \" - \\\"mark/unmark/delete {index}\\\"\");","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"                    int index \u003d Integer.parseInt(commands[0]) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"                    if (commands[0].equals(\"delete\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"                        deleteTask(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"                    } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"                        completeTask(index, commands[0].equals(\"mark\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"                case \"bye\":","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"                    isExit \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"                    break;","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"ryanchua00"},"content":"                default:","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"                    throw new RoodyException(\"I don\u0027t quite understand that.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-01-13"},{"lineNumber":145,"author":{"gitId":"ryanchua00"},"content":"            } catch (RoodyException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"ryanchua00"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":147,"author":{"gitId":"ryanchua00"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":148,"author":{"gitId":"ryanchua00"},"content":"            } finally {","lastModifiedDate":"2023-02-04"},{"lineNumber":149,"author":{"gitId":"ryanchua00"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":150,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":151,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":152,"author":{"gitId":"ryanchua00"},"content":"        ui.bye();","lastModifiedDate":"2023-02-04"},{"lineNumber":153,"author":{"gitId":"ryanchua00"},"content":"        scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"        storage.saveFile(list);","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"     * Runs Roody\u0027s main process.","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"ryanchua00"},"content":"     * @param args Args.","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"ryanchua00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"        Roody roody \u003d new Roody(\"./data/Roody.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"ryanchua00"},"content":"        roody.run();","lastModifiedDate":"2023-02-03"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":165,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"ryanchua00":165}},{"path":"src/main/java/roody/RoodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":" * Represents a custom exception for Roody chatbot.","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"public class RoodyException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    public RoodyException(String s) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"        super(\"Oh no :( \" + s);","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ryanchua00":10}},{"path":"src/main/java/roody/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import java.io.File;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":" * Represents the data storage handler","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"public class Storage {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    /** filepath to data file */","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    private String filePath;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    /** filepath to folder */","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    private String defaultFolderPath \u003d \"./data\";","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"     * Creates a Storage handler with specified filepath to save data.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * @param filePath The filepath to a file to save data on.","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"     * Returns information from the data file.","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"     * If folder not present, creates a new folder.","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     * If file not present, creates a new file.","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"     * @return Tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"            File data \u003d new File(filePath);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"            File folder \u003d new File(defaultFolderPath);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"            // check if file exists","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"                folder.mkdir();","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"            if (data.createNewFile()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"                //System.out.println(\"File created: \" + data.getName());","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"            } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"                //System.out.println(\"File already exists.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"                Scanner s \u003d new Scanner(data);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"                String task \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"                    task \u003d s.nextLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"                    String[] inputs \u003d task.split(\"\\\\|\", 5);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"                    //System.out.println(Arrays.toString(inputs));","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"                    // filter by task","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"                    Task temp;","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"                    if (inputs[2].equals(\"T\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"                        temp \u003d new Todo(inputs[0]);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"                    } else if (inputs[2].equals(\"D\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"                        temp \u003d new Deadline(inputs[0], LocalDate.parse(inputs[3]));","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"                    } else if (inputs[2].equals(\"E\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"                        temp \u003d new Event(inputs[0], LocalDate.parse(inputs[3]), LocalDate.parse(inputs[4]));","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"                    } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"                        new RoodyException(\"Error loading text\");","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"                        s.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"                        return null;","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"                    if (inputs[1].equals(\"true\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"                        temp.setDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"                    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"                    list.add(temp);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"                s.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"        return list;","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"     * Saves Task information, if any, into a preset file.","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"     * @param list The ArrayList of Tasks to be saved.","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"    public void saveFile(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        Path output \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"            buffer.add(t.saveTask());","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"            Files.write(output, buffer);","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"ryanchua00":96}},{"path":"src/main/java/roody/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":" * Represents a Task.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    private boolean done;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"    private String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"     * Creates a Task with specified description.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"        return this.done;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public void setUnDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        return \u0027a\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"     * Returns the Task in string format","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"     * @return Task for saving.","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        return this.description + \u0027|\u0027 + this.done;","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        return this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":42}},{"path":"src/main/java/roody/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":" * Represents a Todo Task.","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    private char type \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"     * Creates a Todo with specified description.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"     * @param description The specified description of the todo.","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public String saveTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"        return super.saveTask() + \u0027|\u0027 + this.type;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    public char getType() {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        return type;","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        char done \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        if (isDone()) {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"            done \u003d \u0027X\u0027;","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"        return \"[T][\" + done + \"] \" + super.toString() + \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ryanchua00":32}},{"path":"src/main/java/roody/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":" * Represents a CLI User Interface.","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"public class Ui {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"    /** Stores a list of strings to be printed */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    private List\u003cString\u003e printBuffer;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"     * Creates a User Interface that prompts the user from CLI","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    public Ui() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"        this.printBuffer \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"     * Prints basic line","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"     * Prints start of line","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    public void startNextLine() {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"        System.out.print(\"\u003d\u003e \");","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"     * Prints output to console using specified input.","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"     * @param input Input string to be printed.","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    public void speak(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        showLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        System.out.println(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"     * Prints output to console using specified input.","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"     * @param inputs List of input to be printed.","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    public void speak(List\u003cString\u003e inputs) {","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        showLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        inputs.forEach(x -\u003e System.out.println(x));","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        inputs.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"     * Prints a successful task addition to console for user.","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"     * @param task  Task that has been added.","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"     * @param listLength Length of the current list after addition.","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"    public void showAddTask(Task task, int listLength) {","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Now you have \" + listLength + \" tasks in the list.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        speak(printBuffer);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"     * Prints a successful task deletion to console for user.","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"     * @param task  Task that has been added.","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"     * @param listLength Length of the current list after deletion.","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"    public void showDeleteTask(Task task, int listLength) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Now you have \" + listLength + \" tasks in the list.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        speak(printBuffer);","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"     * Prints a successful marking/unmarking of task to console for user.","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"     * @param complete New status of task.","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"     * @param task  Task that has been added.","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"    public void showMarkStatus(boolean complete, Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"        if (complete) {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"        speak(printBuffer);","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"     * Shows tasks that are found with relevant keywords to console.","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"     * @param list  List of found tasks.","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"     * @throws RoodyException If no matching tasks found.","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e list) throws RoodyException {","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"            throw new RoodyException(\"No matching tasks in your list!\");","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"        Integer listIndex \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"            listIndex++;","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(listIndex.toString() + \u0027.\u0027 + task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"        speak(printBuffer);","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"     * Prints tasks in given list to console.","lastModifiedDate":"2023-02-05"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"     * @param list List of tasks to be printed.","lastModifiedDate":"2023-02-05"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"     * @throws RoodyException If not tasks in list.","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"    public void printList(ArrayList\u003cTask\u003e list) throws RoodyException {","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"            throw new RoodyException(\"There doesn\u0027t seem to be any tasks in your list.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"        printBuffer.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"        Integer listIndex \u003d 0;","lastModifiedDate":"2023-02-05"},{"lineNumber":120,"author":{"gitId":"ryanchua00"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"            listIndex++;","lastModifiedDate":"2023-02-05"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"            printBuffer.add(listIndex.toString() + \u0027.\u0027 + task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"        speak(printBuffer);","lastModifiedDate":"2023-02-05"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":128,"author":{"gitId":"ryanchua00"},"content":"     * Prints basic greeting.","lastModifiedDate":"2023-02-05"},{"lineNumber":129,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"    public void greet() {","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"        this.printBuffer.add(\"Hello, I\u0027m Roody!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"        this.printBuffer.add(\"What can I do for you?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"        speak(this.printBuffer);","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"        showLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"     * Prints basic farewell.","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"    public void bye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"        speak(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"ryanchua00"},"content":"        showLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"ryanchua00":144}},{"path":"src/test/java/roody/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    public void testType() {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(new Deadline(\"\", LocalDate.now()).getType(), \u0027D\u0027);","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    public void testLocalDateConversion() {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"        Task deadline \u003d new Deadline(\"\", date);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"        String testString \u003d \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(deadline.toString(), testString);","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public void testSavingTask() {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        Task deadline \u003d new Deadline(\"sleep\", date);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        String testString \u003d \"sleep|false|D|\" + date.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(deadline.saveTask(), testString);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ryanchua00":30}},{"path":"src/test/java/roody/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package roody;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"    public void testParse_singleInput() {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"            String[] commands \u003d Parser.parse(\"todo dinner\");","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(\"todo\", commands[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(\"dinner\", commands[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"        } catch (RoodyException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    // To be achived in later implementations","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    /*","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    public void testParse_multipleInputs() {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        String[] commands \u003d Parser.parse(\"todo dinner tonight\");","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(\"todo\", commands[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(\"dinner tonight\", commands[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"ryanchua00":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"todo JS2230 readings ","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"event Japan Trip /from January 25th /to February 2nd","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"deadline Japan Admin (Mum) /by Thursday","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"unmark 3","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"mark 4","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"todo Lunch","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"delete 4","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ryanchua00":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"java -classpath ..\\bin Roody \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"CMD /k","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"ryanchua00":3,"-":20}}]
