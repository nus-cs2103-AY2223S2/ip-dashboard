[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sachindavid96":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"    private UI ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"    private TaskList list;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"    public Duke () {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"        list \u003d new TaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"        storage \u003d new Storage(list);","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"        parser \u003d new Parser(storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"    public void run() {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"                parser.parseAndExecute(userInput, list);","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"                ui.printInvalidDateFormatMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"                userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"            ui.printNextCommandMessage();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Thanks and have a great day ahead!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"sachindavid96":47,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"    public DukeException (String message) {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"        super(message);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"sachindavid96":8}},{"path":"src/main/java/duke/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"    public InvalidDateFormatException () {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"        super(\"Please re-enter your request with the date in this format: dd-Mmm-yyyy\");","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"sachindavid96":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"import task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"public class Parser {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"    Storage storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"    public Parser(Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    public void parseAndExecute(String userInput, TaskList list) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"            String[] userInputComponents \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"            String requestType \u003d userInputComponents[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"                Request request \u003d Request.getRequest(requestType);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"                switch (request) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"                    case LIST: {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"                        list.printItems();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"                        list.getTaskDetails();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"                    case MARK: {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"                        int taskNumber \u003d Integer.parseInt(userInputComponents[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"                        list.markDone(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"                        list.getTaskDetails();","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"                    case UNMARK: {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"                        int taskNumber \u003d Integer.parseInt(userInputComponents[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"                        list.markUndone(taskNumber);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"                        list.getTaskDetails();","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"                    case TODO: {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"                        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"                            UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"                            list.addTask(new ToDo(userInput.substring(5)));","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"                            list.getTaskDetails();","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"                            UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"sachindavid96"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"sachindavid96"},"content":"                            System.out.println(\"The description of todo cannot be empty!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"sachindavid96"},"content":"                        }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"sachindavid96"},"content":"                    case DEADLINE: {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"sachindavid96"},"content":"                        String[] splitDeadline \u003d userInput.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"sachindavid96"},"content":"                        String description \u003d splitDeadline[0].substring(9);","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"sachindavid96"},"content":"                        String deadline \u003d splitDeadline[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"sachindavid96"},"content":"                        list.addTask(new Deadline(description, deadline));","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"sachindavid96"},"content":"                        list.getTaskDetails();","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"sachindavid96"},"content":"                    case EVENT: {","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"sachindavid96"},"content":"                        String[] splitTimes \u003d userInput.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"sachindavid96"},"content":"                        String description \u003d splitTimes[0].substring(6);","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"sachindavid96"},"content":"                        String startDayTime \u003d splitTimes[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"sachindavid96"},"content":"                        String endDayTime \u003d splitTimes[2];","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"sachindavid96"},"content":"                        list.addTask(new Event(startDayTime, endDayTime, description));","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"sachindavid96"},"content":"                        list.getTaskDetails();","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"sachindavid96"},"content":"                    case DELETE: {","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"sachindavid96"},"content":"                        list.deleteTask(Integer.parseInt(userInputComponents[1]));","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"sachindavid96"},"content":"                        UI.horizontalLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"sachindavid96"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"sachindavid96"},"content":"                    default: {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"sachindavid96"},"content":"                        System.out.println(\"You may have accidentally entered in an invalid command. Please re-enter!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"sachindavid96"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"sachindavid96"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"sachindavid96"},"content":"                System.out.println(\"Invalid duke.Duke duke.Request; please re-enter your request!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"sachindavid96"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"sachindavid96"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"sachindavid96"},"content":"            storage.updateTasksInFile(list);","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"sachindavid96"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"Unable to open storage file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"sachindavid96":122}},{"path":"src/main/java/duke/Request.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"// obtained the idea to use enums this way from 4ndrelim","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"public enum Request {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"    HELP(\"help\");","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"    private String name;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"    Request (String name) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    public static Request getRequest(String name) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"        for (Request r : values()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"            if (name.equals(r.name)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"                return r;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"        throw new DukeException(name);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"sachindavid96":30}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import duke.InvalidDateFormatException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"import task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import task.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"public class Storage {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    public Storage(TaskList list) {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"        File Task_Data \u003d createStorageFile(list);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"            loadTaskData(Task_Data, list);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"        } catch (StorageFileFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"There is an error in the format of at least one date in the duke.Storage Data File\");","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"    public File createStorageFile(TaskList list) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"        File Task_Data \u003d new File(\"task.Task Data.txt\");","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"            Task_Data.createNewFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"        } catch (FileAlreadyExistsException e){ // nothing should be done if the file already exists","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"The file already exists\");","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"File creation was unsuccessful\");","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"        return Task_Data;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"    public void updateTasksInFile (TaskList list) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"        PrintWriter logger \u003d new PrintWriter(\"task.Task Data.txt\");","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"        for (int i \u003d 0; i \u003c list.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"            logger.write(list.getTaskAtIndex(i) + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"        logger.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"    public void loadTaskData (File taskDataFile, TaskList list) throws StorageFileFormatException {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"            Scanner scanner \u003d new Scanner(taskDataFile);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"sachindavid96"},"content":"                String taskDescription \u003d task.substring(7);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"sachindavid96"},"content":"                boolean isMarked \u003d (task.charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"sachindavid96"},"content":"                char taskIdentifier \u003d task.charAt(1);","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"sachindavid96"},"content":"                if (taskIdentifier \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"sachindavid96"},"content":"                    list.addTaskWhenLoading(new ToDo(taskDescription));","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"sachindavid96"},"content":"                    System.out.println(list.getNumberOfTasks());","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"sachindavid96"},"content":"                    if (isMarked) {","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"sachindavid96"},"content":"                       list.markDone(list.getNumberOfTasks());","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"sachindavid96"},"content":"                } else if (taskIdentifier \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"sachindavid96"},"content":"                    String[] reformattedDateAndTimeComponents \u003d reformatEventDateAndTime(taskDescription);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"sachindavid96"},"content":"                    String startDayTime \u003d reformattedDateAndTimeComponents[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"sachindavid96"},"content":"                    String endDayTime \u003d reformattedDateAndTimeComponents[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"sachindavid96"},"content":"                    System.out.println(startDayTime);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"sachindavid96"},"content":"                    System.out.println(endDayTime);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"sachindavid96"},"content":"                    String[] splitDescription \u003d taskDescription.split(\"\\\\.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"sachindavid96"},"content":"                    String description \u003d splitDescription[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"sachindavid96"},"content":"                    list.addTaskWhenLoading(new Event(startDayTime, endDayTime, description));","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"sachindavid96"},"content":"                    if (isMarked) {","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"sachindavid96"},"content":"                        list.markDone(list.getNumberOfTasks());","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"sachindavid96"},"content":"                } else if (taskIdentifier \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"sachindavid96"},"content":"                    String[] splitDeadline \u003d taskDescription.split(\"\\\\.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"sachindavid96"},"content":"                    String description \u003d splitDeadline[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"sachindavid96"},"content":"                    String deadline \u003d splitDeadline[1].split(\":\")[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"sachindavid96"},"content":"                    try {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"sachindavid96"},"content":"                        String reformattedDate \u003d reformatDeadline(taskDescription);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"sachindavid96"},"content":"                        list.addTaskWhenLoading(new Deadline(description, reformattedDate));","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"sachindavid96"},"content":"                    } catch (InvalidDateFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"sachindavid96"},"content":"                        throw new StorageFileFormatException();","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"sachindavid96"},"content":"                    if (isMarked) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"sachindavid96"},"content":"                        list.markDone(list.getNumberOfTasks());","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"sachindavid96"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"sachindavid96"},"content":"                } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"sachindavid96"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"sachindavid96"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"sachindavid96"},"content":"            scanner.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"sachindavid96"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"The file was not found\");","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"sachindavid96"},"content":"    private String reformatDeadline(String taskDetails) {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"sachindavid96"},"content":"        String[] splitDeadline \u003d taskDetails.split(\"\\\\.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"sachindavid96"},"content":"        String description \u003d splitDeadline[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"sachindavid96"},"content":"        String deadline \u003d splitDeadline[1].split(\":\")[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"sachindavid96"},"content":"        String dateDetected \u003d deadline.split(\",\")[1].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"sachindavid96"},"content":"        String[] dateComponents \u003d dateDetected.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"sachindavid96"},"content":"        String day \u003d dateComponents[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"sachindavid96"},"content":"        String month \u003d dateComponents[1].substring(0, 3);","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"sachindavid96"},"content":"        String year \u003d dateComponents[2];","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"sachindavid96"},"content":"        String reformattedDate \u003d day + \"-\" + month + \"-\" + year;","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"sachindavid96"},"content":"        return reformattedDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"sachindavid96"},"content":"    private String[] reformatEventDateAndTime(String taskDetails) {","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"sachindavid96"},"content":"        String[] splitDatesAndTimes \u003d taskDetails.split(\"\\\\.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"sachindavid96"},"content":"        String startDate \u003d splitDatesAndTimes[1].split(\",\")[1].split(\"@\")[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"sachindavid96"},"content":"        String startTime \u003d splitDatesAndTimes[1].split(\",\")[1].split(\"@\")[1].substring(1, 6);","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"sachindavid96"},"content":"        String endDate \u003d splitDatesAndTimes[2].split(\",\")[1].split(\"@\")[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"sachindavid96"},"content":"        String endTime \u003d splitDatesAndTimes[2].split(\",\")[1].split(\"@\")[1].substring(1, 6);","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"sachindavid96"},"content":"        String[] startDateComponents \u003d startDate.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"sachindavid96"},"content":"        String startDay \u003d startDateComponents[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"sachindavid96"},"content":"        String startMonth \u003d startDateComponents[1].substring(0, 3);","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"sachindavid96"},"content":"        String startYear \u003d startDateComponents[2];","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"sachindavid96"},"content":"        String startDetails \u003d startDay + \"-\" + startMonth + \"-\" + startYear + \" \" + startTime.replace(\":\", \"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"sachindavid96"},"content":"        String[] endDateComponents \u003d endDate.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"sachindavid96"},"content":"        String endDay \u003d startDateComponents[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"sachindavid96"},"content":"        String endMonth \u003d startDateComponents[1].substring(0, 3);","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"sachindavid96"},"content":"        String endYear \u003d startDateComponents[2];","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"sachindavid96"},"content":"        String endDetails \u003d endDay + \"-\" + endMonth + \"-\" + endYear + \" \" + endTime.replace(\":\", \"\");;","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"sachindavid96"},"content":"        return new String[] {startDetails.strip(), endDetails.strip()};","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"sachindavid96":140}},{"path":"src/main/java/duke/StorageFileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"public class StorageFileFormatException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"    public StorageFileFormatException () {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"        super(\"There is an error in the format of the data in the Data duke.Storage File\");","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"sachindavid96":9}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"public class UI {","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"    private static final String FIRST_COMMAND_MESSAGE \u003d \"You can let me know by typing it below!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"    private static final String NEXT_COMMAND_MESSAGE \u003d \"What can I do for you next?\";","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"    private static final String INVALID_DATE_FORMAT_MESSAGE \u003d \"Please re-enter the request with the date in the \\n\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"                                                              \"following format: dd-Mmm-yyyy\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"    public void printWelcome(){","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"        UI.horizontalLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Hello there! I am: \\n\" + logo + \"\\nWhat can I help you with!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(FIRST_COMMAND_MESSAGE);","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"        UI.horizontalLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"    public void printNextCommandMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(NEXT_COMMAND_MESSAGE);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"    public void printInvalidDateFormatMessage() {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(INVALID_DATE_FORMAT_MESSAGE);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"    public static void horizontalLine() {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"            char horizontalBar \u003d \u0027\\u2015\u0027;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"            System.out.print(horizontalBar);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"sachindavid96":41}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"import duke.InvalidDateFormatException;","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"    String deadlineString;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"    LocalDate deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"    DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    public Deadline(String description, String deadlineString) throws InvalidDateFormatException {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"        this.deadlineString \u003d deadlineString.strip();","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"            this.deadline \u003d LocalDate.parse(this.deadlineString, formatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"           throw new InvalidDateFormatException();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"        String formattedDate \u003d deadline.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"        return (isDone? \"[D][X] \" : \"[D][ ] \") + description + (\". task.Deadline: \"  + formattedDate);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"sachindavid96":33}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"    String startDayTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"    String endDayTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"    String deadlineString;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"    LocalDate startDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"    LocalDate endDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    LocalTime startTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"    LocalTime endTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"    DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\");","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"    DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"    public Event(String startTime, String endTime, String description) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"        String[] startComponents \u003d startTime.strip().split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"        String[] endComponents \u003d endTime.strip().split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"        this.startDayTime \u003d startTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"        this.endDayTime \u003d endTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"            this.startDate \u003d LocalDate.parse(startComponents[0].strip(), formatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"            this.startTime \u003d LocalTime.parse(startComponents[1].strip(), timeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"            this.endDate \u003d LocalDate.parse(endComponents[0].strip(), formatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"            this.endTime \u003d LocalTime.parse(endComponents[1].strip(), timeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"                this.startDate \u003d LocalDate.parse(startComponents[0].strip(), formatter2);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"                this.startTime \u003d LocalTime.parse(startComponents[1].strip(), timeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"                this.endDate \u003d LocalDate.parse(endComponents[0].strip(), formatter2);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"                this.endTime \u003d LocalTime.parse(endComponents[1].strip(), timeFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"                System.out.println(\"Please enter the date in this format: dd-MMM-YYYY OR dd/MMM/YYYY\");","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"                System.out.println(\"Please enter the time in this format: HHmm\");","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"        String formattedStartDate \u003d startDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"        String formattedEndDate \u003d endDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"        return (isDone? \"[E][X] \" : \"[E][ ] \") + description + \". From: \" + formattedStartDate + \" @ \" +","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"                this.startTime.toString() + \" hrs\" +","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"                \". To: \" + formattedEndDate + \" @ \" + this.endTime.toString() + \" hrs\";","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"sachindavid96":58}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"    protected final String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"    public Task (String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"    public Task createTask(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"        return new Task(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"    public void mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"        return (isDone? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"sachindavid96":31}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"    private int numberOfTasks \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"    private int numberUndone \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"    private int numberDone \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"        return this.list.size();","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"        this.list.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Got it! I have added the following task: \\n    \" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"        numberUndone++;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"        numberOfTasks++;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"    public void addTaskWhenLoading(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"        this.list.add(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"        numberUndone++;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"        numberOfTasks++;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"    public void markDone(int taskNumber) {","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"        if (taskNumber \u003e this.numberOfTasks || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"Please enter a task number between 1 and the total number of tasks!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"            return;","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"        int indexAdjustedTaskNumber \u003d taskNumber - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"        Task toBeMarked \u003d this.list.get(indexAdjustedTaskNumber);","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"        if (toBeMarked.isDone) {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"This task has already been marked as done!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"            return;","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"            toBeMarked.mark();","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Great! I have marked this task as done!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(list.get(indexAdjustedTaskNumber));","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"        numberUndone--;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"        numberDone++;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"    public void markUndone(int taskNumber) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"sachindavid96"},"content":"        if (taskNumber \u003e this.numberOfTasks || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"Please enter a task number between 1 and the total number of tasks!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"sachindavid96"},"content":"            return;","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"sachindavid96"},"content":"        int indexAdjustedTaskNumber \u003d taskNumber - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"sachindavid96"},"content":"        Task toBeUnmarked \u003d this.list.get(indexAdjustedTaskNumber);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"sachindavid96"},"content":"        if (!toBeUnmarked.isDone) {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"This task is already marked as undone!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"sachindavid96"},"content":"            return;","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"sachindavid96"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"sachindavid96"},"content":"            toBeUnmarked.unmark();","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Noted. I have marked this task as undone!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(list.get(indexAdjustedTaskNumber));","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"sachindavid96"},"content":"        numberUndone++;","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"sachindavid96"},"content":"        numberDone--;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"sachindavid96"},"content":"    public void printItems () {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"sachindavid96"},"content":"        int numOfTasks \u003d this.list.size();","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"These are the tasks you have left to complete: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"sachindavid96"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(i + 1 + \".\" + list.get(i).toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"sachindavid96"},"content":"    public void getTaskDetails() {","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"sachindavid96"},"content":"        String pluralCheck \u003d (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\");","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"You now have \" + numberOfTasks +  pluralCheck + \" in the list\");","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Number of tasks completed: \" + numberDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"sachindavid96"},"content":"        System.out.println(\"Number of tasks yet to be completed: \" + numberUndone);","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"sachindavid96"},"content":"    public Task getTaskAtIndex (int index) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"sachindavid96"},"content":"       return this.list.get(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"sachindavid96"},"content":"    public Task getLatestTask() {","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"sachindavid96"},"content":"        return this.list.get(this.list.size() - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"sachindavid96"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"sachindavid96"},"content":"        if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"You do not have any tasks at the moment!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"sachindavid96"},"content":"        } else if (taskNumber \u003e numberOfTasks || taskNumber \u003c 0) {","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"Please enter a valid task number!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"sachindavid96"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"sachindavid96"},"content":"            System.out.println(\"Noted! I have deleted this task: \\n\" + this.list.get(taskNumber - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"sachindavid96"},"content":"            boolean isDeletedDone \u003d this.list.get(taskNumber - 1).isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"sachindavid96"},"content":"            this.list.remove(taskNumber - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"sachindavid96"},"content":"            this.numberOfTasks--;","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"sachindavid96"},"content":"            if (isDeletedDone) {","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"sachindavid96"},"content":"                numberDone--;","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"sachindavid96"},"content":"            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"sachindavid96"},"content":"                numberUndone--;","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"sachindavid96"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"sachindavid96"},"content":"  }","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"sachindavid96":134}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"        return (isDone? \"[T][X] \" : \"[T][ ] \") + description;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"sachindavid96":17}},{"path":"task.Task Data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"[T][ ] do not allow for internal inflammation","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"sachindavid96":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"todo buy eggs","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"deadline pay fees / 6th June","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"event project meeting / Monday 2pm / 4pm","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"mark 1","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"mark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"mark 3","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"unmark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"unmark 3","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"list","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"sachindavid96":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sachindavid96":1,"-":20}}]
