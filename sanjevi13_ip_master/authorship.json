[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"sanjevi13"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sanjevi13":1,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"    public String sendOutputToFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sanjevi13":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"        Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"        duke.runApp();","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"    public void runApp() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"sanjevi13"},"content":"        ui.showDuke();","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"sanjevi13"},"content":"        ui.greetingMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"sanjevi13"},"content":"        boolean enteredBye \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"sanjevi13"},"content":"        while (!enteredBye) {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"sanjevi13"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"sanjevi13"},"content":"                String input \u003d ui.readInput();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"sanjevi13"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"sanjevi13"},"content":"                    enteredBye \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"sanjevi13"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"sanjevi13"},"content":"                    parser.parseInput(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"sanjevi13"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"sanjevi13"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"sanjevi13"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"sanjevi13"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"sanjevi13"},"content":"        ui.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"sanjevi13"},"content":"        ui.goodbyeMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sanjevi13":51,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"    DukeException(String s) {","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"        super(s);","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"sanjevi13":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"    private String timeOfEvent;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"    public Event(String description, String timeOfEvent) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"        this.timeOfEvent \u003d timeOfEvent;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + timeOfEvent + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"    public String sendOutputToFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"        return String.format(\"E | %d | %s | %s\" , isDone ? 1 : 0, description, timeOfEvent);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sanjevi13":20}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"    Parser(TaskList taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"    public void parseInput(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"        try{","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"                this.storage.save(taskList);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"                ui.goodbyeMessage();","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"            } else if (input.equals(\"list\")){","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"                ui.printList(taskList.getList());","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"                markInputChecker(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"sanjevi13"},"content":"                int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"sanjevi13"},"content":"                taskList.markTaskAsDone(taskNum);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"sanjevi13"},"content":"                ui.markTaskAsDoneMessage(taskList.getTask(taskNum));","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"sanjevi13"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"sanjevi13"},"content":"                unmarkInputChecker(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"sanjevi13"},"content":"                int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"sanjevi13"},"content":"                taskList.markTaskAsIncomplete(taskNum);","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"sanjevi13"},"content":"                ui.markTaskAsIncompleteMessage(taskList.getTask(taskNum));","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"sanjevi13"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"sanjevi13"},"content":"                deleteInputChecker(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"sanjevi13"},"content":"                int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"sanjevi13"},"content":"                Task toDelete \u003d taskList.getTask(taskNum);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"sanjevi13"},"content":"                taskList.deleteTaskFromList(taskNum);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"sanjevi13"},"content":"                ui.deletedTaskMessage(toDelete, taskList.numberOfTasks());","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"sanjevi13"},"content":"            } else if (isEventTask(input)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"sanjevi13"},"content":"                eventInputChecker(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"sanjevi13"},"content":"                String[] eventConstructor \u003d input.replace(\"event \", \"\").split(\"/at \");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"sanjevi13"},"content":"                String timeModified \u003d eventConstructor[1].replace(\"from \", \"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"sanjevi13"},"content":"                inputEvent(eventConstructor[0], timeModified);","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"sanjevi13"},"content":"            } else if (isDeadlineTask(input)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"sanjevi13"},"content":"                deadlineInputChecker(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"sanjevi13"},"content":"                addDeadlineFormatted(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"sanjevi13"},"content":"            } else if (isTodoTask(input)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"sanjevi13"},"content":"                todoInputChecker(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"sanjevi13"},"content":"                inputTodo(input.replace(\"todo \", \"\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"sanjevi13"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"sanjevi13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"sanjevi13"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"sanjevi13"},"content":"    public boolean isDeadlineTask(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"sanjevi13"},"content":"        return s.startsWith(\"deadline\");","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"sanjevi13"},"content":"    public boolean isTodoTask(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"sanjevi13"},"content":"        return s.startsWith(\"todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"sanjevi13"},"content":"    public boolean isEventTask(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"sanjevi13"},"content":"        return s.startsWith(\"event\");","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"sanjevi13"},"content":"    public void todoInputChecker(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"sanjevi13"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"sanjevi13"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"sanjevi13"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"sanjevi13"},"content":"            if (inputArray[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"sanjevi13"},"content":"    public void eventInputChecker(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"sanjevi13"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"sanjevi13"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"sanjevi13"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"sanjevi13"},"content":"            if (inputArray[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"sanjevi13"},"content":"    public void deadlineInputChecker(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"sanjevi13"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"sanjevi13"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"sanjevi13"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"sanjevi13"},"content":"            if (inputArray[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"sanjevi13"},"content":"    public void deleteInputChecker(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"sanjevi13"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"sanjevi13"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! You have to choose a task to delete.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"sanjevi13"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"sanjevi13"},"content":"            if (inputArray[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! You have to choose a task to delete.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"sanjevi13"},"content":"    public void markInputChecker(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"sanjevi13"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":122,"author":{"gitId":"sanjevi13"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! You have to choose a task to mark.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"sanjevi13"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"sanjevi13"},"content":"            if (inputArray[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! You have to choose a task to mark.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"sanjevi13"},"content":"    public void unmarkInputChecker(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"sanjevi13"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"sanjevi13"},"content":"        if (inputArray.length !\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! You have to choose a task to unmark.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"sanjevi13"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"sanjevi13"},"content":"            if (inputArray[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"sanjevi13"},"content":"                throw new DukeException(\"OOPS!!! You have to choose a task to delete.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":140,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"sanjevi13"},"content":"    public void addDeadlineFormatted(String input) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"sanjevi13"},"content":"        String[] constructor \u003d input.replace(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"sanjevi13"},"content":"        try{","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"sanjevi13"},"content":"            LocalDate temp \u003d LocalDate.parse(constructor[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"sanjevi13"},"content":"            inputDeadline(constructor[0], temp);","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"sanjevi13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"Please input date in format of dd/MM/yyyy\");","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"sanjevi13"},"content":"    public void inputEvent(String s, String time) {","lastModifiedDate":"2023-01-28"},{"lineNumber":154,"author":{"gitId":"sanjevi13"},"content":"        Event event \u003d new Event(s, time);","lastModifiedDate":"2023-01-28"},{"lineNumber":155,"author":{"gitId":"sanjevi13"},"content":"        taskList.add(event);","lastModifiedDate":"2023-01-28"},{"lineNumber":156,"author":{"gitId":"sanjevi13"},"content":"        ui.addedTaskMessage(event, taskList.numberOfTasks());","lastModifiedDate":"2023-01-28"},{"lineNumber":157,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":158,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":159,"author":{"gitId":"sanjevi13"},"content":"    public void inputDeadline(String s, LocalDate d) {","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"sanjevi13"},"content":"        Deadline deadline \u003d new Deadline(s, d);","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"sanjevi13"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"sanjevi13"},"content":"        ui.addedTaskMessage(deadline, taskList.numberOfTasks());","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"sanjevi13"},"content":"    public void inputTodo(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":166,"author":{"gitId":"sanjevi13"},"content":"        Todo todo \u003d new Todo(s);","lastModifiedDate":"2023-01-28"},{"lineNumber":167,"author":{"gitId":"sanjevi13"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-01-28"},{"lineNumber":168,"author":{"gitId":"sanjevi13"},"content":"        ui.addedTaskMessage(todo, taskList.numberOfTasks());","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":170,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"sanjevi13":170}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"public class Storage {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"    private File file;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"    Storage(String filepath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        this.file \u003d new File(filepath);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"    public void save(TaskList list) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"            for (int i \u003d 1; i \u003c\u003d list.numberOfTasks(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"                temp.add(list.getTask(i).sendOutputToFile());","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"            fw.write(String.join(\"\\n\", temp));","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"            fw.close();","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"sanjevi13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"Error when adding file\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"sanjevi13"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"sanjevi13"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"sanjevi13"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"sanjevi13"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"sanjevi13"},"content":"                file.getParentFile().mkdir();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"sanjevi13"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"sanjevi13"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"sanjevi13"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"sanjevi13"},"content":"                    String[] curr \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"sanjevi13"},"content":"                    String taskType \u003d curr[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"sanjevi13"},"content":"                    Task task;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"sanjevi13"},"content":"                    switch (taskType) {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"sanjevi13"},"content":"                        case \"E\":","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"sanjevi13"},"content":"                            task \u003d new Event(curr[2], curr[3]);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"sanjevi13"},"content":"                            if (Integer.parseInt(curr[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"sanjevi13"},"content":"                                task.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"sanjevi13"},"content":"                            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"sanjevi13"},"content":"                                task.markAsNotDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"sanjevi13"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"sanjevi13"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"sanjevi13"},"content":"                            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"sanjevi13"},"content":"                        case \"D\":","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"sanjevi13"},"content":"                            LocalDate temp \u003d LocalDate.parse(curr[3], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"sanjevi13"},"content":"                            task \u003d new Deadline(curr[2], temp);","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"sanjevi13"},"content":"                            if (Integer.parseInt(curr[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"sanjevi13"},"content":"                                task.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"sanjevi13"},"content":"                            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"sanjevi13"},"content":"                                task.markAsNotDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"sanjevi13"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"sanjevi13"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"sanjevi13"},"content":"                            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"sanjevi13"},"content":"                        case \"T\":","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"sanjevi13"},"content":"                            task \u003d new Todo(curr[2]);","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"sanjevi13"},"content":"                            if (Integer.parseInt(curr[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"sanjevi13"},"content":"                                task.markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"sanjevi13"},"content":"                            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"sanjevi13"},"content":"                                task.markAsNotDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"sanjevi13"},"content":"                            }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"sanjevi13"},"content":"                            tasks.add(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"sanjevi13"},"content":"                            break;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"sanjevi13"},"content":"                        default:","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"sanjevi13"},"content":"                            throw new DukeException(\"Error: Wrong task encountered\");","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"sanjevi13"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"sanjevi13"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"sanjevi13"},"content":"                scanner.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"sanjevi13"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"sanjevi13"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"Exception has occurred\");","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"sanjevi13"},"content":"        return tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"sanjevi13":88}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"    public void markAsNotDone() { this.isDone \u003d false; }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"        return isDone ? \"[X] \" + description : \"[ ] \" + description;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"    public String sendOutputToFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"        return String.format(\"Task | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sanjevi13":27}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"public class TaskList {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"    TaskList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"    ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"    Task getTask(int taskNumber){","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"    int numberOfTasks() {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"sanjevi13"},"content":"    void markTaskAsDone(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"sanjevi13"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e numberOfTasks()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number. Please try again.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"sanjevi13"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"sanjevi13"},"content":"    void markTaskAsIncomplete(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"sanjevi13"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e numberOfTasks()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number. Please try again.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"sanjevi13"},"content":"        }tasks.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"sanjevi13"},"content":"    void add(Task t) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"sanjevi13"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"sanjevi13"},"content":"    public void deleteTaskFromList(int taskNumber) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"sanjevi13"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e numberOfTasks()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"sanjevi13"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number. Please try again.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"sanjevi13"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"sanjevi13":55}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"    public String sendOutputToFile() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sanjevi13":16}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"public class Ui {","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    Ui() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"    String readInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"    void showDuke() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"    void close() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"sanjevi13"},"content":"        scanner.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"sanjevi13"},"content":"    public void printLongLine() {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"sanjevi13"},"content":"    public void printMessage(String s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\t\" + s);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"sanjevi13"},"content":"    public void greetingMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"sanjevi13"},"content":"        printMessage(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"sanjevi13"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"sanjevi13"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"sanjevi13"},"content":"    public void addedTaskMessage(Task t, int size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\t\" + t);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"sanjevi13"},"content":"    public void deletedTaskMessage(Task t, int size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\t\" + t);","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"sanjevi13"},"content":"        System.out.println(\"\\tNow you have \" + size + \" tasks in the list\");","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"sanjevi13"},"content":"    public void markTaskAsDoneMessage(Task t) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"sanjevi13"},"content":"        printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + t);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"sanjevi13"},"content":"    public void markTaskAsIncompleteMessage(Task t) {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"sanjevi13"},"content":"        printMessage(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + t);","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"sanjevi13"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"sanjevi13"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"sanjevi13"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"sanjevi13"},"content":"            System.out.printf(\"\\t%d. %s\\n\", taskNumber, tasks.get(i));","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"sanjevi13"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"sanjevi13"},"content":"        printLongLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"sanjevi13":80}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"    public void test() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"13/01/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        Deadline deadline1 \u003d new Deadline(\"homework\", date1);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[D][ ] homework (by: Jan 13 2023)\", deadline1.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"19/01/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"        Deadline deadline2 \u003d new Deadline(\"submission\", date2);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"        deadline2.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[D][X] submission (by: Jan 19 2023)\", deadline2.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"sanjevi13"},"content":"        Deadline deadline3 \u003d new Deadline(\"\", date2);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[D][ ]  (by: Jan 19 2023)\", deadline3.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"sanjevi13":25}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"public class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"    public void test() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"        Event event1 \u003d new Event(\"party\", \"Saturday 2-9pm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"        event1.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[E][X] party (at: Saturday 2-9pm)\", event1.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        Event event2 \u003d new Event(\"reunion\", \"Sunday 3-7pm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[E][ ] reunion (at: Sunday 3-7pm)\", event2.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"        Event event3 \u003d new Event(\"\", \"Monday 1pm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[E][ ]  (at: Monday 1pm)\", event3.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"sanjevi13":18}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"sanjevi13"},"content":"    public void test() {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"        Todo todo1 \u003d new Todo(\"homework\");","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[T][ ] homework\", todo1.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"sanjevi13"},"content":"        Todo todo2 \u003d new Todo(\"watch lecture recording\");","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"sanjevi13"},"content":"        todo2.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[T][X] watch lecture recording\", todo2.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"sanjevi13"},"content":"        Todo todo3 \u003d new Todo(\"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"        assertEquals(\"[T][ ] \", todo3.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"sanjevi13"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"sanjevi13"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"sanjevi13":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sanjevi13"},"content":"event school trip /from Tues 12pm /to 8pm","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"sanjevi13"},"content":"todo CS2109S Problem Set","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"sanjevi13"},"content":"deadline buy food /by tonight","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sanjevi13"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sanjevi13"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sanjevi13"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"sanjevi13"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"sanjevi13"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sanjevi13":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sanjevi13"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sanjevi13"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sanjevi13":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"sanjevi13"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sanjevi13":1,"-":37}}]
