[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"T |   | hello","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"T |   | my name is","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"sarthak181":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"    protected Object by;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"    public void isDate() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"            LocalDate d1 \u003d LocalDate.parse((String) by);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"            this.by \u003d d1;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"            by \u003d ((LocalDate) by).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"sarthak181":34}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"    private duke.Storage storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"    private duke.TaskList tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"    private duke.Ui ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"    private duke.Parser parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"            tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"     * This method is called in the main method, and it runs the chatbot.","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"    public void run() {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"        ui.greetings();","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"        while (true) {","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"            String str \u003d sc.nextLine();","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"            Parser.parse(str, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"            storage.writeToFile(tasks.getDukeList());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sarthak181":41,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"sarthak181":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"    protected Object from;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"    protected Object to;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"    public void isDate() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"        LocalDate d1, d2;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"            d1 \u003d LocalDate.parse((String) from);","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"            this.from \u003d d1;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"            from \u003d ((LocalDate) from).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"            d2 \u003d LocalDate.parse((String) to);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"            this.to \u003d d2;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"            to \u003d ((LocalDate) to).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"sarthak181":39}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"public class Parser {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"    private static Ui ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"    public Parser() {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"     * The method simply returns the case to use for the switch in the parse method.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"     * @param str the string that the user inputted.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"     * @return the string that defines the case.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"    public static String getSwitch(String str) {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"        if (str.equals(\"list\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"            return \"list\";","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"mark \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"            return \"mark\";","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"unmark \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"            return \"unmark\";","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"todo \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"            return \"todo\";","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"            return \"deadline\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"event \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"            return \"event\";","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"delete \")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"            return \"delete\";","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"        if (str.startsWith(\"find \")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"            return \"find\";","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"        if (str.equals(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"            ui.bye();","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"            return \"do nothing\";","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"        return \"na\";","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"     * The method makes sense of the command that the user has inputted and takes the","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"     * necessary action.","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"sarthak181"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"sarthak181"},"content":"     * @param str is the string that the user inputted","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"     * @param taskList is that list that will be acted on by the command.","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"    public static void parse(String str, TaskList taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"        switch (getSwitch(str)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"        case \"list\":","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"            taskList.recite();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"            String num \u003d str.split(\" \", 2)[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"            int n \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"            taskList.mark(n, true);","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"            String num_1 \u003d str.split(\" \", 2)[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"sarthak181"},"content":"            int n_1 \u003d Integer.parseInt(num_1) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"            taskList.mark(n_1, false);","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"            Task a;","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"sarthak181"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"                a \u003d new Todo(str.replace(\"todo \", \"\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"sarthak181"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"                break;","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"            taskList.addTask(a);","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"            Task b \u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"                String[] descriptionBy \u003d str.replace(\"deadline \", \"\").split(\" /by \");","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"                b \u003d new Deadline(descriptionBy[0], descriptionBy[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"                b.isDate();","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"sarthak181"},"content":"                break;","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"sarthak181"},"content":"            taskList.addTask(b);","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"sarthak181"},"content":"        case \"event\":","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"sarthak181"},"content":"            Task c \u003d null;","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"sarthak181"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"sarthak181"},"content":"                String[] descriptionFromTo \u003d str.replace(\"event \", \"\").split(\" /from \");","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"sarthak181"},"content":"                String[] fromTo \u003d descriptionFromTo[1].split(\" /to \");","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"sarthak181"},"content":"                c \u003d new Event(descriptionFromTo[0], fromTo[0], fromTo[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"sarthak181"},"content":"                c.isDate();","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"sarthak181"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"sarthak181"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"sarthak181"},"content":"                break;","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"sarthak181"},"content":"            taskList.addTask(c);","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"sarthak181"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"sarthak181"},"content":"            String num_D \u003d str.split(\" \", 2)[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"sarthak181"},"content":"            int nD \u003d Integer.parseInt(num_D) - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"sarthak181"},"content":"            taskList.delete(nD);","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"sarthak181"},"content":"        case \"find\":","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"sarthak181"},"content":"            String keyword \u003d str.replace(\"find \", \"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"sarthak181"},"content":"            taskList.find(keyword);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"sarthak181"},"content":"        case \"na\":","lastModifiedDate":"2023-02-08"},{"lineNumber":116,"author":{"gitId":"sarthak181"},"content":"            ui.unknownCommand();","lastModifiedDate":"2023-02-08"},{"lineNumber":117,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"sarthak181"},"content":"        case \"do nothing\":","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"sarthak181"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":121,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"sarthak181":123}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import java.io.File;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"public class Storage {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"    private String filePath;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"     * The method updates the task list in the filepath according to the latest command by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"     * @param dukeList the task list being acted on by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e dukeList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"            FileWriter writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"            for(Task t: dukeList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"                    writer.write(\"D | \" + t.getStatusIcon() + \" | \" + t.description + \" |by \" + ((Deadline) t).by","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"                if (t instanceof Event) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"                    writer.write(\"E | \" + t.getStatusIcon() + \" | \" + t.description + \" |f \" + ((Event) t).from","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"                            + \" |t \" +  ((Event) t).to + System.lineSeparator());","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"                if (t instanceof Todo) {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"                    writer.write(\"T | \" + t.getStatusIcon() + \" | \" + t.description + System.lineSeparator());","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"            writer.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"     * The method reads the task list from the file stated in the declared filePath.","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"     * @return the task list last saved by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"     * @throws DukeException if there is an error creating the file","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"    public ArrayList\u003cTask\u003e readFile() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"sarthak181"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"sarthak181"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"                Scanner s \u003d new Scanner(new File(filePath));","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"//                new FileWriter(filePath, false).close();","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"                    String str \u003d s.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"                    System.out.println(str);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"                    if (str.startsWith(\"E\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"                        Event e \u003d new Event(str.substring(8, str.indexOf(\" |f\")),","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"                                str.substring(str.indexOf(\" |f\") +4, str.indexOf(\" |t\")),","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"                                str.substring(str.indexOf(\" |t\") + 4));","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"                        if (str.startsWith(\"E | X\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"                            e.markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"                        dukeList.add(e);","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"sarthak181"},"content":"                    if (str.startsWith(\"D\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"                        Deadline d \u003d new Deadline(str.substring(8, str.indexOf(\" |b\")),","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"                                str.substring(str.indexOf(\" |b\") + 4));","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"                        if (str.startsWith(\"D | X\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"                            d.markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"sarthak181"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"                        dukeList.add(d);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"sarthak181"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"                    if (str.startsWith(\"T\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"                        Todo t \u003d new Todo(str.substring(8));","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"                        if (str.startsWith(\"T | X\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"                            t.markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"                        }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"                        dukeList.add(t);","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"                s.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"sarthak181"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"sarthak181"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"sarthak181"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"sarthak181"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"sarthak181"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"sarthak181"},"content":"                String basePath \u003d new File(\"\").getAbsolutePath();","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"sarthak181"},"content":"                File dir \u003d new File(basePath.concat(\"/data\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"sarthak181"},"content":"                File c \u003d new File(filePath);","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"sarthak181"},"content":"                dir.mkdir();","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"sarthak181"},"content":"                c.createNewFile();","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"sarthak181"},"content":"            } catch (IOException d) {","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"sarthak181"},"content":"                System.out.println(\"Error while creating file\");","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"sarthak181"},"content":"        return dukeList;","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"sarthak181":104}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"    public void unMark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"    public void isDate() {}","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"sarthak181":29}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"public class TaskList {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"    private ArrayList\u003cTask\u003e dukeList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"    public TaskList(ArrayList\u003cTask\u003e dukeList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"        this.dukeList \u003d dukeList;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        dukeList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"    public ArrayList\u003cTask\u003e getDukeList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"        return dukeList;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"        dukeList.add(t);","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"                + t.toString() + \"\\nNow you have \" + dukeList.size()","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"     * The method marks or unmarks a task in the task list based on the input given by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"     * @param n the task number that the user wants to mark/unmark.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"     * @param isDone the boolean that decides whether to mark or unmark.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"sarthak181"},"content":"    public void mark(int n, boolean isDone) {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"sarthak181"},"content":"        Task t \u003d dukeList.get(n);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"sarthak181"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"sarthak181"},"content":"            t.markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"sarthak181"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"sarthak181"},"content":"                    + \"  [\" + t.getStatusIcon() + \"] \" + t.description);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"sarthak181"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"sarthak181"},"content":"            t.unMark();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"sarthak181"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"sarthak181"},"content":"                    + \"  [\" + t.getStatusIcon() + \"] \" + t.description);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"sarthak181"},"content":"    public void delete(int n) {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"sarthak181"},"content":"        Task t \u003d dukeList.get(n);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"sarthak181"},"content":"        dukeList.remove(n);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"sarthak181"},"content":"                + t.toString()","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"sarthak181"},"content":"                + \"\\nNow you have \" + dukeList.size()","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"sarthak181"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"sarthak181"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"sarthak181"},"content":"     * The method prints out all the tasks in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"sarthak181"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"sarthak181"},"content":"    public void find(String keyword) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"sarthak181"},"content":"        for (int i \u003d 1; i \u003c\u003d dukeList.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"sarthak181"},"content":"            Task t \u003d dukeList.get(i - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"sarthak181"},"content":"            String[] s \u003d t.description.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"sarthak181"},"content":"            for (int j \u003d 0; j \u003c s.length; j++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"sarthak181"},"content":"                if (s[j].equals(keyword)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"sarthak181"},"content":"                    System.out.println(\"\" + i + \". \" + t.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"sarthak181"},"content":"                    break;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"sarthak181"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"sarthak181"},"content":"    public void recite() {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"sarthak181"},"content":"        if (dukeList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"sarthak181"},"content":"            System.out.println(\"Your list is empty\");","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"sarthak181"},"content":"        } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"sarthak181"},"content":"            System.out.println(\"Here are the tasks in you list\");","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"sarthak181"},"content":"            for (int i \u003d 1; i \u003c\u003d dukeList.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"sarthak181"},"content":"                Task t \u003d dukeList.get(i - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"sarthak181"},"content":"                System.out.println(\"\" + i + \". \" + t.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"sarthak181"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"sarthak181":85}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"        super(description);","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"sarthak181":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"public class Ui {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"    public Ui() {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"    public void greetings() {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"    public void bye() {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"Error occurred in loading file.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"    public void unknownCommand() {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"        System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"sarthak181":32}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sarthak181"},"content":"package seedu.duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"sarthak181"},"content":"import duke.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"sarthak181"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"sarthak181"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"sarthak181"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"sarthak181"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"sarthak181"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"sarthak181"},"content":"    public void eventTest() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"sarthak181"},"content":"        Event event \u003d new Event(\"Test\", \"2021-01-01\", \"2021-01-03\");","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"sarthak181"},"content":"        event.isDate();","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"sarthak181"},"content":"        assertEquals(\"[E][ ] Test (from: Jan 1 2021 to: Jan 3 2021)\",","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"sarthak181"},"content":"                event.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"sarthak181"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"sarthak181"},"content":"    public void deadlineTest() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"sarthak181"},"content":"        Deadline deadline \u003d new Deadline(\"dTest\", \"2021-01-01\");","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"sarthak181"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sarthak181"},"content":"        deadline.isDate();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sarthak181"},"content":"        assertEquals(\"[D][X] dTest (by: Jan 1 2021)\",","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"sarthak181"},"content":"                deadline.toString());","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"sarthak181"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"sarthak181"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"sarthak181"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"sarthak181":28}}]
