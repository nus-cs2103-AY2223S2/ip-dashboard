[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"## Dukie","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"\u003e ‚ÄúThe way to get started is to quit talking and begin doing.‚Äù  ‚Äì Walt Disney [(source)](https://blog.hubspot.com/sales/famous-quotes)","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"The app is so **easy to use**, you can even use it while doing a dookie. ","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"![image](https://media.istockphoto.com/id/1257001864/vector/a-cartoon-illustration-of-a-brown-poo-dookie-or-turd.jpg?s\u003d612x612\u0026w\u003d0\u0026k\u003d20\u0026c\u003dMOpwoydkJGmRuy7FkW1-V0fjX9wCP41MdXUpYycYBtQ\u003d)","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"Dukie frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"* text-based","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"* easy to pick up","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"* ~FAST~ SUPER FAST to use","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":" ","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"Dukie currently supports the following functions:","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":" ","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"* [x]  Managing tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"* [x]  Managing deadlines","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"* [x]  Managing event details","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"* [ ]  Search / Filter for any task / deadline / event","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"* [ ]  Reminders (coming soon)","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"* [ ]  !help (coming soon)","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"## Instructions for Installation","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"All you need to do is,","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"1. download it from [here](https://github.com/securespider/ip.git).","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"2. double-click it.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"3. add your tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"View a snippet of the `main` method here:","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"```java","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        new Duke(\".\\\\tasks.txt\").run();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"securespider":35,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"securespider":1,"-":40}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"@rem","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"@rem This is normally unused","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"@rem Find java.exe","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"echo.","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"echo.","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"goto fail","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"echo.","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"echo.","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"goto fail","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":":execute","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"@rem Setup the command line","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":":end","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":":fail","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":":mainEnd","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":":omega","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"securespider":92}},{"path":"src/main/java/duke/Command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    private final String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    private final String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        Deadline newDeadline \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        ui.showTaskAdded(newDeadline, tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        return newDeadline.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":25}},{"path":"src/main/java/duke/Command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    private final String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    private final String by;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    private final String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    public AddEventCommand(String description, String by, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        Event newEvent \u003d new Event(this.description, this.by, this.to);","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"        ui.showTaskAdded(newEvent, tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        return newEvent.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":27}},{"path":"src/main/java/duke/Command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    private final String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"        ToDo newTodo \u003d new ToDo(this.description);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        ui.showTaskAdded(newTodo, tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        return newTodo.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":23}},{"path":"src/main/java/duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    protected boolean exit \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"        return exit;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":16}},{"path":"src/main/java/duke/Command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"public enum Commands {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"    // TODO: use enum instead of text when parsing commands","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"    bye(\"bye\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"    mark(\"mark\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"    delete(\"delete\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"    list(\"list\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    todo(\"todo \"),","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    deadline(\"deadline \"),","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    event(\"event \"),","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    find(\"find \");","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    public final String label;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    Commands(String label) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"        this.label \u003d label;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":19}},{"path":"src/main/java/duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.TaskIndexException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    private final int index;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    public DeleteCommand(int inputIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        this.index \u003d inputIndex - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"            Task task \u003d tasks.remove(this.index);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"            ui.showDeleted(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"            return task.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"            throw new TaskIndexException(1 + tasks.size());","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":27}},{"path":"src/main/java/duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"        exit \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"            storage.store(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"            ui.showStored(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        return \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":22}},{"path":"src/main/java/duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    private final String description;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"        TaskList newTasks \u003d new TaskList();","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"            if (task.isMatch(this.description)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"                newTasks.add(task);","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"        ui.listAll(newTasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        return newTasks.toFormattedString();","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"securespider":28}},{"path":"src/main/java/duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"        ui.showAll(tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"        return \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":13}},{"path":"src/main/java/duke/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.TaskIndexException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    private final int index;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    public MarkCommand(int inputIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        this.index \u003d inputIndex - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"            Task task \u003d tasks.markTask(this.index);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"            ui.showMarked(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"            return task.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"            throw new TaskIndexException(1 + tasks.size());","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":27}},{"path":"src/main/java/duke/DateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":" * Represents all the DateTimeFormats that is supported by this chatbot","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"public enum DateTimeFormat {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    hyphenated(DateTimeFormatter.ISO_LOCAL_DATE),","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    hyphenated2(\"yyyy-m-d HHmm\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    hyphenated3(\"yyyy-m-d HHmma\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    nonDelimited(DateTimeFormatter.BASIC_ISO_DATE),","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    slashed(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    slashed2(\"d/M/yyyy HHmma\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    slashed3(\"d/M/yyyy\"),","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    defaultOutput(\"MMM dd yyyy HHmma\");","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    public final DateTimeFormatter formatter;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * Constructor for storing information in the enum","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * @param pattern string representing the pattern","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    DateTimeFormat(String pattern) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"     * Constructor for storing information in the enum","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"     * @param formatter format that should be stored in instance attribute formatter","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    DateTimeFormat(DateTimeFormatter formatter) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"securespider":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.CommandException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":" * Main class for Duke chatbot","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * Initializes the Duke chatbot.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * @param filePath Specifies path to save and retrieve content.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"            this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     * Main function","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * @param args input from the command line (ignored)","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        new Duke(\".\\\\tasks.txt\").run();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     * Starts the program","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"            String input \u003d this.ui.readCommand();","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"            ui.showLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"                command.execute(this.tasks, this.storage, this.ui);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"            } catch (CommandException commandException) {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"                ui.showCommandError(input, commandException);","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"                System.out.println(dukeException);","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"            } finally {","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"securespider":59,"-":4}},{"path":"src/main/java/duke/Exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"public class CommandException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"    public CommandException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"    public CommandException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    public CommandException(Throwable cause) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        super(cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    public CommandException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        super(message, cause, enableSuppression, writableStackTrace);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        return \"‚òπ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":27}},{"path":"src/main/java/duke/Exceptions/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"public class DescriptionException extends CommandException {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"    public DescriptionException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"    public DescriptionException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public DescriptionException(String message, Throwable cause) {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    public DescriptionException(Throwable cause) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        super(cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    public DescriptionException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        super(message, cause, enableSuppression, writableStackTrace);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        return \"‚òπ OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":27}},{"path":"src/main/java/duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"        super();","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"        super(cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    public DukeException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        super(message, cause, enableSuppression, writableStackTrace);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":23}},{"path":"src/main/java/duke/Exceptions/FileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"public class FileException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"    public FileException() {","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"    public FileException(String message) {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"        super(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public FileException(String message, Throwable cause) {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    public FileException(Throwable cause) {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        super(cause);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    public FileException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        super(message, cause, enableSuppression, writableStackTrace);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        return \"Error with importing the file\";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":27}},{"path":"src/main/java/duke/Exceptions/TaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"public class TaskIndexException extends DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"    private int max;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"    public TaskIndexException() {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"    public TaskIndexException(int max) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"        this.max \u003d max;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    public TaskIndexException(String message) {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"        super(message);","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    public TaskIndexException(String message, Throwable cause) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"        super(message, cause);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    public TaskIndexException(Throwable cause) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        super(cause);","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public TaskIndexException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        super(message, cause, enableSuppression, writableStackTrace);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        String result \u003d \"Sorry! Index is out of bounds...\";","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        if (this.max !\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"            result +\u003d \"\\nMaximum value: \" + this.max;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        return result;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Command.DeleteCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Command.ExitCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Command.FindCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Command.ListCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import duke.Command.MarkCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import duke.Command.FindCommand;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.TaskIndexException;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"public class Parser {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * Reads the command string and converts it into a Command object based on the string","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * @param line string that the user has input","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     * @return Command object representing what the command that user input","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public static Command parse(String line) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        String[] inputs \u003d line.split(\" \", 2);","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        String strCommand \u003d inputs[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"        switch (strCommand) {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"        case \"list\":","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"                int index \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"                // incorrect syntax","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"                throw new TaskIndexException();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"            try {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"                int index \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"                // incorrect syntax","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"                throw new TaskIndexException();","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        case \"find\":","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"            return new FindCommand(inputs[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"        default:","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"            return Task.taskToCommand(line);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"securespider":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.io.File;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":" * Represents an abstraction that helps in dealing with files","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    BufferedReader content;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    FileReader fileReader;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    File file;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    String filepath;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     * A constructor to specify the path","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"     * @param filepath the path to save the file and load the file from","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * @throws IOException If the path input is invalid","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    public Storage(String filepath) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        this.file \u003d new File(filepath);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        if (this.file.createNewFile()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"            System.out.println(\"Creating File...\");","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        this.fileReader \u003d new FileReader(this.file);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     * @return reader object for the file","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    public BufferedReader load() {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"        if (this.content !\u003d null) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"            return content;","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        this.content \u003d new BufferedReader(this.fileReader);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"        return this.content;","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"     * Updates the file and stores the tasklist into the file","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"     * @param tasks The tasks to be written in the file","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"     * @throws IOException If the file cannot be created or written in","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    public void store(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        //noinspection ResultOfMethodCallIgnored","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        this.file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"        FileWriter writer \u003d new FileWriter(this.filepath);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"            writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        writer.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":64}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DescriptionException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.DateTimeFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":" * Represents a deadline object","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    protected String strBy;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * Constructor for a deadline object based on the attributes that it has","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     * @param description string representing the description","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * @param by due datetime in string","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     * @throws DescriptionException If description is empty","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    public Deadline(String description, String by) throws DescriptionException {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"        this.strBy \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        this.by \u003d getLocalDateTime(this.strBy);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        if (this.by !\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"            this.strBy \u003d this.by.format(DateTimeFormat.defaultOutput.formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"     * String representation of the object","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     * @return String representation of deadline","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        return \"D | \" + super.toString() + \" | \" + this.strBy;","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"securespider":39}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.DateTimeFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DescriptionException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":" * Represents an event task","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    protected String strFrom;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    protected String strTo;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     * Constructor for an event object based on the attributes that it has","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * @param description string representing the description","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     * @param from when the event starts datetime in string","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     * @param to when the event ends datetime in string","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * @throws DescriptionException If description is empty","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public Event(String description, String from, String to) throws DescriptionException {","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        this.strFrom \u003d from;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"        this.strTo \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        this.to \u003d getLocalDateTime(this.strTo);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        this.from \u003d getLocalDateTime(this.strFrom);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        if (this.to !\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"            this.strTo \u003d this.to.format(DateTimeFormat.defaultOutput.formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        if (this.from !\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"            this.strFrom \u003d this.from.format(DateTimeFormat.defaultOutput.formatter);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     * String representation of the object","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     * @return String representation of deadline","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        return \"E | \" + super.toString() + \" | \" + this.strFrom + \"-\" + this.strTo;","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"securespider":47}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Command.AddDeadlineCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Command.AddTodoCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import duke.Command.AddEventCommand;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import duke.Command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import duke.Command.Commands;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.CommandException;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DescriptionException;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import duke.DateTimeFormat;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     * Constructor for a deadline object based on the attributes that it has","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"     * @param description string representing the description","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * @throws DescriptionException If description is empty","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    public Task(String description) throws DescriptionException {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     * Checks if description is empty","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     * @return whether the description is empty","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        return this.description \u003d\u003d null || this.description.trim().isEmpty();","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    public boolean isMatch(String testStr) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        return this.description.contains(testStr);","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"     * Representation if task is marked","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     * @return String representation of whether the task is marked","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"     * Marks the task","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"     * String representation of the object","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"     * @return String representation of deadline","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        return this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"     * Converts the task in string to a command object","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"     * @param strTask task in string to be converted","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"     * @return the specific command that the string represents","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"     * @throws CommandException If there is something wrong with creation of command","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"    public static Command taskToCommand(String strTask) throws CommandException {","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        if (strTask.startsWith(Commands.deadline.label)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"            Pattern pattern \u003d Pattern.compile(\"deadline (.+) /by (.+)\");","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            Matcher matcher \u003d pattern.matcher(strTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"                return new AddDeadlineCommand(matcher.group(1), matcher.group(2));","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"        } else if (strTask.startsWith(Commands.todo.label)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"            Pattern pattern \u003d Pattern.compile(\"todo (.+)\");","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"            Matcher matcher \u003d pattern.matcher(strTask);","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"                return new AddTodoCommand(matcher.group(1));","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"        } else if (strTask.startsWith(Commands.event.label)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"            Pattern pattern \u003d Pattern.compile(\"event (.+) /from (.+) /to (.+)\");","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"            Matcher matcher \u003d pattern.matcher(strTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"                return new AddEventCommand(matcher.group(1), matcher.group(2), matcher.group(3));","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"        throw new CommandException();","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"     * Converts the task in string to a Task object","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     * @param strTask task in string to be converted","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"     * @return the specific task that the string represents","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"     * @throws CommandException If there is something wrong with creation of task","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    public static Task strToTask(String strTask) throws CommandException {","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"        Task result;","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"        String[] strings \u003d strTask.split(\" \\\\| \");","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        if (strTask.startsWith(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"            result \u003d new ToDo(strings[2]);","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"        } else if (strTask.startsWith(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"            result \u003d new Deadline(strings[2], strings[3]);","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"        } else if (strTask.startsWith(\"E\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"            String[] separatedBy \u003d strings[3].split(\"-\");","lastModifiedDate":"2023-02-06"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"            result \u003d new Event(strings[2], separatedBy[0], separatedBy[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"            throw new CommandException();","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"            if (strings[1].equals(\"X\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"                result.markDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"            return result;","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"            throw new CommandException();","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"securespider"},"content":"    protected static LocalDateTime getLocalDateTime(String strDate) {","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"securespider"},"content":"        for (DateTimeFormat format : DateTimeFormat.values()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"                return LocalDateTime.parse(strDate, format.formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"            } catch (DateTimeException dateTimeException) {","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"securespider"},"content":"                // no time given","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"securespider"},"content":"                try {","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"securespider"},"content":"                    return LocalDate.parse(strDate, format.formatter).atStartOfDay();","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"securespider"},"content":"                } catch (DateTimeException ignored) {}","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"securespider"},"content":"        System.out.println(\"invalid!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"securespider"},"content":"        return null;","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"securespider":144}},{"path":"src/main/java/duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.CommandException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DescriptionException;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":" * Represents the list of tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"     * Constructor for list of tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"        super();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * Instantiates an array list of tasks and filling with tasks from buffered reader","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * @param strTasks buffered reader with all the tasks in string","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     * @throws CommandException if there are problems with converting the strings to a task","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"     * @throws IOException if the buffered reader is not working as intended","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    public TaskList(BufferedReader strTasks) throws CommandException, IOException {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        super();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        String str;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        while ((str \u003d strTasks.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"            this.add(Task.strToTask(str));","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * String representation of task list","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     * @return string representation of task list","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        for (Task task : this) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"            result.append(task).append(\"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        return result.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"     * Better string representation of task list including the order and index numbers","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     * @return Better string representation of task list","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    public String toFormattedString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        for (Task task : this) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"            result.append(count++)","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"                    .append(\". \")","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"                    .append(task)","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        return result.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"    public void addTask(Task task) throws DescriptionException {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"            throw new DescriptionException();","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"            this.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"    public Task markTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"        Task task \u003d this.get(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        task.markDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"securespider":77}},{"path":"src/main/java/duke/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Exceptions.DescriptionException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"     * Constructor for a ToDo object based on the attributes that it has","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"     * @param description string representing the description","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"     * @throws DescriptionException If description is empty","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public ToDo(String description) throws DescriptionException {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * String representation of the object","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * @return String representation of deadline","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        return \"T | \" + super.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"securespider":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":" * Interacts with the user in the form of printing and retrieving information","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     * Reads string from the terminal","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * @return string input by user","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * Prints the welcome page of the chatbot","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     * Print the delimiter between each command and outputs","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        System.out.println(\"-\".repeat(20));","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     * Print string to inform user that the task has been marked","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     * @param task the task that has been marked","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     * Print the task that has been added","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     * @param task the task that has been added","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"     * @param tasks the list of all the tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    public void showTaskAdded(Task task, TaskList tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"     * Prints the task that has been deleted","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"     * @param task the task that has been deleted","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"    public void showDeleted(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        System.out.println(\"This task has been deleted successfully\");","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"     * Formats and Prints the tasks that has been stored","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"     * @param tasks the list of all the tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"    public void showStored(TaskList tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        System.out.println(\"File has been stored!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"     * Print the command exception and the command that caused the exception","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"     * @param word command that the user input","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"     * @param exception the command exception that was thrown","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"    public void showCommandError(String word, Exception exception) {","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        System.out.println(exception.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"        System.out.println(\"duke.Command: \" + word);","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"     * Print string to inform the user of a wrong command","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        System.out.println(\"‚òπ OOPS!!! I\u0027m sorry, but I cannot find the directory!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"     * Prints the ending","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"     * Prints all task in tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"     * @param tasks list of all tasks","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"    public void showAll(TaskList tasks) {","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"        System.out.println(tasks.toFormattedString());","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"securespider":114}},{"path":"src/main/java/duke/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"securespider":1}},{"path":"src/test/java/duke/Tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"            Deadline newDeadline \u003d new Deadline(\"exercise\", \"11/1/2011\");","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"            assertEquals(\"D |   | exercise | Jan 11 2011 0000AM\", newDeadline.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        } catch (Exception ignored) {}","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    public void markDeadlineTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"            Deadline newDeadline \u003d new Deadline(\"do work\", \"12/2/2012\");","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"            newDeadline.markDone();","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"            assertEquals(\"D | X | do work | Feb 12 2012 0000AM\", newDeadline.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        } catch (Exception ignored) {}","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"securespider":26}},{"path":"src/test/java/duke/Tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package duke.Tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    public void addToDoTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"            ToDo newToDo \u003d new ToDo(\"exercise\");","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"            assertEquals(\"T |   | exercise\", newToDo.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        } catch (Exception ignored) {}","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    public void markToDoTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"            ToDo newToDo \u003d new ToDo(\"do work\");","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"            newToDo.markDone();","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"            assertEquals(\"T | X | do work\", newToDo.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        } catch (Exception ignored) {}","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"securespider":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"hello","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"there","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"todo mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"event mark 2 /from sunday /to wednesday","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"event wrong event /from today to tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"event no / from today to tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"event /wrongly from today /to tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"mark 5","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"deadline complete work /by today","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"deadline wrong deadline by today\\","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"deadline wrong deadline2 /from today","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"delete 0","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"todo 1 ","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"todo 2","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"todo 3","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"securespider":28}}]
