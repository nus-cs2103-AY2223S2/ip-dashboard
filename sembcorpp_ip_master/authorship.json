[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"# Jane Project","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen (source)","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"DukePro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"- easy to use","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"* text-based","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"+ ~FAST~ SUPER FAST to use","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"All you need to do is,","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"1. download it from here ","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"2. double click","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"3. add your tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"These are the contributors:","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"[Contribution guidelines for this project](docs/CONTRIBUTING.md)","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"Features:","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"function test() {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"  console.log(\"notice the blank line before this function?\");","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"```ruby","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"require \u0027redcarpet\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"markdown \u003d Redcarpet.new(\"Hello World!\")","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"puts markdown.to_html","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"```","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"and its **FREE**","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"Have fun using it üòâ","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sembcorpp":37,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"dependencies {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sembcorpp":4,"-":32}},{"path":"data/JaneList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"T|0| hi","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"T|0| bye","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"T|0| list","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"T|0| list","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"T|0| heyy","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":5}},{"path":"src/main/java/Jane/Jane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"public class Jane {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"    public static void main(String[] args) throws JaneException {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"        jane.Ui.start();","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"        Storage.createDir();","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"        TaskList tasks \u003d new TaskList(Storage.loadList());","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"            String output \u003d in.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"            tasks.useCommand(output);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"            if (output.equals(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":31}},{"path":"src/main/java/Jane/JaneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"public class JaneException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"    public JaneException(String err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"        super(err);","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":8}},{"path":"src/main/java/Jane/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import jane.task.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"public class Parser {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"     * Parses user input to a Todo object","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"     * @param count the size of TaskList containing this object","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"     * @param output the user input given","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"     * @return a Todo object","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"     * @throws JaneException if description given is empty","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    public static Todo parserT(String output, int count) {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"        String des \u003d output.substring(5);","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"        Todo todo \u003d new Todo(count + 1, des);","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"        return todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"     * Parses user input to a Deadline object","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"     * @param count the size of TaskList containing this object","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"     * @param output the user input given","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"     * @return a Deadline object","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"     * @throws JaneException if description given is empty","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"    public static jane.task.Deadline parserD(String output, int count) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"        String des \u003d output.substring(9);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"        String[] s \u003d des.split(\"/\");","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"            if (s.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"                throw new JaneException(\"Please specify when the deadline is :(((\");","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"        } catch(jane.JaneException err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"Please specify when the deadline is :(((\");","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"        jane.task.Deadline d \u003d new jane.task.Deadline(count +1, s[0], LocalDateTime.parse(s[1].substring(3)));","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"        return d;","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"     * Parses user input to a Event object","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"     * @param count the size of TaskList containing this object","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"     * @param output the user input given","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"     * @return a Event object","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"     * @throws JaneException if description given is empty","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"    public static jane.task.Event parserE(String output, int count) {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"        String des \u003d output.substring(6);","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"        String[] s \u003d des.split(\"/\");","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"            if (s.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"                throw new JaneException(\"Please specify when the event is :(((\");","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"        } catch (jane.JaneException err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"Please specify when event is\");","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"        String[] start \u003d s[1].substring(5).split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"sembcorpp"},"content":"        LocalDateTime startE \u003d LocalDateTime.parse(String.format(\"%sT%s\", start[0], start[1]));","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"sembcorpp"},"content":"        //here i am assuming an event only lasts 1 day since the day it starts is the day it ends","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"sembcorpp"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(String.format(\"%sT%s\", start[0], s[2]));","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"sembcorpp"},"content":"        jane.task.Event e \u003d new jane.task.Event(count + 1, s[0], startE, end);","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"sembcorpp"},"content":"        return e;","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":66}},{"path":"src/main/java/Jane/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"    public class Storage {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"    private static final String currentD \u003d Paths.get(\"\").toAbsolutePath().toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    private static final Path dirPath \u003d Paths.get(currentD, \"data\");","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"    private static final Path filePath \u003d Paths.get(currentD, \"data\", \"JaneList.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"    public static void createDir() {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"            if (Files.notExists(dirPath)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"                Files.createDirectory(dirPath);","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"Unable to create directory\");","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"            err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"        /**","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"         * Creates JaneList.txt if it doesn\u0027t exist. Reads data from JaneList.txt otherwise","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"         * @return ArrayList of all Tasks in duke.txt","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"         * @throws IOException if JaneList.txt cannot be created","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"         */","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"    public static ArrayList\u003cjane.task.Task\u003e loadList() {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"            } catch (IOException err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(\"unable to create list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"                err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"        List\u003cString\u003e lines \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"            lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"cannot read the list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"            assert lines !\u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"        ArrayList\u003cjane.task.Task\u003e tasks \u003d new ArrayList\u003cjane.task.Task\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"        for (String s : lines) {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"            //to separate each portion of the task eg D | taskname | deadline to easily see which type of task and deadline","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"            String[] line \u003d s.split(\"\\\\|\");","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"            int i \u003d Integer.parseInt(line[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"            boolean b \u003d (i \u003d\u003d 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"            if (line[0].equals(\"T\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"                jane.task.Todo T \u003d jane.Parser.parserT(s, tasks.size());","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"                T.changeState(b);","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(T);","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"            } else if (line[0].equals(\"D\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"                jane.task.Deadline D \u003d jane.Parser.parserD(s, tasks.size() );","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"sembcorpp"},"content":"                D.changeState(b);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(D);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"sembcorpp"},"content":"            } else if (line[0].equals(\"E\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"sembcorpp"},"content":"                jane.task.Event E \u003d jane.Parser.parserE(s, tasks.size() );","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"sembcorpp"},"content":"                E.changeState(b);","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(E);","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"sembcorpp"},"content":"        return tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"sembcorpp"},"content":"    //Writes into JaneList.txt","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"sembcorpp"},"content":"    public static void updateList(ArrayList\u003cjane.task.Task\u003e tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"sembcorpp"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"sembcorpp"},"content":"        for (jane.task.Task t : tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"sembcorpp"},"content":"            list.add(t.save());","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"sembcorpp"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"sembcorpp"},"content":"            Files.write(filePath, list);","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"sembcorpp"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"cannot save list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"sembcorpp"},"content":"            err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":85}},{"path":"src/main/java/Jane/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import jane.task.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"public class TaskList {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"        protected static ArrayList\u003cjane.task.Task\u003e tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"        TaskList(ArrayList\u003cjane.task.Task\u003e tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"     * Processes input commands","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"     * @param output is user\u0027s input","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"     * @throws JaneException if input format is wrong","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"     * @throws JaneException if input is invalid","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"        public static void useCommand(String output) {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"            if (output.equals(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"                List\u003cString\u003e currentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"                for (jane.task.Task t : tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"                    currentList.add(t.save());","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"                    jane.Storage.updateList(tasks);","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"                } catch (Exception err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"cannot save list\");","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"                    err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"find\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"                int count \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"                String action \u003d s[1];","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"                for (jane.task.Task i : tasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"                    if (i.description.contains(action)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"                        System.out.println(i.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"                int num \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"                    jane.task.Task n \u003d tasks.get(num - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"                    n.changeState(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(n.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"                } catch (Exception err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"                    err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Number out of index\");","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.equals(\"todo\") || output.equals(\"deadline\") || output.equals(\"event\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(\"Please specify the task to be done :(((\");","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"sembcorpp"},"content":"                jane.task.Todo todo \u003d jane.Parser.parserT(output, tasks.size());","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(todo.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"sembcorpp"},"content":"                jane.task.Deadline d \u003d jane.Parser.parserD(output, tasks.size() + 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(d);","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(d.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"event\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"sembcorpp"},"content":"                String des \u003d output.substring(6);","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d des.split(\"/\");","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"sembcorpp"},"content":"                if (s.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Please specify when the event is :(((\");","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"sembcorpp"},"content":"                String[] start \u003d s[1].substring(5).split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"sembcorpp"},"content":"                LocalDateTime startE \u003d LocalDateTime.parse(String.format(\"%sT%s\", start[0], start[1]));","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"sembcorpp"},"content":"                //here i am assuming an event only lasts 1 day since the day it starts is the day it ends","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"sembcorpp"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(String.format(\"%sT%s\", start[0], s[2]));","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"sembcorpp"},"content":"                jane.task.Event e \u003d jane.Parser.parserE(output, tasks.size()+1);","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(e);","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"sembcorpp"},"content":"                int num \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"sembcorpp"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"sembcorpp"},"content":"                    jane.task.Task n \u003d tasks.get(num - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"sembcorpp"},"content":"                    n.changeState(false);","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(n.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"sembcorpp"},"content":"                } catch (Exception err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Number out of index\");","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"sembcorpp"},"content":"                    err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"sembcorpp"},"content":"                int num \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"sembcorpp"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"sembcorpp"},"content":"                    jane.task.Task n \u003d tasks.get(num - 1);","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(n.toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"sembcorpp"},"content":"                    for (int j \u003d num; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"sembcorpp"},"content":"                        jane.task.Task t \u003d tasks.get(j);","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"sembcorpp"},"content":"                        t.changeNum();","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"sembcorpp"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"sembcorpp"},"content":"                    tasks.remove(n);","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"You now have \" + tasks.size() + \" tasks\");","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"sembcorpp"},"content":"                } catch (Exception err) {","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Number out of index\");","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"sembcorpp"},"content":"                    err.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"sembcorpp"},"content":"            } else if (output.equals(\"list\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"sembcorpp"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"sembcorpp"},"content":"            } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(\"Im sorry I don\u0027t understand what you mean :((\");","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":128}},{"path":"src/main/java/Jane/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"public class Ui {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"    //Introduces itself","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"    public static void start() {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":7,"-":8}},{"path":"src/main/java/Jane/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import jane.Jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"    public Deadline(int num, String description, LocalDateTime deadline) {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"        super(num, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    public String save() {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"        if (this.isDone\u003d\u003d true) {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"            i \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"        return String.format(\"D|%d| %s |%s\", i, this.description, this.deadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"        String parsed \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"        return String.format(\"%d. [D][%s] %s(%s)\", this.num, this.getStatusIcon(), this.description, parsed);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":29}},{"path":"src/main/java/Jane/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import jane.Jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"    public Event(int num, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"        super(num, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"    public String save() {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"        if (this.isDone\u003d\u003d true) {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"            i \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"        return String.format(\"E|%d| %s |%s|%s\", i, this.description, this.from, this.to );","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"        String first \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(from);","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"        String end \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(to);","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"        return String.format(\"%d. [E][%s] %s(from %s to %s)\", this.num, this.getStatusIcon(), this.description, first, end);","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":32}},{"path":"src/main/java/Jane/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"public class Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"    public String description;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"    protected int num;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"    public Task(int num, String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"        this.num \u003d num;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    public void changeState(boolean stat) {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"        this.isDone \u003d stat;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"    public void changeNum() {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"        this.num -\u003d1;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"    public String save() {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"        return this.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"        return String.format(\"%d. [%s](%s)\", this.num, this.getStatusIcon(), this.description);","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":31}},{"path":"src/main/java/Jane/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane.task;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import jane.Jane;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"    public Todo(int num, String description) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"            super(num, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"        public String save() {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"            if (this.isDone\u003d\u003d true) {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"                i \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"T|%d| %s\", i, this.description);","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"        public String toString() {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"%d. [T][%s]%s\", this.num, this.getStatusIcon(), this.description);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":24}},{"path":"src/test/java/jane/test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package jane.test;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"import jane.task.Todo;","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import jane.task.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.time.Month;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import static java.util.Calendar.APRIL;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    Todo todo \u003d new Todo(1,\"run\");","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"    LocalDateTime testDate \u003d LocalDateTime.of(2017, Month.APRIL ,6, 10, 30);","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    Deadline d \u003d new Deadline(2, \"meeting\", testDate );","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"    public void todoTestName() {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"        assertEquals(todo.description, \"run\");","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"    public void deadlineTestName() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"        assertEquals(d.description, \"meeting\");","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"sembcorpp":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"deadline ah","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sembcorpp":18}}]
