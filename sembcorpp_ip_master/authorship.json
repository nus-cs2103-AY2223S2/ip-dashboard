[{"path":"src/main/java/Jane.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"public class Jane {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    public static class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"        protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"        protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"        protected int num;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"        public Task(int num, String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"            this.num \u003d num;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"        public void changeState(boolean stat) {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"            this.isDone \u003d stat;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"        public void changeNum() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"            this.num -\u003d1;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"        public String save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"            return this.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"        public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"%d. [%s](%s)\", this.num, this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"    public static class Todo extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"        public Todo(int num, String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"            super(num, description);","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"        public String save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"            if (this.isDone\u003d\u003d true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"                i \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"T|%d| %s\", i, this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"        public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"%d. [T][%s]%s\", this.num, this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"sembcorpp"},"content":"    public static class Deadline extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"sembcorpp"},"content":"        protected LocalDateTime deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"sembcorpp"},"content":"        public Deadline(int num, String description, LocalDateTime deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"sembcorpp"},"content":"            super(num, description);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"sembcorpp"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"sembcorpp"},"content":"        public String save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"sembcorpp"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"sembcorpp"},"content":"            if (this.isDone\u003d\u003d true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"sembcorpp"},"content":"                i \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"D|%d| %s |%s\", i, this.description, this.deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"sembcorpp"},"content":"        public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"sembcorpp"},"content":"            String parsed \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"%d. [D][%s] %s(%s)\", this.num, this.getStatusIcon(), this.description, parsed);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"sembcorpp"},"content":"    public static class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"sembcorpp"},"content":"        protected LocalDateTime from;","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"sembcorpp"},"content":"        protected LocalDateTime to;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"sembcorpp"},"content":"        public Event(int num, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"sembcorpp"},"content":"            super(num, description);","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"sembcorpp"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"sembcorpp"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"sembcorpp"},"content":"        public String save() {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"sembcorpp"},"content":"            int i \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"sembcorpp"},"content":"            if (this.isDone\u003d\u003d true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"sembcorpp"},"content":"                i \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"E|%d| %s |%s|%s\", i, this.description, this.from, this.to );","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"sembcorpp"},"content":"        public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"sembcorpp"},"content":"            String first \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(from);","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"sembcorpp"},"content":"            String end \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(to);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"sembcorpp"},"content":"            return String.format(\"%d. [E][%s] %s(from %s to %s)\", this.num, this.getStatusIcon(), this.description, first, end);","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"sembcorpp"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"sembcorpp"},"content":"        String currentD \u003d Paths.get(\"\").toAbsolutePath().toString();;","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"sembcorpp"},"content":"        Path dirPath \u003d Paths.get(currentD, \"data\");","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"sembcorpp"},"content":"        Path filePath \u003d Paths.get(currentD, \"data\", \"JaneList.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"sembcorpp"},"content":"        //check if data directory exists, and if it doesnt create one","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"sembcorpp"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"sembcorpp"},"content":"            if (Files.notExists(dirPath)){","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"sembcorpp"},"content":"                Files.createDirectory(dirPath);","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"sembcorpp"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"Unable to create directory\");","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"sembcorpp"},"content":"            err.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"sembcorpp"},"content":"        //Check if the janelist exist inside the folder we have made and if it doesnt, create, if not read it","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"sembcorpp"},"content":"        } try {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"sembcorpp"},"content":"            if (Files.notExists(filePath)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"sembcorpp"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"sembcorpp"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"sembcorpp"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"sembcorpp"},"content":"                for (String s:lines) {","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"sembcorpp"},"content":"                    //to separate each portion of the task eg D | taskname | deadline to easily see which type of task and deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"sembcorpp"},"content":"                    String[] line \u003d s.split(\"\\\\|\");","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"sembcorpp"},"content":"                    int i \u003d Integer.parseInt(line[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"sembcorpp"},"content":"                    boolean b \u003d (i\u003d\u003d1);","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"sembcorpp"},"content":"                    if (line[0].equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"sembcorpp"},"content":"                        Todo T \u003d new Todo(tasks.size() + 1, line[2]);","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"sembcorpp"},"content":"                        T.changeState(b);","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"sembcorpp"},"content":"                        tasks.add(T);","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"sembcorpp"},"content":"                    } else if (line[0].equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"sembcorpp"},"content":"                        Deadline D \u003d new Deadline(tasks.size() + 1, line[2], LocalDateTime.parse(line[3]));","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"sembcorpp"},"content":"                        D.changeState(b);","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"sembcorpp"},"content":"                        tasks.add(D);","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"sembcorpp"},"content":"                    } else if (line[0].equals(\"E\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"sembcorpp"},"content":"                        Event E \u003d new Event(tasks.size()+1, line[2], LocalDateTime.parse(line[3]), LocalDateTime.parse(line[4]));","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"sembcorpp"},"content":"                        E.changeState(b);","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"sembcorpp"},"content":"                        tasks.add(E);","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"sembcorpp"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"sembcorpp"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"sembcorpp"},"content":"            System.out.println(\"Unable to create File\");","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"sembcorpp"},"content":"            err.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"sembcorpp"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"sembcorpp"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"sembcorpp"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"sembcorpp"},"content":"            String output \u003d in.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"sembcorpp"},"content":"            if (output.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"sembcorpp"},"content":"                List\u003cString\u003e currentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"sembcorpp"},"content":"                for (Task t : tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"sembcorpp"},"content":"                    currentList.add(t.save());","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"sembcorpp"},"content":"                try {","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"sembcorpp"},"content":"                    Files.write(filePath, currentList);","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"sembcorpp"},"content":"                catch (IOException err)  {","lastModifiedDate":"2023-01-26"},{"lineNumber":171,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"cannot save list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":172,"author":{"gitId":"sembcorpp"},"content":"                    err.printStackTrace();","lastModifiedDate":"2023-01-26"},{"lineNumber":173,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"sembcorpp"},"content":"                break;","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"sembcorpp"},"content":"            else if(output.startsWith(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"sembcorpp"},"content":"                int num \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"sembcorpp"},"content":"                if (num \u003c count+1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done\");","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"sembcorpp"},"content":"                    Task n \u003d tasks.get(num-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"sembcorpp"},"content":"                    n.changeState(true);","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(n.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"sembcorpp"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Number out of index\");","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"sembcorpp"},"content":"            else if (output.equals(\"todo\")||output.equals(\"deadline\") ||output.equals(\"event\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(\"Please specify the task to be done :(((\");","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"sembcorpp"},"content":"                continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"sembcorpp"},"content":"            else if (output.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"sembcorpp"},"content":"                String des \u003d output.substring(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"sembcorpp"},"content":"                count+\u003d1;","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"sembcorpp"},"content":"                Todo todo \u003d new Todo(count, des);","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(todo.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"sembcorpp"},"content":"            else if (output.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"sembcorpp"},"content":"                String des \u003d output.substring(9);","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d des.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"sembcorpp"},"content":"                if (s.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Please specify when the deadline is :(((\");","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"sembcorpp"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":207,"author":{"gitId":"sembcorpp"},"content":"                count+\u003d1;","lastModifiedDate":"2023-01-19"},{"lineNumber":208,"author":{"gitId":"sembcorpp"},"content":"                Deadline d \u003d new Deadline(count, s[0], LocalDateTime.parse(s[1].substring(3)));","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(d);","lastModifiedDate":"2023-01-19"},{"lineNumber":210,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(d.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":211,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"sembcorpp"},"content":"            else if(output.startsWith(\"event\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"sembcorpp"},"content":"                String des \u003d output.substring(6);","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d des.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"sembcorpp"},"content":"                if (s.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Please specify when the event is :(((\");","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"sembcorpp"},"content":"                    continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":218,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"sembcorpp"},"content":"                String[] start \u003d s[1].substring(5).split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":220,"author":{"gitId":"sembcorpp"},"content":"                LocalDateTime startE \u003d LocalDateTime.parse(String.format(\"%sT%s\", start[0], start[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":221,"author":{"gitId":"sembcorpp"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(String.format(\"%sT%s\", start[0], s[2]));","lastModifiedDate":"2023-01-27"},{"lineNumber":222,"author":{"gitId":"sembcorpp"},"content":"                count+\u003d1;","lastModifiedDate":"2023-01-19"},{"lineNumber":223,"author":{"gitId":"sembcorpp"},"content":"                Event e \u003d new Event(count, s[0], startE, end);","lastModifiedDate":"2023-01-27"},{"lineNumber":224,"author":{"gitId":"sembcorpp"},"content":"                tasks.add(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":225,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":226,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":227,"author":{"gitId":"sembcorpp"},"content":"            else if(output.startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"sembcorpp"},"content":"                int num \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":230,"author":{"gitId":"sembcorpp"},"content":"                if (num \u003c count + 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":231,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2023-01-19"},{"lineNumber":232,"author":{"gitId":"sembcorpp"},"content":"                    Task n \u003d tasks.get(num-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":233,"author":{"gitId":"sembcorpp"},"content":"                    n.changeState(false);","lastModifiedDate":"2023-01-19"},{"lineNumber":234,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(n.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"sembcorpp"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Number out of index\");","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":239,"author":{"gitId":"sembcorpp"},"content":"            else if (output.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":240,"author":{"gitId":"sembcorpp"},"content":"                String[] s \u003d output.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":241,"author":{"gitId":"sembcorpp"},"content":"                int num \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"sembcorpp"},"content":"                if (num \u003c count+1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":243,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"sembcorpp"},"content":"                    Task n \u003d tasks.get(num-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(n.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":246,"author":{"gitId":"sembcorpp"},"content":"                    for (int j \u003d num; j \u003ccount;j++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"sembcorpp"},"content":"                        Task t \u003d tasks.get(j);","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"sembcorpp"},"content":"                        t.changeNum();","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"sembcorpp"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":250,"author":{"gitId":"sembcorpp"},"content":"                    count -\u003d1;","lastModifiedDate":"2023-01-19"},{"lineNumber":251,"author":{"gitId":"sembcorpp"},"content":"                    tasks.remove(n);","lastModifiedDate":"2023-01-19"},{"lineNumber":252,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"You now have \" + count + \" tasks\");","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"sembcorpp"},"content":"                } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":254,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(\"Number out of index\");","lastModifiedDate":"2023-01-19"},{"lineNumber":255,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":256,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":257,"author":{"gitId":"sembcorpp"},"content":"            else if (!output.equals(\"list\") ) {","lastModifiedDate":"2023-01-19"},{"lineNumber":258,"author":{"gitId":"sembcorpp"},"content":"                System.out.println(\"Im sorry I don\u0027t understand what you mean :((\");","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"sembcorpp"},"content":"                continue;","lastModifiedDate":"2023-01-19"},{"lineNumber":260,"author":{"gitId":"sembcorpp"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":261,"author":{"gitId":"sembcorpp"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":262,"author":{"gitId":"sembcorpp"},"content":"                    System.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":263,"author":{"gitId":"sembcorpp"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":264,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":266,"author":{"gitId":"sembcorpp"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":268,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sembcorpp":260,"-":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"deadline ah","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"sembcorpp":18}}]
