[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"# Shao","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"Shao is a `chat bot application` that allows one to manage tasks via the command line interface.","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"## Setting up in VS code","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"Prerequisites: JDK 19","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"1. Open Visual Studio Code (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"1. Open the project into VS Code as follows:","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"   1. Click `File` -\u003e `Open Folder`.","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"1. After that, locate the `src/main/java/seedu/shao/Shao.java` file, right-click it, and choose `Run Java` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"```Text","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"________________________________________________________","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"  Hi There! I\u0027m Shao","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"  What can I do for you?","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"________________________________________________________","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"```","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"shaowi"},"content":"## Contributing to Shao","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"To contribute to Shao, follow these steps:","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"1. Fork this repository.","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"2. Create a branch: `git checkout -b master`.","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"shaowi"},"content":"3. Make your changes and commit them: `git commit -m \u0027\u003ccommit_message\u003e\u0027`","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"shaowi"},"content":"4. Push to the original branch: `git push origin ip/master`","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"shaowi"},"content":"5. Create the pull request.","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"shaowi"},"content":"Alternatively see the GitHub documentation on [creating a pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"shaowi"},"content":"## Author Info","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"shaowi"},"content":"üë§ **Lee Shao Wee_A0240790H**","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"shaowi"},"content":"- Portfolio Website: [URL](https://leeshaowee.netlify.app/)","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"shaowi"},"content":"- Github: [@shaowi](https://github.com/shaowi)","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"shaowi"},"content":"---","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"shaowi"},"content":"## Show your support","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"shaowi"},"content":"Give a ‚≠êÔ∏è if this project helped you!","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"shaowi"},"content":"[Back To The Top](#shao)","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"shaowi":48,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"    mainClassName \u003d \"seedu.shao.Shao\"","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"    archiveBaseName \u003d \"shao\"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"shaowi"},"content":"sourceSets.main.java.srcDirs +\u003d [\u0027app/src/main/java\u0027]","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"shaowi":4,"-":39}},{"path":"data/shao.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"T|0|read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"D|1|return book|2019-03-01 0815","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"E|0|project meeting|2/12/2019 1800|2019-12-02 2200","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"E|1|homework|2022-05-09 1530|2022-05-09 2230","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"shaowi":4}},{"path":"src/main/java/seedu/shao/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"\tprotected LocalDateTime by;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"\tpublic Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"\t\tthis.by \u003d by;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + dateTimeString(by) + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"\tpublic String getSavedFormat() {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"\t\treturn String.format(\"D|%d|%s|%s\", isDone ? 1 : 0, description, by);","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"\t};","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"shaowi":22}},{"path":"src/main/java/seedu/shao/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"\tprotected LocalDateTime from;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"\tprotected LocalDateTime to;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"\tpublic Event(String description, LocalDateTime[] fromTo) {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"\t\tthis.from \u003d fromTo[0];","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"\t\tthis.to \u003d fromTo[1];","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"\t\treturn \"[E]\" + super.toString() +","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"\t\t\t\tString.format(\" (from: %s, to: %s)\", dateTimeString(from), dateTimeString(to));","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"\tpublic String getSavedFormat() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"\t\treturn String.format(\"E|%d|%s|%s|%s\", isDone ? 1 : 0, description, from, to);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"\t};","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"shaowi":25}},{"path":"src/main/java/seedu/shao/Shao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"import java.io.File;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"import java.util.List;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"public class Shao {","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"    enum TaskType {","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"    public static String dataDirectory \u003d \"data\";","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"    public static String sep \u003d File.separator;","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"shaowi"},"content":"    public static String dataFilePath \u003d dataDirectory + sep + \"shao.txt\";","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"shaowi"},"content":"    public static void printRowLine() {","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"        println(\"________________________________________________________\");","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"shaowi"},"content":"    public static void println(String s) {","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"shaowi"},"content":"        System.out.println(\"\\t\" + s);","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"shaowi"},"content":"    public static void printAddedTask(Task task, int tasksCnt) {","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"shaowi"},"content":"        println(\"Noted. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":45,"author":{"gitId":"shaowi"},"content":"        println(\"  \" + task.toString());","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"shaowi"},"content":"        println(String.format(\"You have %d %s in your list currently.\", tasksCnt, tasksCnt \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":49,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":50,"author":{"gitId":"shaowi"},"content":"    public static void printMarkedTask(Task task) {","lastModifiedDate":"2023-01-14"},{"lineNumber":51,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":52,"author":{"gitId":"shaowi"},"content":"        println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"shaowi"},"content":"        println(task.toString());","lastModifiedDate":"2023-01-15"},{"lineNumber":54,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":55,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":56,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":57,"author":{"gitId":"shaowi"},"content":"    public static void printUnmarkedTask(Task task) {","lastModifiedDate":"2023-01-14"},{"lineNumber":58,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":59,"author":{"gitId":"shaowi"},"content":"        println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":60,"author":{"gitId":"shaowi"},"content":"        println(task.toString());","lastModifiedDate":"2023-01-15"},{"lineNumber":61,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":62,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":63,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":64,"author":{"gitId":"shaowi"},"content":"    public static void printItemDeleted(Task task, int tasksCnt) {","lastModifiedDate":"2023-01-15"},{"lineNumber":65,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-15"},{"lineNumber":66,"author":{"gitId":"shaowi"},"content":"        println(\"Sure, I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"shaowi"},"content":"        println(\"  \" + task.toString());","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"shaowi"},"content":"        println(String.format(\"You have %d %s in your list currently.\", tasksCnt, tasksCnt \u003e 1 ? \"tasks\" : \"task\"));","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":70,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":72,"author":{"gitId":"shaowi"},"content":"    public static void printList(List\u003cTask\u003e items) {","lastModifiedDate":"2023-01-14"},{"lineNumber":73,"author":{"gitId":"shaowi"},"content":"        int numItems \u003d items.size();","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"shaowi"},"content":"        String header \u003d numItems \u003d\u003d 0 ? \"There are no tasks in your list. Please add one.\"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"shaowi"},"content":"                : \"Here are the tasks in your list: \";","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"shaowi"},"content":"        println(header);","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"shaowi"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":80,"author":{"gitId":"shaowi"},"content":"            Task curTask \u003d items.get(i);","lastModifiedDate":"2023-01-14"},{"lineNumber":81,"author":{"gitId":"shaowi"},"content":"            println(String.format(\"%d.%s\", i + 1, curTask));","lastModifiedDate":"2023-01-14"},{"lineNumber":82,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":84,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":85,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"shaowi"},"content":"    public static void printDeadlineEventOnDatetime(List\u003cTask\u003e items, String dateTimeStr) {","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"shaowi"},"content":"        boolean hasItem \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"shaowi"},"content":"        LocalDateTime dateTime \u003d parseDateTimeStr(dateTimeStr);","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"shaowi"},"content":"        String dtStrOutput \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"shaowi"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"shaowi"},"content":"            Task curTask \u003d items.get(i);","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"shaowi"},"content":"            if (curTask instanceof Deadline) {","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"shaowi"},"content":"                Deadline deadline \u003d (Deadline) curTask;","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"shaowi"},"content":"                if (deadline.by.equals(dateTime)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"shaowi"},"content":"                    if (!hasItem) {","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"shaowi"},"content":"                        println(String.format(","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"shaowi"},"content":"                                \"These are the deadline/events that occur on %s\", dtStrOutput));","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"shaowi"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"shaowi"},"content":"                    hasItem \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"shaowi"},"content":"                    println(String.format(\"%d.%s\", i + 1, deadline));","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"shaowi"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"shaowi"},"content":"            if (curTask instanceof Event) {","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"shaowi"},"content":"                Event event \u003d (Event) curTask;","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"shaowi"},"content":"                if (event.from.equals(dateTime) || event.to.equals(dateTime)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"shaowi"},"content":"                    if (!hasItem) {","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"shaowi"},"content":"                        println(String.format(","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"shaowi"},"content":"                                \"These are the deadline/events that occur on %s\", dtStrOutput));","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"shaowi"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"shaowi"},"content":"                    hasItem \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":113,"author":{"gitId":"shaowi"},"content":"                    println(String.format(\"%d.%s\", i + 1, event));","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"shaowi"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"shaowi"},"content":"        if (!hasItem) {","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"shaowi"},"content":"            println(String.format(","lastModifiedDate":"2023-01-17"},{"lineNumber":119,"author":{"gitId":"shaowi"},"content":"                    \"No deadline/events occur on %s\", dtStrOutput));","lastModifiedDate":"2023-01-17"},{"lineNumber":120,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"shaowi"},"content":"    public static void printError(String errorMessage) {","lastModifiedDate":"2023-01-14"},{"lineNumber":125,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":126,"author":{"gitId":"shaowi"},"content":"        println(errorMessage);","lastModifiedDate":"2023-01-14"},{"lineNumber":127,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":128,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":129,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":130,"author":{"gitId":"shaowi"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-01-14"},{"lineNumber":131,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":132,"author":{"gitId":"shaowi"},"content":"        println(\"\\tHi There! I\u0027m Shao\");","lastModifiedDate":"2023-01-14"},{"lineNumber":133,"author":{"gitId":"shaowi"},"content":"        println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2023-01-14"},{"lineNumber":134,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":135,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":136,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":137,"author":{"gitId":"shaowi"},"content":"    public static void exitUser() {","lastModifiedDate":"2023-01-14"},{"lineNumber":138,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":139,"author":{"gitId":"shaowi"},"content":"        println(\"Bye! Have a nice day!\");","lastModifiedDate":"2023-01-14"},{"lineNumber":140,"author":{"gitId":"shaowi"},"content":"        printRowLine();","lastModifiedDate":"2023-01-14"},{"lineNumber":141,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":142,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":143,"author":{"gitId":"shaowi"},"content":"    public static void markItem(String itemNum, List\u003cTask\u003e items, boolean isMark) throws NumberFormatException {","lastModifiedDate":"2023-01-17"},{"lineNumber":144,"author":{"gitId":"shaowi"},"content":"        int idx \u003d Integer.parseInt(itemNum) - 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":145,"author":{"gitId":"shaowi"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"shaowi"},"content":"            Task task \u003d items.get(idx);","lastModifiedDate":"2023-01-14"},{"lineNumber":147,"author":{"gitId":"shaowi"},"content":"            if (isMark) {","lastModifiedDate":"2023-01-14"},{"lineNumber":148,"author":{"gitId":"shaowi"},"content":"                task.markAsDone();","lastModifiedDate":"2023-01-14"},{"lineNumber":149,"author":{"gitId":"shaowi"},"content":"                printMarkedTask(task);","lastModifiedDate":"2023-01-14"},{"lineNumber":150,"author":{"gitId":"shaowi"},"content":"                markSavedTask(idx, true);","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"shaowi"},"content":"                return;","lastModifiedDate":"2023-01-14"},{"lineNumber":152,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":153,"author":{"gitId":"shaowi"},"content":"            task.markAsUndone();","lastModifiedDate":"2023-01-14"},{"lineNumber":154,"author":{"gitId":"shaowi"},"content":"            printUnmarkedTask(task);","lastModifiedDate":"2023-01-14"},{"lineNumber":155,"author":{"gitId":"shaowi"},"content":"            markSavedTask(idx, false);","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"shaowi"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"shaowi"},"content":"            printError(String.format(\"Oops! Please select item from 1 to %d inclusive.\", items.size()));","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"shaowi"},"content":"    public static void markSavedTask(int idx, boolean isMark) {","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"shaowi"},"content":"        try (Stream\u003cString\u003e lines \u003d Files.lines(Paths.get(dataFilePath))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"shaowi"},"content":"            String line \u003d lines.skip(idx).findFirst().get();","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"shaowi"},"content":"            modifyLineFile(dataFilePath, idx + 1,","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"shaowi"},"content":"                    line.replaceFirst(\"[01]\", isMark ? \"1\" : \"0\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"shaowi"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"shaowi"},"content":"            printError(\"Something went wrong while marking the task status.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"shaowi"},"content":"    public static void modifyLineFile(String filePath, int lineNum, String newLine) {","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"shaowi"},"content":"        File fileToBeModified \u003d new File(filePath);","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"shaowi"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"shaowi"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"shaowi"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"shaowi"},"content":"        int curLineNum \u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"shaowi"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"shaowi"},"content":"            reader \u003d new BufferedReader(new FileReader(fileToBeModified));","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"shaowi"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"shaowi"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-01-17"},{"lineNumber":184,"author":{"gitId":"shaowi"},"content":"                if (curLineNum \u003d\u003d lineNum) {","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"shaowi"},"content":"                    content +\u003d newLine + System.lineSeparator();","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"shaowi"},"content":"                } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"shaowi"},"content":"                    content +\u003d line + System.lineSeparator();","lastModifiedDate":"2023-01-17"},{"lineNumber":188,"author":{"gitId":"shaowi"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":189,"author":{"gitId":"shaowi"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":190,"author":{"gitId":"shaowi"},"content":"                curLineNum +\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":192,"author":{"gitId":"shaowi"},"content":"            writer \u003d new FileWriter(fileToBeModified);","lastModifiedDate":"2023-01-17"},{"lineNumber":193,"author":{"gitId":"shaowi"},"content":"            writer.write(content);","lastModifiedDate":"2023-01-17"},{"lineNumber":194,"author":{"gitId":"shaowi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":195,"author":{"gitId":"shaowi"},"content":"            printError(\"Something went wrong while modifying the file.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":196,"author":{"gitId":"shaowi"},"content":"        } finally {","lastModifiedDate":"2023-01-17"},{"lineNumber":197,"author":{"gitId":"shaowi"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":198,"author":{"gitId":"shaowi"},"content":"                reader.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":199,"author":{"gitId":"shaowi"},"content":"                writer.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":200,"author":{"gitId":"shaowi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":201,"author":{"gitId":"shaowi"},"content":"                printError(\"Something went wrong while modifying the file.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"shaowi"},"content":"    public static void deleteItem(String itemNum, List\u003cTask\u003e items) throws NumberFormatException {","lastModifiedDate":"2023-01-17"},{"lineNumber":207,"author":{"gitId":"shaowi"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":208,"author":{"gitId":"shaowi"},"content":"            int idx \u003d Integer.parseInt(itemNum) - 1;","lastModifiedDate":"2023-01-15"},{"lineNumber":209,"author":{"gitId":"shaowi"},"content":"            deleteLineFile(dataFilePath, idx + 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":210,"author":{"gitId":"shaowi"},"content":"            printItemDeleted(items.remove(idx), items.size());","lastModifiedDate":"2023-01-15"},{"lineNumber":211,"author":{"gitId":"shaowi"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-01-17"},{"lineNumber":212,"author":{"gitId":"shaowi"},"content":"            printError(String.format(\"Oops! Please select item from 1 to %d inclusive.\", items.size()));","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"shaowi"},"content":"    public static void deleteLineFile(String filePath, int lineNum) {","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"shaowi"},"content":"        File fileToBeModified \u003d new File(filePath);","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"shaowi"},"content":"        String content \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"shaowi"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"shaowi"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"shaowi"},"content":"        int curLineNum \u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"shaowi"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"shaowi"},"content":"            reader \u003d new BufferedReader(new FileReader(fileToBeModified));","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"shaowi"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"shaowi"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"shaowi"},"content":"                if (curLineNum !\u003d lineNum) {","lastModifiedDate":"2023-01-17"},{"lineNumber":229,"author":{"gitId":"shaowi"},"content":"                    content +\u003d line + System.lineSeparator();","lastModifiedDate":"2023-01-17"},{"lineNumber":230,"author":{"gitId":"shaowi"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":231,"author":{"gitId":"shaowi"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":232,"author":{"gitId":"shaowi"},"content":"                curLineNum +\u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":233,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":234,"author":{"gitId":"shaowi"},"content":"            writer \u003d new FileWriter(fileToBeModified);","lastModifiedDate":"2023-01-17"},{"lineNumber":235,"author":{"gitId":"shaowi"},"content":"            writer.write(content);","lastModifiedDate":"2023-01-17"},{"lineNumber":236,"author":{"gitId":"shaowi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":237,"author":{"gitId":"shaowi"},"content":"            printError(\"Something went wrong while deleting a line from the file.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":238,"author":{"gitId":"shaowi"},"content":"        } finally {","lastModifiedDate":"2023-01-17"},{"lineNumber":239,"author":{"gitId":"shaowi"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":240,"author":{"gitId":"shaowi"},"content":"                reader.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":241,"author":{"gitId":"shaowi"},"content":"                writer.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":242,"author":{"gitId":"shaowi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":243,"author":{"gitId":"shaowi"},"content":"                printError(\"Something went wrong while deleting a line from the file.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":245,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":246,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":247,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":248,"author":{"gitId":"shaowi"},"content":"    public static LocalDateTime getBy(String[] inputArr) {","lastModifiedDate":"2023-01-17"},{"lineNumber":249,"author":{"gitId":"shaowi"},"content":"        int l \u003d inputArr.length;","lastModifiedDate":"2023-01-14"},{"lineNumber":250,"author":{"gitId":"shaowi"},"content":"        for (int i \u003d 0; i \u003c l; i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":251,"author":{"gitId":"shaowi"},"content":"            if (i \u003c l - 1 \u0026\u0026 inputArr[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":252,"author":{"gitId":"shaowi"},"content":"                return parseDateTimeStr(sliceArrAndConcate(inputArr, i + 1, l));","lastModifiedDate":"2023-01-17"},{"lineNumber":253,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":254,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":255,"author":{"gitId":"shaowi"},"content":"        return null;","lastModifiedDate":"2023-01-17"},{"lineNumber":256,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":257,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":258,"author":{"gitId":"shaowi"},"content":"    public static LocalDateTime parseDateTimeStr(String dateTimeStr) {","lastModifiedDate":"2023-01-17"},{"lineNumber":259,"author":{"gitId":"shaowi"},"content":"        if (dateTimeStr.isBlank()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":260,"author":{"gitId":"shaowi"},"content":"            return null;","lastModifiedDate":"2023-01-17"},{"lineNumber":261,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"shaowi"},"content":"        String[] dateTimeArr \u003d dateTimeStr.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":263,"author":{"gitId":"shaowi"},"content":"        LocalTime time \u003d LocalTime.MIN;","lastModifiedDate":"2023-01-17"},{"lineNumber":264,"author":{"gitId":"shaowi"},"content":"        Integer[] dateArr;","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"shaowi"},"content":"        if (dateTimeArr.length \u003e 1) {","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"shaowi"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":267,"author":{"gitId":"shaowi"},"content":"                int hr \u003d Integer.parseInt(dateTimeArr[1].substring(0, 2));","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"shaowi"},"content":"                int min \u003d Integer.parseInt(dateTimeArr[1].substring(2, 4));","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"shaowi"},"content":"                time \u003d LocalTime.of(hr, min);","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"shaowi"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"shaowi"},"content":"                printError(\"Oops! Time format needs to be specified in proper form.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":272,"author":{"gitId":"shaowi"},"content":"                return null;","lastModifiedDate":"2023-01-17"},{"lineNumber":273,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":274,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":275,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":276,"author":{"gitId":"shaowi"},"content":"        if (dateTimeStr.contains(\"/\")) { // Input Format: dd/MM/YYYY","lastModifiedDate":"2023-01-17"},{"lineNumber":277,"author":{"gitId":"shaowi"},"content":"            dateArr \u003d Stream.of(dateTimeArr[0].split(\"/\")).map(Integer::valueOf).toArray(Integer[]::new);","lastModifiedDate":"2023-01-17"},{"lineNumber":278,"author":{"gitId":"shaowi"},"content":"            return LocalDateTime.of(LocalDate.of(dateArr[2], dateArr[1], dateArr[0]), time);","lastModifiedDate":"2023-01-17"},{"lineNumber":279,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":280,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":281,"author":{"gitId":"shaowi"},"content":"        // Input Format: YYYY-MM-dd","lastModifiedDate":"2023-01-17"},{"lineNumber":282,"author":{"gitId":"shaowi"},"content":"        dateArr \u003d Stream.of(dateTimeArr[0].split(\"-\")).map(Integer::valueOf).toArray(Integer[]::new);","lastModifiedDate":"2023-01-17"},{"lineNumber":283,"author":{"gitId":"shaowi"},"content":"        return LocalDateTime.of(LocalDate.of(dateArr[0], dateArr[1], dateArr[2]), time);","lastModifiedDate":"2023-01-17"},{"lineNumber":284,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":285,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":286,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":287,"author":{"gitId":"shaowi"},"content":"    public static LocalDateTime[] getFromTo(String[] inputArr) {","lastModifiedDate":"2023-01-17"},{"lineNumber":288,"author":{"gitId":"shaowi"},"content":"        int l \u003d inputArr.length;","lastModifiedDate":"2023-01-14"},{"lineNumber":289,"author":{"gitId":"shaowi"},"content":"        int fromStartIdx \u003d -1, fromEndIdx \u003d l, toStartIdx \u003d -1;","lastModifiedDate":"2023-01-14"},{"lineNumber":290,"author":{"gitId":"shaowi"},"content":"        LocalDateTime from \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-01-17"},{"lineNumber":291,"author":{"gitId":"shaowi"},"content":"        LocalDateTime to \u003d LocalDateTime.MIN;","lastModifiedDate":"2023-01-17"},{"lineNumber":292,"author":{"gitId":"shaowi"},"content":"        for (int i \u003d 0; i \u003c l; i++) {","lastModifiedDate":"2023-01-14"},{"lineNumber":293,"author":{"gitId":"shaowi"},"content":"            if (i \u003c l - 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":294,"author":{"gitId":"shaowi"},"content":"                if (inputArr[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":295,"author":{"gitId":"shaowi"},"content":"                    fromStartIdx \u003d i + 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":296,"author":{"gitId":"shaowi"},"content":"                }","lastModifiedDate":"2023-01-14"},{"lineNumber":297,"author":{"gitId":"shaowi"},"content":"                if (inputArr[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":298,"author":{"gitId":"shaowi"},"content":"                    fromEndIdx \u003d i;","lastModifiedDate":"2023-01-14"},{"lineNumber":299,"author":{"gitId":"shaowi"},"content":"                    toStartIdx \u003d i + 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":300,"author":{"gitId":"shaowi"},"content":"                }","lastModifiedDate":"2023-01-14"},{"lineNumber":301,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":302,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":303,"author":{"gitId":"shaowi"},"content":"        if (fromStartIdx \u003e -1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":304,"author":{"gitId":"shaowi"},"content":"            from \u003d parseDateTimeStr(sliceArrAndConcate(inputArr, fromStartIdx, fromEndIdx));","lastModifiedDate":"2023-01-17"},{"lineNumber":305,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":306,"author":{"gitId":"shaowi"},"content":"        if (toStartIdx \u003e -1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":307,"author":{"gitId":"shaowi"},"content":"            to \u003d parseDateTimeStr(sliceArrAndConcate(inputArr, toStartIdx, l));","lastModifiedDate":"2023-01-17"},{"lineNumber":308,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":309,"author":{"gitId":"shaowi"},"content":"        return new LocalDateTime[] { from, to };","lastModifiedDate":"2023-01-17"},{"lineNumber":310,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":311,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":312,"author":{"gitId":"shaowi"},"content":"    public static String trimDate(String input) {","lastModifiedDate":"2023-01-14"},{"lineNumber":313,"author":{"gitId":"shaowi"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":314,"author":{"gitId":"shaowi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-14"},{"lineNumber":315,"author":{"gitId":"shaowi"},"content":"        for (String s : inputArr) {","lastModifiedDate":"2023-01-14"},{"lineNumber":316,"author":{"gitId":"shaowi"},"content":"            if (s.contains(\"/\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":317,"author":{"gitId":"shaowi"},"content":"                return sb.toString().trim();","lastModifiedDate":"2023-01-14"},{"lineNumber":318,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":319,"author":{"gitId":"shaowi"},"content":"            sb.append(s + \" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":320,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":321,"author":{"gitId":"shaowi"},"content":"        return sb.toString().trim();","lastModifiedDate":"2023-01-14"},{"lineNumber":322,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":323,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":324,"author":{"gitId":"shaowi"},"content":"    public static String sliceArrAndConcate(String[] arr, int startIdx, int endIdx) {","lastModifiedDate":"2023-01-14"},{"lineNumber":325,"author":{"gitId":"shaowi"},"content":"        return String.join(\" \", Arrays.copyOfRange(arr, startIdx, endIdx));","lastModifiedDate":"2023-01-14"},{"lineNumber":326,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":327,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":328,"author":{"gitId":"shaowi"},"content":"    public static void fetchData(String input, List\u003cTask\u003e items) {","lastModifiedDate":"2023-01-17"},{"lineNumber":329,"author":{"gitId":"shaowi"},"content":"        String inputLower \u003d input.toLowerCase();","lastModifiedDate":"2023-01-17"},{"lineNumber":330,"author":{"gitId":"shaowi"},"content":"        if (inputLower.isBlank())","lastModifiedDate":"2023-01-17"},{"lineNumber":331,"author":{"gitId":"shaowi"},"content":"            return;","lastModifiedDate":"2023-01-17"},{"lineNumber":332,"author":{"gitId":"shaowi"},"content":"        String[] inputArr \u003d inputLower.split(\"\\\\|\");","lastModifiedDate":"2023-01-17"},{"lineNumber":333,"author":{"gitId":"shaowi"},"content":"        TaskType operationType \u003d inputLower.startsWith(\"t\")","lastModifiedDate":"2023-01-17"},{"lineNumber":334,"author":{"gitId":"shaowi"},"content":"                ? TaskType.TODO","lastModifiedDate":"2023-01-17"},{"lineNumber":335,"author":{"gitId":"shaowi"},"content":"                : inputLower.startsWith(\"d\")","lastModifiedDate":"2023-01-17"},{"lineNumber":336,"author":{"gitId":"shaowi"},"content":"                        ? TaskType.DEADLINE","lastModifiedDate":"2023-01-17"},{"lineNumber":337,"author":{"gitId":"shaowi"},"content":"                        : TaskType.EVENT;","lastModifiedDate":"2023-01-17"},{"lineNumber":338,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":339,"author":{"gitId":"shaowi"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-01-17"},{"lineNumber":340,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":341,"author":{"gitId":"shaowi"},"content":"        switch (operationType) {","lastModifiedDate":"2023-01-17"},{"lineNumber":342,"author":{"gitId":"shaowi"},"content":"            case TODO:","lastModifiedDate":"2023-01-17"},{"lineNumber":343,"author":{"gitId":"shaowi"},"content":"                newTask \u003d new Todo(inputArr[2]);","lastModifiedDate":"2023-01-17"},{"lineNumber":344,"author":{"gitId":"shaowi"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":345,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":346,"author":{"gitId":"shaowi"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-17"},{"lineNumber":347,"author":{"gitId":"shaowi"},"content":"                newTask \u003d new Deadline(inputArr[2], parseDateTimeStr(inputArr[3]));","lastModifiedDate":"2023-01-17"},{"lineNumber":348,"author":{"gitId":"shaowi"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":349,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":350,"author":{"gitId":"shaowi"},"content":"            case EVENT:","lastModifiedDate":"2023-01-17"},{"lineNumber":351,"author":{"gitId":"shaowi"},"content":"                newTask \u003d new Event(inputArr[2],","lastModifiedDate":"2023-01-17"},{"lineNumber":352,"author":{"gitId":"shaowi"},"content":"                        new LocalDateTime[] { parseDateTimeStr(inputArr[3]), parseDateTimeStr(inputArr[4]) });","lastModifiedDate":"2023-01-17"},{"lineNumber":353,"author":{"gitId":"shaowi"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":354,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":355,"author":{"gitId":"shaowi"},"content":"            default:","lastModifiedDate":"2023-01-17"},{"lineNumber":356,"author":{"gitId":"shaowi"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":357,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":358,"author":{"gitId":"shaowi"},"content":"        if (inputArr[1].equals(\"1\"))","lastModifiedDate":"2023-01-17"},{"lineNumber":359,"author":{"gitId":"shaowi"},"content":"            newTask.markAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":360,"author":{"gitId":"shaowi"},"content":"        items.add(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":361,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":362,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":363,"author":{"gitId":"shaowi"},"content":"    public static void readInput(List\u003cTask\u003e items) {","lastModifiedDate":"2023-01-17"},{"lineNumber":364,"author":{"gitId":"shaowi"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":365,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":366,"author":{"gitId":"shaowi"},"content":"        // Prompting","lastModifiedDate":"2023-01-14"},{"lineNumber":367,"author":{"gitId":"shaowi"},"content":"        while (true) {","lastModifiedDate":"2023-01-14"},{"lineNumber":368,"author":{"gitId":"shaowi"},"content":"            if (!scan.hasNextLine())","lastModifiedDate":"2023-01-18"},{"lineNumber":369,"author":{"gitId":"shaowi"},"content":"                continue;","lastModifiedDate":"2023-01-18"},{"lineNumber":370,"author":{"gitId":"shaowi"},"content":"            String input \u003d scan.nextLine().trim();","lastModifiedDate":"2023-01-14"},{"lineNumber":371,"author":{"gitId":"shaowi"},"content":"            String inputLower \u003d input.toLowerCase();","lastModifiedDate":"2023-01-14"},{"lineNumber":372,"author":{"gitId":"shaowi"},"content":"            if (inputLower.isBlank())","lastModifiedDate":"2023-01-14"},{"lineNumber":373,"author":{"gitId":"shaowi"},"content":"                continue;","lastModifiedDate":"2023-01-14"},{"lineNumber":374,"author":{"gitId":"shaowi"},"content":"            switch (inputLower) {","lastModifiedDate":"2023-01-14"},{"lineNumber":375,"author":{"gitId":"shaowi"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-14"},{"lineNumber":376,"author":{"gitId":"shaowi"},"content":"                    exitUser();","lastModifiedDate":"2023-01-14"},{"lineNumber":377,"author":{"gitId":"shaowi"},"content":"                    scan.close();","lastModifiedDate":"2023-01-14"},{"lineNumber":378,"author":{"gitId":"shaowi"},"content":"                    return;","lastModifiedDate":"2023-01-14"},{"lineNumber":379,"author":{"gitId":"shaowi"},"content":"                case \"list\":","lastModifiedDate":"2023-01-14"},{"lineNumber":380,"author":{"gitId":"shaowi"},"content":"                    printList(items);","lastModifiedDate":"2023-01-14"},{"lineNumber":381,"author":{"gitId":"shaowi"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":382,"author":{"gitId":"shaowi"},"content":"                default:","lastModifiedDate":"2023-01-14"},{"lineNumber":383,"author":{"gitId":"shaowi"},"content":"                    boolean isDateTimeOperation \u003d inputLower.startsWith(\"datetime\");","lastModifiedDate":"2023-01-17"},{"lineNumber":384,"author":{"gitId":"shaowi"},"content":"                    boolean isDeleteOperation \u003d inputLower.startsWith(\"delete\");","lastModifiedDate":"2023-01-15"},{"lineNumber":385,"author":{"gitId":"shaowi"},"content":"                    boolean isMarkOperation \u003d inputLower.startsWith(\"mark\")","lastModifiedDate":"2023-01-14"},{"lineNumber":386,"author":{"gitId":"shaowi"},"content":"                            || inputLower.startsWith(\"unmark\");","lastModifiedDate":"2023-01-14"},{"lineNumber":387,"author":{"gitId":"shaowi"},"content":"                    String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":388,"author":{"gitId":"shaowi"},"content":"                    if (isDateTimeOperation) {","lastModifiedDate":"2023-01-17"},{"lineNumber":389,"author":{"gitId":"shaowi"},"content":"                        if (inputArr.length \u003c 2) {","lastModifiedDate":"2023-01-17"},{"lineNumber":390,"author":{"gitId":"shaowi"},"content":"                            printError(\"Oops! Datetime cannot be empty.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":391,"author":{"gitId":"shaowi"},"content":"                        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":392,"author":{"gitId":"shaowi"},"content":"                            printDeadlineEventOnDatetime(items, sliceArrAndConcate(inputArr, 1, inputArr.length));","lastModifiedDate":"2023-01-17"},{"lineNumber":393,"author":{"gitId":"shaowi"},"content":"                        }","lastModifiedDate":"2023-01-17"},{"lineNumber":394,"author":{"gitId":"shaowi"},"content":"                    } else if (isDeleteOperation || isMarkOperation) {","lastModifiedDate":"2023-01-17"},{"lineNumber":395,"author":{"gitId":"shaowi"},"content":"                        if (inputArr.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":396,"author":{"gitId":"shaowi"},"content":"                            printError(\"Oops! The item number cannot be empty.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":397,"author":{"gitId":"shaowi"},"content":"                        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":398,"author":{"gitId":"shaowi"},"content":"                            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":399,"author":{"gitId":"shaowi"},"content":"                                if (isDeleteOperation) {","lastModifiedDate":"2023-01-15"},{"lineNumber":400,"author":{"gitId":"shaowi"},"content":"                                    deleteItem(inputArr[1], items);","lastModifiedDate":"2023-01-15"},{"lineNumber":401,"author":{"gitId":"shaowi"},"content":"                                } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":402,"author":{"gitId":"shaowi"},"content":"                                    markItem(inputArr[1], items, inputLower.startsWith(\"mark\"));","lastModifiedDate":"2023-01-14"},{"lineNumber":403,"author":{"gitId":"shaowi"},"content":"                                }","lastModifiedDate":"2023-01-15"},{"lineNumber":404,"author":{"gitId":"shaowi"},"content":"                            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-17"},{"lineNumber":405,"author":{"gitId":"shaowi"},"content":"                                printError(\"Oops! An item number must be provided.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":406,"author":{"gitId":"shaowi"},"content":"                            }","lastModifiedDate":"2023-01-14"},{"lineNumber":407,"author":{"gitId":"shaowi"},"content":"                        }","lastModifiedDate":"2023-01-14"},{"lineNumber":408,"author":{"gitId":"shaowi"},"content":"                    } else if (inputLower.startsWith(\"todo\") || inputLower.startsWith(\"deadline\")","lastModifiedDate":"2023-01-14"},{"lineNumber":409,"author":{"gitId":"shaowi"},"content":"                            || inputLower.startsWith(\"event\")) {","lastModifiedDate":"2023-01-14"},{"lineNumber":410,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":411,"author":{"gitId":"shaowi"},"content":"                        TaskType operationType \u003d inputLower.startsWith(\"todo\")","lastModifiedDate":"2023-01-15"},{"lineNumber":412,"author":{"gitId":"shaowi"},"content":"                                ? TaskType.TODO","lastModifiedDate":"2023-01-15"},{"lineNumber":413,"author":{"gitId":"shaowi"},"content":"                                : inputLower.startsWith(\"deadline\")","lastModifiedDate":"2023-01-14"},{"lineNumber":414,"author":{"gitId":"shaowi"},"content":"                                        ? TaskType.DEADLINE","lastModifiedDate":"2023-01-15"},{"lineNumber":415,"author":{"gitId":"shaowi"},"content":"                                        : TaskType.EVENT;","lastModifiedDate":"2023-01-15"},{"lineNumber":416,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":417,"author":{"gitId":"shaowi"},"content":"                        if (inputArr.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":418,"author":{"gitId":"shaowi"},"content":"                            printError(String.format(\"Oops! The description of a %s cannot be empty.\",","lastModifiedDate":"2023-01-14"},{"lineNumber":419,"author":{"gitId":"shaowi"},"content":"                                    operationType \u003d\u003d TaskType.TODO ? \"todo\"","lastModifiedDate":"2023-01-15"},{"lineNumber":420,"author":{"gitId":"shaowi"},"content":"                                            : operationType \u003d\u003d TaskType.DEADLINE ? \"deadline\" : \"event\"));","lastModifiedDate":"2023-01-15"},{"lineNumber":421,"author":{"gitId":"shaowi"},"content":"                        } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":422,"author":{"gitId":"shaowi"},"content":"                            Task newTask \u003d null;","lastModifiedDate":"2023-01-14"},{"lineNumber":423,"author":{"gitId":"shaowi"},"content":"                            String description \u003d sliceArrAndConcate(inputArr, 1, inputArr.length);","lastModifiedDate":"2023-01-14"},{"lineNumber":424,"author":{"gitId":"shaowi"},"content":"                            switch (operationType) {","lastModifiedDate":"2023-01-14"},{"lineNumber":425,"author":{"gitId":"shaowi"},"content":"                                case TODO:","lastModifiedDate":"2023-01-15"},{"lineNumber":426,"author":{"gitId":"shaowi"},"content":"                                    newTask \u003d new Todo(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":427,"author":{"gitId":"shaowi"},"content":"                                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":428,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":429,"author":{"gitId":"shaowi"},"content":"                                case DEADLINE:","lastModifiedDate":"2023-01-15"},{"lineNumber":430,"author":{"gitId":"shaowi"},"content":"                                    LocalDateTime by \u003d getBy(inputArr);","lastModifiedDate":"2023-01-17"},{"lineNumber":431,"author":{"gitId":"shaowi"},"content":"                                    if (by \u003d\u003d null) {","lastModifiedDate":"2023-01-17"},{"lineNumber":432,"author":{"gitId":"shaowi"},"content":"                                        printError(","lastModifiedDate":"2023-01-14"},{"lineNumber":433,"author":{"gitId":"shaowi"},"content":"                                                \"Oops! The description of deadline must include a completion date/time.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":434,"author":{"gitId":"shaowi"},"content":"                                        continue;","lastModifiedDate":"2023-01-14"},{"lineNumber":435,"author":{"gitId":"shaowi"},"content":"                                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":436,"author":{"gitId":"shaowi"},"content":"                                    newTask \u003d new Deadline(trimDate(description), by);","lastModifiedDate":"2023-01-14"},{"lineNumber":437,"author":{"gitId":"shaowi"},"content":"                                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":438,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":439,"author":{"gitId":"shaowi"},"content":"                                case EVENT:","lastModifiedDate":"2023-01-15"},{"lineNumber":440,"author":{"gitId":"shaowi"},"content":"                                    LocalDateTime[] fromTo \u003d getFromTo(inputArr);","lastModifiedDate":"2023-01-17"},{"lineNumber":441,"author":{"gitId":"shaowi"},"content":"                                    if (fromTo[0] \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-01-17"},{"lineNumber":442,"author":{"gitId":"shaowi"},"content":"                                        printError(\"Oops! The description of event must include a from date/time.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":443,"author":{"gitId":"shaowi"},"content":"                                        continue;","lastModifiedDate":"2023-01-14"},{"lineNumber":444,"author":{"gitId":"shaowi"},"content":"                                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":445,"author":{"gitId":"shaowi"},"content":"                                    if (fromTo[1] \u003d\u003d LocalDateTime.MIN) {","lastModifiedDate":"2023-01-17"},{"lineNumber":446,"author":{"gitId":"shaowi"},"content":"                                        printError(\"Oops! The description of event must include a to date/time.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":447,"author":{"gitId":"shaowi"},"content":"                                        continue;","lastModifiedDate":"2023-01-14"},{"lineNumber":448,"author":{"gitId":"shaowi"},"content":"                                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":449,"author":{"gitId":"shaowi"},"content":"                                    newTask \u003d new Event(trimDate(description), fromTo);","lastModifiedDate":"2023-01-14"},{"lineNumber":450,"author":{"gitId":"shaowi"},"content":"                                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":451,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":452,"author":{"gitId":"shaowi"},"content":"                                default:","lastModifiedDate":"2023-01-14"},{"lineNumber":453,"author":{"gitId":"shaowi"},"content":"                                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":454,"author":{"gitId":"shaowi"},"content":"                            }","lastModifiedDate":"2023-01-14"},{"lineNumber":455,"author":{"gitId":"shaowi"},"content":"                            items.add(newTask);","lastModifiedDate":"2023-01-14"},{"lineNumber":456,"author":{"gitId":"shaowi"},"content":"                            saveNewData(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":457,"author":{"gitId":"shaowi"},"content":"                            printAddedTask(newTask, items.size());","lastModifiedDate":"2023-01-14"},{"lineNumber":458,"author":{"gitId":"shaowi"},"content":"                        }","lastModifiedDate":"2023-01-14"},{"lineNumber":459,"author":{"gitId":"shaowi"},"content":"                    } else {","lastModifiedDate":"2023-01-14"},{"lineNumber":460,"author":{"gitId":"shaowi"},"content":"                        printError(\"Oops! I\u0027m sorry but I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":461,"author":{"gitId":"shaowi"},"content":"                    }","lastModifiedDate":"2023-01-14"},{"lineNumber":462,"author":{"gitId":"shaowi"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":463,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":464,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":465,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":466,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":467,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":468,"author":{"gitId":"shaowi"},"content":"    public static \u003cT extends Task\u003e void saveNewData(T task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":469,"author":{"gitId":"shaowi"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dataFilePath, true))) {","lastModifiedDate":"2023-01-17"},{"lineNumber":470,"author":{"gitId":"shaowi"},"content":"            bw.write(task.getSavedFormat());","lastModifiedDate":"2023-01-17"},{"lineNumber":471,"author":{"gitId":"shaowi"},"content":"            bw.newLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":472,"author":{"gitId":"shaowi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":473,"author":{"gitId":"shaowi"},"content":"            printError(\"Something went wrong while saving the new task.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":474,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":475,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":476,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":477,"author":{"gitId":"shaowi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":478,"author":{"gitId":"shaowi"},"content":"        List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":479,"author":{"gitId":"shaowi"},"content":"        File myDir \u003d new File(dataDirectory);","lastModifiedDate":"2023-01-17"},{"lineNumber":480,"author":{"gitId":"shaowi"},"content":"        File myFile \u003d new File(dataFilePath);","lastModifiedDate":"2023-01-17"},{"lineNumber":481,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":482,"author":{"gitId":"shaowi"},"content":"        greetUser();","lastModifiedDate":"2023-01-17"},{"lineNumber":483,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":484,"author":{"gitId":"shaowi"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":485,"author":{"gitId":"shaowi"},"content":"            Scanner myReader \u003d new Scanner(myFile);","lastModifiedDate":"2023-01-17"},{"lineNumber":486,"author":{"gitId":"shaowi"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":487,"author":{"gitId":"shaowi"},"content":"                fetchData(myReader.nextLine().trim(), items);","lastModifiedDate":"2023-01-17"},{"lineNumber":488,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":489,"author":{"gitId":"shaowi"},"content":"            myReader.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":490,"author":{"gitId":"shaowi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":491,"author":{"gitId":"shaowi"},"content":"            try {","lastModifiedDate":"2023-01-17"},{"lineNumber":492,"author":{"gitId":"shaowi"},"content":"                myDir.mkdirs();","lastModifiedDate":"2023-01-17"},{"lineNumber":493,"author":{"gitId":"shaowi"},"content":"                myFile.createNewFile();","lastModifiedDate":"2023-01-17"},{"lineNumber":494,"author":{"gitId":"shaowi"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2023-01-17"},{"lineNumber":495,"author":{"gitId":"shaowi"},"content":"                printError(\"Something went wrong while creating a new file.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":496,"author":{"gitId":"shaowi"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":497,"author":{"gitId":"shaowi"},"content":"        } finally {","lastModifiedDate":"2023-01-17"},{"lineNumber":498,"author":{"gitId":"shaowi"},"content":"            readInput(items);","lastModifiedDate":"2023-01-17"},{"lineNumber":499,"author":{"gitId":"shaowi"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":500,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":501,"author":{"gitId":"shaowi"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":502,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":503,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"shaowi":503}},{"path":"src/main/java/seedu/shao/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"abstract public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"\tprotected String description;","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"\tprotected boolean isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"\tpublic Task(String description) {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"\tpublic String getStatusIcon() {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"\t\treturn (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"\tpublic void markAsDone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"\t\tthis.isDone \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"\tpublic void markAsUndone() {","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"\tpublic String dateTimeString(LocalDateTime dt) {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"\t\treturn dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"shaowi"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"shaowi"},"content":"\t\treturn String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"shaowi"},"content":"\tpublic abstract String getSavedFormat();","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"shaowi":37}},{"path":"src/main/java/seedu/shao/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"\tpublic Todo(String description) {","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"\t\tsuper(description);","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"\tpublic String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"\t@Override","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"\tpublic String getSavedFormat() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"\t\treturn String.format(\"T|%d|%s\", isDone ? 1 : 0, description);","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"\t};","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"shaowi":18}},{"path":"src/test/java/seedu/shao/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"public class EventTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"\tLocalDateTime from \u003d LocalDateTime.of(LocalDate.of(2023, 1, 18),","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"\t\t\tLocalTime.of(14, 15));","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"\tLocalDateTime to \u003d LocalDateTime.of(LocalDate.of(2023, 1, 19),","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"\t\t\tLocalTime.of(15, 30));","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"\tLocalDateTime[] fromTo \u003d new LocalDateTime[] { from, to };","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"\tEvent event \u003d new Event(\"Attend field camp\", fromTo);","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"\t@Test","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"\tpublic void toStringTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"\t\tString expected \u003d \"[E][ ] Attend field camp (from: Jan 18 2023, to: Jan 19 2023)\";","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"\t\tassertEquals(expected, event.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"shaowi"},"content":"\t// @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"shaowi"},"content":"\t// public void getSavedFormatTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"shaowi"},"content":"\t// event.markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"shaowi"},"content":"\t// String expected \u003d \"E|1|Attend field camp|\";","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"shaowi"},"content":"\t// assertEquals(expected, todo.getSavedFormat());","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"shaowi"},"content":"\t// }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"shaowi":30}},{"path":"src/test/java/seedu/shao/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"package seedu.shao;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"\tTodo todo \u003d new Todo(\"Wash dishes\");","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"\t@Test","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"\tpublic void toStringTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"\t\tString expected \u003d \"[T][ ] Wash dishes\";","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"\t\tassertEquals(expected, todo.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"\t@Test","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"\tpublic void getSavedFormatTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"\t\ttodo.markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"\t\tString expected \u003d \"T|1|Wash dishes\";","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"\t\tassertEquals(expected, todo.getSavedFormat());","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"\t}","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"shaowi":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaowi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"shaowi"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"shaowi"},"content":"deadline return book /by 2019-03-01 0815","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shaowi"},"content":"event project meeting /from 2/12/2019 1800 /to 2019-12-02 2200 ","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"shaowi"},"content":"mark 1 ","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"shaowi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"shaowi"},"content":"mark 3","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"shaowi"},"content":"event play table tennis /from 2019-12-02 1600 /to 2019-12-02 1800","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"shaowi"},"content":"mark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"shaowi"},"content":"unmark 1","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"shaowi"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"shaowi"},"content":"mark","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"shaowi"},"content":"todo","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"shaowi"},"content":"datetime 2019-12-02 1800 ","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"shaowi"},"content":"blah","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"shaowi"},"content":"unmark","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"shaowi"},"content":"deadline study history","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"event play a chess /to Tues 1pm","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"shaowi"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"shaowi"},"content":"delete 3","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"shaowi"},"content":"datetime 2022-05-06","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"shaowi"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"shaowi":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shaowi"},"content":"java -classpath ..\\bin Shao \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shaowi":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shaowi"},"content":"java -classpath ../bin Shao \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shaowi":1,"-":37}}]
