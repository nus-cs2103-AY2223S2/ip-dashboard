[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shazxrin":21,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.command.CommandParser;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.storage.FileStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":" * Duke chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"     * Initialize Duke chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"     * @param saveDataDirPath The directory where the save data file should be located.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"     * @param saveDataFilePath The save data file name.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"     * @param ui The user interface to display responses.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    public Duke(String saveDataDirPath, String saveDataFilePath, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"        this.storage \u003d new FileStorage(saveDataDirPath, saveDataFilePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        this.commandParser \u003d new CommandParser();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"     * Start the chatbot.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"    public void start() {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        ui.showStartup();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"     * Passes input for handling by command parser.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"    public void handleInput(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"            commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"            ui.showText(exception.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"shazxrin":54,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":" * Launcher for the GUI application.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.ui.GraphicalUi;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":" * Main GUI application.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    private static final String SAVE_DATA_FILE_PATH \u003d \"saveData.txt\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    private static final String SAVE_DATA_DIR_PATH \u003d \"./data\";","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"            MainWindow mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"            Ui ui \u003d new GraphicalUi(mainWindow);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"            duke \u003d new Duke(SAVE_DATA_DIR_PATH, SAVE_DATA_FILE_PATH, ui);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"            mainWindow.setOnInputHandler(input -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"                duke.handleInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"                    primaryStage.close();","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"            });","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"            primaryStage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"            duke.start();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":49}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" * Abstract class for adding a subclass of Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"public abstract class AddTaskCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"     * Adds task to task list and saves the new task list into storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"     * @param storage Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If saving to storage fails.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    protected void addTask(Task task, Ui ui, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"        ui.showText(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        ui.showText(String.format(\"  %s\", task.toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        ui.showText(String.format(\"Now you have %d tasks in the list.\", taskList.getTotalTasks()));","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        storage.save(taskList.getAllTasks());","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":" * Interface for all commands and the required methods.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"public interface Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    String getCommandName();","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    String getCommandRegexPattern();","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    String getCommandPattern();","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":19}},{"path":"src/main/java/duke/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":" * Holds mapping of all available commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":" * Parses input and executes the respective commands","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":" * with the arguments given in the input.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"public class CommandParser {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    private HashMap\u003cString, Command\u003e commandMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    private boolean hasUserQuit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"     * Creates command parser. All available commands are","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"     * initialized and are mapped accordingly to their","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"     * respective commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    public CommandParser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        Command todoCommand \u003d new ToDoCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(todoCommand.getCommandName(), todoCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        Command deadlineCommand \u003d new DeadlineCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(deadlineCommand.getCommandName(), deadlineCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        Command eventCommand \u003d new EventCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(eventCommand.getCommandName(), eventCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        Command deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(deleteCommand.getCommandName(), deleteCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"        Command markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(markCommand.getCommandName(), markCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        Command unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(unmarkCommand.getCommandName(), unmarkCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        Command listCommand \u003d new ListCommand();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(listCommand.getCommandName(), listCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        Command findCommand \u003d new FindCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"        commandMap.put(findCommand.getCommandName(), findCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"     * Parses input and execute the respective command with arguments from input.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"     * @param input Raw input.","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"     * @param ui User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"     * @param storage Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If command is unknown or does not match the command syntax.","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand(String input, Ui ui, TaskList taskList, Storage storage)","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"            throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"        String commandName \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"        if (commandName.equals(\"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"            hasUserQuit \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"            return;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"shazxrin"},"content":"        Command command \u003d commandMap.get(commandName);","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"shazxrin"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"shazxrin"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"shazxrin"},"content":"        Matcher commandPatternMatcher \u003d Pattern.compile(command.getCommandRegexPattern()).matcher(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"shazxrin"},"content":"        if (!commandPatternMatcher.find()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"shazxrin"},"content":"            throw new DukeException(String.format(","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"shazxrin"},"content":"                    \"I\u0027m sorry, but can you retype again in this format:\\n     %s\", command.getCommandPattern()));","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d new String[commandPatternMatcher.groupCount()];","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"shazxrin"},"content":"        for (int g \u003d 1; g \u003c\u003d commandPatternMatcher.groupCount(); g++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"shazxrin"},"content":"            args[g - 1] \u003d commandPatternMatcher.group(g);","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"shazxrin"},"content":"        command.run(ui, taskList, storage, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"shazxrin"},"content":"     * Returns whether the user has quit.","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"shazxrin"},"content":"     * @return Whether the user has quit.","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"shazxrin"},"content":"    public boolean hasUserQuit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"shazxrin"},"content":"        return hasUserQuit;","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":104}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import duke.util.DateTimeUtils;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":" * Command to add deadline task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"public class DeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        return \"deadline\";","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        return \"deadline (.*) \\\\/by (.*)\";","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        return \"deadline \u003cdescription\u003e /by \u003cdeadline\u003e\";","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     * Adds deadline task from input to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list in order: description, by.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If failed to save new task list to storage or invalid datetime format.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"        String description \u003d args[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        String by \u003d args[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"            LocalDateTime byDateTime \u003d LocalDateTime.parse(by, DateTimeUtils.DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"            addTask(new Deadline(description, byDateTime), ui, taskList, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"            throw new DukeException(\"Please enter date and time in this format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":53}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" * Command to delete a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"        return \"delete\";","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        return \"^delete ([0-9]+)$\";","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        return \"delete \u003ctaskNo\u003e\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * Deletes task from task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list in order: task number (whole number format).","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If task number \u003c 0 or \u003e total tasks or invalid task number.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        int taskNo \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        if (taskNo \u003e 0 \u0026\u0026 taskNo \u003c\u003d taskList.getTotalTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"            Task removedTask \u003d taskList.deleteTask(taskNo);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"            ui.showText(removedTask.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"            ui.showText(String.format(\"Now you have %d tasks in the list.\", taskList.getTotalTasks()));","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"            storage.save(taskList.getAllTasks());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"Invalid task number!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":57}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import duke.util.DateTimeUtils;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":" * Command to add an event.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"public class EventCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        return \"event\";","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        return \"^event (.*) \\\\/from (.*) \\\\/to (.*)$\";","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        return \"event \u003cdescription\u003e /from \u003cfrom\u003e /to \u003cto\u003e\";","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     * Adds event task from input to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list in order: description, from, to.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If failed to save new task list to storage or invalid date time","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"     *                       format.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        String description \u003d args[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        String from \u003d args[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        String to \u003d args[2];","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, DateTimeUtils.DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(to, DateTimeUtils.DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"            addTask(new Event(description, fromDateTime, toDateTime), ui, taskList, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"            throw new DukeException(\"Please enter date and time in this format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":57}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":" * Command to find task(s).","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"        return \"find\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        return \"^find (.*)$\";","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"        return \"find \u003ctext\u003e\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        String textToFind \u003d args[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        ui.showText(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"            if (task.getDescription().contains(textToFind)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"                ui.showText(String.format(\"%d.%s\", i + 1, task));","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":" * Command to list all tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"        return \"list\";","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        return \"^list$\";","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        return \"list\";","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"     * Lists tasks in task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list; Does not take in any arguments.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        ui.showText(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        for (int taskNo \u003d 1; taskNo \u003c\u003d taskList.getTotalTasks(); taskNo++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"            ui.showText(String.format(\"%d. %s\", taskNo, taskList.getTask(taskNo).toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":43}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" * Command to mark a task as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"        return \"mark\";","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        return \"^mark ([0-9]+)$\";","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        return \"mark \u003ctaskNo\u003e\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * Marks task in task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list in order: task number (whole number format).","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If task number \u003c 0 or \u003e total tasks or invalid task number.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        int taskNo \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        if (taskNo \u003e 0 \u0026\u0026 taskNo \u003c\u003d taskList.getTotalTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"            Task task \u003d taskList.getTask(taskNo);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"            task.setIsDone(true);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"            ui.showText(task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"            storage.save(taskList.getAllTasks());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"Invalid task number!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":57}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" * Command to add todo task.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"public class ToDoCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"        return \"todo\";","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        return \"^todo (.*)$\";","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        return \"todo \u003cdescription\u003e\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * Adds todo task from input to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list in order: description.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If failed to save new task list to storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        String description \u003d args[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        addTask(new ToDo(description), ui, taskList, storage);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":43}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" * Command to unmark a task (i.e mark task as not done).","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    public String getCommandName() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"        return \"unmark\";","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    public String getCommandRegexPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        return \"^unmark ([0-9]+)$\";","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public String getCommandPattern() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        return \"unmark \u003ctaskNo\u003e\";","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * Unmarks task in task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"     * @param ui       User interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"     * @param taskList Task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"     * @param storage  Storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"     * @param args     Argument list in order: task number (whole number format).","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If task number \u003c 0 or \u003e total tasks or invalid task number.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"    public void run(Ui ui, TaskList taskList, Storage storage, String... args) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        int taskNo \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        if (taskNo \u003e 0 \u0026\u0026 taskNo \u003c\u003d taskList.getTotalTasks()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"            Task task \u003d taskList.getTask(taskNo);","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"            task.setIsDone(false);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"            ui.showText(task.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"            storage.save(taskList.getAllTasks());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"            ui.showText(\"Invalid task number!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":57}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * Exception for Duke chat bot.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"        super(String.format(\"OOPS!!! %s\", message));","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"shazxrin":10}},{"path":"src/main/java/duke/storage/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"import duke.util.DateTimeUtils;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":" * File storage implementation.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"public class FileStorage implements Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    private final String directoryPath;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    private final String fileName;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"     * Initialize storage using file.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * @param directoryPath The directory of where the file is stored.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     * @param fileName The name of the file.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    public FileStorage(String directoryPath, String fileName) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        this.directoryPath \u003d directoryPath;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"     * Loads saved tasks from file.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"     * @return List of tasks saved from file.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        List\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        File saveDataFile \u003d new File(String.format(\"%s/%s\", directoryPath, fileName));","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"            Scanner fileScanner \u003d new Scanner(saveDataFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"                String[] lineTokens \u003d fileScanner.nextLine().split(\";\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"                String taskType \u003d lineTokens[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"                boolean isDone \u003d Integer.parseInt(lineTokens[1]) \u003d\u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"                String description \u003d lineTokens[2];","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"                    ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"                    todo.setIsDone(isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"                    savedTasks.add(todo);","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"                    String by \u003d lineTokens[3];","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"                    LocalDateTime byDateTime \u003d LocalDateTime.parse(by, DateTimeUtils.DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"                    Deadline deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"                    deadline.setIsDone(isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"                    savedTasks.add(deadline);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"                    String from \u003d lineTokens[3];","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"                    String to \u003d lineTokens[4];","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"shazxrin"},"content":"                    LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, DateTimeUtils.DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"shazxrin"},"content":"                    LocalDateTime toDateTime \u003d LocalDateTime.parse(to, DateTimeUtils.DATE_TIME_FORMAT_INPUT);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"shazxrin"},"content":"                    Event event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"shazxrin"},"content":"                    event.setIsDone(isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"shazxrin"},"content":"                    savedTasks.add(event);","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"shazxrin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"shazxrin"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"shazxrin"},"content":"            fileScanner.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"shazxrin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"shazxrin"},"content":"            File dir \u003d new File(directoryPath);","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"shazxrin"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"shazxrin"},"content":"        return savedTasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"shazxrin"},"content":"     * Saves tasks to file.","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"shazxrin"},"content":"     * @param tasks Tasks to be saved.","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"shazxrin"},"content":"     * @throws DukeException If I/O errors are encountered.","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"shazxrin"},"content":"    public void save(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"shazxrin"},"content":"            FileWriter fileWriter \u003d new FileWriter(String.format(\"%s/%s\", directoryPath, fileName));","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"shazxrin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"shazxrin"},"content":"                switch (task.getTypeOfTask()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"shazxrin"},"content":"                case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"shazxrin"},"content":"                    ToDo todo \u003d (ToDo) task;","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"shazxrin"},"content":"                    fileWriter.write(String.format(\"T;%d;%s\\n\", todo.isDone() ? 1 : 0, todo.getDescription()));","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"shazxrin"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"shazxrin"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"shazxrin"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"shazxrin"},"content":"                    fileWriter.write(String.format(\"D;%d;%s;%s\\n\", deadline.isDone() ? 1 : 0, deadline.getDescription(),","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"shazxrin"},"content":"                            deadline.getBy().format(DateTimeUtils.DATE_TIME_FORMAT_INPUT)));","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"shazxrin"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"shazxrin"},"content":"                case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"shazxrin"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"shazxrin"},"content":"                    fileWriter.write(String.format(\"E;%d;%s;%s;%s\\n\", event.isDone() ? 1 : 0, event.getDescription(),","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"shazxrin"},"content":"                            event.getFrom().format(DateTimeUtils.DATE_TIME_FORMAT_INPUT),","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"shazxrin"},"content":"                            event.getTo().format(DateTimeUtils.DATE_TIME_FORMAT_INPUT)));","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"shazxrin"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"shazxrin"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"shazxrin"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"shazxrin"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"shazxrin"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"shazxrin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"shazxrin"},"content":"            throw new DukeException(\"Failed to save to save file!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":132}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.util.List;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":" * Interface for storage of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"public interface Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    List\u003cTask\u003e load();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    void save(List\u003cTask\u003e tasks) throws DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.util.DateTimeUtils;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":" * Deadline task representation.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"     * Creates a deadline task with description and due date.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"     * @param by When the deadline task is due.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        return by;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DateTimeUtils.DATE_TIME_FORMAT_OUTPUT));","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"shazxrin":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.util.DateTimeUtils;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":" * Event task representation.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"     * Creates an event task.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"     * @param from The starting date of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"     * @param to The ending date of the event.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        return from;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        return to;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"                from.format(DateTimeUtils.DATE_TIME_FORMAT_OUTPUT), to.format(DateTimeUtils.DATE_TIME_FORMAT_OUTPUT));","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"shazxrin":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * Abstract class for task representation.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    private String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"    private TaskType typeOfTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"     * Creates a task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"     * @param typeOfTask The type of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    public Task(String description, TaskType typeOfTask) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    public TaskType getTypeOfTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        return typeOfTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        return isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-15"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"shazxrin":47}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":" * List for managing tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    public Task deleteTask(int taskNo) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        return tasks.remove(taskNo - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    public Task getTask(int taskNo) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        return tasks.get(taskNo - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        return tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":34}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * Types of tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public enum TaskType {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"shazxrin":8}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * Todo task representation.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"shazxrin":15}},{"path":"src/main/java/duke/ui/CommandLineUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * User interface implementation for the command line.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public class CommandLineUi implements Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"     * Displays text on command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"    public void showText(String text) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"        System.out.printf(\"     %s\\n\", text);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"     * Displays horizontal line on the command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"     * Displays startup text on the command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    public void showStartup() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        String logo \u003d","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"                \" /\\\\_/\\\\\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"                + \"( o.o )   ~meow~\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"                + \" \u003e ^ \u003c\";","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"        showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        showText(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        showText(\"What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":40}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"     * Returns the dialog box for the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"     * @param text The text to display as the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"     * @param img The image to display as the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"     * @return Dialog box representing the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"     * Returns the dialog box for Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"     * @param text The text to display as Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"     * @param img The image to display as Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"     * @return Dialog box representing Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":74}},{"path":"src/main/java/duke/ui/GraphicalUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * Graphical implementation of the user interface.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public class GraphicalUi implements Ui {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"     * Creates the Graphical UI.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"     * @param mainWindow The main window\u0027s controller.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    public GraphicalUi(MainWindow mainWindow) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"     * Displays text on the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    public void showText(String text) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        mainWindow.showReply(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"     * This method does not display anything on the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    public void showLine() { /* Don\u0027t show line on GUI */ }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"     * Displays startup text on the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"    public void showStartup() {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        mainWindow.showReply(\"Welcome to Duke!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":41}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"    private Consumer\u003cString\u003e onInputHandler;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"     * Shows the dialog box for the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"     * Calls the input handler.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"        if (onInputHandler !\u003d null) {","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"            onInputHandler.accept(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"     * Displays Duke\u0027s reply.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"     * @param reply Text containing Duke\u0027s reply.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"    public void showReply(String reply) {","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"                DialogBox.getDukeDialog(reply, dukeImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"     * Sets the input handler to handle user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"     * @param onInputHandler Input handler.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"    public void setOnInputHandler(Consumer\u003cString\u003e onInputHandler) {","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"        this.onInputHandler \u003d onInputHandler;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":74}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":" * Interface defining basic methods for user interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"public interface Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    void showText(String text);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    void showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"    void showStartup();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":12}},{"path":"src/main/java/duke/util/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.util;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":" * Utility class containing date time formats.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMAT_INPUT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMAT_OUTPUT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"shazxrin":11}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"shazxrin":19}},{"path":"src/test/java/duke/command/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"public class CommandParserTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_todoCommandCorrectInput_addTodoToTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"todo description\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.TODO, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(\"description\", taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_todoCommandIncorrectInput_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_deadlineCommandCorrectInput_addDeadlineToTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"deadline description /by 13/10/1999 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.DEADLINE, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(\"description\", taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"        LocalDateTime byDateTime \u003d ((Deadline) taskList.getTask(1)).getBy();","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getDayOfMonth());","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(10, byDateTime.getMonthValue());","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1999, byDateTime.getYear());","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getHour());","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, byDateTime.getMinute());","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_deadlineCommandIncorrectInput_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"deadline description\";","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_todoCommandIncorrectDateTime_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"deadline description /by 21/31/2023 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_eventCommandCorrectInput_addEventToTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"event description /from 13/10/1999 13:00 /to 13/10/1999 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.EVENT, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(\"description\", taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"shazxrin"},"content":"        LocalDateTime byDateTime \u003d ((Event) taskList.getTask(1)).getFrom();","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getDayOfMonth());","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(10, byDateTime.getMonthValue());","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1999, byDateTime.getYear());","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getHour());","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, byDateTime.getMinute());","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"shazxrin"},"content":"        LocalDateTime toDateTime \u003d ((Event) taskList.getTask(1)).getTo();","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, toDateTime.getDayOfMonth());","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(10, toDateTime.getMonthValue());","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1999, toDateTime.getYear());","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, toDateTime.getHour());","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, toDateTime.getMinute());","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_eventCommandIncorrectInput_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"event description\";","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_eventCommandIncorrectDateTime_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"event description /from 21/31/2023 13:00 /to 21/31/2023 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_markCommandCorrectInput_markTaskDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"mark 1\";","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.TODO, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(true, taskList.getTask(1).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_markCommandIncorrectInput_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"mark two\";","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_unmarkCommandCorrectInput_unmarkTaskDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"unmark 1\";","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.TODO, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":196,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(false, taskList.getTask(1).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_unmarkCommandIncorrectInput_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"unmark two\";","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_deleteCommandCorrectInput_deleteTaskFromTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":217,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":220,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":225,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":227,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":228,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":229,"author":{"gitId":"shazxrin"},"content":"    public void parseInputAndExecuteCommand_deleteCommandIncorrectInput_dukeException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":230,"author":{"gitId":"shazxrin"},"content":"        String input \u003d \"delete two\";","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":232,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":233,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"shazxrin"},"content":"        CommandParser commandParser \u003d new CommandParser();","lastModifiedDate":"2023-01-29"},{"lineNumber":236,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertThrows(DukeException.class,","lastModifiedDate":"2023-01-29"},{"lineNumber":238,"author":{"gitId":"shazxrin"},"content":"                () -\u003e { commandParser.parseInputAndExecuteCommand(input, ui, taskList, storage); });","lastModifiedDate":"2023-01-29"},{"lineNumber":239,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":240,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":240}},{"path":"src/test/java/duke/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    public void run_emptyTaskList_addDeadlineToTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        String description \u003d \"deadline description\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        String by \u003d \"13/10/1999 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { description, by };","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"        DeadlineCommand command \u003d new DeadlineCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.DEADLINE, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(description, taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"        LocalDateTime byDateTime \u003d ((Deadline) taskList.getTask(1)).getBy();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getDayOfMonth());","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(10, byDateTime.getMonthValue());","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1999, byDateTime.getYear());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getHour());","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, byDateTime.getMinute());","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":41}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListDeleteFirst_firstTaskDeleted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"        DeleteCommand command \u003d new DeleteCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"1\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(2, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(\"task 2\", taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListDeleteMiddle_middleTaskDeleted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        DeleteCommand command \u003d new DeleteCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"2\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(2, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(\"task 3\", taskList.getTask(2).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkDelete_lastTaskDeleted() {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"        DeleteCommand command \u003d new DeleteCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"3\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(2, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(\"task 2\", taskList.getTask(2).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":75}},{"path":"src/test/java/duke/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"    public void run_emptyTaskList_addEventToTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        String description \u003d \"event description\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        String from \u003d \"13/10/1999 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        String until \u003d \"13/10/1999 13:00\";","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { description, from, until };","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"        EventCommand command \u003d new EventCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.EVENT, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(description, taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"        LocalDateTime byDateTime \u003d ((Event) taskList.getTask(1)).getFrom();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getDayOfMonth());","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(10, byDateTime.getMonthValue());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1999, byDateTime.getYear());","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, byDateTime.getHour());","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, byDateTime.getMinute());","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"        LocalDateTime toDateTime \u003d ((Event) taskList.getTask(1)).getTo();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, toDateTime.getDayOfMonth());","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(10, toDateTime.getMonthValue());","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1999, toDateTime.getYear());","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(13, toDateTime.getHour());","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(0, toDateTime.getMinute());","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":49}},{"path":"src/test/java/duke/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkFirst_firstTaskMarkDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        MarkCommand command \u003d new MarkCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"1\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(true, taskList.getTask(1).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkMiddle_middleTaskMarkDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"        MarkCommand command \u003d new MarkCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"2\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(true, taskList.getTask(2).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkLast_lastTaskMarkDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"        MarkCommand command \u003d new MarkCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"3\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(true, taskList.getTask(3).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":70}},{"path":"src/test/java/duke/command/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    public void run_emptyTaskList_addTodoToTaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"        String description \u003d \"todo description\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { description };","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"        ToDoCommand command \u003d new ToDoCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(1, taskList.getTotalTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(TaskType.TODO, taskList.getTask(1).getTypeOfTask());","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(description, taskList.getTask(1).getDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":31}},{"path":"src/test/java/duke/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"import duke.storage.StubStorage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"import duke.ui.StubUi;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkFirst_firstTaskUnmarkDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"            task.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"        UnmarkCommand command \u003d new UnmarkCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"1\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(false, taskList.getTask(1).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkMiddle_middleTaskUnmarkDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"            task.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"shazxrin"},"content":"        UnmarkCommand command \u003d new UnmarkCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"2\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(false, taskList.getTask(2).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"shazxrin"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"shazxrin"},"content":"    public void run_threeItemTaskListMarkLast_lastTaskUnmarkDone() {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"shazxrin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 1\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 2\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"shazxrin"},"content":"        tasks.add(new ToDo(\"task 3\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"shazxrin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"shazxrin"},"content":"            task.setIsDone(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"shazxrin"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"shazxrin"},"content":"        Ui ui \u003d new StubUi();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"shazxrin"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"shazxrin"},"content":"        Storage storage \u003d new StubStorage(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"shazxrin"},"content":"        UnmarkCommand command \u003d new UnmarkCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"shazxrin"},"content":"        String[] args \u003d { \"3\" };","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertDoesNotThrow(() -\u003e { command.run(ui, taskList, storage, args); });","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"shazxrin"},"content":"        Assertions.assertEquals(false, taskList.getTask(3).isDone());","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":81}},{"path":"src/test/java/duke/storage/StubStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"public class StubStorage implements Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"    public StubStorage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"    public void save(List\u003cTask\u003e tasks) { }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":21}},{"path":"src/test/java/duke/ui/StubUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"public class StubUi implements Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"    public void showText(String text) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"    public void showStartup() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"shazxrin":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shazxrin"},"content":"todo read book","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"shazxrin"},"content":"todo clean room and sweep floor","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"shazxrin"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"shazxrin"},"content":"deadline submit pop quiz /by 13/10/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"shazxrin"},"content":"deadline learn java /by 13/10/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"shazxrin"},"content":"deadline invalid deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"shazxrin"},"content":"deadline invalid deadline /by","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"shazxrin"},"content":"deadline invalid deadline date /by 13/30/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"shazxrin"},"content":"deadline invalid deadline time /by 13/10/2023 32:30","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"shazxrin"},"content":"event software engineering tutorial /from 13/10/2023 12:30 /to 13/10/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"shazxrin"},"content":"event ai lecture /from 13/10/2023 12:30 /to 13/10/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"shazxrin"},"content":"event invalid event /from today","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"shazxrin"},"content":"event invalid event /from /to","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"shazxrin"},"content":"event invalid event /to tomorrow","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"shazxrin"},"content":"event invalid event /from","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"shazxrin"},"content":"event invalid event","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"shazxrin"},"content":"event invalid event /to","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"shazxrin"},"content":"event invalid event date /from 13/30/2023 12:30 /to 13/10/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"shazxrin"},"content":"event invalid event date /from 13/10/2023 12:30 /to 13/30/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"shazxrin"},"content":"event invalid event time /from 13/10/2023 32:30 /to 13/10/2023 12:30","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"shazxrin"},"content":"event invalid event time /from 13/10/2023 12:30 /to 13/10/2023 32:30","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"shazxrin"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"shazxrin"},"content":"mark 6","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"shazxrin"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"shazxrin"},"content":"unmark 6","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"shazxrin"},"content":"mark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"shazxrin"},"content":"unmark 3","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"shazxrin"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"shazxrin"},"content":"mark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"shazxrin"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"shazxrin"},"content":"unmark 1","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"shazxrin"},"content":"mark abc","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"shazxrin"},"content":"delete 6","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"shazxrin"},"content":"delete 1","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"shazxrin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"shazxrin"},"content":"delete abc","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"shazxrin"},"content":"delete 10","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"shazxrin"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"shazxrin":48}}]
