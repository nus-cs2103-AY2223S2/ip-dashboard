[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"# OriginalDuke.Duke.Duke project template","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"3. After that, locate the `src/main/java/OriginalDuke.Duke.Duke.java` file, right-click it, and choose `Run OriginalDuke.Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shenchenzizoe":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shenchenzizoe":17,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"todo party","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"mark 1","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"deadline ip /by 2023-02-09 0000","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"event meeting /from 2023-02-09 0000  /to 2023-02-09 0010","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"mark 3","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"todo happy","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"mark 4","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"todo party","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shenchenzizoe":9}},{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.DontKnow;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * Class designed for duke for a range of command input by users","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"public enum Command {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  TODO(\"todo\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  DEADLINE(\"deadline\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"  EVENT(\"event\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"  LIST(\"list\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  MARK(\"mark\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  UNMARK(\"unmark\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  DELETE(\"delete\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  GETEVENTSON(\"geteventson\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  FIND(\"find\"),","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"  BYE(\"bye\");","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"  private final String input;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"   * Constructor for Command","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"   * @param input receives String input from the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"  Command(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    this.input \u003d input;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"   * match user\u0027s string input with command type.","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"   * if command does not exist, throw a \"don\u0027t know\" error.","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"   * @param input receives String input from the user","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"  public static Command searchCommand (String input) throws DontKnow {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    for (Command c : values()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"      if (c.input.equals(input)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"        return c;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"    throw new DontKnow();","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":46}},{"path":"src/main/java/Duke/Command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":" * Class generates responses to user\u0027s command","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"public class Parser {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  public TaskList tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  public Storage storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"   * Constructor for Parser","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"   * @param tasks object receives taskList that manages editing current tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"   * @param storage object manages the update of the current data file.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"  public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    this.tasks \u003d tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"    this.storage \u003d storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"   * execute Parser with user\u0027s String info and the command type it\u0027s converted to.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"   * @param info receives String input from the user","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"   * @param command provides the command type based the user\u0027s input.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"  public String execute(String info, Command command) throws DukeException, IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"    String reply \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"    String[] strArr \u003d info.split(\" \");","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"    String[] strArrP \u003d info.split(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"    Task curTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"    switch (command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"      case BYE: {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"      case TODO: {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyDescription(new Todo(\"\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"        String input \u003d info.substring(5).trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"        curTask \u003d new Todo(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"        tasks.addTask(curTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"        storage.updateList();","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"            + curTask.taskString()","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"            + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"            + tasks.size()","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"            + \" task(s) in the list.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"      case DEADLINE: {","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyDescription(new Deadline(\"\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArrP.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyTime(new Deadline(\"\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"        String[] division \u003d info.substring(9).split(\" /by \");","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"        String input \u003d division[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"        String time \u003d division[1].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"        curTask \u003d new Deadline(input, time);","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"        tasks.addTask(curTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"        storage.updateList();","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"shenchenzizoe"},"content":"            + curTask.taskString()","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"shenchenzizoe"},"content":"            + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"shenchenzizoe"},"content":"            + tasks.size()","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"shenchenzizoe"},"content":"            + \" task(s) in the list.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"shenchenzizoe"},"content":"      case EVENT: {","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyDescription(new Event(\"\",","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"              \"2022-01-01 0000\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArrP.length \u003c 3) {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyTime(new Event(\"\",","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"shenchenzizoe"},"content":"              \"2022-01-01 0000\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"shenchenzizoe"},"content":"        String[] division \u003d info.substring(6).split(\" /from \");","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"shenchenzizoe"},"content":"        String input \u003d division[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"shenchenzizoe"},"content":"        String[] timeDivision \u003d division[1].split(\" /to \");","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"shenchenzizoe"},"content":"        String startTime \u003d timeDivision[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"shenchenzizoe"},"content":"        String endTime \u003d timeDivision[1].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"shenchenzizoe"},"content":"        curTask \u003d new Event(input, startTime, endTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"shenchenzizoe"},"content":"        tasks.addTask(curTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"shenchenzizoe"},"content":"        storage.updateList();","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"shenchenzizoe"},"content":"            + curTask.taskString()","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"shenchenzizoe"},"content":"            + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"shenchenzizoe"},"content":"            + tasks.size()","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"shenchenzizoe"},"content":"            + \" task(s) in the list.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"shenchenzizoe"},"content":"      case MARK: {","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyOrder(\"mark\");","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"shenchenzizoe"},"content":"        int curIndex \u003d Integer.parseInt(strArr[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"shenchenzizoe"},"content":"        if (curIndex \u003e tasks.size() - 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"shenchenzizoe"},"content":"          throw new NoSuchTask(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"shenchenzizoe"},"content":"        Task object \u003d tasks.get(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"shenchenzizoe"},"content":"        object.mark();","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"shenchenzizoe"},"content":"        storage.updateList();","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"shenchenzizoe"},"content":"            + object.taskString();","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"shenchenzizoe"},"content":"      case UNMARK: {","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyOrder(\"unmark\");","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"shenchenzizoe"},"content":"        int curIndex \u003d Integer.parseInt(strArr[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"shenchenzizoe"},"content":"        if (curIndex \u003e tasks.size() - 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"shenchenzizoe"},"content":"          throw new NoSuchTask(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"shenchenzizoe"},"content":"        Task object \u003d tasks.get(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"shenchenzizoe"},"content":"        object.unmark();","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"shenchenzizoe"},"content":"        storage.updateList();","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"shenchenzizoe"},"content":"            + object.taskString();","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"shenchenzizoe"},"content":"      case LIST: {","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Here are the tasks in your list:\\n\" + tasks.listTask();","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"shenchenzizoe"},"content":"      case DELETE: {","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"shenchenzizoe"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"shenchenzizoe"},"content":"          throw new EmptyOrder(\"delete\");","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"shenchenzizoe"},"content":"        int curIndex \u003d Integer.parseInt(strArr[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"shenchenzizoe"},"content":"        if (curIndex \u003e tasks.size() - 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"shenchenzizoe"},"content":"          throw new NoSuchTask(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"shenchenzizoe"},"content":"        Task object \u003d tasks.get(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"shenchenzizoe"},"content":"        tasks.delete(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"shenchenzizoe"},"content":"        storage.updateList();","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"shenchenzizoe"},"content":"        reply \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"shenchenzizoe"},"content":"            + object.taskString();","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"shenchenzizoe"},"content":"        break;","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"shenchenzizoe"},"content":"    return reply;","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":156}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Command.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.ui.UI;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"import java.io.*;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":" * Main Class to run duke programme.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"public class Duke {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  private final UI ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"   * Constructor for Duke.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"   * Handles exceptions during loading process","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"   * @param filePath receives the path of the data file","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"      Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"      TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"      try {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"        tasks \u003d storage.loading();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"      } catch (DontKnow e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"        System.out.println(e.dontKnow);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"      } catch (EmptyTime e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"        System.out.println(e.emptyTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"      } catch (EmptyDescription e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"        System.out.println(e.emptyDescription);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"      } catch (NoSuchTask e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"        System.out.println(e.noSuchTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"      } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"        File data \u003d new File(\"data\");","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"        data.mkdirs();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"        File duke \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"        if(duke.exists()){","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"          System.out.println(\"read file successful!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"      ui \u003d new UI(new Parser(tasks, storage));","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"   * method to access UI so that duke responds to user input","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"      greeting();","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"      BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"      String str \u003d br.readLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"      while (!str.equals(\"bye\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"        System.out.println(ui.respondInput(str));","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"        str \u003d br.readLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"      System.out.println(ui.respondInput(str));","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"      System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"   * main duke method that runs with its data file","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"shenchenzizoe"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"shenchenzizoe"},"content":"      try {","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"      } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"        File data \u003d new File(\"data\");","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"        data.mkdirs();","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"        File duke \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"        new Duke(duke.getPath());","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shenchenzizoe"},"content":"   * method to print greetings when user starts duke programme.","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"shenchenzizoe"},"content":"    public void greeting() {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"shenchenzizoe"},"content":"      String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"shenchenzizoe"},"content":"          + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"          + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"          + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"          + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"      String sayHi \u003d \"Hello from\\n\" + logo +","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"          \"\\nHello! I\u0027m Duke.Duke\\n What can I do for you?\";","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shenchenzizoe"},"content":"      System.out.println(sayHi);","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":89}},{"path":"src/main/java/Duke/Exceptions/DontKnow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Exceptions when user inputs unidentifiable command type.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"public class DontKnow extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"  public String dontKnow;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  public DontKnow() {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"    this.dontKnow \u003d \"OOPS!!! I\u0027m sorry, \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"        \"but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    return dontKnow;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":17}},{"path":"src/main/java/Duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * General Exceptions for duke programme.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"    return \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":13}},{"path":"src/main/java/Duke/Exceptions/EmptyDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * Exceptions when user inputs empty description for a task.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"public class EmptyDescription extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public String emptyDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public EmptyDescription(Task task) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"    this.emptyDescription \u003d \"OOPS!!! The description of a \"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"        + task.toString() +  \" cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    return emptyDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":19}},{"path":"src/main/java/Duke/Exceptions/EmptyOrder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Exceptions when user inputs delete and mark command","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" * without indicating the number of the object task.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"public class EmptyOrder extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  public String emptyOrder;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public EmptyOrder(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"    this.emptyOrder \u003d \"OOPS!!! The order of a \"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"        + input +  \" cannot be empty.\";","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"    return emptyOrder;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":18}},{"path":"src/main/java/Duke/Exceptions/EmptyTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * Exceptions when user inputs deadline/event command","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" * without indicating time restrictions.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"public class EmptyTime extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public String emptyTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"  public EmptyTime(Task task) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    this.emptyTime \u003d \"OOPS!!! The time of a \"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"        + task.toString() +  \" cannot be empty.\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"        \"\\n missing due date(for deadline) OR \\n\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"        \"missing start time or end time(for event)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    return emptyTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":22}},{"path":"src/main/java/Duke/Exceptions/NoSuchTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Exceptions when user try to modify task of index","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" * out of the range of current list.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"public class NoSuchTask extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  public int index;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public String noSuchTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public NoSuchTask(int i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"    this.index \u003d i + 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    this.noSuchTask \u003d \"There is no task \" + index + \" in the list\";","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    return noSuchTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":19}},{"path":"src/main/java/Duke/storage/FileClassDemo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * Class for testing if a file exist in given path","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"public class FileClassDemo {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"    File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.println(\"full path: \" + f.getAbsolutePath());","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.println(\"file exists?: \" + f.exists());","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.println(\"is Directory?: \" + f.isDirectory());","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":18}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Command.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.DontKnow;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.EmptyDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.EmptyTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.NoSuchTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"import java.io.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":" * Class deals with loading tasks from the file","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":" * and saving tasks in the file","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"public class Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  public TaskList tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  public String filePath;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"   * Constructor for Storage","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"   * @param filePath receives String indicating the path of the data file.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"  public Storage(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    this.filePath \u003d filePath;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    this.tasks \u003d new TaskList();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"   * method manages to write certain String information","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"   * into the data file","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"   * @param textToAppend receives task information","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"   *                     which should be saved in","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"   *                     data file.","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"  private void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    FileWriter fw \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"    fw.write(textToAppend);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"    fw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"   * method manages to update the data file","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"   * based on the task int eh current taskList","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"  public void updateList() throws IOException {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"    appendToFile(TaskList.arrayListToString());","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"   * method loads data from the file to return a taskList","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"  public TaskList loading() throws IOException, DontKnow, EmptyDescription, EmptyTime, NoSuchTask {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"    File filename \u003d new File(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"    InputStreamReader reader \u003d new InputStreamReader(new FileInputStream(filename));","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"    BufferedReader br \u003d new BufferedReader(reader);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"    String info;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"    Task curTask;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"    while ((info \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"      String[] strArr \u003d info.split(\" \");","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"      String[] strArrP \u003d info.split(\"/\");","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"shenchenzizoe"},"content":"      Command command \u003d Command.searchCommand(strArr[0]);","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"shenchenzizoe"},"content":"      switch (command) {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"shenchenzizoe"},"content":"        case TODO: {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"          if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"            throw new EmptyDescription(new Todo(\"\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"          String input \u003d info.substring(5).trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"          curTask \u003d new Todo(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"          tasks.addTask(curTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"shenchenzizoe"},"content":"          break;","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"shenchenzizoe"},"content":"        case DEADLINE: {","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"shenchenzizoe"},"content":"          if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"shenchenzizoe"},"content":"            throw new EmptyDescription(new Deadline(\"\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"shenchenzizoe"},"content":"          if (strArrP.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"shenchenzizoe"},"content":"            throw new EmptyTime(new Deadline(\"\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"          String[] division \u003d info.substring(9).split(\" /by \");","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"          String input \u003d division[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"          String time \u003d division[1].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"          curTask \u003d new Deadline(input, time);","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"          tasks.addTask(curTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"shenchenzizoe"},"content":"          break;","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"shenchenzizoe"},"content":"        case EVENT: {","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"shenchenzizoe"},"content":"          if (strArr.length \u003c 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"shenchenzizoe"},"content":"            throw new EmptyDescription(new Event(\"\",","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"shenchenzizoe"},"content":"                \"2022-01-01 0000\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"shenchenzizoe"},"content":"          if (strArrP.length \u003c 3) {","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"shenchenzizoe"},"content":"            throw new EmptyTime(new Event(\"\",","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"shenchenzizoe"},"content":"                \"2022-01-01 0000\", \"2022-01-01 0000\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"shenchenzizoe"},"content":"          String[] division \u003d info.substring(6).split(\" /from \");","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"shenchenzizoe"},"content":"          String input \u003d division[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"shenchenzizoe"},"content":"          String[] timeDivision \u003d division[1].split(\" /to \");","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"shenchenzizoe"},"content":"          String startTime \u003d timeDivision[0].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"shenchenzizoe"},"content":"          String endTime \u003d timeDivision[1].trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"shenchenzizoe"},"content":"          curTask \u003d new Event(input, startTime, endTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"shenchenzizoe"},"content":"          tasks.addTask(curTask);","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"shenchenzizoe"},"content":"          break;","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"shenchenzizoe"},"content":"        case MARK: {","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"shenchenzizoe"},"content":"          int curIndex \u003d Integer.parseInt(strArr[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"shenchenzizoe"},"content":"          if (curIndex \u003e tasks.size()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"shenchenzizoe"},"content":"            throw new NoSuchTask(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"shenchenzizoe"},"content":"          Task object \u003d tasks.get(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"shenchenzizoe"},"content":"          object.mark();","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"shenchenzizoe"},"content":"          break;","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"shenchenzizoe"},"content":"        case UNMARK: {","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"shenchenzizoe"},"content":"          int curIndex \u003d Integer.parseInt(strArr[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"shenchenzizoe"},"content":"          if (curIndex \u003e tasks.size()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"shenchenzizoe"},"content":"            throw new NoSuchTask(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"shenchenzizoe"},"content":"          Task object \u003d tasks.get(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"shenchenzizoe"},"content":"          object.unmark();","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"shenchenzizoe"},"content":"          break;","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"shenchenzizoe"},"content":"        case DELETE: {","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"shenchenzizoe"},"content":"          int curIndex \u003d Integer.parseInt(strArr[1]) - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"shenchenzizoe"},"content":"          if (curIndex \u003e tasks.size()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"shenchenzizoe"},"content":"            throw new NoSuchTask(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"shenchenzizoe"},"content":"          }","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"shenchenzizoe"},"content":"          tasks.delete(curIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"shenchenzizoe"},"content":"          break;","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"shenchenzizoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"shenchenzizoe"},"content":"    return this.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":137}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" * Represents task of the type deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public LocalDateTime time;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public String strTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"  public Deadline(String string, String time) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    super(string);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    this.strTime \u003d time;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"    this.time \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"  public void printType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.print(\"[D]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"  public void printTime() {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.println(\" (by: \" + time + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"    return \"deadline\";","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"   * Method return a String with information about a Deadline task:","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"   * type, marked or not, due time.","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"  public String taskString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"    String mark;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"    if(this.mark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"      mark \u003d \"[X]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"    } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"      mark \u003d \"[ ]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"    String type \u003d \"[D]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    String time \u003d \"(by: \" + this.time + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"    return type + mark + \" \" + this.string.trim()","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"                         + \" \" + time;","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":50}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" * Represents task of the event deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public LocalDateTime startTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public LocalDateTime endTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"  public String strStartTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"  public String strEndTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  public Event(String string, String startTime, String endTime) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    super(string);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"    this.strStartTime \u003d startTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    this.strEndTime \u003d endTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"    this.startTime \u003d LocalDateTime.parse(startTime, formatter);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    this.endTime \u003d LocalDateTime.parse(endTime, formatter);","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"  public void printType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.print(\"[E]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"  public void printTime() {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.println(\" (from: \" + startTime","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"        + \" to: \" + endTime + \")\");","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"    return \"event\";","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"   * Method return a String with information about an event task:","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"   * type, marked or not, start time and end time.","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"  public String taskString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"    String mark;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"    if(this.mark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"      mark \u003d \"[X]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"    } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"      mark \u003d \"[ ]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"    String type \u003d \"[E]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"    String time \u003d \"(from: \" + startTime","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"        + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"    return type + mark + \" \" + this.string.trim()","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"        + \" \" + time;","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":55}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Represents a general task class,","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" * with string describing the content of the task,","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * and boolean mark representing weather the task","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" * is done.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"public class Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public String string;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public Boolean mark;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"  public Task(String string) {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"    this.string \u003d string;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    this.mark \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  public void mark() {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"    this.mark \u003d true;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"  public void unmark() {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"    this.mark \u003d false;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"  public void printType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"  public void printTime() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.println();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"  public String taskString(){ return \"\"; }","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":29}},{"path":"src/main/java/Duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":" * Class manages tasks in an Arraylist","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"public class TaskList {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  public static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"   * Constructor for TaskList","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"   * initialize the field tasks ,","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"   * so it\u0027s not null.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  public TaskList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"   * method to add a new task into the arraylist.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"   * @param task receives the task needed to be added.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"  public void addTask(Task task) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    tasks.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"   * method to delete a task from the arraylist.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"   * @param index receives the index of the task needed to be deleted.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"  public void delete(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"    tasks.remove(index);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shenchenzizoe"},"content":"   * method to get how many tasks are in the TaskList.","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shenchenzizoe"},"content":"  public int size() {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"shenchenzizoe"},"content":"    return tasks.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shenchenzizoe"},"content":"   * return the task of a particular index in the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shenchenzizoe"},"content":"   *","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shenchenzizoe"},"content":"   * @param curIndex receives the index of the task to get.","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shenchenzizoe"},"content":"  public Task get(int curIndex) { return tasks.get(curIndex); }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shenchenzizoe"},"content":"   * list out the tasks in the list with their string information.","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shenchenzizoe"},"content":"  public String listTask() {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"shenchenzizoe"},"content":"    StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"shenchenzizoe"},"content":"    for(Task t: tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"shenchenzizoe"},"content":"      int num \u003d tasks.indexOf(t) + 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"shenchenzizoe"},"content":"      sb.append(num).append(\".\").append(t.taskString()).append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"shenchenzizoe"},"content":"    return sb.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"shenchenzizoe"},"content":"   * convert the current taskList into String commands,","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"shenchenzizoe"},"content":"   * which will be written into the data file in the future.","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shenchenzizoe"},"content":"  public static String arrayListToString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"shenchenzizoe"},"content":"    StringBuilder arrayString \u003d new StringBuilder();","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"shenchenzizoe"},"content":"    for (Task t : tasks) {","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"shenchenzizoe"},"content":"      arrayString.append(t.toString()).append(\" \");","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"shenchenzizoe"},"content":"      arrayString.append(t.string);","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"shenchenzizoe"},"content":"      if(t instanceof Deadline) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"shenchenzizoe"},"content":"        arrayString.append(\" /by\").append(\" \").append(((Deadline) t).strTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"shenchenzizoe"},"content":"      if(t instanceof Event) {","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"shenchenzizoe"},"content":"        arrayString.append(\" /from\").append(\" \").append(((Event) t).strStartTime)","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"shenchenzizoe"},"content":"            .append(\" \").append(\" /to\").append(\" \").append(((Event) t).strEndTime);","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"shenchenzizoe"},"content":"      arrayString.append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"shenchenzizoe"},"content":"      if (t.mark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"shenchenzizoe"},"content":"        arrayString.append(\"mark \").append(tasks.indexOf(t) + 1).append(\"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"shenchenzizoe"},"content":"      }","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"shenchenzizoe"},"content":"    return arrayString.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":88}},{"path":"src/main/java/Duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":" * Represents task of the type todo.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"  public Todo(String string) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"    super(string);","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"  public void printType() {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"    System.out.print(\"[T]\");","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"    return \"todo\";","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"  /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"   * Method return a String with information about a todo task:","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"   * type and marked or not.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"   */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"  @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"  public String taskString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    String mark;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    if(this.mark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"      mark \u003d \"[X]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"    } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"      mark \u003d \"[ ]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"shenchenzizoe"},"content":"    String type \u003d \"[T]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"shenchenzizoe"},"content":"    return type + mark + \" \" + this.string.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":35}},{"path":"src/main/java/Duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"package Duke.ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Command.Command;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Command.Parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.Exceptions.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":" * Class deals with interactions with the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"public class UI {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"  public Parser parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  public UI(Parser parser) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"    this.parser \u003d parser;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"  public String respondInput(String input) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"    String received \u003d input.trim();","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    String commandType \u003d received.split(\" \")[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"      Command command \u003d Command.searchCommand(commandType);","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"      return parser.execute(received,command);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"    } catch (DukeException | IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"      return e.toString();","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":28}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"import Duke.task.Todo;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"shenchenzizoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"shenchenzizoe"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"shenchenzizoe"},"content":"  @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"  public void todoString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"shenchenzizoe"},"content":"    Todo todo \u003d new Todo(\"party\");","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"shenchenzizoe"},"content":"    todo.mark();","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"shenchenzizoe"},"content":"    assertEquals(\"[T][X] party\", todo.taskString());","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"shenchenzizoe"},"content":"  @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"shenchenzizoe"},"content":"  public void eventString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"    Event event \u003d new Event(\"party\",\"2023-02-09 0000\",","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"shenchenzizoe"},"content":"        \"2023-02-09 0400\");","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"shenchenzizoe"},"content":"    assertEquals(\"[E][ ] party (from: 2023-02-09T00:00 to: 2023-02-09T04:00)\",","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"shenchenzizoe"},"content":"        event.taskString());","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"shenchenzizoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"shenchenzizoe"},"content":"  @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"shenchenzizoe"},"content":"  public void deadLine() {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"shenchenzizoe"},"content":"    Deadline deadline \u003d new Deadline(\"return book\", \"2023-02-09 0000\");","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"shenchenzizoe"},"content":"    assertEquals(\"[D][ ] return book (by: 2023-02-09T00:00)\",","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"shenchenzizoe"},"content":"        deadline.taskString());","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"shenchenzizoe"},"content":"  }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"shenchenzizoe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"shenchenzizoe":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shenchenzizoe"},"content":"todo borrow book","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"shenchenzizoe"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"shenchenzizoe"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"shenchenzizoe":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shenchenzizoe"},"content":"if not exist C:\\Users\\Chen\u0027zi\\ip\\text-ui-test\\bin mkdir C:\\Users\\Chen\u0027zi\\ip\\text-ui-test","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"shenchenzizoe"},"content":"javac  -cp C:\\Users\\Chen\u0027zi\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\Chen\u0027zi\\ip\\text-ui-test\\bin C:\\Users\\Chen\u0027zi\\ip\\src\\main\\java\\Duke2.java","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shenchenzizoe"},"content":"java -classpath C:\\Users\\Chen\u0027zi\\ip\\text-ui-test\\bin Duke2 \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shenchenzizoe":3,"-":18}}]
