{"authorDailyContributionsMap":{"shittake":[{"date":"2023-01-17","commitResults":[{"hash":"2b287c371910bde5fb69ce2620cb09a7831494bb","messageTitle":"add new message for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"814186916048e38a50677fa1267a6124dfcd1a65","messageTitle":"Revert \"add new message for testing\"","messageBody":"This reverts commit 2b287c371910bde5fb69ce2620cb09a7831494bb.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2023-01-18","commitResults":[{"hash":"c67770048c8088d8118e87743f52812670ea3d20","messageTitle":"Add welcome message with introMessage method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"6df5fabdf88ecf71592cfb728ae76b7a00ebc920","messageTitle":"Add functionality to echo user input until user decides to end program","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"d03b28def39b4dab1b37157a28a6b893399703b5","messageTitle":"Abstract out endMessage() method for better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"d9e23a17dad8af64a6632efd78f2ab4a8fd378ab","messageTitle":"Add additional checker class and checkEnd method for user input validation","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"94a4893c4a413a10dbb0f824c50d762acf349aa5","messageTitle":"Add checkListRequest method to Checker class that will check if user wishes to see the current list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"ed0d9267750819e8a6a799c4cd36a188dbc5f512","messageTitle":"Add functionality to allow storage of all userinputs and print them out in order when requested by the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"6bb44ed8af07054c570529e97c565f57fe4c2fc5","messageTitle":"Add ability to print out custom message if no items have been added yet by the user","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"dc1d810a50b05fcfe959533d2658503fd4482631","messageTitle":"Create Task class which encapsulates the name and status of each task added by the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"de27fb0106c69cc5c32eae3c02056ea0a7c44121","messageTitle":"Override toString() method in Task class for easy printing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"ec923ec6215716982e4ec0b6e765215986c28f2d","messageTitle":"Add Task instances into the lstOfItems to capture state of each instance properly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"3676c55fcccbe65198adeb2c0e8167e8dd707ec6","messageTitle":"Add functionality to mark Task as completed and fix minor bugs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"1df88aeb878390145747b86f50ba72b070d27688","messageTitle":"Include message that is printed out to let user know that a task has been marked as completed","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"8c20fcb0030c2045629c70a600d46ff985ede760","messageTitle":"Add message that tells user the number of tasks present currently after adding a valid task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"01abd6283aa64d8f81c793af09b358ad9860833b","messageTitle":"Create Deadline, Event and Todo classes that inherit from Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"4096baefebb7abdcd5a2775dc1c2cd46f920715b","messageTitle":"Add functionality to add different types of Tasks into the list with their separate descriptions and timings","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":3}}},{"hash":"b8a295f368725a58b501e93b6a309374a0744300","messageTitle":"Add Test UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0}}},{"hash":"cf348de058f8c175dae73d37f1d77b7970b47a25","messageTitle":"Create new DukeException class to handle custom exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"20649e0419e5c06547a0454564db2751811355f5","messageTitle":"Add functionality to check for empty todo command and invalid commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":12}}},{"hash":"ba1196350e18780e5c0311d57558ed7735d34cca","messageTitle":"Add exceptions to check for incorrect formatting of Deadline and Event Tasks","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":7}}},{"hash":"2da5cf1eff5c06ea270d406b32e28d73b851e5aa","messageTitle":"Add functionality to remove previously added tasks","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}}]},{"date":"2023-01-22","commitResults":[{"hash":"5983fb65d440f01078dc6e9af929ad0875099dfb","messageTitle":"Create preliminary txt file that will later on store all information about previously added information","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":12,"deletions":0}}},{"hash":"92f6c7c96983d1fc85c2a3ab5a2af841e9d6b3fa","messageTitle":"Create new text file if it is not present in user\u0027s directory","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":4}}},{"hash":"7fc4c99156d94a006905c0aea12af4695f7f31b8","messageTitle":"Add functionality to parse previously saved file to retrieve information","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":48,"deletions":6}}}]},{"date":"2023-01-23","commitResults":[{"hash":"2b574e440ff9a5cc5df1e6112291b3577098b2d9","messageTitle":"Add functionality to save contents into hard disk when the user exits the session","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":19,"deletions":13}}},{"hash":"68748864b9bf1d35552771c31cccdfd86d4c5667","messageTitle":"Add functionality to store deadline dates by parsing yyyy-mm-dd format and printing out in MMM dd yyyy format using the LocalDate class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"60ed1ea33454155c890173f0978de95b61686bfb","messageTitle":"Fix bug when transforming the desired datetime format into the hard drive","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":6},"java":{"insertions":24,"deletions":1}}},{"hash":"35c3d50b2c2658bed0572a54fa8907f4f22099d1","messageTitle":"Fix bug where programme crashes if user did not key in any new Tasks in the first iteration of Duke","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":3},"java":{"insertions":6,"deletions":0}}},{"hash":"24ffc778664d20d9c8dc32318f31dbb3f9c853dc","messageTitle":"Remove unnecessary imports and modify boolean variable naming to fit Java naming conventions","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":5,"deletions":6}}}]},{"date":"2023-01-24","commitResults":[{"hash":"a84a0ac601895c9f9a2e03f1881a6b50bab98eab","messageTitle":"Add additional abstraction layers","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":3},"java":{"insertions":128,"deletions":2}}},{"hash":"9f01565d0e1087c839dac317e48c6dd4da173997","messageTitle":"Remove unnecessary lines due to abstraction","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":63}}}]},{"date":"2023-01-25","commitResults":[{"hash":"933f2000190603c25620d4e34ca177a75e4d0b81","messageTitle":"Abstract out more methods to Storage and TaskList classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":4},"java":{"insertions":81,"deletions":28}}},{"hash":"df67fe7ed623db6c11b93906caf6dcf3ad33f7fe","messageTitle":"Add methods to Ui and Parser classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":91}}},{"hash":"4232e28c58e599c71c303db4e6c6b5765475c115","messageTitle":"Create new duke package for all classes","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":3},"java":{"insertions":27,"deletions":11}}},{"hash":"90ca7513075639b7acf530947fce07f2f7a17264","messageTitle":"Add JUnit Tests for Task and TaskList classes","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":0},"txt":{"insertions":2,"deletions":1},"java":{"insertions":104,"deletions":1}}}]},{"date":"2023-01-26","commitResults":[{"hash":"5ac75d2e6d2662756ea49e29d9b2187ce3718684","messageTitle":"Clean up code to fit coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":11}}},{"hash":"44e8b773c6468989caa04fcb2395fb3acb25d954","messageTitle":"Add JavaDocs documentation to all public methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":136,"deletions":2}}},{"hash":"28fc763afa88868a331da7d45497934bc82e3b87","messageTitle":"Add functionality to search tasks given a certain keyword","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":40,"deletions":1}}},{"hash":"90d812cf0b48e36ecfb56bd3c835275826c80932","messageTitle":"Clean up merge conflicts","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":1,"deletions":327}}}]},{"date":"2023-02-02","commitResults":[{"hash":"087698f98ed6dd6cb1a58360a2fa31404a85559b","messageTitle":"Add basic JavaFX syntax","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"txt":{"insertions":1,"deletions":1},"java":{"insertions":53,"deletions":1}}},{"hash":"4ea1289f61c27662f4366db43077904da45f1ed7","messageTitle":"Add functionality to echo the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":1}}},{"hash":"e0b12e5942ce3295f83b8b4c8c71b0d5ef4ce854","messageTitle":"Add images as avatar icons","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"70ab3c185e7ccc8777ee9d5c8cec8c94ded92659","messageTitle":"Tweak functionality to flip image of Duke when echoing commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":4}}},{"hash":"5670a794f7af1426f630d8d4851b09109ef2d877","messageTitle":"Add ability to print out introduction message by the GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":8}}}]},{"date":"2023-02-03","commitResults":[{"hash":"db4acfc9c8aab0039c6aa1eb9c5fdbf93d849e4f","messageTitle":"Modify functionality to a preliminary one to echo user input only","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"250009a83ab8d4ac7ca0ba1e20c379bfe8ab0c3e","messageTitle":"Add different styling for chat bubble from perspective of user and Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":20}}},{"hash":"be2d979553db175a9888fd1d7db4131c435c27e0","messageTitle":"Add functionality for most tasks in GUI","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":3},"java":{"insertions":54,"deletions":51}}},{"hash":"d5a3299da012ce4139ef6f5b514fb080e765d3b2","messageTitle":"Fix bug such that error messages are now displayed properly in the GUI","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":11,"deletions":10}}},{"hash":"1318d64f55a5d71142459e103e8afa4bfa069b9b","messageTitle":"Remove unnecessary imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":10}}}]},{"date":"2023-02-07","commitResults":[{"hash":"a0d64185e3923534c9a3865f940ed702a4730b9b","messageTitle":"Add JavaDocs for Constructors in all Classes","messageBody":"Lack of documentation for constructors that may make it difficult to\nunderstand certain parameters if not explained\n\nExplaining the parameters used in all constructors allows for easier\nappreciation of the purpose of each class, and increases ease in bug-\nfixing in the future as it is easier to pinpoint which class or\nattribute is responsible for the bug\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":15}}},{"hash":"c184cab37568ee56346d57db723c6b4ba740e87f","messageTitle":"Clean up code with the aid of comments given by peers","messageBody":"Some coding standard violations such as not leaving a line in JavaDocs\nbetween the description and the @params and @return statements\n\nMade changes accordingly to fit the guidelines for standardization,\nto ensure that JavaDocs written adhere to these standards and are of\nhigh quality, and to maximize learning. Names of some variables were\nalso changed to better represent what items they were actually storing\nto avoid any misconceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":46}}},{"hash":"c63c2e8497b7869830f374b15576d8aa4d1bc1f1","messageTitle":"Add assertions to key parts of code","messageBody":"No assertions present that could lead to instances where a code does\nnot work properly as intended, such as attempting to access a list\nthat was not even created\n\nAdd assertions that kept track of assumptions made in code, to check if\nthese assumptions are held when certain parts of the code is run, to\navoid undefined behaviour or errors\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"b5c3cea573cae791561dd43aa85e16d6a457e591","messageTitle":"Tackle bug involving incorrect variable name due to merge conflicts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":19}}},{"hash":"8c9cc3525b6e87ff4f056edb75d1bb07da69b662","messageTitle":"Add functionality to disable further userInput upon termination","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":13,"deletions":15}}},{"hash":"4afd408703f37602c1eb5e03a1eb4ae9a5d0ac54","messageTitle":"Abstract method to check for termination for cleaner code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"shittake":{"java":1030,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":18,"txt":18}},"authorContributionVariance":{"shittake":22451.832},"authorDisplayNameMap":{"shittake":"CS2103-F11-1 ERIC..QUAN"}}
