{"authorDailyContributionsMap":{"shittake":[{"date":"2023-01-17","commitResults":[{"hash":"2b287c371910bde5fb69ce2620cb09a7831494bb","messageTitle":"add new message for testing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"814186916048e38a50677fa1267a6124dfcd1a65","messageTitle":"Revert \"add new message for testing\"","messageBody":"This reverts commit 2b287c371910bde5fb69ce2620cb09a7831494bb.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2023-01-18","commitResults":[{"hash":"c67770048c8088d8118e87743f52812670ea3d20","messageTitle":"Add welcome message with introMessage method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"6df5fabdf88ecf71592cfb728ae76b7a00ebc920","messageTitle":"Add functionality to echo user input until user decides to end program","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"d03b28def39b4dab1b37157a28a6b893399703b5","messageTitle":"Abstract out endMessage() method for better readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"d9e23a17dad8af64a6632efd78f2ab4a8fd378ab","messageTitle":"Add additional checker class and checkEnd method for user input validation","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"94a4893c4a413a10dbb0f824c50d762acf349aa5","messageTitle":"Add checkListRequest method to Checker class that will check if user wishes to see the current list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"ed0d9267750819e8a6a799c4cd36a188dbc5f512","messageTitle":"Add functionality to allow storage of all userinputs and print them out in order when requested by the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"6bb44ed8af07054c570529e97c565f57fe4c2fc5","messageTitle":"Add ability to print out custom message if no items have been added yet by the user","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"dc1d810a50b05fcfe959533d2658503fd4482631","messageTitle":"Create Task class which encapsulates the name and status of each task added by the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"de27fb0106c69cc5c32eae3c02056ea0a7c44121","messageTitle":"Override toString() method in Task class for easy printing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"ec923ec6215716982e4ec0b6e765215986c28f2d","messageTitle":"Add Task instances into the lstOfItems to capture state of each instance properly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"3676c55fcccbe65198adeb2c0e8167e8dd707ec6","messageTitle":"Add functionality to mark Task as completed and fix minor bugs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"1df88aeb878390145747b86f50ba72b070d27688","messageTitle":"Include message that is printed out to let user know that a task has been marked as completed","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"8c20fcb0030c2045629c70a600d46ff985ede760","messageTitle":"Add message that tells user the number of tasks present currently after adding a valid task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"01abd6283aa64d8f81c793af09b358ad9860833b","messageTitle":"Create Deadline, Event and Todo classes that inherit from Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"4096baefebb7abdcd5a2775dc1c2cd46f920715b","messageTitle":"Add functionality to add different types of Tasks into the list with their separate descriptions and timings","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":3}}},{"hash":"b8a295f368725a58b501e93b6a309374a0744300","messageTitle":"Add Test UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0}}},{"hash":"cf348de058f8c175dae73d37f1d77b7970b47a25","messageTitle":"Create new DukeException class to handle custom exceptions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"20649e0419e5c06547a0454564db2751811355f5","messageTitle":"Add functionality to check for empty todo command and invalid commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":12}}},{"hash":"ba1196350e18780e5c0311d57558ed7735d34cca","messageTitle":"Add exceptions to check for incorrect formatting of Deadline and Event Tasks","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":7}}},{"hash":"2da5cf1eff5c06ea270d406b32e28d73b851e5aa","messageTitle":"Add functionality to remove previously added tasks","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}}]},{"date":"2023-01-22","commitResults":[{"hash":"5983fb65d440f01078dc6e9af929ad0875099dfb","messageTitle":"Create preliminary txt file that will later on store all information about previously added information","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":12,"deletions":0}}},{"hash":"92f6c7c96983d1fc85c2a3ab5a2af841e9d6b3fa","messageTitle":"Create new text file if it is not present in user\u0027s directory","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":4}}},{"hash":"7fc4c99156d94a006905c0aea12af4695f7f31b8","messageTitle":"Add functionality to parse previously saved file to retrieve information","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":48,"deletions":6}}}]},{"date":"2023-01-23","commitResults":[{"hash":"2b574e440ff9a5cc5df1e6112291b3577098b2d9","messageTitle":"Add functionality to save contents into hard disk when the user exits the session","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":19,"deletions":13}}},{"hash":"68748864b9bf1d35552771c31cccdfd86d4c5667","messageTitle":"Add functionality to store deadline dates by parsing yyyy-mm-dd format and printing out in MMM dd yyyy format using the LocalDate class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}},{"hash":"60ed1ea33454155c890173f0978de95b61686bfb","messageTitle":"Fix bug when transforming the desired datetime format into the hard drive","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":6},"java":{"insertions":24,"deletions":1}}},{"hash":"35c3d50b2c2658bed0572a54fa8907f4f22099d1","messageTitle":"Fix bug where programme crashes if user did not key in any new Tasks in the first iteration of Duke","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":3},"java":{"insertions":6,"deletions":0}}},{"hash":"24ffc778664d20d9c8dc32318f31dbb3f9c853dc","messageTitle":"Remove unnecessary imports and modify boolean variable naming to fit Java naming conventions","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":5,"deletions":6}}}]},{"date":"2023-01-24","commitResults":[{"hash":"a84a0ac601895c9f9a2e03f1881a6b50bab98eab","messageTitle":"Add additional abstraction layers","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":3},"java":{"insertions":128,"deletions":2}}},{"hash":"9f01565d0e1087c839dac317e48c6dd4da173997","messageTitle":"Remove unnecessary lines due to abstraction","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":63}}}]},{"date":"2023-01-25","commitResults":[{"hash":"933f2000190603c25620d4e34ca177a75e4d0b81","messageTitle":"Abstract out more methods to Storage and TaskList classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":4},"java":{"insertions":81,"deletions":28}}},{"hash":"df67fe7ed623db6c11b93906caf6dcf3ad33f7fe","messageTitle":"Add methods to Ui and Parser classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":91}}},{"hash":"4232e28c58e599c71c303db4e6c6b5765475c115","messageTitle":"Create new duke package for all classes","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":3},"java":{"insertions":27,"deletions":11}}},{"hash":"90ca7513075639b7acf530947fce07f2f7a17264","messageTitle":"Add JUnit Tests for Task and TaskList classes","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":0},"txt":{"insertions":2,"deletions":1},"java":{"insertions":104,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"shittake":{"java":548,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":3,"txt":16}},"authorContributionVariance":{"shittake":17616.44},"authorDisplayNameMap":{"shittake":"ERIC..QUAN"}}
