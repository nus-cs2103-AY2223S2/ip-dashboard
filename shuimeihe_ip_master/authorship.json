[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"# duke project template","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"3. After that, locate the `src/main/java/duke/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuimeihe":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"checkstyle {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuimeihe":7,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * Main Duke class","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"public class Duke {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     * Main method","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * @param args arguments","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"        Storage storage \u003d new Storage(\"data\\\\save.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        TaskList taskList \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"            ui.printASCII();","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"            String command;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"            String body;","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"            do {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"                command \u003d sc.next();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"                body \u003d sc.nextLine();","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"                switch (parser.parseCommand(command)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"                    case -1:","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"                    case 1:","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"                        taskList.listTask();","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"                    case 2:","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"                        taskList.markTaskDone(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"                    case 3:","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"                        taskList.markTaskNotDone(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"                    case 4:","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"                        taskList.deleteTask(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"                    case 5:","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"                        taskList.addTodo(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"                    case 6:","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"                        taskList.addDeadline(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"                    case 7:","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"                        taskList.addEvent(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"                    case 8:","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"                        taskList.find(body);","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"                    default:","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"                        System.out.println(ui.ERROR_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"            } while (!command.equals(\"bye\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"            ui.printException(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"        } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"            storage.writeFile(taskList.getTaskList());","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Goodbye!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":77}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":" * This class deals with data saving and loading","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    String filePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    Storage(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"     * Checks for the data folder and save.txt","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"     * Create folder/file if not exist","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     * @throws IOException not able to create file/folder","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    void createFile() throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"        File d \u003d new File(\"data\");","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        if (!d.exists()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Data directory does not exist\\nCreating new data directory...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"            if(d.mkdir()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(\"Successfully created new data directory\");","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"        if(!f.isFile()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Save file does not exist!\\nCreating new save file...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"            if(f.createNewFile()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(\"Successfully created new file at \" + this.filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"     * Reads tasks from save file and loads it into memory","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"     * @return ArrayList\u003cTask\u003e tasks of tasks read from save file","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"    ArrayList\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"        if(!new File(this.filePath).isFile()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"            createFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"        // creating the buffered reader to read the file","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"                new FileInputStream(this.filePath)));","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"            String curr;","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"            while ((curr \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"                boolean done;","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"                String[] currArr \u003d curr.split(\"\\\\|\");","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"                switch(currArr[0]) {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"                    case (\"T\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"                        done \u003d currArr[1].equals(\"1\");","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"                        tasks.add(new ToDo(currArr[2], done));","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"                    case (\"D\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"                        done \u003d currArr[1].equals(\"1\");","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(currArr[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"                        tasks.add(new Deadline(currArr[2], done, by));","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"                    case (\"E\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"                        done \u003d currArr[1].equals(\"1\");","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(currArr[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(currArr[4], DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"                        tasks.add(new Event(currArr[2], done, from, to));","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Error occurred reading save file: \" + e);","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"     * Writes current data to save file","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"     * @param tasks task list","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"    void writeFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Saving your task list...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"                int done;","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"shuimeihe"},"content":"                if (t instanceof ToDo) {","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"T|\" + done + \"|\" + t.getDesc());","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"D|\" + done + \"|\" + t.getDesc() + \"|\" + ((Deadline) t).getDeadlineDay());","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"E|\" + done + \"|\" + t.getDesc() + \"|\" +","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"                            ((Event) t).getFrom() + \"|\" + ((Event) t).getTo());","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"                bw.write(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Error occurred writing to save file\" + e);","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":132}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":" * This class deals with any interaction with the task list (insert, update, delete)","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"public class TaskList {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"(.+)/by (.+)\");","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"(.+)/from (.+) /to (.+)\");","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"    void listTask() {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"You dont have any tracked tasks\");","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Your current tracked tasks: \");","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"                System.out.println((i + 1) + \".\" + curr);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    void markTaskDone(String body) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        body \u003d body.substring(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"        int index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"        tasks.get(index).toggleDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Marked task as done:\\n [\" + tasks.get(index).getDoneStatus() + \"] \"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"                + tasks.get(index).getDesc());","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"    void markTaskNotDone(String body) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"        body \u003d body.substring(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"        int index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"        tasks.get(index).toggleNotDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Marked task as not done:\\n [\" + tasks.get(index).getDoneStatus() + \"] \"","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"                + tasks.get(index).getDesc());","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"    void deleteTask(String body) {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"            body \u003d body.substring(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"            int i \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"            Task temp \u003d tasks.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"            tasks.remove(temp);","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"            ui.printDelete(temp, tasks.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(ui.ERROR_DELETE_TASK);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"    void addTodo(String body) {","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"            body \u003d body.substring(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"            ToDo curr \u003d new ToDo(body, false);","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"            tasks.add(curr);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"            ui.printNotif(curr, tasks.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(ui.ERROR_EMPTY_TODO);","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"    void addDeadline(String body) {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"        body \u003d body.substring(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"        Matcher dlMatcher \u003d DEADLINE_PATTERN.matcher(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        if (dlMatcher.matches()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"            String desc \u003d dlMatcher.group(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"            String deadlineDay \u003d dlMatcher.group(2);","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"            LocalDateTime deadlineDayParsed \u003d LocalDateTime.parse(deadlineDay, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"            Deadline dl \u003d new Deadline(desc, false, deadlineDayParsed);","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"            tasks.add(dl);","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"            ui.printNotif(dl, tasks.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"    void addEvent(String body) {","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"        body \u003d body.substring(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"        Matcher eMatcher \u003d EVENT_PATTERN.matcher(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        if (eMatcher.matches()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"            String desc \u003d eMatcher.group(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"            String from \u003d eMatcher.group(2);","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"            String to \u003d eMatcher.group(3);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"            LocalDateTime fromParsed \u003d LocalDateTime.parse(from, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"            LocalDateTime toParsed \u003d LocalDateTime.parse(to, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"            Event dl \u003d new Event(desc, false, fromParsed, toParsed);","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"            tasks.add(dl);","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"            ui.printNotif(dl, tasks.size());","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"     * @param body string to find","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"    void find(String body) {","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"        boolean found \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"-------------------------------------------------\");","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Matching tasks I\u0027ve found in your list: \");","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"        for (Task temp : tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"            if (temp.getDesc().contains(body)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"                found \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(temp);","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"shuimeihe"},"content":"        if(!found){","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"No tasks matches your search :(\");","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"-------------------------------------------------\");","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"     * getter for task list","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"     * @return task list","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"    ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"shuimeihe"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":144}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class deals with any response printing for the UI","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"public class Ui {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_DELETE_TASK \u003d \"Error: Item does not exist\";","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_EMPTY_TODO \u003d \"Please input something TO DO????!!\";","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_UNKNOWN_COMMAND \u003d \"Error: Unknown command, please try again\";","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    /*","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     * Deletes task","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @param task, task to be deleted","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param size, size of list","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    void printDelete(Task task, int size) {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"SENDING TASK TO THE VOID (DELETING)\");","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"You currently have \" + size + \" tracked tasks\");","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"     * Prints successful add task","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"     * @param curr single Task object","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"     * @param size int size of list","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    void printNotif(Task curr, int size) {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Me add your task to list: \");","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"\\t\" + curr);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"You currently have \" + size + \" tracked tasks\");","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"     * Prints the initial start-up message","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"    void printASCII() {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"        String line \u003d \" ---------------------------------------------------------\";","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"        String logo \u003d \"\\t\\t\\t\\t            | |       \\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"                + \"\\t\\t\\t\\t _ __  _   _| | _____ \\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                + \"\\t\\t\\t\\t| \u0027_ \\\\| | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"                + \"\\t\\t\\t\\t| |_) | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"                + \"\\t\\t\\t\\t| .__/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"                + \"\\t\\t\\t\\t| |                   \\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"                + \"\\t\\t\\t\\t|_|                  \";","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(line + \"\\n\" + logo + \"\\n\" + line);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Welcome to PUKE, the worst program in existence\");","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Input a command\");","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"     * Prints exception message","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"     * @param e exception encountered","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"    void printException(Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Encountered exception: \" + e + \"\\nExiting program\");","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":69}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":" * This class deals with user inputs","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"public class Parser {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"     * Returns an integer for different commands","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"     * @param command string input from user","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"     * @return int representing the command","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    public int parseCommand(String command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"        switch(command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"            case (\"throwerr\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"                throw new RuntimeException();","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"                return -1;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"            case (\"list\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"                return 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"                return 2;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"            case (\"unmark\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"                return 3;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"                return 4;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"                return 5;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"            case (\"deadline\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"                return 6;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"            case (\"event\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"                return 7;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"            case(\"find\"):","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"                return 8;","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"            default:","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(\"Unknown command, please try again\");","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"                return 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":42}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class creates a Deadline object which inherits from Task","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * Deadline (String description, boolean isDone, LocalDateTime deadlineDay)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    private LocalDateTime deadlineDay;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"     * Deadline object","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * @param desc String description","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @param isDone boolean done","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param deadlineDay LocalDateTime","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    public Deadline(String desc, boolean isDone, LocalDateTime deadlineDay) {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        this.deadlineDay \u003d deadlineDay;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"     * getter for deadline day","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     * @return this.deadlineDay","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    public String getDeadlineDay() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        return format24HrDate(this.deadlineDay);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + formatDate(this.deadlineDay) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"shuimeihe":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class creates an Event type object which inherits from Task","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * Event(String description , boolean isDone, LocalDateTime from date, LocalDateTime to date)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     * Event object","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @param desc String description","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param done Boolean isDone","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     * @param from LocalDateTime starting from date","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     * @param to LocalDateTime ending to date","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    public Event(String desc, boolean done, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        super(desc, done);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"     * getter for \"from\" date","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"     * @return this.from","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        return format24HrDate(this.from);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     * getter for \"to\" date","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"     * @return this.to","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"        return format24HrDate(this.to);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(this.from) + \" to \" + formatDate(this.to) + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * This class defines a basic task object","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" * Task (String description, boolean isDone)","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"public class Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    private final String desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * Task object","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param desc String description","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     * @param isDone boolean isDone","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     * Changes the status of done to true","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"     * Changes the status of done to false","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    public void toggleNotDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"     * Returns String \"X\" if done, else returns empty string","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"     * @return string","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"     * Formats input date to \"yyyy/MM/dd hh:mm am/pm\"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"     * @param dateTime LocalDateTime object","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"     * @return formatted dateTime string","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    public String formatDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd hh:mm a\");","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"        return dateTime.format(dtf);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"     * Formats input date to \"yyyy/MM/dd HHmm\"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"     * @param dateTime LocalDateTime object","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"     * @return formatted dateTime string","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"    public String format24HrDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        return dateTime.format(dtf);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"     * Getter for done","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"     * @return this.done","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"     * getter for description","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"     * @return this.desc","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"    public String getDesc() {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        return this.desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        return \"[\" + this.getDoneStatus() + \"] \" + this.desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":94}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":" * This class creates a Todo type object which inherits from Task","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"    public ToDo(String desc, boolean done) {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"shuimeihe":18}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"    public void testInit(){","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shuimeihe":10}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    public void listTaskTest(){","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(new ArrayList\u003cTask\u003e(), tl.getTaskList());","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shuimeihe":16}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"    public void toDoMethodTest(){","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"        ToDo tdTest \u003d new ToDo(\"read book\", true);","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"        String expectedString \u003d \"[T][X] read book\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(expectedString, tdTest.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shuimeihe":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"shuimeihe":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuimeihe":1,"-":20}}]
