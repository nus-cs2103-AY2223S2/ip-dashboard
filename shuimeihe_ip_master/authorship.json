[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"# duke project template","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"3. After that, locate the `src/main/java/duke/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuimeihe":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"checkstyle {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    archiveBaseName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuimeihe":24,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"## Quick Start","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"1. Ensure you have java `11` or above installed in your Computer.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"2. Download the latest `puke.jar` from [here](https://github.com/shuimeihe/ip/releases)","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"3. Copy the file to the folder you want to use as the home folder for your Puke.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar puke.jar` command to run the application.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"6. Refer to the detailed [User Guide](#User-Guide) below for details of each command.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"## Features","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"### Adding Todo : `todo`","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"Adds a Todo task to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"Examples: `todo read book`","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"### Adding Deadline : `deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"Adds a Deadline to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"Format: `deadline DESCRIPTION /by DEADLINE DAY`","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"💡 Note: Dates should have the format `yyyy/MM/dd HHmm` 24-hour time format","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"Examples: `deadline return book /by 2023/02/18 2359`","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"### Adding Event : `event`","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"Adds an Event to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"Format: `event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME`","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"💡 Note: Dates should have the format `yyyy/MM/dd HHmm` 24-hour time format","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"Examples: `event book reading event /from 2023/02/15 0800 /to 2023/03/01 1800`","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"### List : `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"Lists out all the tasks in the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"Format: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"### Mark (Done/ Not done) : `mark` `unmark`","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"Marks task as done or not done.","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"Format: `mark TASK_NUMBER` `unmark TASK_NUMBER`","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"💡 Note: `TASK_NUMBER` is the number as appears in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"Examples: `mark 1` `unmark 3`","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"### Delete : `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"Deletes a task from the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"💡 Note: `TASK_NUMBER` is the number as appears in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"Examples: `delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"### Find : `find`","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"Searches for tasks whose descriptions contains the keyword.","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"Note: keywords are case-sensitive (for now)","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"Examples: `find book`","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"### Archive: `archive`","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"Stores your current task list into an archive file in `\\data\\archive.txt`","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"Format: `archive`","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"⚠️ **IMPORTANT!** This command clears your current task list","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"Saves your task lists and exit program.","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"Format: `exit`","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"shuimeihe":61,"-":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * Main Duke class","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @version 0.0.1","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"public class Duke {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"     * Main method which executes the JavaFX class","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * @param args arguments","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"        Application.launch(JavaFX.class, args);","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"     * Initialises a new Duke object","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"     * @param filePath location of the save file","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"            tasks \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"            System.out.println();;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"    public Storage getStorage() {","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"        return this.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":46}},{"path":"src/main/java/duke/JavaFX.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":" * Deals with the UI that the user sees","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"public class JavaFX extends Application {","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    private Duke duke \u003d new Duke(\"data\\\\save.txt\");","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    private final Image userImg \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"            .getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    private final Image dukeImg \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"            .getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"        stage.show();","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"        stage.setTitle(\"Puke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        // Set up anything for duke","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                DialogBox.getDukeDialog(new Label(ui.printWelcomeMessage()), new ImageView(dukeImg))","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"        );","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"        });","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"     * Handles users input by parsing the method","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"     * Prints a response to the user via a chat box","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"        Parser parser \u003d new Parser(duke.getTaskList(), duke.getStorage());","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"        String command \u003d input.contains(\" \") ? input.split(\" \")[0] : input;","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"        String body \u003d input.substring(command.length()).trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"            response \u003d parser.parseCommand(command, body);","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"                stop();","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"            response \u003d ui.ERROR_EXCEPTION_CAUGHT + e;","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"shuimeihe"},"content":"        } finally {","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"            Label dukeText \u003d new Label(response);","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"shuimeihe"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(userImg)),","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"                    DialogBox.getDukeDialog(dukeText, new ImageView(dukeImg))","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"shuimeihe"},"content":"            );","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"shuimeihe"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"shuimeihe":137}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":" * This class deals with data saving and loading","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    private final String filePath;","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    Storage(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"     * Checks for the data folder and save.txt","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"     * Create folder/file if not exist","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     * @throws IOException not able to create file/folder","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"        File d \u003d new File(\"data\");","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        if (!d.exists()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Data directory does not exist\\nCreating new data directory...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"            if (d.mkdir()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(\"Successfully created new data directory\");","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"        if (!f.isFile()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Save file does not exist!\\nCreating new save file...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(\"Successfully created new file at \" + this.filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"        String archivePath \u003d \"data\\\\archive.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"        File a \u003d new File(archivePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"        if (!a.isFile()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Archive file does not exist!\\nCreating new archive file...\");","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"            if (a.createNewFile()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"                System.out.println(\"Successfully created new file at \" + archivePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"     * Reads tasks from save file and loads it into memory","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"     * @return ArrayList tasks of tasks read from save file","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"     * @throws IOException error with I/O","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"    public ArrayList\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"        if (!new File(this.filePath).isFile() || !new File(\"data\\\\archive.txt\").isFile()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"            createFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"        // creating the buffered reader to read the file","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"                new FileInputStream(this.filePath)));","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"            String curr;","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"            while ((curr \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"                boolean done;","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"                String[] currArr \u003d curr.split(\"\\\\|\");","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"                switch(currArr[0]) {","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"                    case (\"T\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                        done \u003d currArr[1].equals(\"1\");","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"                        tasks.add(new ToDo(currArr[2], done));","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"                    case (\"D\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"                        done \u003d currArr[1].equals(\"1\");","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"                        LocalDateTime by \u003d LocalDateTime.parse(currArr[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"                        tasks.add(new Deadline(currArr[2], done, by));","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"                    case (\"E\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"                        done \u003d currArr[1].equals(\"1\");","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"                        LocalDateTime from \u003d LocalDateTime.parse(currArr[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"                        LocalDateTime to \u003d LocalDateTime.parse(currArr[4], DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"                        tasks.add(new Event(currArr[2], done, from, to));","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"                    default:","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"                        break;","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Error occurred reading save file: \" + e);","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"     * Writes current data to save file","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"     * @param tasks task list","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"    public void writeFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(\"Saving your task list...\");","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath))) {","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"shuimeihe"},"content":"                int done;","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"                if (t instanceof ToDo) {","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"T|\" + done + \"|\" + t.getDesc());","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"D|\" + done + \"|\" + t.getDesc() + \"|\" + ((Deadline) t).getDeadlineDay());","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"shuimeihe"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"E|\" + done + \"|\" + t.getDesc() + \"|\"","lastModifiedDate":"2023-02-14"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"                            + ((Event) t).getFrom() + \"|\" + ((Event) t).getTo());","lastModifiedDate":"2023-02-14"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"shuimeihe"},"content":"                bw.write(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Error occurred writing to save file\" + e);","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"shuimeihe"},"content":"     * Writes data to an archive file","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"shuimeihe"},"content":"    public void writeArchive(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"data\\\\archive.txt\"))) {","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"shuimeihe"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"shuimeihe"},"content":"                int done;","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"shuimeihe"},"content":"                if (t instanceof ToDo) {","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"T|\" + done + \"|\" + t.getDesc());","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"shuimeihe"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"D|\" + done + \"|\" + t.getDesc() + \"|\" + ((Deadline) t).getDeadlineDay());","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"shuimeihe"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"shuimeihe"},"content":"                    done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"shuimeihe"},"content":"                    bw.write(\"E|\" + done + \"|\" + t.getDesc() + \"|\"","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"shuimeihe"},"content":"                            + ((Event) t).getFrom() + \"|\" + ((Event) t).getTo());","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"shuimeihe"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"shuimeihe"},"content":"                bw.write(\"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"shuimeihe"},"content":"            System.out.println(\"Error occurred writing to archive file\" + e);","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":171}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":" * This class deals with any interaction with the task list (insert, update, delete)","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"public class TaskList {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    public static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"(.+)/by (.+)\");","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    public static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"(.+)/from (.+) /to (.+)\");","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"        TaskList.tasks \u003d tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"        TaskList.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     * Return the tasks stored in the task list","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     * @return response with tasks listed out","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"    public String listTask() {","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"            return \"You dont have any tracked tasks\";","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"            StringBuilder output \u003d new StringBuilder(\"Your current tracked tasks: \\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"                Task curr \u003d tasks.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"                output.append(i + 1).append(\" . \").append(curr).append(\"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"            return output.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"     * Used to mark a task as done","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"     * @param body String index of the task","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"     * @return confirmation of task marked done","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    public String markTaskDone(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"        int index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"        tasks.get(index).toggleDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"        return \"Marked task as done:\\n [X] \" + tasks.get(index).getDesc();","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"     * Used to mark a task as not done","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"     * @param body String index of the task","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"     * @return confirmation of task marked not done","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"    public String markTaskNotDone(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"        int index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"        tasks.get(index).toggleNotDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"        return \"Marked task as not done:\\n [ ] \" + tasks.get(index).getDesc();","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"     * Used to delete a task from the task list","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"     * @param body String index of the task","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"     * @return confirmation of deletion OR error message from deletion","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"    public String deleteTask(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"            int i \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"            assert i \u003e\u003d 0;","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"            Task temp \u003d tasks.get(i);","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"            tasks.remove(temp);","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"            return ui.printDeleteMessage(temp, tasks.size());","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"            return ui.ERROR_DELETE_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"     * Adds a Tod0 task to the task list","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"     * @param body String description of the task","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"     * @return confirmation of adding OR error message","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"    public String addTodo(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"            ToDo curr \u003d new ToDo(body, false);","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"            tasks.add(curr);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"            return ui.printNotification(curr, tasks.size());","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"            return ui.ERROR_EMPTY_TODO;","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"     * Adds a Deadline object to the task list","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"     * @param body String description of the task, and deadline date","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"     * @return confirmation of adding OR error message","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"    public String addDeadline(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"            Matcher dlMatcher \u003d DEADLINE_PATTERN.matcher(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"            if (dlMatcher.matches()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"                String desc \u003d dlMatcher.group(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"                String deadlineDay \u003d dlMatcher.group(2);","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"                LocalDateTime deadlineDayParsed \u003d LocalDateTime.parse(deadlineDay, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"                Deadline dl \u003d new Deadline(desc, false, deadlineDayParsed);","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"                tasks.add(dl);","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"                return ui.printNotification(dl, tasks.size());","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"            } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"shuimeihe"},"content":"                return ui.ERROR_WRONG_DATE_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"shuimeihe"},"content":"            return \"Error adding Deadline: \" + e;","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"     * Adds an Event object to the task list","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"     * @param body String description of the task, from date and to date","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"     * @return confirmation of adding OR error message","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"shuimeihe"},"content":"    public String addEvent(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"shuimeihe"},"content":"            Matcher eMatcher \u003d EVENT_PATTERN.matcher(body);","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"shuimeihe"},"content":"            if (eMatcher.matches()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"shuimeihe"},"content":"                String desc \u003d eMatcher.group(1);","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"shuimeihe"},"content":"                String from \u003d eMatcher.group(2);","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"shuimeihe"},"content":"                String to \u003d eMatcher.group(3);","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"shuimeihe"},"content":"                LocalDateTime fromParsed \u003d LocalDateTime.parse(from, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"shuimeihe"},"content":"                LocalDateTime toParsed \u003d LocalDateTime.parse(to, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"                Event dl \u003d new Event(desc, false, fromParsed, toParsed);","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"shuimeihe"},"content":"                tasks.add(dl);","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"shuimeihe"},"content":"                return ui.printNotification(dl, tasks.size());","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"shuimeihe"},"content":"            } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"shuimeihe"},"content":"                return ui.ERROR_WRONG_DATE_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"shuimeihe"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"shuimeihe"},"content":"            return \"Error adding Event: \" + e;","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"shuimeihe"},"content":"     * Searches for task description that matches body","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"shuimeihe"},"content":"     * @param body string to find","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"shuimeihe"},"content":"     * @return String of tasks found that matches","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"shuimeihe"},"content":"    public String find(String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"shuimeihe"},"content":"        boolean found \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"shuimeihe"},"content":"        StringBuilder output \u003d new StringBuilder(\"Matching tasks I\u0027ve found in your list: \\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"shuimeihe"},"content":"        for (Task temp : tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"shuimeihe"},"content":"            if (temp.getDesc().contains(body)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"shuimeihe"},"content":"                found \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"shuimeihe"},"content":"                output.append(temp).append(\"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"shuimeihe"},"content":"        if (!found) {","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"shuimeihe"},"content":"            output.append(\"No tasks matches your search :(\");","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"shuimeihe"},"content":"        return output.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"shuimeihe"},"content":"     * Used when command is not recognized","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"shuimeihe"},"content":"     * @param command user input that is not recognized","lastModifiedDate":"2023-02-18"},{"lineNumber":189,"author":{"gitId":"shuimeihe"},"content":"     * @return error message","lastModifiedDate":"2023-02-18"},{"lineNumber":190,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"shuimeihe"},"content":"    public String unknownCommand(String command) {","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"shuimeihe"},"content":"        return ui.ERROR_UNKNOWN_COMMAND + \" : \" + command;","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"shuimeihe"},"content":"     * getter for task list","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"shuimeihe"},"content":"     * @return task list","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"shuimeihe"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"shuimeihe"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"shuimeihe"},"content":"    public void nukeList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"shuimeihe"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":205}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class deals with user inputs","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"public class Parser {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     * Constructor Parser object","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * @param taskList TaskList object","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"    public Parser(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"     * Returns an integer for different commands","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"     * @param command string input from user","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     * @param body content of the command","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    public String parseCommand(String command, String body) {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        switch(command) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"            case (\"bye\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"                storage.writeFile(taskList.getTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"                return \"Goodbye\";","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"            case (\"list\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"                return taskList.listTask();","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"            case (\"mark\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"                return taskList.markTaskDone(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"            case (\"unmark\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"                return taskList.markTaskNotDone(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"            case (\"delete\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"                return taskList.deleteTask(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"            case (\"todo\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"                return taskList.addTodo(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"            case (\"deadline\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"                return taskList.addDeadline(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"            case (\"event\"):","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"                return taskList.addEvent(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"            case(\"find\"):","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                return taskList.find(body);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"            case(\"archive\"):","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"                storage.writeArchive(taskList.getTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"                taskList.nukeList();","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"                return \"Archival done\";","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"            default:","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"                return taskList.unknownCommand(command);","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":60}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class creates a Deadline object which inherits from Task","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * Deadline (String description, boolean isDone, LocalDateTime deadlineDay)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    private LocalDateTime deadlineDay;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"     * Deadline object","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * @param desc String description","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @param isDone boolean done","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param deadlineDay LocalDateTime","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    public Deadline(String desc, boolean isDone, LocalDateTime deadlineDay) {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        this.deadlineDay \u003d deadlineDay;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"     * getter for deadline day","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     * @return this.deadlineDay","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    public String getDeadlineDay() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        return format24HrDate(this.deadlineDay);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + formatDate(this.deadlineDay) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"shuimeihe":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class creates an Event type object which inherits from Task","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * Event(String description , boolean isDone, LocalDateTime from date, LocalDateTime to date)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     * Event object","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     * @param desc String description","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param done Boolean isDone","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     * @param from LocalDateTime starting from date","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     * @param to LocalDateTime ending to date","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    public Event(String desc, boolean done, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        super(desc, done);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"     * getter for \"from\" date","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"     * @return this.from","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        return format24HrDate(this.from);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     * getter for \"to\" date","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"     * @return this.to","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"        return format24HrDate(this.to);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDate(this.from) + \" to \" + formatDate(this.to) + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * This class defines a basic task object","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" * Task (String description, boolean isDone)","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"public class Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    private final String desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"     * Task object","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * @param desc String description","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     * @param isDone boolean isDone","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     * Changes the status of done to true","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    public void toggleDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"     * Changes the status of done to false","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    public void toggleNotDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"     * Returns String \"X\" if done, else returns empty string","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"     * @return string","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"     * Formats input date to \"yyyy/MM/dd hh:mm am/pm\"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"     * @param dateTime LocalDateTime object","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"     * @return formatted dateTime string","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    public String formatDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd hh:mm a\");","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"        return dateTime.format(dtf);","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"     * Formats input date to \"yyyy/MM/dd HHmm\"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"     * @param dateTime LocalDateTime object","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"     * @return formatted dateTime string","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"    public String format24HrDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        return dateTime.format(dtf);","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"     * Getter for done","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"     * @return this.done","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"     * getter for description","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"     * @return this.desc","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"    public String getDesc() {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        return this.desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        return \"[\" + this.getDoneStatus() + \"] \" + this.desc;","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"shuimeihe":94}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":" * This class creates a Todo type object which inherits from Task","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"    public ToDo(String desc, boolean done) {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"        super(desc, done);","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"shuimeihe":18}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" * This class represents a dialog box object","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":" * Used when displaying responses and inputs from user","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":" * @version 0.0.2","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    private Label text;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"     * Constructor for a DialogBox object","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"     * @param l Label with text","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"     * @param iv ImageView","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    void flip() {","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"     * Getter for User dialog box","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"     * @param l label","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"     * @param iv imageview","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"     * @return DialogBox with both parameters","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"     * Getter for Duke dialog box","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"     * @param l label","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"     * @param iv imageview","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"     * @return DialogBox with both parameters","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"        db.flip();","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        return db;","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"shuimeihe":70}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":" * This class deals with any response printing for the UI","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" *","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":" * @author He Shuimei","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":" * @version 0","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"public class Ui {","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_WRONG_DATE_FORMAT \u003d \"Error: Format of the date is wrong, it should be in the form of\"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"            + \"YYYY/mm/dd HHmm\";","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_DELETE_TASK \u003d \"Error: Item does not exist\";","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_EMPTY_TODO \u003d \"Please input something TO DO????!!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_UNKNOWN_COMMAND \u003d \"Error: Unknown command\";","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    public final String ERROR_EXCEPTION_CAUGHT \u003d \"Fatal Error: Encountered exception: \";","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"     * Prints successful deletion message","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     * @param task task that is deleted","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     * @param size size of the task list","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"     * @return String confirmation response","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    public String printDeleteMessage(Task task, int size) {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"        String l1 \u003d \"SENDING TASK TO THE VOID (DELETING) \\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"        String l2 \u003d \"\\t\" + task + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"        String l3 \u003d \"You currently have \" + size + \" tracked tasks\";","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"        return l1 + l2 + l3;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"     * Prints successful add task","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"     * @param curr single Task object","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"     * @param size int size of list","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     * @return String confirmation response","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    public String printNotification(Task curr, int size) {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        String l1 \u003d \"Me add your task to list: \\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"        String l2 \u003d \"\\t\" + curr + \"\\n\";","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"        String l3 \u003d \"You currently have \" + size + \" tracked tasks\";","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        return l1 + l2 + l3;","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"     * Prints the initial start-up message","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"     * @return String confirmation response","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"    public String printWelcomeMessage() {","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"        String welcome \u003d \"Welcome to PUKE, the best bot in existence\";","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"        String prompt \u003d \"Input a command\";","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        return welcome + \"\\n\" + prompt;","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"shuimeihe":60}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"    public void testInit() {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shuimeihe":10}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"    public void listTaskTest() {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(new ArrayList\u003cTask\u003e(), tl.getTaskList());","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shuimeihe":16}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"    public void toDoMethodTest() {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"        ToDo tdTest \u003d new ToDo(\"read book\", true);","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"        String expectedString \u003d \"[T][X] read book\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(expectedString, tdTest.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"shuimeihe":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"shuimeihe":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shuimeihe":1,"-":20}}]
