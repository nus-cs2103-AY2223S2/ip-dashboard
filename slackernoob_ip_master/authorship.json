[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"slackernoob":1,"-":40}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        ui.showGoodbye();","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":17}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public String input;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    public Command(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        this.byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"                + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"slackernoob":21}},{"path":"src/main/java/duke/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"                    \"You cant be doing nothing!! Please try again!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        // String desc \u003d input.substring(9);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        String[] descSplit \u003d input.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"        Deadline taskDeadline \u003d new Deadline(","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"                descSplit[0].substring(0,descSplit[0].length()-1),","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"                descSplit[1].substring(3));","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"        taskList.addTask(taskDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        storage.writeTasksToFile(taskList.getTaskList().toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"        ui.showTaskAdded(taskDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"        ui.showNumTasks(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":25}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"        // Task removedTask \u003d taskList.getTaskList().get(taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        Task removedTask \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        storage.writeTasksToFile(taskList.getTaskList().toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        ui.showTaskRemoved(removedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        ui.showNumTasks(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public Duke(String filePath){","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"            this.tasks \u003d new TaskList(storage.readTasksFromFile());","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        boolean canContinue \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"        while (canContinue) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"                String userCommandText \u003d ui.getUserCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"                Command c \u003d Parser.parse(userCommandText);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"                canContinue \u003d c.isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"            } finally {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"        new Duke(System.getProperty(\"user.dir\") + \"/duke.txt\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"slackernoob":39,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        return \":( OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"slackernoob":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    protected String start;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    protected String end;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"        this.startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"        this.endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"                + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"                + \" to: \"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"                + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"slackernoob":28}},{"path":"src/main/java/duke/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"                    \"You can\u0027t be doing nothing!! Please try again!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        String[] descSplit \u003d input.split(\"/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        String description \u003d descSplit[0].substring(","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"                0,descSplit[0].length()-1);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"        String start \u003d descSplit[1].substring(","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"                5,descSplit[1].length()-1);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"        String end \u003d descSplit[2].substring(3);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"        Event taskEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"        taskList.addTask(taskEvent);","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"        storage.writeTasksToFile(taskList.getTaskList().toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"        ui.showTaskAdded(taskEvent);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        ui.showNumTasks(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":27}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        ui.showList(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":12}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"        Task markedTask \u003d taskList.changeMarkStatus(taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        storage.writeTasksToFile(taskList.getTaskList().toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        ui.showTaskMarked(markedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        ui.showNumTasks(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"    public Parser() {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"        //","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public static Command parse(String input) throws DukeException{","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"            String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"            switch (inputSplit[0]) {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"                    return new TodoCommand(input.replaceFirst(\"todo\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"                    return new DeadlineCommand(input.replaceFirst(\"deadline\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"                case \"event\":","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"                    return new EventCommand(input.replaceFirst(\"event\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"                case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"                    return new ListCommand(input.replaceFirst(\"list\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"                    return new DeleteCommand(input.replaceFirst(\"delete\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"                    return new MarkCommand(input.replaceFirst(\"mark\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"                    return new UnmarkCommand(input.replaceFirst(\"unmark\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"                    return new ByeCommand(input.replaceFirst(\"bye\", \"\").trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"                    throw new DukeException(\"No such command!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(\"Something went wrong! Please try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":36}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    private File path;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"        this.path \u003d new File(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    public void writeTasksToFile(String taskListStrings) {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"            FileWriter fw \u003d new FileWriter(this.path);","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"            fw.write(taskListStrings.substring(1, taskListStrings.length()-1));","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"    public ArrayList\u003cTask\u003e readTasksFromFile() throws DukeException{","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"            String path \u003d System.getProperty((\"user.dir\")) + \"/duke.txt\";","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"            Scanner scanner \u003d new Scanner(new File(path));","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"            String contentsOfFile \u003d scanner.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"            String[] fileContentsArray \u003d contentsOfFile.split(\", \");","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"            for (String task: fileContentsArray) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"                processTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"//                System.out.println(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"            return this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"            this.makeDirectory();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"    void makeDirectory() {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"            if (!checkDirectory()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"                path.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"    boolean checkDirectory() {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"        return path.exists();","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"    void processTask(String task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"            String taskType \u003d \"\" + task.charAt(1);","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"                addTodo(task.substring(3));","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"slackernoob"},"content":"                addDeadline(task.substring(3));","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"slackernoob"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"                addEvent(task.substring(3));","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"slackernoob"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"slackernoob"},"content":"    void addEvent(String task) throws ParseException {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"slackernoob"},"content":"        String taskDescriptionWithTime \u003d task.substring(4);","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"slackernoob"},"content":"        String[] taskDetails \u003d taskDescriptionWithTime.split(\"\\\\(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"slackernoob"},"content":"        String taskDescription \u003d taskDetails[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"slackernoob"},"content":"        taskDescription \u003d taskDescription.substring(0, taskDescription.length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"slackernoob"},"content":"        String timeRange \u003d taskDetails[1].substring(6, taskDetails[1].length() - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"slackernoob"},"content":"        String[] timings \u003d timeRange.split(\" to: \");","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"        String start \u003d timings[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"slackernoob"},"content":"        String displayFormat \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"slackernoob"},"content":"        String taskFormat \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"slackernoob"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(displayFormat);","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"slackernoob"},"content":"        Date oldStart \u003d format.parse(start);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"slackernoob"},"content":"        format.applyPattern(taskFormat);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"slackernoob"},"content":"        String newStart \u003d format.format(oldStart);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"slackernoob"},"content":"        String end \u003d timings[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"slackernoob"},"content":"        format \u003d new SimpleDateFormat(displayFormat);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"slackernoob"},"content":"        Date oldEnd \u003d format.parse(end);","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"slackernoob"},"content":"        format.applyPattern(taskFormat);","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"slackernoob"},"content":"        String newEnd \u003d format.format(oldEnd);","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"slackernoob"},"content":"        Task curTask \u003d new Event(taskDescription, newStart, newEnd);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"slackernoob"},"content":"        if ((\"\" + task.charAt(1)).equals(\"X\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"slackernoob"},"content":"            curTask \u003d curTask.mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"slackernoob"},"content":"        ArrayList\u003cTask\u003e curList \u003d this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"slackernoob"},"content":"        curList.add(curTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"slackernoob"},"content":"        this.tasks \u003d curList;","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"slackernoob"},"content":"    void addTodo(String task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"slackernoob"},"content":"        String taskDescription \u003d task.substring(4);","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"slackernoob"},"content":"        Task curTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"slackernoob"},"content":"        if ((\"\" + task.charAt(1)).equals(\"X\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"slackernoob"},"content":"            curTask \u003d curTask.mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"slackernoob"},"content":"        ArrayList\u003cTask\u003e curList \u003d this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"slackernoob"},"content":"        curList.add(curTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"slackernoob"},"content":"        this.tasks \u003d curList;","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"slackernoob"},"content":"    void addDeadline(String task) throws ParseException {","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"slackernoob"},"content":"        String taskDescriptionWithTime \u003d task.substring(4);","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"slackernoob"},"content":"        String[] taskDetails \u003d taskDescriptionWithTime.split(\" \\\\(by: \");","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"slackernoob"},"content":"        String taskDescription \u003d taskDetails[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"slackernoob"},"content":"        String by \u003d taskDetails[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"slackernoob"},"content":"        by \u003d by.substring(0, by.length() - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"slackernoob"},"content":"        String displayFormat \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"slackernoob"},"content":"        String taskFormat \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"slackernoob"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(displayFormat);","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"slackernoob"},"content":"        Date oldDate \u003d format.parse(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"slackernoob"},"content":"        format.applyPattern(taskFormat);","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"slackernoob"},"content":"        String newDateString \u003d format.format(oldDate);","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"slackernoob"},"content":"        Task curTask \u003d new Deadline(taskDescription, newDateString);","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"slackernoob"},"content":"        if ((\"\" + task.charAt(1)).equals(\"X\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"slackernoob"},"content":"            curTask \u003d curTask.mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"slackernoob"},"content":"        //DateTimeFormatter.ofPattern(\"MMM d yyyy\")","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"slackernoob"},"content":"        ArrayList\u003cTask\u003e curList \u003d this.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"slackernoob"},"content":"        curList.add(curTask);","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"slackernoob"},"content":"        this.tasks \u003d curList;","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"slackernoob":140}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    public Task mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        return this;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"        return \"[\" + getStatusIcon() + \"] \"","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"                + description;","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"slackernoob":30}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"    public Task deleteTask(int num) throws DukeException{","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"        int numTasks \u003d this.tasks.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(\"Can\u0027t delete anything since no tasks in list! \"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"                    + \"Add some tasks first!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        if (num \u003c 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(\"Tasks start from 1, please try again!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"        } else if (num \u003e numTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(String.format(\"You only have %d task(s), \"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"                    + \"please try again with a number less or equal to %d!\",","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"                    numTasks, numTasks));","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"            Task selectedTask \u003d this.tasks.get(num - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"            this.tasks.remove(num - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"            return selectedTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"    public Task changeMarkStatus(int num) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"        int numTasks \u003d this.tasks.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(\"Can\u0027t mark anything since no tasks in list! \"","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"                    + \"Add some tasks first!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"        if (num \u003c 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(\"Tasks start from 1, please try again!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"        } else if (num \u003e numTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(String.format(\"You only have %d task(s), \"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"                            + \"please try again with a number less or equal to %d!\",","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"                    numTasks, numTasks));","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"            Task selectedTask \u003d this.tasks.get(num - 1).mark();","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"            this.tasks.set(num - 1, selectedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"slackernoob"},"content":"            return selectedTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"slackernoob"},"content":"        return this.tasks.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":70}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"slackernoob":12}},{"path":"src/main/java/duke/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"                    \"You cant be doing nothing!! Please try again!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        Todo taskTodo \u003d new Todo(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        taskList.addTask(taskTodo);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        storage.writeTasksToFile(taskList.getTaskList().toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"        ui.showTaskAdded(taskTodo);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"        ui.showNumTasks(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":19}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    private static final String spacesPrefix \u003d \"     \";","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    private static final String dashes \u003d \"    \"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"            + \"______________________________\"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"            + \"______________________________\";","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    private final Scanner in;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    // private final PrintStream out;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"    public Ui() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"        System.out.println(\"Enter your desired action: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"        String fullInputLine \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        return fullInputLine;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        String welcomeMsg \u003d spacesPrefix","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"                + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"                + spacesPrefix","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"                + \"How can I help you?\";","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"        System.out.println(welcomeMsg);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        String exitMsg \u003d spacesPrefix","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"                + \"Farewell! See you soon!\";","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        System.out.println(exitMsg);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"        String loadingErrorString \u003d \"Failed to load from file!\";","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        System.out.println(loadingErrorString);","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    public void showTaskAdded(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        System.out.println(formatMessage(\"New task added: \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"        System.out.println(spacesPrefix + task);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"    public void showTaskRemoved(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"        System.out.println(formatMessage(\"Removed task: \"));","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"        System.out.println(spacesPrefix + task);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"    public void showNumTasks(TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"        System.out.println(spacesPrefix","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"                + \" Now list has \" + taskList.getSize() + \" tasks.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"        System.out.println(spacesPrefix","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"                + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"slackernoob"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"            System.out.println(spacesPrefix + \" \"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"                    + number + \". \"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"                    + taskList.getTaskList().get(i));","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"        System.out.println(formatMessage(\"Marked task as done:\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"slackernoob"},"content":"        System.out.println(spacesPrefix + task);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"slackernoob"},"content":"        System.out.println(formatMessage(\"Marked task as undone:\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"slackernoob"},"content":"        System.out.println(spacesPrefix + task);","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"slackernoob"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"slackernoob"},"content":"        System.out.println(formatMessage(errorMessage));","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"        System.out.println(dashes);","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"slackernoob"},"content":"    public String formatMessage(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"slackernoob"},"content":"        return spacesPrefix + message;","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":89}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"        super(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"        int taskNumber \u003d Integer.parseInt(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"        Task unmarkedTask \u003d taskList.changeMarkStatus(taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        storage.writeTasksToFile(taskList.getTaskList().toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        ui.showTaskUnmarked(unmarkedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        ui.showNumTasks(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":16}},{"path":"src/test/java/duke/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    public void execute_markCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        Command testCommand \u003d new MarkCommand(\"2\");","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"        taskArrayList.add(new Todo(\"sample task 1\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"        taskArrayList.add(new Todo(\"sample task 2\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"        TaskList tasks \u003d new TaskList(taskArrayList);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/tasklist.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"            testCommand.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"        } finally {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"            assertTrue(tasks.getTaskList().get(2-1).isDone());","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"    public void test_isExit_byeCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        Command testCommand \u003d new ByeCommand(\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        assertFalse(testCommand.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"    public void test_isNotExit_deadlineCommand() {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        Command testCommand \u003d new DeadlineCommand(\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        assertTrue(testCommand.isExit());","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"slackernoob":44}},{"path":"tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"[T][ ] sample task 1, [T][X] sample task 2","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"slackernoob":1}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"[T][X] borrow book, [D][ ] return book (by: Jun 12 2022), [T][X] join sports club, [T][ ] borrow book, [D][ ] return book (by: Aug 4 2022), [E][ ] project meeting (from: Sep 12 2022 to: Sep 13 2022)","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"slackernoob":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"deadline return book /by 2022-06-12","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"event project meeting /from 2022-08-13 /to 2022-08-16","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"deadline return book /by 2022-08-04","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"event project meeting /from 2022-09-12 /to 2022-09-13","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"slackernoob":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"if ! javac -cp ../src/main/java/duke/Duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"slackernoob":1,"-":37}}]
