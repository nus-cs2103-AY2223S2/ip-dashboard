[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"swx0":16,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import duke.exception.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import duke.message.DukeMessage;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import duke.message.MessageGenerator;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"import duke.message.MessageStatus;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":" * Represents the main class where response messages are printed to user,","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":" * in response to user\u0027s input.","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    TaskList taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"    MessageGenerator messageGenerator \u003d new MessageGenerator(taskList, storage);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    public Duke() {}","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    public String getInitMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"        DukeMessage initMessage \u003d new DukeMessage(MessageStatus.START);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"        return initMessage.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"            MessageStatus responseStatus \u003d parser.process(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"            DukeMessage dukeResponse \u003d messageGenerator.generate(responseStatus, input);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"            return dukeResponse.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"        } catch (InvalidInputException | InvalidTodoException | InvalidDeadlineException |","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"                InvalidEventException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"swx0":40,"-":3}},{"path":"src/main/java/duke/GUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"    private void flip() {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"swx0"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"swx0"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"swx0"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"swx0"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"swx0"},"content":"        db.flip();","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"swx0"},"content":"        return db;","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"swx0":61}},{"path":"src/main/java/duke/GUI/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"public class Launcher {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"swx0":10}},{"path":"src/main/java/duke/GUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"            stage.show();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"swx0":32}},{"path":"src/main/java/duke/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.gui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"                DialogBox.getDukeDialog(duke.getInitMessage(), dukeImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"    @FXML","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"swx0"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"swx0"},"content":"        );","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"swx0"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"swx0":55}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":" * Constructs a new exception representing an invalid deadline task input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"    public InvalidDeadlineException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":12}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":" * Constructs a new exception representing an invalid event task input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"    public InvalidEventException(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"        super(message);","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":12}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":" * Constructs a new exception representing an invalid task input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"    public InvalidInputException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":11}},{"path":"src/main/java/duke/exception/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.exception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":" * Constructs a new exception representing an invalid todo task input.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"public class InvalidTodoException extends Exception {","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"    public InvalidTodoException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"        super(\"The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":12}},{"path":"src/main/java/duke/message/DukeMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.message;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":" * Represents a response message by Duke to the user. A DukeMessage object","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":" * corresponds to a message consisting of either a message status only or","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":" * message status and string content.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"public class DukeMessage extends Message {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    MessageStatus status;","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"    public DukeMessage(MessageStatus status) {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"        super(\"\");","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    DukeMessage(MessageStatus status, String content) {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"        super(content);","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"        String reply;","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"        switch (this.status) {","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"        case ADD:","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"        case SORT:","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"        case MARK:","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"        case LIST:","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"        case DELETE:","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"        case FIND:","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"            reply \u003d this.getContent();","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"        case START:","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"            reply \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"        case END:","lastModifiedDate":"2023-01-15"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"            // End conversation","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"            reply \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"        default:","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"            reply \u003d \"Invalid\";","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"        return String.format(\"%s\\n\", reply);","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"swx0":50}},{"path":"src/main/java/duke/message/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.message;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":" * Represents a parent class for message","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"public class Message {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"    private String content;","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"    Message(String content) {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"        return this.content;","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"        return this.content;","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"swx0":21}},{"path":"src/main/java/duke/message/MessageGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.message;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidTodoException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":" * Represents a Duke message generator. A MessageGenerator object has","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":" * associated methods to generate messages in response to tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"public class MessageGenerator {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    TaskList taskList;","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    public MessageGenerator(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    private Task processMark(String message) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"        String action \u003d messageSplit[0];","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"        int taskNum \u003d Integer.parseInt(messageSplit[1]);","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"        this.taskList.markTask(action, taskNum);","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"        // Mark task in storage","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"        this.storage.markTask(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"        return this.taskList.getTask(taskNum);","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"     * Returns response message from Duke, in response to user\u0027s task\u0027s status","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"     * and task content.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"     * @param status Status of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"     * @param task   Task object representing user\u0027s task input.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"     * @return String consisting of the header, associated task and end.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"    String generateTaskMessage(MessageStatus status, Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"        String heading \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"        String end \u003d \"\";","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"swx0"},"content":"        switch (status) {","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"swx0"},"content":"        case MARK:","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"swx0"},"content":"            heading \u003d task.getDoneStatus()","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"swx0"},"content":"                    ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-01-15"},{"lineNumber":55,"author":{"gitId":"swx0"},"content":"                    : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-15"},{"lineNumber":56,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-16"},{"lineNumber":57,"author":{"gitId":"swx0"},"content":"        case ADD:","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"swx0"},"content":"            heading \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"swx0"},"content":"            end \u003d String.format(\"\\nNow you have %d tasks in the list.\", this.taskList.getTaskCount());","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"swx0"},"content":"        case DELETE:","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"swx0"},"content":"            heading \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"swx0"},"content":"            end \u003d String.format(\"\\nNow you have %d tasks in the list.\", this.taskList.getTaskCount());","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"swx0"},"content":"        default:","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"swx0"},"content":"        return String.format(\"%s\\n%s%s\", heading, task.toString(), end);","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"swx0"},"content":"    String generateListMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"swx0"},"content":"        String heading \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"swx0"},"content":"        return heading + this.taskList.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":76,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":77,"author":{"gitId":"swx0"},"content":"    String generateSortMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"swx0"},"content":"        String heading \u003d \"Here are the sorted tasks in your list:\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"swx0"},"content":"        return heading + this.taskList.toSortedString();","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"swx0"},"content":"    ArrayList\u003cTask\u003e filterTaskList(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"swx0"},"content":"        String messageToFilterBy \u003d messageSplit[1];","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"swx0"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d this.taskList.filter(messageToFilterBy);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"swx0"},"content":"        return filteredList;","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"swx0"},"content":"    public String filteredListToString(ArrayList\u003cTask\u003e filteredTaskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"swx0"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"swx0"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"swx0"},"content":"            Task task \u003d filteredTaskList.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"swx0"},"content":"            listString +\u003d String.format(\"%d.%s\\n\", i + 1, task.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"swx0"},"content":"        return listString;","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"swx0"},"content":"    String generateFindMessage(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"swx0"},"content":"        String heading \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"swx0"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d filterTaskList(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"swx0"},"content":"        return heading + filteredListToString(filteredTaskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"swx0"},"content":"     * Returns response message from Duke, in response to user\u0027s input.","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"swx0"},"content":"     * @param status  Status of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"swx0"},"content":"     * @param message Contents of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"swx0"},"content":"     * @return Duke message representing the response.","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"swx0"},"content":"     * @throws InvalidDeadlineException If user input is invalid for deadline task.","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"swx0"},"content":"     * @throws InvalidTodoException     If user input is invalid for todo task.","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"swx0"},"content":"     * @throws InvalidEventException    If user input is invalid for event task.","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"swx0"},"content":"    public DukeMessage generate(MessageStatus status, String message)","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"swx0"},"content":"            throws InvalidDeadlineException, InvalidTodoException, InvalidEventException {","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"swx0"},"content":"        Task task;","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":118,"author":{"gitId":"swx0"},"content":"        switch (status) {","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"swx0"},"content":"        case LIST:","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"swx0"},"content":"            message \u003d generateListMessage();","lastModifiedDate":"2023-01-15"},{"lineNumber":121,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"swx0"},"content":"        case SORT:","lastModifiedDate":"2023-02-08"},{"lineNumber":123,"author":{"gitId":"swx0"},"content":"            message \u003d generateSortMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"swx0"},"content":"        case MARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"swx0"},"content":"            task \u003d processMark(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"swx0"},"content":"            message \u003d generateTaskMessage(status, task);","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"swx0"},"content":"        case ADD:","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"swx0"},"content":"            task \u003d taskList.addTask(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"swx0"},"content":"            // Add task in storage","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"swx0"},"content":"            this.storage.addTask(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"swx0"},"content":"            message \u003d generateTaskMessage(status, task);","lastModifiedDate":"2023-01-16"},{"lineNumber":136,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"swx0"},"content":"        case DELETE:","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"swx0"},"content":"            task \u003d taskList.deleteTask(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"swx0"},"content":"            // Delete task in storage","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"swx0"},"content":"            this.storage.deleteTask(message);","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"swx0"},"content":"            message \u003d generateTaskMessage(status, task);","lastModifiedDate":"2023-01-16"},{"lineNumber":144,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"swx0"},"content":"        case FIND:","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"swx0"},"content":"            message \u003d generateFindMessage(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"swx0"},"content":"        default:","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"swx0"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":151,"author":{"gitId":"swx0"},"content":"        return new DukeMessage(status, message);","lastModifiedDate":"2023-01-15"},{"lineNumber":152,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":153,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":153}},{"path":"src/main/java/duke/message/MessageStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.message;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"public enum MessageStatus {","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"    LIST, ADD, END, START, MARK, DELETE, FIND, SORT","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":5}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidTodoException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import duke.message.MessageStatus;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":" * Used for parsing standard input from the user","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    public Parser() {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    private boolean isMark(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"        if (messageSplit.length !\u003d 2) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"            return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"        String action \u003d messageSplit[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"        return (action.equals(\"mark\") || action.equals(\"unmark\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"    private boolean isAdd(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"        String action \u003d messageSplit[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"        return (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"    private boolean isDelete(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"        String action \u003d messageSplit[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"        return action.equals(\"delete\");","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"    private boolean isFind(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"        String action \u003d messageSplit[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"        return action.equals(\"find\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"     * Returns the status of task from user\u0027s input","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"     * @param message Contents of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"swx0"},"content":"     * @return status of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"swx0"},"content":"     * @throws InvalidInputException If user input is invalid.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"swx0"},"content":"    public MessageStatus process(String message) throws InvalidInputException {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swx0"},"content":"        MessageStatus status;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swx0"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.END;","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"swx0"},"content":"        } else if (message.equals(\"list\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.LIST;","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"swx0"},"content":"        } else if (message.equals(\"sort\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.SORT;","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"swx0"},"content":"        } else if (isMark(message)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.MARK;","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"swx0"},"content":"        } else if (isAdd(message)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.ADD;","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"swx0"},"content":"        } else if (isDelete(message)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.DELETE;","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"swx0"},"content":"        } else if (isFind(message)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"swx0"},"content":"            status \u003d MessageStatus.FIND;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"swx0"},"content":"        } else {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"swx0"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"swx0"},"content":"        return status;","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swx0":77}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":" * Represents a storage for user\u0027s task in hard disk.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":" * A Storage object has associated methods to load and update tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"    private ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    public Storage() {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"    private String getTask(int taskNum) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"        return this.list.get(taskNum - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"    public void addTask(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"        this.list.add(\"unmark \" + message);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"        updateStorage();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"     * Updates status of task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"     * @param message Contents of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"    public void markTask(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"        assert messageSplit.length \u003e\u003d 2;","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"        int taskNum \u003d Integer.parseInt(messageSplit[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"        String markStatus \u003d messageSplit[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"        String task \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"        String[] taskSplit \u003d task.split(\" \", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"swx0"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"swx0"},"content":"        String updatedTask \u003d String.format(\"%s %s\", markStatus, taskSplit[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"swx0"},"content":"        this.list.set(taskIndex, updatedTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swx0"},"content":"        updateStorage();","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"swx0"},"content":"     * Removes task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"swx0"},"content":"     * @param message Contents of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"swx0"},"content":"    public void deleteTask(String message) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"swx0"},"content":"        assert messageSplit.length \u003e\u003d 2;","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"swx0"},"content":"        int taskNum \u003d Integer.parseInt(messageSplit[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"swx0"},"content":"        // remove task from arraylist","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"swx0"},"content":"        list.remove(taskNum - 1);","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"swx0"},"content":"        updateStorage();","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"swx0"},"content":"    private void updateStorage() {","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"swx0"},"content":"        Path file \u003d Paths.get(\"data/temp.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"swx0"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"swx0"},"content":"            Files.write(file, this.list, Charset.defaultCharset());","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"swx0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"swx0"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"swx0"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"swx0"},"content":"            Files.move(Paths.get(\"data/temp.txt\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"swx0"},"content":"                    Paths.get(\"data/tasklist.txt\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"swx0"},"content":"                    StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"swx0"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"swx0"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"swx0"},"content":"     * Returns array list of saved tasks from disk.","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"swx0"},"content":"     * @return ArrayList object consisting of the string representation for saved tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"swx0"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"swx0"},"content":"        File taskFile \u003d new File(\"data/tasklist.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"swx0"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"swx0"},"content":"            new File(\"data\").mkdirs();","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"swx0"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"swx0"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"swx0"},"content":"            } catch (IOException err) {","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"swx0"},"content":"                System.out.println(err);","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"swx0"},"content":"            return this.list;","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"swx0"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"swx0"},"content":"            Scanner s \u003d new Scanner(taskFile);","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"swx0"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"swx0"},"content":"                this.list.add(s.nextLine());","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"swx0"},"content":"            s.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"swx0"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"swx0"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"swx0"},"content":"        return this.list;","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swx0":129}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":" * Represents a task with the category of deadline.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"    LocalDateTime dueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    Deadline(String content, LocalDateTime dueDate) {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"        super(content);","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"        String printDateTime \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"HHmm MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), printDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"        return dueDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":" * Represents a task with the category of event.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    LocalDateTime fromDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"    LocalDateTime toDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    Event(String content, String fromToDate) throws InvalidEventException {","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"        super(content);","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"        String[] fromToDateSplit \u003d fromToDate.split(\" /to \");","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"        if (fromToDateSplit.length !\u003d 2) {","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"            throw new InvalidEventException(\"The from or to date of an event task cannot be empty\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"        this.fromDate \u003d LocalDateTime.parse(fromToDateSplit[0], formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"        this.toDate \u003d LocalDateTime.parse(fromToDateSplit[1], formatter);","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"        String printFromDateTime \u003d this.fromDate.format(DateTimeFormatter.ofPattern(\"HHmm MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"        String printToDateTime \u003d this.toDate.format(DateTimeFormatter.ofPattern(\"HHmm MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), printFromDateTime, printToDateTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"        return fromDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":" * Represents a parent class for the different categories of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"    private String content;","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    boolean done \u003d false;","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"    Task(String content) {","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"        String mark \u003d this.getDoneStatus() ? \"X\" : \" \";","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"        return String.format(\"[%s] %s\", mark, this.content);","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2023-01-15"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"        return this.done;","lastModifiedDate":"2023-01-15"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"    public void setDoneStatus(boolean status) {","lastModifiedDate":"2023-01-15"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"        this.done \u003d status;","lastModifiedDate":"2023-01-15"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"    public String getContent() {","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"        return this.content;","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"    public abstract LocalDateTime getStartDate();","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":35}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidTodoException;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":" * Represents an arraylist consisting of Task objects.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":" * A TaskList object has associated methods to add, delete,","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":" * modify tasks in the arraylist.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"public class TaskList {","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    public TaskList(ArrayList\u003cString\u003e stringList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"        for (String task : stringList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"                String[] taskSplit \u003d task.split(\" \", 2);","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swx0"},"content":"                this.addTask(taskSplit[1]);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swx0"},"content":"                int taskNum \u003d this.getTaskCount();","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swx0"},"content":"                this.markTask(taskSplit[0], taskNum);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swx0"},"content":"            } catch (InvalidTodoException | InvalidDeadlineException | InvalidEventException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swx0"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":32,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":33,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":35,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":36,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":37,"author":{"gitId":"swx0"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2023-01-15"},{"lineNumber":38,"author":{"gitId":"swx0"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"swx0"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"swx0"},"content":"            listString +\u003d String.format(\"%d.%s\\n\", i + 1, task.toString());","lastModifiedDate":"2023-01-15"},{"lineNumber":41,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":42,"author":{"gitId":"swx0"},"content":"        return listString;","lastModifiedDate":"2023-01-15"},{"lineNumber":43,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":44,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"swx0"},"content":"    public String toSortedString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"swx0"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"swx0"},"content":"        ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"swx0"},"content":"        sortedList.sort(Comparator.comparing(Task::getStartDate));","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"swx0"},"content":"        for (int i \u003d 0; i \u003c sortedList.size(); i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"swx0"},"content":"            Task task \u003d sortedList.get(i);","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"swx0"},"content":"            listString +\u003d String.format(\"%d.%s\\n\", i + 1, task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"swx0"},"content":"        return listString;","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"swx0"},"content":"     * Returns the task added to task list, represented as a Task object.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"swx0"},"content":"     * @param content Content of task.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"swx0"},"content":"     * @return Task object associated with the content.","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"swx0"},"content":"     * @throws InvalidTodoException     If user input for todo task is invalid.","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"swx0"},"content":"     * @throws InvalidDeadlineException If user input for deadline task is invalid.","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"swx0"},"content":"     * @throws InvalidEventException    If user input for event task is invalid.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"swx0"},"content":"    public Task addTask(String content) throws InvalidTodoException, InvalidDeadlineException, InvalidEventException {","lastModifiedDate":"2023-01-15"},{"lineNumber":67,"author":{"gitId":"swx0"},"content":"        String[] contentSplit \u003d content.split(\" \", 2);","lastModifiedDate":"2023-01-15"},{"lineNumber":68,"author":{"gitId":"swx0"},"content":"        String taskType \u003d contentSplit[0];","lastModifiedDate":"2023-01-15"},{"lineNumber":69,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":70,"author":{"gitId":"swx0"},"content":"        Task taskToAdd;","lastModifiedDate":"2023-01-15"},{"lineNumber":71,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":72,"author":{"gitId":"swx0"},"content":"        if (taskType.equals(\"todo\")) {","lastModifiedDate":"2023-01-15"},{"lineNumber":73,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":74,"author":{"gitId":"swx0"},"content":"            if (contentSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-15"},{"lineNumber":75,"author":{"gitId":"swx0"},"content":"                throw new InvalidTodoException();","lastModifiedDate":"2023-01-15"},{"lineNumber":76,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":77,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":78,"author":{"gitId":"swx0"},"content":"            content \u003d contentSplit[1];","lastModifiedDate":"2023-01-15"},{"lineNumber":79,"author":{"gitId":"swx0"},"content":"            taskToAdd \u003d new Todo(content);","lastModifiedDate":"2023-01-15"},{"lineNumber":80,"author":{"gitId":"swx0"},"content":"        } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2023-01-15"},{"lineNumber":81,"author":{"gitId":"swx0"},"content":"            if (contentSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-15"},{"lineNumber":82,"author":{"gitId":"swx0"},"content":"                throw new InvalidDeadlineException(\"The description of a deadline task cannot be empty\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":83,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":84,"author":{"gitId":"swx0"},"content":"            content \u003d contentSplit[1];","lastModifiedDate":"2023-01-15"},{"lineNumber":85,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":86,"author":{"gitId":"swx0"},"content":"            String[] dateSplit \u003d content.split(\" /by \");","lastModifiedDate":"2023-01-15"},{"lineNumber":87,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":88,"author":{"gitId":"swx0"},"content":"            if (dateSplit.length !\u003d 2) {","lastModifiedDate":"2023-01-15"},{"lineNumber":89,"author":{"gitId":"swx0"},"content":"                throw new InvalidDeadlineException(\"The description or date of a deadline task cannot be empty\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":90,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":91,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":92,"author":{"gitId":"swx0"},"content":"            content \u003d dateSplit[0];","lastModifiedDate":"2023-01-15"},{"lineNumber":93,"author":{"gitId":"swx0"},"content":"            String dueDate \u003d dateSplit[1];","lastModifiedDate":"2023-01-15"},{"lineNumber":94,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"swx0"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"swx0"},"content":"            taskToAdd \u003d new Deadline(content, LocalDateTime.parse(dueDate, formatter));","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"swx0"},"content":"        } else {","lastModifiedDate":"2023-01-15"},{"lineNumber":98,"author":{"gitId":"swx0"},"content":"            if (contentSplit.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-15"},{"lineNumber":99,"author":{"gitId":"swx0"},"content":"                throw new InvalidEventException(\"The description of an event task cannot be empty\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":100,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":101,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":102,"author":{"gitId":"swx0"},"content":"            content \u003d contentSplit[1];","lastModifiedDate":"2023-01-15"},{"lineNumber":103,"author":{"gitId":"swx0"},"content":"            String[] dateSplit \u003d content.split(\" /from \");","lastModifiedDate":"2023-01-15"},{"lineNumber":104,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":105,"author":{"gitId":"swx0"},"content":"            if (dateSplit.length !\u003d 2) {","lastModifiedDate":"2023-01-15"},{"lineNumber":106,"author":{"gitId":"swx0"},"content":"                throw new InvalidEventException(\"The description or date of an event task cannot be empty\\n\");","lastModifiedDate":"2023-01-15"},{"lineNumber":107,"author":{"gitId":"swx0"},"content":"            }","lastModifiedDate":"2023-01-15"},{"lineNumber":108,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":109,"author":{"gitId":"swx0"},"content":"            content \u003d dateSplit[0];","lastModifiedDate":"2023-01-15"},{"lineNumber":110,"author":{"gitId":"swx0"},"content":"            String fromToDate \u003d dateSplit[1];","lastModifiedDate":"2023-01-15"},{"lineNumber":111,"author":{"gitId":"swx0"},"content":"            taskToAdd \u003d new Event(content, fromToDate);","lastModifiedDate":"2023-01-15"},{"lineNumber":112,"author":{"gitId":"swx0"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":113,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"swx0"},"content":"        this.list.add(taskToAdd);","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":116,"author":{"gitId":"swx0"},"content":"        return taskToAdd;","lastModifiedDate":"2023-01-15"},{"lineNumber":117,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":118,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":119,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"swx0"},"content":"     * Removes task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"swx0"},"content":"     * @param message Contents of message.","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"swx0"},"content":"    public Task deleteTask(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"swx0"},"content":"        String[] messageSplit \u003d message.split(\" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"swx0"},"content":"        int taskNum \u003d Integer.parseInt(messageSplit[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":127,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":128,"author":{"gitId":"swx0"},"content":"        // task to be deleted","lastModifiedDate":"2023-01-16"},{"lineNumber":129,"author":{"gitId":"swx0"},"content":"        Task deletedTask \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-16"},{"lineNumber":130,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":131,"author":{"gitId":"swx0"},"content":"        // remove task from arraylist","lastModifiedDate":"2023-01-16"},{"lineNumber":132,"author":{"gitId":"swx0"},"content":"        list.remove(taskNum - 1);","lastModifiedDate":"2023-01-16"},{"lineNumber":133,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":134,"author":{"gitId":"swx0"},"content":"        return deletedTask;","lastModifiedDate":"2023-01-16"},{"lineNumber":135,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":136,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":137,"author":{"gitId":"swx0"},"content":"    public Task getTask(int taskNum) {","lastModifiedDate":"2023-01-15"},{"lineNumber":138,"author":{"gitId":"swx0"},"content":"        return list.get(taskNum - 1);","lastModifiedDate":"2023-01-16"},{"lineNumber":139,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":140,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":141,"author":{"gitId":"swx0"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"swx0"},"content":"     * Updates status of task from the task list.","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"swx0"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"swx0"},"content":"     * @param action  Marking or unmarking task.","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"swx0"},"content":"     * @param taskNum Number assigned to task.","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"swx0"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"swx0"},"content":"    public void markTask(String action, int taskNum) {","lastModifiedDate":"2023-01-15"},{"lineNumber":148,"author":{"gitId":"swx0"},"content":"        Task task \u003d this.getTask(taskNum);","lastModifiedDate":"2023-01-15"},{"lineNumber":149,"author":{"gitId":"swx0"},"content":"        task.setDoneStatus(action.equals(\"mark\") ? true : false);","lastModifiedDate":"2023-01-15"},{"lineNumber":150,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":151,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":152,"author":{"gitId":"swx0"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-01-15"},{"lineNumber":153,"author":{"gitId":"swx0"},"content":"        return list.size();","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":155,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":156,"author":{"gitId":"swx0"},"content":"    public ArrayList\u003cTask\u003e filter(String messageToFilterBy) {","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"swx0"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e(this.list);","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"swx0"},"content":"        filteredList.removeIf(task -\u003e !task.getContent().contains(messageToFilterBy));","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"swx0"},"content":"        return filteredList;","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":162}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":" * Represents a task with the category of todo.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    public Todo(String content) {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"        super(content);","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-15"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-01-15"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    public String toString() {","lastModifiedDate":"2023-01-15"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-15"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-15"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"swx0":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"swx0":19}},{"path":"src/test/java/duke/message/MessageGeneratorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.message;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"public class MessageGeneratorTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"    public void generateListMessage_emptyListInput_emptyListString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"        MessageGenerator messageGenerator \u003d new MessageGenerator(new TaskList(new ArrayList\u003c\u003e()), new Storage());","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\", messageGenerator.generateListMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"swx0":18}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"package duke.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"import duke.message.MessageStatus;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"    public void process_byeInput_endStatus() throws InvalidInputException {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"        assertEquals(MessageStatus.END, new Parser().process(\"bye\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swx0"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swx0"},"content":"    public void process_listInput_listStatus() throws InvalidInputException {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swx0"},"content":"        assertEquals(MessageStatus.LIST, new Parser().process(\"list\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swx0"},"content":"    @Test","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"    public void process_addInput_addStatus() throws InvalidInputException {","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swx0"},"content":"        assertEquals(MessageStatus.ADD, new Parser().process(\"todo content\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swx0"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swx0"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"swx0":24}},{"path":"text-ui-test/data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"unmark todo borrow book","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"unmark deadline return book /by 02/12/2019 1800","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"unmark event project meeting /from 02/12/2019 1400 /to 02/12/2019 1600","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"swx0":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swx0"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"swx0"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"swx0"},"content":"deadline return book /by 02/12/2019 1800","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swx0"},"content":"event project meeting /from 02/12/2019 1400 /to 02/12/2019 1600","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swx0"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"swx0"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"swx0"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"swx0"},"content":"unmark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"todo","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"blah","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"swx0"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"swx0":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"swx0"},"content":"REM delete data from previous run","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swx0"},"content":"if exist data del /q data","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swx0"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"swx0"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"swx0"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"swx0":5,"-":19}}]
