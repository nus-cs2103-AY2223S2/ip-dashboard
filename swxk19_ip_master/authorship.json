[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"-":40,"swxk19":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"1. [T][ ] 1","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"swxk19":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.gui.Profile;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.gui.StageHandler;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * Main class where duke is initialized and runs.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    public Duke() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"            Storage.loadFromFile(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"            // Ui.showLoadingError();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        StageHandler stageHandler \u003d new StageHandler(stage, tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        stageHandler.displayMessage(Profile.DUKE, \"Hello I\u0027m Duke! \\nWhat can I do for you?\");","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":33}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":" * Functions related to saving/loading data to/from files.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    private static String strDir \u003d \"./data\";","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    private static String fileName \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * Saves a task list to a file.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     * @param tasks Task list to save.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"     * @throws IOException Specified file not found.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    public static void saveToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        // create directory","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        Path path \u003d Paths.get(strDir);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        Files.createDirectories(path);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        // output string to file","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        PrintWriter out \u003d new PrintWriter(fileName);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"        out.println(tasks.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        out.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"     * Loads a task list from a file.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"     * @param tasks Task list to load into.","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"     * @throws IOException Specified file not found.","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"    public static void loadFromFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"            Path fileNamePath \u003d Path.of(fileName);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"            String strData \u003d Files.readString(fileNamePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"            String[] strTasks \u003d strData.split(\"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"            for (String strTask : strTasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"                if (strTask.length() \u003d\u003d 1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"                    return; // for handling empty file, it still contains \"\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"                Task loadedTask \u003d Parser.parseLoadedTask(strTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"                tasks.add(loadedTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"        } catch (NoSuchFileException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"            // do nothing if no file exists (nothing to execute)","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"swxk19":63}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":" * Functions related to interacting with the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"public class Ui {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    /** For checking whether to continue running Duke, i.e. exit command has not been called. */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    private static boolean isRunning \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    /** Command line input from user stored here. */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    private static String line;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    public static boolean getIsRunning() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        return isRunning;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public static String getLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        return line;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"     * Craft string output for showing number of tasks in a list.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"     * @param numTask Number of tasks in the list","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"     * @return Crafted message","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    public static String numTaskToString(int numTask) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Now you have %d task%s in the list\", numTask, numTask \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"    // Greets user with welcome message, and gets the first command.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"        System.out.println(\"Hello I\u0027m Duke! \\nWhat can I do for you?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"            if (isRunning) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"                line \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        } catch (java.util.NoSuchElementException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"            isRunning \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"    // Scan for next command from user.","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"    public static String getNextCommand() {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"            if (isRunning) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"                line \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        } catch (java.util.NoSuchElementException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"            isRunning \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        return line;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"     * Outputs to console a message.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"     * @param msg Message to display","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"    public static void displayMsg(String msg) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"        System.out.println(indentString(wrapMessageBorder(msg), 1));","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"     * Wraps a message with top \u0026 bottom line borders.","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"     * @param msg Message to enclose in borders","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"     * @return Bordered message","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"swxk19"},"content":"    public static String wrapMessageBorder(String msg) {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"swxk19"},"content":"        String border \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"swxk19"},"content":"        return border + \"\\n\" + msg + \"\\n\" + border;","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"swxk19"},"content":"     * Indents a message by a specified indentation level.","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"swxk19"},"content":"     * @param msg Message to indent","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"swxk19"},"content":"     * @param indendationLevel Number of indents","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"swxk19"},"content":"     * @return Indented message.","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"swxk19"},"content":"    public static String indentString(String msg, int indendationLevel) {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"swxk19"},"content":"        String indent \u003d \"  \".repeat(indendationLevel);","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"swxk19"},"content":"        String[] lines \u003d msg.split(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"swxk19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"swxk19"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"swxk19"},"content":"            result.append(indent + lines[i] + (i + 1 \u003c lines.length ? \"\\n\" : \"\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"swxk19"},"content":"        return result.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"swxk19"},"content":"     * Greets goodbye and shuts down Duke.","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"swxk19"},"content":"    public static void shutDown() {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"swxk19"},"content":"        isRunning \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":98}},{"path":"src/main/java/duke/commands/ByeCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"public class ByeCmd extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public ByeCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        Ui.shutDown();","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"            Storage.saveToFile(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"            // Ui.showSavingError()","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"swxk19":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":" * Commands that the user wants to execute are encapsulated in this class.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    protected String lineInput;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to execute the command on","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line that the user has enters","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"     * @throws CommandExecutionError Unable to execute command","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public Command(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        this.lineInput \u003d lineInput;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    /** Performs the action according to the type of command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    public abstract String execute() throws CommandExecutionError;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":27}},{"path":"src/main/java/duke/commands/CommandInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" * Collection of acceptable commands that the user is allowed to enter.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"public enum CommandInput {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    VIEWSCHED(\"view\"),","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    UNRECOGNIZED_CMD(\"\");","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    private String commandString;","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    private CommandInput(String commandLine) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        this.commandString \u003d commandLine;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"     * Gets the type of command that the user entered.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"     * @param commandLine Command line input from user","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"     * @return CommandInput type of corresponding command","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"    private static CommandInput getCommandInput(String commandLine) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"        String commandInput \u003d Parser.parseCommandInput(commandLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"        Optional\u003cCommandInput\u003e command \u003d Arrays.stream(CommandInput.values()).filter(","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"                cmd -\u003e cmd.commandString.equals(commandInput)).findFirst();","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        return command.isEmpty() ? UNRECOGNIZED_CMD : command.get();","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    public static Command getCommandFromInput(String commandLine, TaskList tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"        CommandInput commandInput \u003d getCommandInput(commandLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"        switch (commandInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"        case LIST:","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"            return new ListCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"        case MARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"            return new MarkCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"            return new UnmarkCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        case DELETE:","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"            return new DeleteCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"        case EVENT:","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"            return new EventCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"            return new DeadlineCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"        case TODO:","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"            return new ToDoCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"        case BYE:","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"            return new ByeCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"        case FIND:","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"            return new FindCmd(tasks, commandLine);","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"        case VIEWSCHED:","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"            return new ViewSchedCmd(tasks, commandLine);","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"            return new UnrecognizedCmd(tasks, commandLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":70}},{"path":"src/main/java/duke/commands/DeadlineCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027deadline\u0027 command keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Creates a new Deadline task and adds it to the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * Command input must be accompanied by a \u0027/by\u0027 keyword to indicate the due date of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" * Command format: \"deadline \u0026lt;task_name\u0026gt; /by \u0026lt;due_date\u0026gt;\"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"public class DeadlineCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    private Task deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to add the Deadline task to","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    public DeadlineCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    /** Adds the Deadline task to the task list. */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        this.deadline \u003d Deadline.create(this.lineInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        taskList.add(this.deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\n%s\",","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"                Ui.indentString(this.deadline.toString(), 1),","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"                Ui.numTaskToString(taskList.countTasks()));","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":37}},{"path":"src/main/java/duke/commands/DeleteCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027delete\u0027 keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Deletes a task from the task list according to a specified index.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * Command format: \"delete \u0026lt;list_index\u0026gt;\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"public class DeleteCmd extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    private Task task;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to remove the task from","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public DeleteCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    /** Deletes the specified task from the task list. */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        int index \u003d Parser.parseMarkUnmarkDeleteIndex(lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        this.task \u003d this.taskList.removeTask(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n%s\",","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"                Ui.indentString(this.task.toString(), 1),","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"                Ui.numTaskToString(taskList.countTasks()));","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"swxk19":36}},{"path":"src/main/java/duke/commands/EventCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027event\u0027 command keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * Creates a new Event task and adds it to the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * Command input must be accompanied by a \u0027/from\u0027 \u0026 \u0027/to\u0027 keyword to indicate the start/end dates of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":" * Command format: \"event \u0026lt;task_name\u0026gt; /from \u0026lt;start_date\u0026gt; /by \u0026lt;end_date\u0026gt;\"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"public class EventCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    private Task event;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * Constructor method","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to add the Event task to","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    public EventCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    // Adds the Event task to the list","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        this.event \u003d Event.create(this.lineInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        taskList.add(this.event);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\n%s\",","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"                Ui.indentString(this.event.toString(), 1),","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"                Ui.numTaskToString(taskList.countTasks()));","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":38}},{"path":"src/main/java/duke/commands/FindCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"public class FindCmd extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    private TaskList findResult;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to search for keyword","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public FindCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    /** Searches for specified keyword in the task list */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        String[] findKeywords \u003d Parser.parseFindKeyword(this.lineInput);","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        this.findResult \u003d this.taskList.find(findKeywords);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Here are matching tasks in your list:\\n%s\", findResult.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"swxk19":26}},{"path":"src/main/java/duke/commands/ListCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027list\u0027 command keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":" * Output to UI all tasks currently in list","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":" * Command format: \"list\"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"public class ListCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to output to UI","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    public ListCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    // Executes UI reply","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public String execute() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Here are the tasks in your list:\\n%s\", taskList.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":26}},{"path":"src/main/java/duke/commands/MarkCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.ListIndexMissing;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027mark\u0027 command keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Marks a task at a specified index as completed.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * Command format: \"mark \u0026lt;list_index\u0026gt;\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"public class MarkCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list of the task to mark","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    public MarkCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    // Marks the specified task as completed.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    public String execute() throws ListIndexMissing {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        int index \u003d Parser.parseMarkUnmarkDeleteIndex(lineInput);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        Task taskToMark \u003d taskList.get(index).markDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        assert taskToMark.getIsDone() \u003d\u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        return String.format(\"%s\\n%s\", output,","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"                Ui.indentString(taskToMark.toString(), 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":35}},{"path":"src/main/java/duke/commands/ToDoCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027todo\u0027 command keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Creates a new ToDo task and adds it to the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * Command format: \"todo \u0026lt;task_name\u0026gt;\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"public class ToDoCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    private Task toDo;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to add the ToDo task to","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public ToDoCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    // Adds the ToDo task to the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        this.toDo \u003d ToDo.create(this.lineInput);","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        taskList.add(this.toDo);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n%s\\n%s\",","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"                Ui.indentString(this.toDo.toString(), 1),","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"                Ui.numTaskToString(taskList.countTasks()));","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":36}},{"path":"src/main/java/duke/commands/UnmarkCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.ListIndexMissing;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027unmark\u0027 command keyword.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Change status of a task to incomplete, at a specified index","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * Command format: \"unmark \u0026lt;list_index\u0026gt;\"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"public class UnmarkCmd extends Command {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list of the task to unmark","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    public UnmarkCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    // Changes the status of the specified task to incomplete.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    public String execute() throws ListIndexMissing {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        int index \u003d Parser.parseMarkUnmarkDeleteIndex(lineInput);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        Task taskToUnmark \u003d taskList.get(index).markDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        assert taskToUnmark.getIsDone() \u003d\u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        String output \u003d \"Ok, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        return String.format(\"%s\\n%s\", output,","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"                Ui.indentString(taskToUnmark.toString(), 1));","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":36}},{"path":"src/main/java/duke/commands/UnrecognizedCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"public class UnrecognizedCmd extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    public UnrecognizedCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"swxk19":14}},{"path":"src/main/java/duke/commands/ViewSchedCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.commands;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":" * Command class for \u0027todo\u0027 command keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * Creates a new ToDo task and adds it to the task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" * Command format: \"todo \u0026lt;task_name\u0026gt;\"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"public class ViewSchedCmd extends Command {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * @param taskList Task list to add the ToDo task to","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"    public ViewSchedCmd(TaskList taskList, String lineInput) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        super(taskList, lineInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    public String execute() throws CommandExecutionError {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"            LocalDate date \u003d Parser.parseViewScheduleDate(lineInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"            TaskList schedResult \u003d this.taskList.viewSched(date);","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"            return String.format(\"Here are the tasks that are still ongoing before %s\\n%s:\", date.toString(), schedResult.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"            throw new CommandExecutionError(e.toString());","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        } ","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"    };","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"swxk19":36}},{"path":"src/main/java/duke/exceptions/CommandExecutionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** Parent of any exceptions related to executing a command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class CommandExecutionError extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public CommandExecutionError(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"     * Craft string representation of the exception.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"     * @return String representation of exception, without its class name","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"swxk19":21}},{"path":"src/main/java/duke/exceptions/DeadlineByNotSpecified.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** An exception for the case that a due date was not specified in a \u0027deadline\u0027 command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class DeadlineByNotSpecified extends MissingCommandArguments {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public DeadlineByNotSpecified() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        super(\"Missing \u0027/by\u0027 keyword.\\nCommand Format: \u0027deadline \u003ctask_name\u003e /by \u003cdue_date\u003e\u0027\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":12}},{"path":"src/main/java/duke/exceptions/EventFromToNotSpecified.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** An exception for the case that a from/to date was not specified in an \u0027event\u0027 command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class EventFromToNotSpecified extends MissingCommandArguments {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public EventFromToNotSpecified() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        super(\"Missing \u0027/from\u0027 or \u0027/to\u0027 keyword.\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"                + \"Command format: \u0027event \u003ctask_name\u003e /from \u003cstart_date\u003e /to \u003cend_date\u003e\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":13}},{"path":"src/main/java/duke/exceptions/FindKeywordMissing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** An exception for the case that keyword was not specified in a \u0027find\u0027 command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class FindKeywordMissing extends MissingCommandArguments {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public FindKeywordMissing() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        super(\"Missing search keyword.\\nCommand format: \u0027find \u003csearch_keyword\u003e\u0027\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"swxk19":12}},{"path":"src/main/java/duke/exceptions/ListIndexMissing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** An exception for the case that keyword was not specified in a \u0027find\u0027 command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class ListIndexMissing extends MissingCommandArguments {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public ListIndexMissing() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        super(\"Missing list index to execute on.\\nCommand format: \u0027\u003ccommand\u003e \u003clist_index\u003e\u0027\");","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"swxk19":12}},{"path":"src/main/java/duke/exceptions/MissingCommandArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** Parent of any exceptions related to missing information from user for a command. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class MissingCommandArguments extends CommandExecutionError {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public MissingCommandArguments(String errorMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"swxk19":12}},{"path":"src/main/java/duke/exceptions/TaskNameNotSpecified.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"/** An exception for the case that a task name was not specified when creating a task. */","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"public class TaskNameNotSpecified extends MissingCommandArguments {","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"     * @param errorMessage Error message to display to user","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public TaskNameNotSpecified() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        super(\"Task name not specified.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":13}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    private Label text;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    public DialogBox(Label l, ImageView iv, boolean toFlip) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"        if (toFlip) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"            this.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    // Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"    void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"swxk19":38}},{"path":"src/main/java/duke/gui/GuiSpecs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"public class GuiSpecs {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    public static void initSpecs(ScrollPane scrollPane, AnchorPane mainLayout,","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"            Stage stage, Scene scene, Button sendButton, TextField userInput, VBox dialogContainer) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        initStage(stage, scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        initMainLayout(mainLayout);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"        initScrollPane(scrollPane, dialogContainer);","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        initDialogContainer(dialogContainer, scrollPane);","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        initUserInput(userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"        initSendButton(sendButton);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    private static void initStage(Stage stage, Scene scene) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        // Formatting the window to look as expected","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"    private static void initScrollPane(ScrollPane scrollPane, VBox dialogContainer) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"    private static void initDialogContainer(VBox dialogContainer, ScrollPane scrollPane) {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"    private static void initMainLayout(AnchorPane mainLayout) {","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"    private static void initUserInput(TextField userInput) {","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"    private static void initSendButton(Button sendButton) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"swxk19":69}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"swxk19":10}},{"path":"src/main/java/duke/gui/Profile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"public enum Profile {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"    USER,","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"    DUKE;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"swxk19":6}},{"path":"src/main/java/duke/gui/StageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.gui;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import duke.commands.CommandInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.CommandExecutionError;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"public class StageHandler {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    protected TaskList tasks;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tiger.jpg\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/owl.jpg\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    private ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    private VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    private TextField userInput \u003d new TextField();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    private Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    private AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    private Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    public StageHandler(Stage stage, TaskList tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        GuiSpecs.initSpecs(scrollPane, mainLayout, stage, scene, sendButton, userInput, dialogContainer);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        });","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"    public void displayMessage(Profile profile, String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"        Label messageLabel \u003d new Label(message);","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        DialogBox dialogBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"        switch(profile) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"        case USER:","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"            dialogBox \u003d new DialogBox(messageLabel, new ImageView(userImage), false);","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"            break;","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        case DUKE:","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"            dialogBox \u003d new DialogBox(messageLabel, new ImageView(dukeImage), true);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"            break;","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        default:","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"            dialogBox \u003d new DialogBox(messageLabel, new ImageView(dukeImage), true);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"        String commandInput \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"        displayMessage(Profile.USER, commandInput);","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"        Command command \u003d CommandInput.getCommandFromInput(commandInput, tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"            String response \u003d command.execute();","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"            displayMessage(Profile.DUKE, response);","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"swxk19"},"content":"        } catch (CommandExecutionError e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"swxk19"},"content":"            displayMessage(Profile.DUKE, \"Couldn\u0027t execute command :/ \\n\" + e.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"swxk19":74}},{"path":"src/main/java/duke/parsing/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.parsing;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.DeadlineByNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.EventFromToNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.FindKeywordMissing;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.ListIndexMissing;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.TaskNameNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":" * Helper class to parse user inputs into usable information.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * Used by \u0027CommandInput\u0027 class to get CommandInput type from command input.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"     * @return CommandInput type","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    public static String parseCommandInput(String lineInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        return lineInput.split(\" \")[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"     * Used by \u0027Deadline\u0027 \u0026 \u0027Event\u0027 class to get string dates as LocalDate objects.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"     * @param timeInput Command line input that user entered","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"     * @return CommandInput type","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"    public static Optional\u003cLocalDate\u003e parseDate(String timeInput) {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"            timeInput \u003d timeInput.replaceAll(\"/\", \"-\");","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"            return Optional.of(LocalDate.parse(timeInput));","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"            return Optional.empty();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"     * Used by \u0027MarkCmd\u0027, \u0027UnmarkCmd\u0027 \u0026 \u0027DeleteCmd\u0027 class to get the index of the task to execute on.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"     * @param lineInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"     * @return Integer index of the target task","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"    public static int parseMarkUnmarkDeleteIndex(String lineInput) throws ListIndexMissing {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"            return Integer.parseInt(lineInput.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"            throw new ListIndexMissing();","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"     * Used by \u0027ToDo\u0027 class to initialise a ToDo task.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"     * Parses command line input into relevant information needed to initilize a ToDo task.","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"     * @param commandInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"     * @return Task name, wrapped in an array.","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"    public static String[] parseToDoCmd(String commandInput) {","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d {commandInput.substring(5)};","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"        return parseInfo;","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"swxk19"},"content":"     * Used by \u0027Deadline\u0027 class to initialise a Deadline task.","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"swxk19"},"content":"     * Parses command line input into relevant information needed to initilize a Deadline task.","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"swxk19"},"content":"     * @param commandInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"swxk19"},"content":"     * @return Task name \u0026 due date, wrapped in an array.","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"swxk19"},"content":"    public static String[] parseDeadlineCmd(String commandInput) throws TaskNameNotSpecified, DeadlineByNotSpecified {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"swxk19"},"content":"        String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"swxk19"},"content":"        String dueDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"swxk19"},"content":"        int indexOfBy \u003d commandInput.indexOf(\"/by\");","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"swxk19"},"content":"        if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"swxk19"},"content":"            throw new DeadlineByNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"swxk19"},"content":"        taskName \u003d commandInput.substring(9, indexOfBy - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"swxk19"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"swxk19"},"content":"            throw new TaskNameNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"swxk19"},"content":"            dueDate \u003d commandInput.substring(indexOfBy + 4);","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"swxk19"},"content":"            if (dueDate.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"swxk19"},"content":"                throw new DeadlineByNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"swxk19"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"swxk19"},"content":"            throw new DeadlineByNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d {taskName, dueDate};","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"swxk19"},"content":"        return parseInfo;","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"swxk19"},"content":"     * Used by \u0027Event\u0027 class to initialise an Event task.","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"swxk19"},"content":"     * Parses command line input into relevant information needed to initilize a Event task.","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"swxk19"},"content":"     * @param commandInput Command line input that the user entered","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"swxk19"},"content":"     * @return Task name, start date \u0026 end date, wrapped in an array.","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"swxk19"},"content":"    public static String[] parseEventCmd(String commandInput) throws TaskNameNotSpecified, EventFromToNotSpecified {","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"swxk19"},"content":"        String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"swxk19"},"content":"        String fromDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"swxk19"},"content":"        String toDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"swxk19"},"content":"        commandInput \u003d commandInput.substring(6);","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"swxk19"},"content":"        int indexOfFrom \u003d commandInput.indexOf(\"/from\");","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"swxk19"},"content":"        int indexOfTo \u003d commandInput.indexOf(\"/to\");","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"swxk19"},"content":"        if (indexOfFrom \u003d\u003d -1 || indexOfTo \u003d\u003d -1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"swxk19"},"content":"            throw new EventFromToNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"swxk19"},"content":"        taskName \u003d commandInput.substring(0, indexOfFrom - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"swxk19"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"swxk19"},"content":"            throw new TaskNameNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"swxk19"},"content":"        fromDate \u003d commandInput.substring(indexOfFrom + 6, indexOfTo - 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"swxk19"},"content":"        if (fromDate.equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"swxk19"},"content":"            throw new EventFromToNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"swxk19"},"content":"            toDate \u003d commandInput.substring(indexOfTo + 4, commandInput.length());","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"swxk19"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"swxk19"},"content":"            throw new EventFromToNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":136,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d {taskName, fromDate, toDate};","lastModifiedDate":"2023-01-24"},{"lineNumber":137,"author":{"gitId":"swxk19"},"content":"        return parseInfo;","lastModifiedDate":"2023-01-24"},{"lineNumber":138,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":139,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":140,"author":{"gitId":"swxk19"},"content":"    public static String[] parseFindKeyword(String commandInput) throws FindKeywordMissing {","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"swxk19"},"content":"            return commandInput.substring(6).split(\" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"swxk19"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"swxk19"},"content":"            throw new FindKeywordMissing();","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"swxk19"},"content":"    public static LocalDate parseViewScheduleDate(String commandInput) throws DateTimeParseException {","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"swxk19"},"content":"        String timeInput \u003d commandInput.split(\" \")[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"swxk19"},"content":"        timeInput \u003d timeInput.replaceAll(\"/\", \"-\");","lastModifiedDate":"2023-02-10"},{"lineNumber":151,"author":{"gitId":"swxk19"},"content":"        return LocalDate.parse(timeInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":153,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":154,"author":{"gitId":"swxk19"},"content":"    public static Task parseLoadedTask(String strTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"swxk19"},"content":"        char taskType;","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"swxk19"},"content":"        String taskName;","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"swxk19"},"content":"        boolean isDone;","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"swxk19"},"content":"        String[] info1 \u003d strTask.split(\"\\\\[\");","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"swxk19"},"content":"        taskType \u003d info1[1].charAt(0);","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"swxk19"},"content":"        isDone \u003d info1[2].charAt(0) \u003d\u003d \u0027x\u0027;","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"swxk19"},"content":"        String[] info2 \u003d info1[2].split(\" \\\\(\");","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"swxk19"},"content":"        taskName \u003d info2[0].substring(3);","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"swxk19"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"swxk19"},"content":"        case(\u0027T\u0027):","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"swxk19"},"content":"            return new ToDo(taskName, isDone);","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"swxk19"},"content":"        case(\u0027D\u0027):","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"swxk19"},"content":"            String dueDate \u003d info2[1].substring(4, info2[1].indexOf(\")\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"swxk19"},"content":"            return new Deadline(taskName, dueDate, isDone);","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"swxk19"},"content":"        case(\u0027E\u0027):","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"swxk19"},"content":"            String[] info3 \u003d info2[1].split(\" to: \");","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"swxk19"},"content":"            String fromDate \u003d info3[0].substring(6);","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"swxk19"},"content":"            String toDate \u003d info3[1].substring(0, info3[1].indexOf(\")\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"swxk19"},"content":"            return new Event(taskName, fromDate, toDate, isDone);","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"swxk19"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"swxk19"},"content":"            return null;","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":181}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.DeadlineByNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.TaskNameNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" * Wrapper class for \u0027Deadline\u0027 tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    private String dueDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    private Optional\u003cLocalDate\u003e chornoDueDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * @param taskName Task name","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     * @param dueDate Due date of task","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * @param isDone Task completion status","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"    public Deadline(String taskName, String dueDate, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"        super(taskName, \"D\", isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        this.chornoDueDate \u003d Parser.parseDate(dueDate);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"     * Factory method.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"     * @param commandInput Command line input that the user entered.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"     * @return New Deadline task","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"     * @throws TaskNameNotSpecified Task name was not specified","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"     * @throws DeadlineByNotSpecified Task due date was not specified","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"    public static Deadline create(String commandInput) throws TaskNameNotSpecified, DeadlineByNotSpecified {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d Parser.parseDeadlineCmd(commandInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        return new Deadline(parseInfo[0], parseInfo[1], false);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"     * Represents fields of this task as a string","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"     * @return String representation of fields in this task","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"    public String stringFields() {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"        String dateString \u003d this.chornoDueDate.isEmpty() ? dueDate","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"                : chornoDueDate.get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        return String.format(\" (by: %s)\", dateString);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"        return this.chornoDueDate.get();","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":58}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.EventFromToNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.TaskNameNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":" * Wrapper class for \u0027Event\u0027 tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    private String fromDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"    private String toDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    private Optional\u003cLocalDate\u003e chronoFromDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    private Optional\u003cLocalDate\u003e chronoToDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"     * @param taskName Task name","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * @param fromDate Start date of task","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     * @param toDate End date of task","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"     * @param isDone Task completion status","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"    public Event(String taskName, String fromDate, String toDate, boolean isDone) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        super(taskName, \"E\", isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        this.chronoFromDate \u003d Parser.parseDate(fromDate);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"        this.chronoToDate \u003d Parser.parseDate(toDate);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"     * Factory method.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"     * @param commandInput Command line input that the user entered.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"     * @return New Event task","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"     * @throws TaskNameNotSpecified Task name was not specified","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"     * @throws EventFromToNotSpecified Task due date was not specified","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"    public static Event create(String commandInput) throws TaskNameNotSpecified, EventFromToNotSpecified {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        String[] parseInfo \u003d Parser.parseEventCmd(commandInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"        return new Event(parseInfo[0], parseInfo[1], parseInfo[2], false);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"     * Represents fields of this task as a string","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"     * @return String representation of fields in this task","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"    public String stringFields() {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"        String fromDateString \u003d this.chronoFromDate.isEmpty() ? this.fromDate : this.chronoFromDate.get()","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"        String toDateString \u003d this.chronoToDate.isEmpty() ? this.toDate : this.chronoToDate.get()","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"        return String.format(\" (from: %s to: %s)\", fromDateString, toDateString);","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"        return this.chronoToDate.get();","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":68}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":" * Encapsulation of user tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    protected String type;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    protected String taskName;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    protected Task(String taskName, String type, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    protected abstract String stringFields();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    public abstract LocalDate getEndDate();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * Marks this task as completed.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     * @return This task","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    public Task markDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"        return this;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"     * Marks this task as incomplete.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"     * @return This task","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"    public Task unmarkDone() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"        return this;","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"     * Represent this task as a string","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"     * @return Task as string","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        return String.format(\"[%s][%s] %s\", this.type, this.isDone ? \"x\" : \" \", this.taskName + this.stringFields());","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":54}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":" * Wrapper class for list to contain tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"public class TaskList {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"     * Represent list of tasks as a string.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"     * @return String representation of task list","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"        for (int index \u003d 0; index \u003c this.tasks.size(); index++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"            result.append((index \u003d\u003d 0 ? \"\" : \"\\n\") + (index + 1) + \". \" + this.tasks.get(index).toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        return result.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"     * Gets number of tasks in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"     * @return Number of tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"    public int countTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"     * Removes a task the list at a specified index.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"     * @param index Index of task to remove","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"     * @return Removed task","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        int sizeBeforeRemove \u003d this.countTasks();","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"        Task removedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        assert sizeBeforeRemove - this.countTasks() \u003d\u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"        return removedTask;","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"     * @param task Task to add","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"swxk19"},"content":"        int sizeBeforeAdd \u003d this.countTasks();","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"swxk19"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"swxk19"},"content":"        assert this.countTasks() - sizeBeforeAdd \u003d\u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"swxk19"},"content":"     * Gets the task from the list at a specified index.","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"swxk19"},"content":"     * @param index Index of task to get.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"swxk19"},"content":"     * @return Task to get","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"swxk19"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"swxk19"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"swxk19"},"content":"     * Searches for tasks that contains the search keyword(s)","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"swxk19"},"content":"     * @param keywords Search query","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"swxk19"},"content":"     * @return A task list containing tasks which contain the search keyword","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"swxk19"},"content":"    public TaskList find(String... keywords) {","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"swxk19"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"swxk19"},"content":"        tasks.stream().forEach(task -\u003e {","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"swxk19"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"swxk19"},"content":"                if (task.taskName.contains(keyword)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"swxk19"},"content":"                    result.add(task);","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"swxk19"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"swxk19"},"content":"        });","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"swxk19"},"content":"        return result;","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"swxk19"},"content":"    public TaskList viewSched(LocalDate date) {","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"swxk19"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"swxk19"},"content":"        this.tasks.stream().forEach(task -\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":86,"author":{"gitId":"swxk19"},"content":"            LocalDate endDate \u003d task.getEndDate();","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"swxk19"},"content":"            if (endDate !\u003d null \u0026\u0026 (date.equals(endDate) || date.isAfter(endDate))) {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"swxk19"},"content":"                result.add(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"swxk19"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"swxk19"},"content":"        });","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"swxk19"},"content":"        return result;","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":93}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import duke.exceptions.TaskNameNotSpecified;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"import duke.parsing.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":" * Wrapper class for \u0027To do\u0027 tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"     * Constructor method.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"     * @param taskName Task name","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"     * @param isDone Completion status of task","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    public ToDo(String taskName, boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"        super(taskName, \"T\", isDone);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"     * Factory method.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"     * @param commandInput Command line input that the user entered.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"     * @return New ToDo task","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"     * @throws TaskNameNotSpecified Task name was not specified","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"    public static ToDo create(String commandInput) throws TaskNameNotSpecified {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"            return new ToDo(Parser.parseToDoCmd(commandInput)[0], false);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"            throw new TaskNameNotSpecified();","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"     * Represents fields of this task as a string","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"     * @return String representation of fields in this task","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"    public String stringFields() {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"        return \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        return null;","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"swxk19":49}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public void toString_dueDateNotDateObject_useUserInputStringFromTo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        assertEquals(\"[D][ ] test deadline (by: non-date byDate)\",","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"                new Deadline(\"test deadline\", \"non-date byDate\", false).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public void toString_dueDatesIsDateObject_formattedFromToDates() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        assertEquals(\"[D][ ] test deadline (by: Nov 19 1999)\",","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"                new Deadline(\"test deadline\", \"1999/11/19\", false).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"swxk19":20}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public void toString_fromToDatesNotDateObjects_useUserInputStringFromTo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        assertEquals(\"[E][ ] test event (from: non-date fromDate to: non-date toDate)\",","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"                new Event(\"test event\", \"non-date fromDate\", \"non-date toDate\", false).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"    public void toString_fromToDatesAreDateObjects_formattedFromToDates() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"        assertEquals(\"[E][ ] test event (from: Aug 9 1965 to: Aug 10 1965)\",","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"                new Event(\"test event\", \"1965/08/09\", \"1965/08/10\", false).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"swxk19":20}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"class TaskListTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    private static TaskList testList;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"    public void initTestList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"        if (testList \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"            testList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"            testList.add(new ToDo(\"test todo\", false));","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"            testList.add(new Deadline(\"test deadline\", \"1999/11/19\", false));","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"swxk19"},"content":"            testList.add(new Event(\"test event\", \"2023/01/01\", \"2023/12/31\", true));","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"            testList.add(new ToDo(\"read book\", false));","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"swxk19"},"content":"            testList.add(new ToDo(\"return book\", true));","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"swxk19"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"swxk19"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"        initTestList();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"swxk19"},"content":"        String expectedString \u003d \"1. \" + testList.get(0).toString() + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"swxk19"},"content":"                + \"2. \" + testList.get(1).toString() + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"swxk19"},"content":"                + \"3. \" + testList.get(2).toString() + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"swxk19"},"content":"                + \"4. \" + testList.get(3).toString() + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"swxk19"},"content":"                + \"5. \" + testList.get(4).toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"swxk19"},"content":"        assertEquals(expectedString, testList.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"swxk19"},"content":"    public void testFindTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"swxk19"},"content":"        initTestList();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"swxk19"},"content":"        String findKeyword \u003d \"book\";","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"swxk19"},"content":"        assertEquals(testList.get(3), testList.find(findKeyword).get(0));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"swxk19"},"content":"        assertEquals(testList.get(4), testList.find(findKeyword).get(1));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"swxk19"},"content":"    public void testCountTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"swxk19"},"content":"        initTestList();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"swxk19"},"content":"        assertEquals(5, testList.countTasks());","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"swxk19":50}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"        assertEquals(\"[T][x] test 1 2 3\", new ToDo(\"test 1 2 3\", true).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"swxk19":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swxk19"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"swxk19"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"swxk19"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"todo join sports club","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"swxk19"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"mark 2","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"swxk19"},"content":"mark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"swxk19"},"content":"unmark 3","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"swxk19"},"content":"mark 4","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"swxk19"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"swxk19"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"swxk19"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"swxk19"},"content":"find book","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"swxk19":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"swxk19"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"swxk19":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"swxk19"},"content":"if [ ! -d \"../bin/\" ]","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"swxk19"},"content":"    mkdir ../bin/","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"swxk19"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin/ ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"swxk19"},"content":"java -classpath ../bin/ duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":34,"swxk19":4}}]
